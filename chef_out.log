[2016-09-13T12:59:37+01:00] DEBUG: Current chef_repo_path is /root
[2016-09-13T12:59:37+01:00] DEBUG: Sleeping for 0 seconds
[2016-09-13T12:59:37+01:00] INFO: Started chef-zero at chefzero://localhost:8889 with repository at /root
  One version per cookbook

[2016-09-13T12:59:37+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889"}
[2016-09-13T12:59:37+01:00] INFO: Forking chef instance to converge...
[2016-09-13T12:59:37+01:00] DEBUG: Fork successful. Waiting for new chef pid: 19215
[2016-09-13T12:59:37+01:00] DEBUG: Forked instance now converging
[2016-09-13T12:59:37+01:00] INFO: *** Chef 12.13.37 ***
[2016-09-13T12:59:37+01:00] INFO: Platform: x86_64-linux
[2016-09-13T12:59:37+01:00] INFO: Chef-client pid: 19215
[2016-09-13T12:59:37+01:00] DEBUG: Chef-client request_id: 74a53774-ccf3-4ddd-90b7-f6b9590f7af7
[2016-09-13T12:59:37+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[]}
[2016-09-13T12:59:37+01:00] DEBUG: Searching for Ohai plugins in /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/cloud_v2.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/java.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ohai_time.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/cpu.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/memory.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/kernel.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/virtualization.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/go.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ps.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/cpu.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/memory.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/os.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/command.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/vmware.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/bsd/virtualization.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/bsd/filesystem.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/php.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/init_package.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/scala.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/hardware.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/virtualization.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/cpu.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/system_profiler.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/memory.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/filesystem2.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/filesystem.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/languages.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/python.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/cloud.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linode.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/digital_ocean.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/erlang.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/root_group.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/shells.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/mono.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/softlayer.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dmi.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/lua.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/fips.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/virtualization.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/drivers.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/cpu.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/memory.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/filesystem.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/fips.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/virtualization.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/sessions.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/mdadm.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/cpu.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/block_device.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/memory.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/filesystem2.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/lsb.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/filesystem.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openstack.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ssh_host_key.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/elixir.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/cpu.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/memory.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/os.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/joyent.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/virtualization.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/zpools.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/dmi.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/cpu.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/memory.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/filesystem.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/eucalyptus.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/network_listeners.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/nodejs.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/hostname.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/perl.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ec2.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/platform.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/network.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/cpu.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/memory.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/network_route.rb
[2016-09-13T12:59:37+01:00] DEBUG: Could not load sigar gem. Skipping NetworkRoutes plugin
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/filesystem.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ohai.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ruby.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/rust.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/keys.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/uptime.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ip_scopes.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/rackspace.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/azure.rb
[2016-09-13T12:59:37+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/platform.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/network.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/cpu.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/memory.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/passwd.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/packages.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/virtualbox.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/powershell.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/kernel.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/virtualization.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/platform.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/network.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/uptime.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/cpu.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/memory.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/os.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/filesystem.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/groovy.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/os.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/timezone.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/gce.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/chef.rb
[2016-09-13T12:59:38+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/c.rb
[2016-09-13T12:59:38+01:00] DEBUG: Plugin DMI: ran 'dmidecode' and failed #<Errno::ENOENT: No such file or directory - dmidecode>
[2016-09-13T12:59:38+01:00] DEBUG: Plugin DMI threw #<Ohai::Exceptions::Exec: No such file or directory - dmidecode>
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:43:in `rescue in shell_out'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:37:in `shell_out'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dmi.rb:47:in `block (2 levels) in <main>'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin/versionvii.rb:90:in `instance_eval'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin/versionvii.rb:90:in `run_plugin'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin.rb:100:in `run'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin.rb:173:in `safe_run'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/runner.rb:84:in `run_v7_plugin'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/runner.rb:43:in `run_plugin'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:98:in `block in run_plugins'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:97:in `each'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:97:in `run_plugins'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:75:in `all_plugins'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:560:in `run_ohai'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:264:in `run'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:302:in `block in fork_chef_client'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:290:in `fork'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:290:in `fork_chef_client'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:255:in `block in run_chef_client'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:243:in `run_chef_client'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:450:in `loop'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:434:in `run_application'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:60:in `run'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/solo.rb:226:in `run'
[2016-09-13T12:59:38+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/bin/chef-solo:25:in `<top (required)>'
[2016-09-13T12:59:38+01:00] DEBUG: /usr/bin/chef-solo:53:in `load'
[2016-09-13T12:59:38+01:00] DEBUG: /usr/bin/chef-solo:53:in `<main>'
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Kernel: ran 'uname -s' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Kernel: ran 'uname -r' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Kernel: ran 'uname -v' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Kernel: ran 'uname -m' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Kernel: ran 'uname -p' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Kernel: ran 'uname -o' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Kernel: ran 'env lsmod' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Did not find hint ec2.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:38+01:00] DEBUG: Plugin EC2: has_ec2_xen_uuid? == false
[2016-09-13T12:59:38+01:00] DEBUG: Plugin EC2: has_ec2_dmi? == false
[2016-09-13T12:59:38+01:00] DEBUG: Plugin EC2: has_amazon_org? == false
[2016-09-13T12:59:38+01:00] DEBUG: Plugin EC2: looks_like_ec2? == false
[2016-09-13T12:59:38+01:00] DEBUG: Did not find hint gce.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:38+01:00] DEBUG: Mixin GCE: can_metadata_connect? failed setting up socket: getaddrinfo: Name or service not known
[2016-09-13T12:59:38+01:00] DEBUG: Plugin GCE: looks_like_gce? == false
[2016-09-13T12:59:38+01:00] DEBUG: default route table is 'main'
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran 'ip addr' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran 'ip -d -s link' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran 'ip -f inet neigh show' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet route show table main' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Parsing 10.0.2.0/24 dev eth0  proto kernel  scope link  src 10.0.2.15
[2016-09-13T12:59:38+01:00] DEBUG: Parsing 192.168.33.0/24 dev eth1  proto kernel  scope link  src 192.168.33.10
[2016-09-13T12:59:38+01:00] DEBUG: Parsing 169.254.0.0/16 dev eth0  scope link  metric 1002
[2016-09-13T12:59:38+01:00] DEBUG: Parsing 169.254.0.0/16 dev eth1  scope link  metric 1003
[2016-09-13T12:59:38+01:00] DEBUG: Parsing default via 10.0.2.2 dev eth0
[2016-09-13T12:59:38+01:00] DEBUG: default_interface set to eth0
[2016-09-13T12:59:38+01:00] DEBUG: default_gateway set to 10.0.2.2
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran 'ip -f inet6 neigh show' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet6 route show table main' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable ::/96 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable ::ffff:0.0.0.0/96 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable 2002:a00::/24 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable 2002:7f00::/24 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable 2002:a9fe::/32 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable 2002:ac10::/28 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable 2002:c0a8::/32 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable 2002:e000::/19 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing unreachable 3ffe:ffff::/32 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:38+01:00] DEBUG: Parsing fe80::/64 dev eth0  proto kernel  metric 256  mtu 1500
[2016-09-13T12:59:38+01:00] DEBUG: Parsing fe80::/64 dev eth1  proto kernel  metric 256  mtu 1500
[2016-09-13T12:59:38+01:00] DEBUG: Unable to determine 'default_inet6_interface' as no default routes were found for that interface family
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool eth0' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: Settings for eth0:
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supported ports: [ TP ]
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supported link modes:   10baseT/Half 10baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	                        1000baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supported pause frame use: No
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supports auto-negotiation: Yes
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Advertised link modes:  10baseT/Half 10baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	                        1000baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Advertised pause frame use: No
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Advertised auto-negotiation: Yes
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Speed: 1000Mb/s
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Duplex: Full
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Port: Twisted Pair
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	PHYAD: 0
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Transceiver: internal
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Auto-negotiation: on
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	MDI-X: off (auto)
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supports Wake-on: umbg
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Wake-on: d
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Current message level: 0x00000007 (7)
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 			       drv probe link
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Link detected: yes
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool eth1' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: Settings for eth1:
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supported ports: [ TP ]
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supported link modes:   10baseT/Half 10baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	                        1000baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supported pause frame use: No
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supports auto-negotiation: Yes
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Advertised link modes:  10baseT/Half 10baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	                        1000baseT/Full 
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Advertised pause frame use: No
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Advertised auto-negotiation: Yes
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Speed: 1000Mb/s
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Duplex: Full
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Port: Twisted Pair
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	PHYAD: 0
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Transceiver: internal
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Auto-negotiation: on
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	MDI-X: off (auto)
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Supports Wake-on: umbg
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Wake-on: d
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Current message level: 0x00000007 (7)
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 			       drv probe link
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: 	Link detected: yes
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool -g eth0' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: Ring parameters for eth0:
Pre-set maximums:
RX:		4096
RX Mini:	0
RX Jumbo:	0
TX:		4096
Current hardware settings:
RX:		256
RX Mini:	0
RX Jumbo:	0
TX:		256


[2016-09-13T12:59:38+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool -g eth1' and returned 0
[2016-09-13T12:59:38+01:00] DEBUG: Parsing ethtool output: Ring parameters for eth1:
Pre-set maximums:
RX:		4096
RX Mini:	0
RX Jumbo:	0
TX:		4096
Current hardware settings:
RX:		256
RX Mini:	0
RX Jumbo:	0
TX:		256


[2016-09-13T12:59:38+01:00] DEBUG: Did not find hint rackspace.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Rackspace: ran 'xenstore-read vm-data/provider_data/provider' and failed #<Errno::ENOENT: No such file or directory - xenstore-read>
[2016-09-13T12:59:38+01:00] DEBUG: Did not find hint eucalyptus.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Eucalyptus: has_euca_mac? == false
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Eucalyptus: looks_like_euca? == false
[2016-09-13T12:59:38+01:00] DEBUG: Did not find hint linode.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Linode: looks_like_linode? == false
[2016-09-13T12:59:38+01:00] DEBUG: Did not find hint openstack.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Openstack: openstack hint not present
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Openstack: has_openstack_dmi? == false
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Openstack: Node does not appear to be an Openstack node
[2016-09-13T12:59:38+01:00] DEBUG: Did not find hint azure.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:38+01:00] DEBUG: azure plugin: No hints present for azure and doesn't appear to be azure.
[2016-09-13T12:59:38+01:00] DEBUG: Did not find hint digital_ocean.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Digitalocean: No hints present for and doesn't look like digitalocean
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Java: ran 'java -mx64m -version' and failed #<Errno::ENOENT: No such file or directory - java>
[2016-09-13T12:59:38+01:00] DEBUG: Java plugin: Could not shell_out "java -mx64m -version". Skipping plugin
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Go: ran 'go version' and failed #<Errno::ENOENT: No such file or directory - go>
[2016-09-13T12:59:38+01:00] DEBUG: Go plugin: Could not shell_out "go version". Skipping plugin
[2016-09-13T12:59:38+01:00] DEBUG: Plugin PHP: ran 'php -v' and failed #<Errno::ENOENT: No such file or directory - php>
[2016-09-13T12:59:38+01:00] DEBUG: Php plugin: Could not shell_out "php -v". Skipping plugin
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Scala: ran 'scala -version' and failed #<Errno::ENOENT: No such file or directory - scala>
[2016-09-13T12:59:38+01:00] DEBUG: Scala plugin: Could not shell_out "scala -version". Skipping data
[2016-09-13T12:59:38+01:00] DEBUG: Plugin Scala: ran 'sbt --version' and failed #<Errno::ENOENT: No such file or directory - sbt>
[2016-09-13T12:59:38+01:00] DEBUG: Scala plugin: Could not shell_out "sbt --version". Skipping data
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Python: ran 'python -c "import sys; print (sys.version)"' and returned 0
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Erlang: ran 'erl -eval 'erlang:display(erlang:system_info(otp_release)), erlang:display(erlang:system_info(version)), erlang:display(erlang:system_info(nif_version)), halt().'  -noshell' and returned 127
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Erlang: ran 'erl +V' and failed #<Errno::ENOENT: No such file or directory - erl>
[2016-09-13T12:59:39+01:00] DEBUG: Erlang plugin: Could not shell_out "erl +V". Skipping data
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Mono: ran 'mono -V' and failed #<Errno::ENOENT: No such file or directory - mono>
[2016-09-13T12:59:39+01:00] DEBUG: Mono plugin: Could not shell_out "mono -V". Skipping plugin
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Lua: ran 'lua -v' and returned 0
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Elixir: ran 'elixir -v' and failed #<Errno::ENOENT: No such file or directory - elixir>
[2016-09-13T12:59:39+01:00] DEBUG: Elixir plugin: Could not shell_out "elixir -v". Skipping plugin
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Nodejs: ran 'node -v' and failed #<Errno::ENOENT: No such file or directory - node>
[2016-09-13T12:59:39+01:00] DEBUG: Nodejs plugin: Could not shell_out "node -v". Skipping plugin
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Perl: ran 'perl -V:version -V:archname' and returned 0
[2016-09-13T12:59:39+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %Q(platform=#{RUBY_PLATFORM},version=#{RUBY_VERSION},release_date=#{RUBY_RELEASE_DATE},target=#{RbConfig::CONFIG['target']},target_cpu=#{RbConfig::CONFIG['target_cpu']},target_vendor=#{RbConfig::CONFIG['target_vendor']},target_os=#{RbConfig::CONFIG['target_os']},host=#{RbConfig::CONFIG['host']},host_cpu=#{RbConfig::CONFIG['host_cpu']},host_os=#{RbConfig::CONFIG['host_os']},host_vendor=#{RbConfig::CONFIG['host_vendor']},bin_dir=#{RbConfig::CONFIG['bindir']},ruby_bin=#{::File.join(RbConfig::CONFIG['bindir'], RbConfig::CONFIG['ruby_install_name'])},)"' and returned 0
[2016-09-13T12:59:40+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; require 'rubygems'; puts ::Gem.default_exec_format % 'gem'"' and returned 0
[2016-09-13T12:59:40+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %x{/opt/chef/embedded/bin/ruby /opt/chef/embedded/bin/gem env gemdir}.chomp!"' and returned 0
[2016-09-13T12:59:40+01:00] DEBUG: Plugin Rust: ran 'rustc --version' and failed #<Errno::ENOENT: No such file or directory - rustc>
[2016-09-13T12:59:40+01:00] DEBUG: Rust plugin: Could not shell_out "rustc --version". Skipping plugin
[2016-09-13T12:59:40+01:00] DEBUG: Plugin Powershell: No data to collect. Skipping...
[2016-09-13T12:59:40+01:00] DEBUG: Plugin Groovy: ran 'groovy -v' and failed #<Errno::ENOENT: No such file or directory - groovy>
[2016-09-13T12:59:40+01:00] DEBUG: Groovy plugin: Could not shell_out "groovy -v". Skipping plugin
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C: ran 'gcc -v' and returned 0
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C: ran '/lib/libc.so.6' and failed #<Errno::ENOENT: No such file or directory - /lib/libc.so.6>
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C '/lib/libc.so.6' binary could not be found. Skipping data.
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C: ran '/lib64/libc.so.6' and returned 0
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C: ran 'cl /?' and returned 127
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C 'cl /?' failed. Skipping data.
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C: ran 'devenv.com /?' and returned 127
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C 'devenv.com /?' failed. Skipping data.
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C: ran 'xlc -qversion' and failed #<Errno::ENOENT: No such file or directory - xlc>
[2016-09-13T12:59:40+01:00] DEBUG: Plugin C: ran 'cc -V -flags' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin C: ran 'what /opt/ansic/bin/cc' and failed #<Errno::ENOENT: No such file or directory - what>
[2016-09-13T12:59:41+01:00] DEBUG: Plugin C 'what /opt/ansic/bin/cc' binary could not be found. Skipping data.
[2016-09-13T12:59:41+01:00] DEBUG: Skipping LSB, cannot find /etc/lsb-release or /usr/bin/lsb_release
[2016-09-13T12:59:41+01:00] DEBUG: Could not load sigar gem. Skipping NetworkListeners plugin
[2016-09-13T12:59:41+01:00] DEBUG: [inet] Using default interface eth0 and default gateway 10.0.2.2 to set the default ip to 10.0.2.15
[2016-09-13T12:59:41+01:00] DEBUG: [inet6] no default interface, picking the first ipaddress
[2016-09-13T12:59:41+01:00] DEBUG: ipaddress and ip6address are set from different interfaces (eth0 & eth1)
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Drivers: No data to collect. Skipping...
[2016-09-13T12:59:41+01:00] DEBUG: Virtualization plugin: did not find nova
[2016-09-13T12:59:41+01:00] DEBUG: Virtualization plugin: did not find lxc-version
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem: ran 'df -P' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem: ran 'df -iP' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem: ran 'mount' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,FSTYPE' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,UUID' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,LABEL' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Hardware: No data to collect. Skipping...
[2016-09-13T12:59:41+01:00] DEBUG: Plugin SystemProfile: No data to collect. Skipping...
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem2: ran 'df -P' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem2: ran 'df -iP' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem2: ran 'mount' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Filesystem2: ran 'lsblk -n -P -o NAME,UUID,LABEL,FSTYPE' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Did not find hint softlayer.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Softlayer: looks_like_softlayer? == false
[2016-09-13T12:59:41+01:00] DEBUG: Sessions plugin: did not find loginctl
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Zpools: No data to collect. Skipping...
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Hostname: ran 'hostname -s' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Hostname: ran 'hostname' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin Hostname: ran 'hostname --fqdn' and returned 0
[2016-09-13T12:59:41+01:00] DEBUG: Plugin ip_scopes: cannot load gem, plugin disabled: cannot load such file -- ipaddr_extensions
[2016-09-13T12:59:42+01:00] DEBUG: Plugin Packages: ran 'rpm -qa --qf '%{NAME}\t%|EPOCH?{%{EPOCH}}:{0}|\t%{VERSION}\t%{RELEASE}\t%{INSTALLTIME}\t%{ARCH}\n'' and returned 0
[2016-09-13T12:59:42+01:00] DEBUG: Plugin Virtualbox: ran 'VBoxControl guestproperty enumerate' and returned 0
[2016-09-13T12:59:42+01:00] DEBUG: Client key is unspecified - skipping registration
[2016-09-13T12:59:42+01:00] DEBUG: Building node object for chef-master
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: GET /organizations/chef/nodes/chef-master
[2016-09-13T12:59:42+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003cfabb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/nodes/chef-master",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003cfacd0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=["organizations", "chef", "nodes", "chef-master"]>

[2016-09-13T12:59:42+01:00] DEBUG: #<ChefZero::RestErrorResponse: 404: Object not found: chefzero://localhost:8889/nodes/chef-master>
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/rest_base.rb:92:in `rescue in get_data'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/rest_base.rb:84:in `get_data'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/endpoints/rest_object_endpoint.rb:18:in `get'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/rest_base.rb:62:in `call'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/rest_router.rb:24:in `call'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/server.rb:665:in `block in app'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/server.rb:337:in `call'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/server.rb:337:in `handle_socketless_request'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/socketless_server_map.rb:87:in `request'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.9.0/lib/chef_zero/socketless_server_map.rb:33:in `request'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/http/socketless_chef_zero_client.rb:154:in `request'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/http.rb:305:in `block in send_http_request'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/http.rb:336:in `block in retrying_http_errors'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/http.rb:334:in `loop'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/http.rb:334:in `retrying_http_errors'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/http.rb:299:in `send_http_request'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/http.rb:144:in `request'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/http.rb:111:in `get'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/node.rb:585:in `load'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/node.rb:569:in `find_or_create'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/policy_builder/dynamic.rb:72:in `load_node'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:467:in `load_node'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:269:in `run'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:302:in `block in fork_chef_client'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:290:in `fork'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:290:in `fork_chef_client'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:255:in `block in run_chef_client'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/local_mode.rb:44:in `with_server_connectivity'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:243:in `run_chef_client'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:450:in `loop'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:450:in `interval_run_chef_client'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:434:in `run_application'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:60:in `run'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/solo.rb:226:in `run'
/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/bin/chef-solo:25:in `<top (required)>'
/usr/bin/chef-solo:53:in `load'
/usr/bin/chef-solo:53:in `<main>'
[2016-09-13T12:59:42+01:00] DEBUG: 
--- RESPONSE (404) ---
{
  "error": [
    "Object not found: chefzero://localhost:8889/nodes/chef-master"
  ]
}
--- END RESPONSE ---
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2016-09-13T12:59:42+01:00] INFO: HTTP Request Returned 404 Not Found: Object not found: chefzero://localhost:8889/nodes/chef-master
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: POST /organizations/chef/nodes
--- POST BODY ---
{"name":"chef-master","chef_environment":"_default","json_class":"Chef::Node","automatic":{},"normal":{},"chef_type":"node","default":{},"override":{},"run_list":[]}
--- END POST BODY ---
[2016-09-13T12:59:42+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c982d8
 @body=
  "{\"name\":\"chef-master\",\"chef_environment\":\"_default\",\"json_class\":\"Chef::Node\",\"automatic\":{},\"normal\":{},\"chef_type\":\"node\",\"default\":{},\"override\":{},\"run_list\":[]}",
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"POST",
   "PATH_INFO"=>"/nodes",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c983c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=["organizations", "chef", "nodes"]>

[2016-09-13T12:59:42+01:00] DEBUG: BaseFile: Detecting file extension for chef-master
[2016-09-13T12:59:42+01:00] DEBUG: BaseFile: got a file path of /root/nodes/chef-master.json for chef-master.json
[2016-09-13T12:59:42+01:00] DEBUG: Deleting parent /root/nodes and /root/nodes/chef-master.json from FileSystemCache
[2016-09-13T12:59:42+01:00] DEBUG: 
--- RESPONSE (201) ---
{
  "uri": "chefzero://localhost:8889/nodes/chef-master"
}
--- END RESPONSE ---
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Extracting run list from JSON attributes provided on command line
[2016-09-13T12:59:42+01:00] INFO: Setting the run_list to ["recipe[nginx::default]", "recipe[iptables::default]"] from CLI options
[2016-09-13T12:59:42+01:00] DEBUG: Applying attributes from json file
[2016-09-13T12:59:42+01:00] DEBUG: Platform is centos version 6.8
[2016-09-13T12:59:42+01:00] INFO: Run List is [recipe[nginx::default], recipe[iptables::default]]
[2016-09-13T12:59:42+01:00] INFO: Run List expands to [nginx::default, iptables::default]
[2016-09-13T12:59:42+01:00] INFO: Starting Chef Run for chef-master
[2016-09-13T12:59:42+01:00] INFO: Running start handlers
[2016-09-13T12:59:42+01:00] INFO: Start handlers complete.
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: POST /organizations/chef/reports/nodes/chef-master/runs
--- POST BODY ---
{"action":"start","run_id":"74a53774-ccf3-4ddd-90b7-f6b9590f7af7","start_time":"2016-09-13 12:59:42 +0100"}
--- END POST BODY ---
[2016-09-13T12:59:42+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003bb6ea0
 @body=
  "{\"action\":\"start\",\"run_id\":\"74a53774-ccf3-4ddd-90b7-f6b9590f7af7\",\"start_time\":\"2016-09-13 12:59:42 +0100\"}",
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"POST",
   "PATH_INFO"=>"/reports/nodes/chef-master/runs",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003bb6f68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations", "chef", "reports", "nodes", "chef-master", "runs"]>

[2016-09-13T12:59:42+01:00] DEBUG: 
--- RESPONSE (404) ---
{
  "error": [
    "Object not found: "
  ]
}
--- END RESPONSE ---
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2016-09-13T12:59:42+01:00] INFO: HTTP Request Returned 404 Not Found: Object not found: 
[2016-09-13T12:59:42+01:00] DEBUG: Reporting error starting run. URL: reports/nodes/chef-master/runs Received 404. Disabling reporting for run.
[2016-09-13T12:59:42+01:00] DEBUG: Synchronizing cookbooks
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:42+01:00] DEBUG: POST /organizations/chef/environments/_default/cookbook_versions
--- POST BODY ---
{"run_list":["nginx::default","iptables::default"]}
--- END POST BODY ---
[2016-09-13T12:59:42+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003b893d8
 @body="{\"run_list\":[\"nginx::default\",\"iptables::default\"]}",
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"POST",
   "PATH_INFO"=>"/environments/_default/cookbook_versions",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003b89590>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations", "chef", "environments", "_default", "cookbook_versions"]>

[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:42+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "nginx": {
    "recipes": [
      {
        "name": "http_auth_request_module.rb",
        "path": "recipes/http_auth_request_module.rb",
        "checksum": "57872712b5fdfad83324e7dbc2d5eae1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_auth_request_module.rb"
      },
      {
        "name": "http_geoip_module.rb",
        "path": "recipes/http_geoip_module.rb",
        "checksum": "392460d473e85de1b31b08f01f6e1317",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_geoip_module.rb"
      },
      {
        "name": "syslog_module.rb",
        "path": "recipes/syslog_module.rb",
        "checksum": "3c83f16bf0231cdc799cefca1e591a7c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/syslog_module.rb"
      },
      {
        "name": "http_spdy_module.rb",
        "path": "recipes/http_spdy_module.rb",
        "checksum": "acf80305497a5ed5067387517e0ec081",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_spdy_module.rb"
      },
      {
        "name": "http_mp4_module.rb",
        "path": "recipes/http_mp4_module.rb",
        "checksum": "e5f3850a8534adefc75a4b3f84a69299",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_mp4_module.rb"
      },
      {
        "name": "commons.rb",
        "path": "recipes/commons.rb",
        "checksum": "8c59eee1522f7c309c1156df14e6db71",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons.rb"
      },
      {
        "name": "http_echo_module.rb",
        "path": "recipes/http_echo_module.rb",
        "checksum": "d5a9db6296f594bc6594ca1afc053fbd",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_echo_module.rb"
      },
      {
        "name": "http_ssl_module.rb",
        "path": "recipes/http_ssl_module.rb",
        "checksum": "6de67cf5b451f96d4071eb8b59560c65",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_ssl_module.rb"
      },
      {
        "name": "source.rb",
        "path": "recipes/source.rb",
        "checksum": "3ca88b398f4376d74a8c8d98d34ff274",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/source.rb"
      },
      {
        "name": "ohai_plugin.rb",
        "path": "recipes/ohai_plugin.rb",
        "checksum": "ff39813addc05b7e7efb8326caccebea",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ohai_plugin.rb"
      },
      {
        "name": "ngx_lua_module.rb",
        "path": "recipes/ngx_lua_module.rb",
        "checksum": "9dd811651f6c63c1392f8ba2ff1b43d5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ngx_lua_module.rb"
      },
      {
        "name": "http_realip_module.rb",
        "path": "recipes/http_realip_module.rb",
        "checksum": "b016aa609a269f80da401f857c3223b0",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_realip_module.rb"
      },
      {
        "name": "http_perl_module.rb",
        "path": "recipes/http_perl_module.rb",
        "checksum": "695b6d60b875777eba86885fe44bb128",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_perl_module.rb"
      },
      {
        "name": "http_gzip_static_module.rb",
        "path": "recipes/http_gzip_static_module.rb",
        "checksum": "8c189d666b7adaaaa89833975e9699ca",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_gzip_static_module.rb"
      },
      {
        "name": "headers_more_module.rb",
        "path": "recipes/headers_more_module.rb",
        "checksum": "0d0545c7aa6b8fbb1c64892bc55ef06e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/headers_more_module.rb"
      },
      {
        "name": "ngx_devel_module.rb",
        "path": "recipes/ngx_devel_module.rb",
        "checksum": "b4d48338f440847e6dc6173cd2cddd85",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ngx_devel_module.rb"
      },
      {
        "name": "http_stub_status_module.rb",
        "path": "recipes/http_stub_status_module.rb",
        "checksum": "a5c5a7e3bd2b715cec415bc7c5409906",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_stub_status_module.rb"
      },
      {
        "name": "openssl_source.rb",
        "path": "recipes/openssl_source.rb",
        "checksum": "9e73ac95f5c9ba9ad39822df25ddc742",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/openssl_source.rb"
      },
      {
        "name": "lua.rb",
        "path": "recipes/lua.rb",
        "checksum": "44f504feebaf1a6997d96112b52e8d3b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/lua.rb"
      },
      {
        "name": "upload_progress_module.rb",
        "path": "recipes/upload_progress_module.rb",
        "checksum": "f4ad9ebb14e16d231d2dbf260f2b33fc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/upload_progress_module.rb"
      },
      {
        "name": "commons_script.rb",
        "path": "recipes/commons_script.rb",
        "checksum": "a8178be8d509845a4d72f0ad819fb5be",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_script.rb"
      },
      {
        "name": "package.rb",
        "path": "recipes/package.rb",
        "checksum": "6fb6b0f107678adf1128c225fb50e6e5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/package.rb"
      },
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "fd5506ee0f68adab91dfc81d9a30d1e6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/default.rb"
      },
      {
        "name": "repo_passenger.rb",
        "path": "recipes/repo_passenger.rb",
        "checksum": "1d1a60313683767b5dfa6c14c01a192d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/repo_passenger.rb"
      },
      {
        "name": "ipv6.rb",
        "path": "recipes/ipv6.rb",
        "checksum": "d4e7b3e914b7d8c792606b491b45fb5b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ipv6.rb"
      },
      {
        "name": "passenger.rb",
        "path": "recipes/passenger.rb",
        "checksum": "1cbcaa27ca5ef4af51f3ba487d50463e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/passenger.rb"
      },
      {
        "name": "socketproxy.rb",
        "path": "recipes/socketproxy.rb",
        "checksum": "8747f23bd1ea6312f857bb736c9c5df3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/socketproxy.rb"
      },
      {
        "name": "naxsi_module.rb",
        "path": "recipes/naxsi_module.rb",
        "checksum": "930fde170b7cb04ffad41416f82b18aa",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/naxsi_module.rb"
      },
      {
        "name": "commons_conf.rb",
        "path": "recipes/commons_conf.rb",
        "checksum": "94e4f5010d01699763194bc8b03419dc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_conf.rb"
      },
      {
        "name": "set_misc.rb",
        "path": "recipes/set_misc.rb",
        "checksum": "3dfe5da7aca751a36c4f6845d8d97fd3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/set_misc.rb"
      },
      {
        "name": "repo.rb",
        "path": "recipes/repo.rb",
        "checksum": "2daa04746f22aedc42d0790ece4933a6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/repo.rb"
      },
      {
        "name": "authorized_ips.rb",
        "path": "recipes/authorized_ips.rb",
        "checksum": "e00a76c166d778e9cf98b2eb16b6ec2e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/authorized_ips.rb"
      },
      {
        "name": "commons_dir.rb",
        "path": "recipes/commons_dir.rb",
        "checksum": "57f37c919384f9bd2a685a5857bf8045",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_dir.rb"
      },
      {
        "name": "pagespeed_module.rb",
        "path": "recipes/pagespeed_module.rb",
        "checksum": "0de78d38e3b96623539267cb024e65dc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/pagespeed_module.rb"
      }
    ],
    "definitions": [
      {
        "name": "nginx_site.rb",
        "path": "definitions/nginx_site.rb",
        "checksum": "14a6cbe8f1d0c395dd075cd7ce199c95",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/definitions/nginx_site.rb"
      }
    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "051c778ffa1b57ea4591074056f87f1a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "devel.rb",
        "path": "attributes/devel.rb",
        "checksum": "2443959c45767ec19dab1befa6384008",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/devel.rb"
      },
      {
        "name": "syslog.rb",
        "path": "attributes/syslog.rb",
        "checksum": "7649be724e8bb9bbdeb5683d00b4180b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/syslog.rb"
      },
      {
        "name": "pagespeed.rb",
        "path": "attributes/pagespeed.rb",
        "checksum": "6a501ffec7fe72a2b8186fdbf4f7abb2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/pagespeed.rb"
      },
      {
        "name": "rate_limiting.rb",
        "path": "attributes/rate_limiting.rb",
        "checksum": "f782e8e5548fe9a24c9db1e4fda19ab5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/rate_limiting.rb"
      },
      {
        "name": "echo.rb",
        "path": "attributes/echo.rb",
        "checksum": "c812b71f63e394af3d7d863d9e6648e8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/echo.rb"
      },
      {
        "name": "source.rb",
        "path": "attributes/source.rb",
        "checksum": "acda9607fd275a310dec35ecba1f3372",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/source.rb"
      },
      {
        "name": "status.rb",
        "path": "attributes/status.rb",
        "checksum": "59b7be8873d8fcd1c1f6e50c3bda75d2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/status.rb"
      },
      {
        "name": "openssl_source.rb",
        "path": "attributes/openssl_source.rb",
        "checksum": "350b31654748ca820851ddec07d9ce85",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/openssl_source.rb"
      },
      {
        "name": "lua.rb",
        "path": "attributes/lua.rb",
        "checksum": "1e94fc455dacfc3e389bd1d8099a3487",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/lua.rb"
      },
      {
        "name": "upload_progress.rb",
        "path": "attributes/upload_progress.rb",
        "checksum": "0afb2971d5f59537908b14ccd0df612f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/upload_progress.rb"
      },
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "fec3032780acc3fd9394b958db139672",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/default.rb"
      },
      {
        "name": "auth_request.rb",
        "path": "attributes/auth_request.rb",
        "checksum": "034fe5d49a612def4d11f2202754a602",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/auth_request.rb"
      },
      {
        "name": "passenger.rb",
        "path": "attributes/passenger.rb",
        "checksum": "891cecfb4df1cf678fb60123b2cf5f27",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/passenger.rb"
      },
      {
        "name": "socketproxy.rb",
        "path": "attributes/socketproxy.rb",
        "checksum": "347729c8bc4c0a8d8f33efd07e52b33d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/socketproxy.rb"
      },
      {
        "name": "set_misc.rb",
        "path": "attributes/set_misc.rb",
        "checksum": "9766246a643bf195b8070e2ce40ae088",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/set_misc.rb"
      },
      {
        "name": "repo.rb",
        "path": "attributes/repo.rb",
        "checksum": "de2c99955b52d053a687c88e3fefd310",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/repo.rb"
      },
      {
        "name": "naxsi.rb",
        "path": "attributes/naxsi.rb",
        "checksum": "559fa1cd63d859c442cc07e7bf94b801",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/naxsi.rb"
      },
      {
        "name": "headers_more.rb",
        "path": "attributes/headers_more.rb",
        "checksum": "bd91358861484900b2a7e415fbd6e822",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/headers_more.rb"
      },
      {
        "name": "geoip.rb",
        "path": "attributes/geoip.rb",
        "checksum": "5227a895b3994d78317484252f025eda",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/geoip.rb"
      }
    ],
    "files": [
      {
        "name": "mime.types",
        "path": "files/default/mime.types",
        "checksum": "87f7f349a7b081a7c77ea81e91900b4f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/files/default/mime.types"
      },
      {
        "name": "naxsi_core.rules",
        "path": "files/default/naxsi_core.rules",
        "checksum": "e51d0753f33db2dc0647069dd6729500",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/files/default/naxsi_core.rules"
      }
    ],
    "templates": [
      {
        "name": "nginx.init.erb",
        "path": "templates/suse/nginx.init.erb",
        "checksum": "896d875e63cd7e288afede8c7fde3bf7",
        "specificity": "suse",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/suse/nginx.init.erb"
      },
      {
        "name": "nginx.conf.erb",
        "path": "templates/default/nginx.conf.erb",
        "checksum": "ba86213184a6e2a6a9e5c91b1e120363",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.conf.erb"
      },
      {
        "name": "nginx-upstart.conf.erb",
        "path": "templates/default/nginx-upstart.conf.erb",
        "checksum": "ec9a27afb2bf64bf653b31f4726d6983",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx-upstart.conf.erb"
      },
      {
        "name": "sv-nginx-log-run.erb",
        "path": "templates/default/sv-nginx-log-run.erb",
        "checksum": "09f2bf988663175cd1b7973198dfb5eb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-log-run.erb"
      },
      {
        "name": "nginx.pill.erb",
        "path": "templates/default/nginx.pill.erb",
        "checksum": "d5cec53c6aab66f829db9e1e61aea9f0",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.pill.erb"
      },
      {
        "name": "default-site.erb",
        "path": "templates/default/default-site.erb",
        "checksum": "282e5ef755b521b75e4daae9b72fee12",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/default-site.erb"
      },
      {
        "name": "nginx.rb.erb",
        "path": "templates/default/plugins/nginx.rb.erb",
        "checksum": "9ac55559cbd9e4bd8c8e0f74b15855aa",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/plugins/nginx.rb.erb"
      },
      {
        "name": "nginx.init.erb",
        "path": "templates/default/nginx.init.erb",
        "checksum": "735741e2e231b2b89e012d6b55c6d6cf",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.init.erb"
      },
      {
        "name": "nxdissite.erb",
        "path": "templates/default/nxdissite.erb",
        "checksum": "e54bbff0120a2342ef2ffd8f7c0b962b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nxdissite.erb"
      },
      {
        "name": "sv-nginx-run.erb",
        "path": "templates/default/sv-nginx-run.erb",
        "checksum": "0891c2f6a528af6c722eb5833684af65",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-run.erb"
      },
      {
        "name": "nginx.sysconfig.erb",
        "path": "templates/default/nginx.sysconfig.erb",
        "checksum": "26a3872e8bdbdd614fa17ef13ff9e310",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.sysconfig.erb"
      },
      {
        "name": "nxensite.erb",
        "path": "templates/default/nxensite.erb",
        "checksum": "d0a082a3abd9fa78bc178f560d89c5d3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nxensite.erb"
      },
      {
        "name": "authorized_ip.erb",
        "path": "templates/default/modules/authorized_ip.erb",
        "checksum": "00de1147914315cd8f7d4e592b1a91e2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/authorized_ip.erb"
      },
      {
        "name": "http_realip.conf.erb",
        "path": "templates/default/modules/http_realip.conf.erb",
        "checksum": "09faeae5a287e947323cb0b434e8f9d7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_realip.conf.erb"
      },
      {
        "name": "passenger.conf.erb",
        "path": "templates/default/modules/passenger.conf.erb",
        "checksum": "ab4ff5e1fc04e1eade85c28f5187dc4f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/passenger.conf.erb"
      },
      {
        "name": "http_gzip_static.conf.erb",
        "path": "templates/default/modules/http_gzip_static.conf.erb",
        "checksum": "af39c4f3abe53ed442c62b3077e109ad",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_gzip_static.conf.erb"
      },
      {
        "name": "socketproxy.conf.erb",
        "path": "templates/default/modules/socketproxy.conf.erb",
        "checksum": "9ca555a3a3080e2bcd48e47e08cd4835",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/socketproxy.conf.erb"
      },
      {
        "name": "http_geoip.conf.erb",
        "path": "templates/default/modules/http_geoip.conf.erb",
        "checksum": "b99cb264ff12c46175a7100c974cbb34",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_geoip.conf.erb"
      },
      {
        "name": "nginx_status.erb",
        "path": "templates/default/modules/nginx_status.erb",
        "checksum": "aaab4f24237e586e5e3247b11ecbfb62",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/nginx_status.erb"
      },
      {
        "name": "upload_progress.erb",
        "path": "templates/default/modules/upload_progress.erb",
        "checksum": "6bebd6809ab6ca51d1ba5f4493bbb3c9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/upload_progress.erb"
      },
      {
        "name": "nginx.init.erb",
        "path": "templates/gentoo/nginx.init.erb",
        "checksum": "05b1977779a0c79b20d0fda55a218097",
        "specificity": "gentoo",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/gentoo/nginx.init.erb"
      },
      {
        "name": "nginx.init.erb",
        "path": "templates/debian/nginx.init.erb",
        "checksum": "f5dbe182ae7efa7324b09218e10936b0",
        "specificity": "debian",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/debian/nginx.init.erb"
      },
      {
        "name": "nginx.init.erb",
        "path": "templates/ubuntu/nginx.init.erb",
        "checksum": "f5dbe182ae7efa7324b09218e10936b0",
        "specificity": "ubuntu",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/ubuntu/nginx.init.erb"
      }
    ],
    "resources": [

    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "Guardfile",
        "path": "Guardfile",
        "checksum": "6c919c0a3ec2d6c554157e49de37f556",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Guardfile"
      },
      {
        "name": "TESTING.md",
        "path": "TESTING.md",
        "checksum": "dc8ab8309fe5e56c6ac65887de58eb87",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/TESTING.md"
      },
      {
        "name": ".rubocop.yml",
        "path": ".rubocop.yml",
        "checksum": "90a727d23d3fa663b705599ae28e6894",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.rubocop.yml"
      },
      {
        "name": ".kitchen.yml",
        "path": ".kitchen.yml",
        "checksum": "179d3b92dbbb205671b978cb58698b31",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.kitchen.yml"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "b22df1e591254d4b0c28695e914f37bc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/README.md"
      },
      {
        "name": "Rakefile",
        "path": "Rakefile",
        "checksum": "e26309265d55c8387ab8be5d52faa98f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Rakefile"
      },
      {
        "name": "Berksfile",
        "path": "Berksfile",
        "checksum": "fcf5a3afd1726aa0e759aedcd48f8585",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Berksfile"
      },
      {
        "name": ".travis.yml",
        "path": ".travis.yml",
        "checksum": "79b22141612ecae780ad261a8d1ff2d2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.travis.yml"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "c4530849219d824d7bb5bddb6770f442",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/CONTRIBUTING.md"
      },
      {
        "name": ".gitignore",
        "path": ".gitignore",
        "checksum": "7bd173c6a79fee02ea83511d73c6cf65",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.gitignore"
      },
      {
        "name": ".rspec",
        "path": ".rspec",
        "checksum": "cf27e515df6d29fcf8a3a6040249c355",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.rspec"
      },
      {
        "name": "ROADMAP.md",
        "path": "ROADMAP.md",
        "checksum": "c6cc1b61540ac01d921c669274b7d182",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/ROADMAP.md"
      },
      {
        "name": "Berksfile.lock",
        "path": "Berksfile.lock",
        "checksum": "29da2ca4e4798a9c7b8c8f5c863c91a2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Berksfile.lock"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "a129d48ebd1a39e0e84aec2d85c638e7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/metadata.json"
      },
      {
        "name": "Gemfile",
        "path": "Gemfile",
        "checksum": "3fc0ab4ce6b6795559b435965fad8a30",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Gemfile"
      },
      {
        "name": "LICENSE",
        "path": "LICENSE",
        "checksum": "8f7bb094c7232b058c7e9f2e431f389c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/LICENSE"
      },
      {
        "name": ".kitchen.cloud.yml",
        "path": ".kitchen.cloud.yml",
        "checksum": "4006fbb40412dab1a612c37d52c760c0",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.kitchen.cloud.yml"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "4e19619ff3ef3e58324e8ae32f6e3aaa",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/nginx/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "nginx",
      "description": "Installs and configures nginx",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "amazon": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "fedora": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "ubuntu": ">= 0.0.0"
      },
      "dependencies": {
        "apt": "~> 2.2",
        "bluepill": "~> 2.3",
        "build-essential": "~> 2.0",
        "ohai": "~> 2.0",
        "runit": "~> 1.2",
        "yum-epel": "~> 0.3"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "nginx::http_auth_request_module": ">= 0.0.0",
        "nginx::http_geoip_module": ">= 0.0.0",
        "nginx::syslog_module": ">= 0.0.0",
        "nginx::http_spdy_module": ">= 0.0.0",
        "nginx::http_mp4_module": ">= 0.0.0",
        "nginx::commons": ">= 0.0.0",
        "nginx::http_echo_module": ">= 0.0.0",
        "nginx::http_ssl_module": ">= 0.0.0",
        "nginx::source": ">= 0.0.0",
        "nginx::ohai_plugin": ">= 0.0.0",
        "nginx::ngx_lua_module": ">= 0.0.0",
        "nginx::http_realip_module": ">= 0.0.0",
        "nginx::http_perl_module": ">= 0.0.0",
        "nginx::http_gzip_static_module": ">= 0.0.0",
        "nginx::headers_more_module": ">= 0.0.0",
        "nginx::ngx_devel_module": ">= 0.0.0",
        "nginx::http_stub_status_module": ">= 0.0.0",
        "nginx::openssl_source": ">= 0.0.0",
        "nginx::lua": ">= 0.0.0",
        "nginx::upload_progress_module": ">= 0.0.0",
        "nginx::commons_script": ">= 0.0.0",
        "nginx::package": ">= 0.0.0",
        "nginx": ">= 0.0.0",
        "nginx::repo_passenger": ">= 0.0.0",
        "nginx::ipv6": ">= 0.0.0",
        "nginx::passenger": ">= 0.0.0",
        "nginx::socketproxy": ">= 0.0.0",
        "nginx::naxsi_module": ">= 0.0.0",
        "nginx::commons_conf": ">= 0.0.0",
        "nginx::set_misc": ">= 0.0.0",
        "nginx::repo": ">= 0.0.0",
        "nginx::authorized_ips": ">= 0.0.0",
        "nginx::commons_dir": ">= 0.0.0",
        "nginx::pagespeed_module": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "nginx": "Installs nginx package and sets up configuration with Debian apache style with sites-enabled/sites-available",
        "nginx::source": "Installs nginx from source and sets up configuration with Debian apache style with sites-enabled/sites-available",
        "nginx::http_auth_request_module": "",
        "nginx::http_geoip_module": "",
        "nginx::syslog_module": "",
        "nginx::http_spdy_module": "",
        "nginx::http_mp4_module": "",
        "nginx::commons": "",
        "nginx::http_echo_module": "",
        "nginx::http_ssl_module": "",
        "nginx::ohai_plugin": "",
        "nginx::ngx_lua_module": "",
        "nginx::http_realip_module": "",
        "nginx::http_perl_module": "",
        "nginx::http_gzip_static_module": "",
        "nginx::headers_more_module": "",
        "nginx::ngx_devel_module": "",
        "nginx::http_stub_status_module": "",
        "nginx::openssl_source": "",
        "nginx::lua": "",
        "nginx::upload_progress_module": "",
        "nginx::commons_script": "",
        "nginx::package": "",
        "nginx::repo_passenger": "",
        "nginx::ipv6": "",
        "nginx::passenger": "",
        "nginx::socketproxy": "",
        "nginx::naxsi_module": "",
        "nginx::commons_conf": "",
        "nginx::set_misc": "",
        "nginx::repo": "",
        "nginx::authorized_ips": "",
        "nginx::commons_dir": "",
        "nginx::pagespeed_module": ""
      },
      "version": "2.7.6",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.7.6",
    "name": "nginx-2.7.6",
    "cookbook_name": "nginx",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "iptables": {
    "recipes": [
      {
        "name": "disabled.rb",
        "path": "recipes/disabled.rb",
        "checksum": "82d28bdfd053dd5c9553ababa5340aaf",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/disabled.rb"
      },
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "66479113d127c5aeab668cafe752590a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/default.rb"
      },
      {
        "name": "_package.rb",
        "path": "recipes/_package.rb",
        "checksum": "dfa3d025993c0b2ac5e585e8b21a871d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/_package.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "f12847b26e2c9b1ca35782d2444dd713",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "61a64f6cbb807349971733c56900736a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [
      {
        "name": "rebuild-iptables.erb",
        "path": "templates/default/rebuild-iptables.erb",
        "checksum": "6f68e1c4aebfc8a2095bc9fee1c69376",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb"
      },
      {
        "name": "iptables-config.erb",
        "path": "templates/default/iptables-config.erb",
        "checksum": "375a02610e0c4703fe9ac43bcb19819b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb"
      },
      {
        "name": "iptables_load.erb",
        "path": "templates/default/iptables_load.erb",
        "checksum": "2df62510beedaefde3f8e312aedb70a4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb"
      }
    ],
    "resources": [
      {
        "name": "rule.rb",
        "path": "resources/rule.rb",
        "checksum": "83793ab3fba05ba7cc59b68cc59f6c83",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/resources/rule.rb"
      }
    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "74b632c3446e9af39ea0c1737fbc4e60",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "4823f885ec2f3e914465211907cac86e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/README.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "a47ceba0705c430e221728440796db45",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/metadata.json"
      },
      {
        "name": "Gemfile",
        "path": "Gemfile",
        "checksum": "4652a1daae2f5b262c90b6d49367dc2d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Gemfile"
      },
      {
        "name": "chefignore",
        "path": "chefignore",
        "checksum": "9cec09c5cac3f114c47ba1dfa866c480",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/chefignore"
      },
      {
        "name": "LICENSE",
        "path": "LICENSE",
        "checksum": "fa818a259cbed7ce8bc2a22d35a464fc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/LICENSE"
      }
    ],
    "metadata": {
      "name": "iptables",
      "description": "Installs the iptables daemon and provides a LWRP for managing rules",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "redhat": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "ubuntu": ">= 0.0.0",
        "amazon": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "zlinux": ">= 0.0.0"
      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "iptables::disabled": ">= 0.0.0",
        "iptables": ">= 0.0.0",
        "iptables::_package": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "default": "Installs iptables and sets up .d style config directory of iptables rules",
        "disabled": "Disables iptables",
        "iptables::disabled": "",
        "iptables": "",
        "iptables::_package": ""
      },
      "version": "2.2.0",
      "source_url": "https://github.com/chef-cookbooks/iptables",
      "issues_url": "https://github.com/chef-cookbooks/iptables/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.2.0",
    "name": "iptables-2.2.0",
    "cookbook_name": "iptables",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "apt": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "b3c1f23dc1f98032cf36d40c2f7a7167",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/default.rb"
      },
      {
        "name": "cacher-ng.rb",
        "path": "recipes/cacher-ng.rb",
        "checksum": "d33250d19785c3ad1fb9dbeccd03a3fe",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/cacher-ng.rb"
      },
      {
        "name": "cacher-client.rb",
        "path": "recipes/cacher-client.rb",
        "checksum": "9309d587b46d92393c4a923d46d16994",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/cacher-client.rb"
      },
      {
        "name": "unattended-upgrades.rb",
        "path": "recipes/unattended-upgrades.rb",
        "checksum": "0a1e398c099510a122ba11288d1c392a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/unattended-upgrades.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "helpers.rb",
        "path": "libraries/helpers.rb",
        "checksum": "209d67d5323aa04242e9552a7bc94552",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/helpers.rb"
      },
      {
        "name": "network.rb",
        "path": "libraries/network.rb",
        "checksum": "1a1b9bd023e84d5c1e369a623f411e9b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/network.rb"
      },
      {
        "name": "apt_update.rb",
        "path": "libraries/apt_update.rb",
        "checksum": "56d6874fee02cec18cc63a3ba3048615",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/apt_update.rb"
      },
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "cdeb104d4aad86aa5d233ffde31467e3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "67396b808f43ce3ab7e031e8fd826715",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/attributes/default.rb"
      }
    ],
    "files": [
      {
        "name": "15update-stamp",
        "path": "files/default/15update-stamp",
        "checksum": "b9de0ac9e2c9854b1bb213e362dc4e41",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/files/default/15update-stamp"
      },
      {
        "name": "apt-proxy-v2.conf",
        "path": "files/default/apt-proxy-v2.conf",
        "checksum": "fdd69a59686e05653874bd7bba84adc3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/files/default/apt-proxy-v2.conf"
      }
    ],
    "templates": [
      {
        "name": "acng.conf.erb",
        "path": "templates/debian-6.0/acng.conf.erb",
        "checksum": "90a927da4827bafc52e8266952880006",
        "specificity": "debian-6.0",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/debian-6.0/acng.conf.erb"
      },
      {
        "name": "01proxy.erb",
        "path": "templates/default/01proxy.erb",
        "checksum": "3bd9dbec40e4bfb072fb97163acba08a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/01proxy.erb"
      },
      {
        "name": "20auto-upgrades.erb",
        "path": "templates/default/20auto-upgrades.erb",
        "checksum": "362f31b2fbf624dc272a09c1129481de",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/20auto-upgrades.erb"
      },
      {
        "name": "acng.conf.erb",
        "path": "templates/default/acng.conf.erb",
        "checksum": "797cfd1ea88e09090189557263025410",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/acng.conf.erb"
      },
      {
        "name": "unattended-upgrades.seed.erb",
        "path": "templates/default/unattended-upgrades.seed.erb",
        "checksum": "e7b2494a57dc54c0df3e93beabf1f7a1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/unattended-upgrades.seed.erb"
      },
      {
        "name": "50unattended-upgrades.erb",
        "path": "templates/default/50unattended-upgrades.erb",
        "checksum": "100c94c880f80d76fa6d461440781966",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/50unattended-upgrades.erb"
      },
      {
        "name": "10recommends.erb",
        "path": "templates/default/10recommends.erb",
        "checksum": "8ccea01d9d5306901dc51457c6680701",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/10recommends.erb"
      },
      {
        "name": "acng.conf.erb",
        "path": "templates/ubuntu-10.04/acng.conf.erb",
        "checksum": "b32d998cd4282cc158591f24c5f65816",
        "specificity": "ubuntu-10.04",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/ubuntu-10.04/acng.conf.erb"
      }
    ],
    "resources": [
      {
        "name": "repository.rb",
        "path": "resources/repository.rb",
        "checksum": "1187dc7a42171850b0b9acf192c66c68",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/resources/repository.rb"
      },
      {
        "name": "preference.rb",
        "path": "resources/preference.rb",
        "checksum": "5095fa7d8aff5ad50c4f4445d15221ff",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/resources/preference.rb"
      }
    ],
    "providers": [
      {
        "name": "repository.rb",
        "path": "providers/repository.rb",
        "checksum": "cb65abd23f6453e627896cbe748c6818",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/providers/repository.rb"
      },
      {
        "name": "preference.rb",
        "path": "providers/preference.rb",
        "checksum": "be2f372e58b4b9d502806c40b745d7e1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/providers/preference.rb"
      }
    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "1f54c716a1583fba5376c90f3ec58802",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "fa589cdd92a64a2428338913c689e1c6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "cac6ee8dcf384ce1b4de282a1609d5da",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "9040cd17edaba2b38b8bd882a6e6294c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/apt/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "apt",
      "description": "Configures apt and apt services. Ships resources for managing apt repositories",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "ubuntu": ">= 0.0.0",
        "debian": ">= 0.0.0"
      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "apt": ">= 0.0.0",
        "apt::cacher-ng": ">= 0.0.0",
        "apt::cacher-client": ">= 0.0.0",
        "apt::unattended-upgrades": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "apt::default": "Runs apt-get update during compile phase and sets up preseed directories",
        "apt::cacher-ng": "Set up an apt-cacher-ng caching proxy",
        "apt::cacher-client": "Client for the apt::cacher-ng caching proxy",
        "apt": "",
        "apt::unattended-upgrades": ""
      },
      "version": "2.9.2",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.9.2",
    "name": "apt-2.9.2",
    "cookbook_name": "apt",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "bluepill": {
    "recipes": [
      {
        "name": "rsyslog.rb",
        "path": "recipes/rsyslog.rb",
        "checksum": "4089a0b984571d01279896b22da22887",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/recipes/rsyslog.rb"
      },
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "d4f5fa0bc84eef83ce1ad79b30b94c2d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "bf9c0fc8b9f1a93592cded70da2a8ed6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "594c70bf688b431bd23166f7a7cb5fd8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [
      {
        "name": "bluepill_init.freebsd.erb",
        "path": "templates/default/bluepill_init.freebsd.erb",
        "checksum": "79edec90ce032ec29f6300f06f7f12e6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.freebsd.erb"
      },
      {
        "name": "bluepill_init.lsb.erb",
        "path": "templates/default/bluepill_init.lsb.erb",
        "checksum": "1ec96d44e2728c4876df297a34551de3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.lsb.erb"
      },
      {
        "name": "bluepill_init.rhel.erb",
        "path": "templates/default/bluepill_init.rhel.erb",
        "checksum": "db878a32ec06e115e91a5fe7c90d0a32",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.rhel.erb"
      },
      {
        "name": "bluepill_rsyslog.conf.erb",
        "path": "templates/default/bluepill_rsyslog.conf.erb",
        "checksum": "1cb7d6e6a4fff825327a569bfffbd620",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_rsyslog.conf.erb"
      },
      {
        "name": "bluepill_init.fedora.erb",
        "path": "templates/default/bluepill_init.fedora.erb",
        "checksum": "db878a32ec06e115e91a5fe7c90d0a32",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.fedora.erb"
      }
    ],
    "resources": [
      {
        "name": "service.rb",
        "path": "resources/service.rb",
        "checksum": "6668e0048ef80c6603754ee8bdb1b801",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/resources/service.rb"
      }
    ],
    "providers": [
      {
        "name": "service.rb",
        "path": "providers/service.rb",
        "checksum": "090a1b4dcb31f22399561bb41d0d8147",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/providers/service.rb"
      }
    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "1f54c716a1583fba5376c90f3ec58802",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "e4bac5964c93d722362288b159d9be78",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/CONTRIBUTING.md"
      },
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "8dadb87b3bedc7da9d5de41778957b57",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/.foodcritic"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "d7f7100d9efa6bea5af31d00d36144d8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "31bebbcbd9769468fedafa2dcae7d47b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "bluepill",
      "description": "Installs bluepill gem and configures to manage services, includes bluepill_service LWRP",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {

      },
      "dependencies": {
        "rsyslog": ">= 2.0"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "bluepill::rsyslog": ">= 0.0.0",
        "bluepill": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "bluepill::default": "Installs bluepill rubygem and sets up management directories",
        "bluepill::rsyslog": "",
        "bluepill": ""
      },
      "version": "2.4.3",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.4.3",
    "name": "bluepill-2.4.3",
    "cookbook_name": "bluepill",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "build-essential": {
    "recipes": [
      {
        "name": "_debian.rb",
        "path": "recipes/_debian.rb",
        "checksum": "30a4126ff578125b2fc815475d869144",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_debian.rb"
      },
      {
        "name": "_solaris2.rb",
        "path": "recipes/_solaris2.rb",
        "checksum": "dc53e2bb31c1daf9a55c7b6602079822",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_solaris2.rb"
      },
      {
        "name": "_suse.rb",
        "path": "recipes/_suse.rb",
        "checksum": "2228af928d48e76574a682c38e424c63",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_suse.rb"
      },
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "64a8929e479e993f2b4fdab85a7d17bb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/default.rb"
      },
      {
        "name": "_mac_os_x.rb",
        "path": "recipes/_mac_os_x.rb",
        "checksum": "104dc2a080fe85b8699bae1d628e93fa",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_mac_os_x.rb"
      },
      {
        "name": "_omnios.rb",
        "path": "recipes/_omnios.rb",
        "checksum": "2974fcf058caab734e3bf9f61cc82572",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_omnios.rb"
      },
      {
        "name": "_smartos.rb",
        "path": "recipes/_smartos.rb",
        "checksum": "bfd331aa75f6f633862681a43d039dfa",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_smartos.rb"
      },
      {
        "name": "_rhel.rb",
        "path": "recipes/_rhel.rb",
        "checksum": "610e57a0764525a6b9eb9ce9bce42cf3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_rhel.rb"
      },
      {
        "name": "_fedora.rb",
        "path": "recipes/_fedora.rb",
        "checksum": "7d4af45d59964ec8bfd8d2607fe07c17",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_fedora.rb"
      },
      {
        "name": "_freebsd.rb",
        "path": "recipes/_freebsd.rb",
        "checksum": "3979ab0c6b8ee9c54ea38e29f49afbd1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_freebsd.rb"
      },
      {
        "name": "_windows.rb",
        "path": "recipes/_windows.rb",
        "checksum": "67d7304aead856fafb5b550ce5475060",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_windows.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "timing.rb",
        "path": "libraries/timing.rb",
        "checksum": "6c2e5aace7d6de54171346d1aad12be8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/timing.rb"
      },
      {
        "name": "_msys_helper.rb",
        "path": "libraries/_msys_helper.rb",
        "checksum": "88fa06ab80e17267aa0fd1219c78823a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/_msys_helper.rb"
      },
      {
        "name": "xcode_command_line_tools.rb",
        "path": "libraries/xcode_command_line_tools.rb",
        "checksum": "e5ab8b440cd036170c227e967c17b19f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/xcode_command_line_tools.rb"
      },
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "d335f41ea86d9d46ef7ce90e902543ec",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "2b051bc8711058e8be3b5f972e7b7f4e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "msys_archive.rb",
        "path": "resources/msys_archive.rb",
        "checksum": "d2958c3582e1be45fdf62ca831c2b210",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/msys_archive.rb"
      }
    ],
    "providers": [
      {
        "name": "msys_archive.rb",
        "path": "providers/msys_archive.rb",
        "checksum": "03586a741c391b8f5ae95735b374a0b7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/providers/msys_archive.rb"
      }
    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "cdc4c121084284fbb4ccc71dd2d7fd10",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "59c527865bee83f78135c6d55d2f50a9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md"
      },
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "5e0cef2fbf9378ffb742c14a506c4919",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/.foodcritic"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "11ba1d1559498887e289f37e526ebe3e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "cb7e5ebf52cc7fa1a9274a2f10ec5e87",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "build-essential",
      "description": "Installs C compiler / build tools",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "amazon": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "fedora": ">= 0.0.0",
        "freebsd": ">= 0.0.0",
        "mac_os_x": ">= 10.7.0",
        "mac_os_x_server": ">= 10.7.0",
        "oracle": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "smartos": ">= 0.0.0",
        "suse": ">= 0.0.0",
        "ubuntu": ">= 0.0.0",
        "windows": ">= 0.0.0"
      },
      "dependencies": {
        "7-zip": ">= 0.0.0"
      },
      "recommendations": {

      },
      "suggestions": {
        "pkgutil": ">= 0.0.0"
      },
      "conflicting": {

      },
      "providing": {
        "build-essential::_debian": ">= 0.0.0",
        "build-essential::_solaris2": ">= 0.0.0",
        "build-essential::_suse": ">= 0.0.0",
        "build-essential": ">= 0.0.0",
        "build-essential::_mac_os_x": ">= 0.0.0",
        "build-essential::_omnios": ">= 0.0.0",
        "build-essential::_smartos": ">= 0.0.0",
        "build-essential::_rhel": ">= 0.0.0",
        "build-essential::_fedora": ">= 0.0.0",
        "build-essential::_freebsd": ">= 0.0.0",
        "build-essential::_windows": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "build-essential": "Installs packages required for compiling C software from source.",
        "build-essential::_debian": "",
        "build-essential::_solaris2": "",
        "build-essential::_suse": "",
        "build-essential::_mac_os_x": "",
        "build-essential::_omnios": "",
        "build-essential::_smartos": "",
        "build-essential::_rhel": "",
        "build-essential::_fedora": "",
        "build-essential::_freebsd": "",
        "build-essential::_windows": ""
      },
      "version": "2.4.0",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.4.0",
    "name": "build-essential-2.4.0",
    "cookbook_name": "build-essential",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "ohai": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "90e1c26b502b2cae49e2040da9be19c4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "60135a7c38ed8d390188a91aeff7cf70",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "f13877ae8d41bc770428726fbee7a655",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/attributes/default.rb"
      }
    ],
    "files": [
      {
        "name": "README",
        "path": "files/default/plugins/README",
        "checksum": "85bc3bb921efade3f2566a668ab4b639",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/files/default/plugins/README"
      }
    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "hint.rb",
        "path": "resources/hint.rb",
        "checksum": "51fd27d8f54bccb843425bef4fd0b78e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/hint.rb"
      }
    ],
    "providers": [
      {
        "name": "hint.rb",
        "path": "providers/hint.rb",
        "checksum": "80217c3f5aefcc521308b02eeb491d65",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/providers/hint.rb"
      }
    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "032c573c61cbc27e4111f5a15bc3c734",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "a5f9c81bd342f443a9d0af1962d46506",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "3e468eef18c824b211ee73d79d353ed5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "9b2a8cf55d60e93974d2a91c0fc036a7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "ohai",
      "description": "Distributes a directory of custom ohai plugins",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "ubuntu": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "amazon": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "fedora": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "freebsd": ">= 0.0.0",
        "windows": ">= 0.0.0"
      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "ohai": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "ohai::default": "Distributes a directory of custom ohai plugins",
        "ohai": ""
      },
      "version": "2.1.0",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.1.0",
    "name": "ohai-2.1.0",
    "cookbook_name": "ohai",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "runit": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "e49f971608682725be42fcfaca1c6678",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "resource_runit_service.rb",
        "path": "libraries/resource_runit_service.rb",
        "checksum": "d415c404246de9fc54458a58e932733d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/resource_runit_service.rb"
      },
      {
        "name": "helpers.rb",
        "path": "libraries/helpers.rb",
        "checksum": "7091d5e6781e16733ef5e309804bdfb8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/helpers.rb"
      },
      {
        "name": "default.rb",
        "path": "libraries/default.rb",
        "checksum": "d41d8cd98f00b204e9800998ecf8427e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/default.rb"
      },
      {
        "name": "provider_runit_service.rb",
        "path": "libraries/provider_runit_service.rb",
        "checksum": "8d0e87b2f49ea88504a32465cfec0719",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/provider_runit_service.rb"
      },
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "03c03da10288f37f4dfa1e05794eb7a4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "bc0501bc2766fc9e432e4c8700533851",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/attributes/default.rb"
      }
    ],
    "files": [
      {
        "name": "runit.seed",
        "path": "files/default/runit.seed",
        "checksum": "722f120f4eab8f0421aab6807d6cce9d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/files/default/runit.seed"
      }
    ],
    "templates": [
      {
        "name": "log-config.erb",
        "path": "templates/default/log-config.erb",
        "checksum": "91ceacf5e0121730ea401e5a03c43516",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/default/log-config.erb"
      },
      {
        "name": "runit-start.sh.erb",
        "path": "templates/gentoo/runit-start.sh.erb",
        "checksum": "bd03533917da171167995131c075ea43",
        "specificity": "gentoo",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/gentoo/runit-start.sh.erb"
      },
      {
        "name": "init.d.erb",
        "path": "templates/debian/init.d.erb",
        "checksum": "1e57e65fef66345a2658b001f08d3e3f",
        "specificity": "debian",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/debian/init.d.erb"
      }
    ],
    "resources": [

    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "1f54c716a1583fba5376c90f3ec58802",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "84e6e32ec3b6a9dbc19abee6406c01b0",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/CONTRIBUTING.md"
      },
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "5e149013978f82c1fcab0e5c79163aa8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/.foodcritic"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "562fc7b428c630ad59170a9bf3145d27",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "ad51e735f6f4cc8b7ce764b541f94630",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/runit/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "runit",
      "description": "Installs runit and provides runit_service definition",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "ubuntu": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "gentoo": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "amazon": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "enterpriseenterprise": ">= 0.0.0",
        "zlinux": ">= 0.0.0"
      },
      "dependencies": {
        "packagecloud": ">= 0.0.0",
        "yum-epel": ">= 0.0.0"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "runit": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "runit": "Installs and configures runit"
      },
      "version": "1.8.0",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "1.8.0",
    "name": "runit-1.8.0",
    "cookbook_name": "runit",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "yum-epel": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "db7e1f1f7501d5fba849fb7463493530",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [

    ],
    "attributes": [
      {
        "name": "epel-testing-source.rb",
        "path": "attributes/epel-testing-source.rb",
        "checksum": "cf7ed0d11e743217c331cda8e43b6598",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb"
      },
      {
        "name": "epel-source.rb",
        "path": "attributes/epel-source.rb",
        "checksum": "ae0a2a026235862b5cf288146a99d0c7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb"
      },
      {
        "name": "epel-testing-debuginfo.rb",
        "path": "attributes/epel-testing-debuginfo.rb",
        "checksum": "a927d6a8c4b5fa05559d2b3285e65e12",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb"
      },
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "d71d058e12c2238406e723cb929a3b26",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/default.rb"
      },
      {
        "name": "epel.rb",
        "path": "attributes/epel.rb",
        "checksum": "23ea50849199f19fb7d32b7f55bb3239",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel.rb"
      },
      {
        "name": "epel-debuginfo.rb",
        "path": "attributes/epel-debuginfo.rb",
        "checksum": "9be5b79b9865f942c921517daaf36f2e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb"
      },
      {
        "name": "epel-testing.rb",
        "path": "attributes/epel-testing.rb",
        "checksum": "f00712385eafc946d62e9ec1b07a5ac1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb"
      }
    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [

    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "76ed11a7e37b3ae08ac6840856994bec",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "f5b866f1ac42586862a9a751de82d092",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "c9ccb77fbb441a541fcb5d92e66cd1cc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "03e9ff0711b32dc392739dc2446441c8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "yum-epel",
      "description": "Installs and configures the EPEL Yum repository",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "amazon": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "zlinux": ">= 0.0.0"
      },
      "dependencies": {
        "yum": ">= 3.6.3"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "yum-epel": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "yum-epel": ""
      },
      "version": "0.7.1",
      "source_url": "https://github.com/chef-cookbooks/yum-epel",
      "issues_url": "https://github.com/chef-cookbooks/yum-epel/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "0.7.1",
    "name": "yum-epel-0.7.1",
    "cookbook_name": "yum-epel",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "rsyslog": {
    "recipes": [
      {
        "name": "server.rb",
        "path": "recipes/server.rb",
        "checksum": "580f743c947df2dc843bd8c9b09af8b9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/server.rb"
      },
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "f519fc4a8cfca0479deef9e8adbe61f1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/default.rb"
      },
      {
        "name": "client.rb",
        "path": "recipes/client.rb",
        "checksum": "61f54518f486dedeb18d4d9d9b6bb1cb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/client.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "4dfdc2ebd40a705aeabf2b39a38088f8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "48a2eba80e00340043a50add8fa017a6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [
      {
        "name": "49-remote.conf.erb",
        "path": "templates/default/49-remote.conf.erb",
        "checksum": "d3fb19d73b1d4d6e99e0fff8972adee2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/49-remote.conf.erb"
      },
      {
        "name": "rsyslog.conf.erb",
        "path": "templates/default/rsyslog.conf.erb",
        "checksum": "95345275ba365b9aec01c6ebe2fe7406",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/rsyslog.conf.erb"
      },
      {
        "name": "50-default.conf.erb",
        "path": "templates/default/50-default.conf.erb",
        "checksum": "3cd7ea4db226906cff93defe98fc773d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/50-default.conf.erb"
      },
      {
        "name": "omnios-manifest.xml.erb",
        "path": "templates/default/omnios-manifest.xml.erb",
        "checksum": "061d2ee2ec90aa4f035cee277652788b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/omnios-manifest.xml.erb"
      },
      {
        "name": "file-input.conf.erb",
        "path": "templates/default/file-input.conf.erb",
        "checksum": "128e95659ee113e15538851263e21920",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/file-input.conf.erb"
      },
      {
        "name": "35-server-per-host.conf.erb",
        "path": "templates/default/35-server-per-host.conf.erb",
        "checksum": "126e2c7dd280023135dabac1c4253be1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/35-server-per-host.conf.erb"
      },
      {
        "name": "49-relp.conf.erb",
        "path": "templates/default/49-relp.conf.erb",
        "checksum": "23492857b6ada90375c312005fc2ef37",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/49-relp.conf.erb"
      },
      {
        "name": "50-default.conf.erb",
        "path": "templates/smartos/50-default.conf.erb",
        "checksum": "ad580c1627a87517d7f8b669c167068e",
        "specificity": "smartos",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/smartos/50-default.conf.erb"
      }
    ],
    "resources": [
      {
        "name": "file_input.rb",
        "path": "resources/file_input.rb",
        "checksum": "61a182e40b6ea51343a927ff00bc25d5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/resources/file_input.rb"
      }
    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "1f54c716a1583fba5376c90f3ec58802",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "88578319e42e60d43b4d008217890e84",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/CONTRIBUTING.md"
      },
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "a5b2087ee7c84b6c9b471df7d5e2a3cf",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/.foodcritic"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "198854eb4d71cb9c3b33be1db125be03",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "022f35b4d234146847aa838f169d9e67",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "rsyslog",
      "description": "Installs and configures rsyslog",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "ubuntu": ">= 10.04",
        "debian": ">= 5.0",
        "redhat": ">= 5.0",
        "centos": ">= 5.0",
        "fedora": ">= 20.0",
        "scientific": ">= 0.0.0",
        "amazon": ">= 0.0.0",
        "oracle": ">= 0.0.0"
      },
      "dependencies": {
        "compat_resource": ">= 0.0.0"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "rsyslog::server": ">= 0.0.0",
        "rsyslog": ">= 0.0.0",
        "rsyslog::client": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "rsyslog": "Sets up rsyslog for local logging",
        "rsyslog::client": "Sets up a client to log to a remote rsyslog server",
        "rsyslog::server": "Sets up an rsyslog server"
      },
      "version": "4.0.1",
      "source_url": "https://github.com/chef-cookbooks/rsyslog",
      "issues_url": "https://github.com/chef-cookbooks/rsyslog/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "4.0.1",
    "name": "rsyslog-4.0.1",
    "cookbook_name": "rsyslog",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "7-zip": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "5d1856ae1b6b681826c4f6279b0ddab0",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [

    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "84232213493b05e6e9067eaf82f8f205",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [

    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "a981fb7bca131d68d30fc72460c18d2e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/README.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "2236655cd281e2a508a871c9f88db493",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "2f704dba870ccb6e4f5ecf55b9a9b5c2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "7-zip",
      "description": "Installs/Configures the 7-zip file archiver",
      "maintainer": "Opscode, Inc.",
      "maintainer_email": "cookbooks@opscode.com",
      "license": "Apache 2.0",
      "platforms": {
        "windows": ">= 0.0.0"
      },
      "dependencies": {
        "windows": ">= 1.2.2"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "7-zip": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "7-zip": ""
      },
      "version": "1.0.2",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "1.0.2",
    "name": "7-zip-1.0.2",
    "cookbook_name": "7-zip",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "packagecloud": {
    "recipes": [

    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matcher.rb",
        "path": "libraries/matcher.rb",
        "checksum": "c02e968d2a1df96e60a781913aafeac8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/libraries/matcher.rb"
      },
      {
        "name": "helper.rb",
        "path": "libraries/helper.rb",
        "checksum": "63bc57ef3cc84529c78e6279c4109300",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/libraries/helper.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "4391d2c04289c218f65dd1af41869d3a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [
      {
        "name": "yum.erb",
        "path": "templates/default/yum.erb",
        "checksum": "1efbb26f25cdd4ed47a35e7091b4c351",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/templates/default/yum.erb"
      },
      {
        "name": "apt.erb",
        "path": "templates/default/apt.erb",
        "checksum": "a4cb66529a83ba69360e1b575ce921b3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/templates/default/apt.erb"
      }
    ],
    "resources": [
      {
        "name": "repo.rb",
        "path": "resources/repo.rb",
        "checksum": "53dd79a8018aa10a891b41b9b4fdd57f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/resources/repo.rb"
      }
    ],
    "providers": [
      {
        "name": "repo.rb",
        "path": "providers/repo.rb",
        "checksum": "922e2653a5f7478ed6587b79517984af",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/providers/repo.rb"
      }
    ],
    "root_files": [
      {
        "name": ".rubocop.yml",
        "path": ".rubocop.yml",
        "checksum": "03e5916414d22937b21805a1c76cdc45",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/.rubocop.yml"
      },
      {
        "name": ".kitchen.yml",
        "path": ".kitchen.yml",
        "checksum": "b2326a9178c0153df48828629cad352a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/.kitchen.yml"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "cf6e00a1728e877d61b221d8fdd1c551",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/README.md"
      },
      {
        "name": "THANKS",
        "path": "THANKS",
        "checksum": "644f348ff12a6a68c84554a66e509361",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/THANKS"
      },
      {
        "name": "Rakefile",
        "path": "Rakefile",
        "checksum": "4fcd335371a9b10185fad03085ccacea",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Rakefile"
      },
      {
        "name": "Berksfile",
        "path": "Berksfile",
        "checksum": "4fbc6b7dd8f9df92868411707a10a75b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Berksfile"
      },
      {
        "name": "Thorfile",
        "path": "Thorfile",
        "checksum": "92498e98fc44adc46767efbb436221ae",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Thorfile"
      },
      {
        "name": "Berksfile.lock",
        "path": "Berksfile.lock",
        "checksum": "7aa46c3efe18748b34077c80a5c66e48",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Berksfile.lock"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "820eb04a6ffbf7d7641f4492b84101c2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/metadata.json"
      },
      {
        "name": "Gemfile",
        "path": "Gemfile",
        "checksum": "5e365dda061d1a54c5fa7464b77e580f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Gemfile"
      },
      {
        "name": "chefignore",
        "path": "chefignore",
        "checksum": "5b82f6325c5fe61e11dd1f3495f8fe2c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/chefignore"
      },
      {
        "name": "Gemfile.lock",
        "path": "Gemfile.lock",
        "checksum": "aa2d7373df4fa4f46e55d398d60d250f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Gemfile.lock"
      },
      {
        "name": "LICENSE",
        "path": "LICENSE",
        "checksum": "5ce7b20b14ba332a1054f1a78ff5dd93",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/LICENSE"
      }
    ],
    "metadata": {
      "name": "packagecloud",
      "description": "Installs/Configures packagecloud.io repositories.",
      "maintainer": "Joe Damato",
      "maintainer_email": "joe@packagecloud.io",
      "license": "Apache 2.0",
      "platforms": {

      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {

      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {

      },
      "version": "0.2.5",
      "source_url": "https://github.com/computology/packagecloud-cookbook",
      "issues_url": "https://github.com/computology/packagecloud-cookbook/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "0.2.5",
    "name": "packagecloud-0.2.5",
    "cookbook_name": "packagecloud",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "yum": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "cb60266e527baf327ab4aa6d53ff653f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/recipes/default.rb"
      },
      {
        "name": "dnf_yum_compat.rb",
        "path": "recipes/dnf_yum_compat.rb",
        "checksum": "178f163bc5cb3ed034a2c35a279aa31b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/recipes/dnf_yum_compat.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "9487ba21b5b01335bf03846ae5bd1a4f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "main.rb",
        "path": "attributes/main.rb",
        "checksum": "09bd5f76172833b657b4a29bd14daf51",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/attributes/main.rb"
      }
    ],
    "files": [

    ],
    "templates": [
      {
        "name": "main.erb",
        "path": "templates/default/main.erb",
        "checksum": "ba21644510c5a99ac20d0da808510888",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/templates/default/main.erb"
      },
      {
        "name": "repo.erb",
        "path": "templates/default/repo.erb",
        "checksum": "238e119a33b9d3a255e61e0caacd4b18",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/templates/default/repo.erb"
      }
    ],
    "resources": [
      {
        "name": "globalconfig.rb",
        "path": "resources/globalconfig.rb",
        "checksum": "e827f1a5d8eb827f02a213ef691351db",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/resources/globalconfig.rb"
      },
      {
        "name": "repository.rb",
        "path": "resources/repository.rb",
        "checksum": "91a181370f30ba3e552576f2ca93612c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/resources/repository.rb"
      }
    ],
    "providers": [
      {
        "name": "globalconfig.rb",
        "path": "providers/globalconfig.rb",
        "checksum": "3489d68fddc77a537ac4634703a5333f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/providers/globalconfig.rb"
      },
      {
        "name": "repository.rb",
        "path": "providers/repository.rb",
        "checksum": "97aa26c5a9df673dacd68e1de4d63403",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/providers/repository.rb"
      }
    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "032c573c61cbc27e4111f5a15bc3c734",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "f0743fb280e6f95e86541da6571fabb7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "9caabd898d0c3fb3f080019dae8da6dc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "79d1918c56b1e4debd1be5cff7e8610a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "yum",
      "description": "Configures various yum components on Red Hat-like systems",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "amazon": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "fedora": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "zlinux": ">= 0.0.0"
      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "yum": ">= 0.0.0",
        "yum::dnf_yum_compat": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "yum": "",
        "yum::dnf_yum_compat": ""
      },
      "version": "4.0.0",
      "source_url": "https://github.com/chef-cookbooks/yum",
      "issues_url": "https://github.com/chef-cookbooks/yum/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "4.0.0",
    "name": "yum-4.0.0",
    "cookbook_name": "yum",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "compat_resource": {
    "recipes": [

    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "autoload.rb",
        "path": "libraries/autoload.rb",
        "checksum": "2de5199263c0422e26a6cbf61f286886",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb"
      }
    ],
    "attributes": [

    ],
    "files": [
      {
        "name": "monkeypatches.rb",
        "path": "files/lib/chef_compat/monkeypatches.rb",
        "checksum": "b2404022c1051b495c90aaf110bfa218",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb"
      },
      {
        "name": "property.rb",
        "path": "files/lib/chef_compat/property.rb",
        "checksum": "daf82ee6985f4e02e41fc73636925361",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb"
      },
      {
        "name": "lwrp_base.rb",
        "path": "files/lib/chef_compat/resource/lwrp_base.rb",
        "checksum": "22edef9e101aacbb839c1ab567735115",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb"
      },
      {
        "name": "properties.rb",
        "path": "files/lib/chef_compat/mixin/properties.rb",
        "checksum": "3ff71fa0b65269aab0ab5f2c75d80e6e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb"
      },
      {
        "name": "provider.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider.rb",
        "checksum": "ecca0fc6e3ce187b02ed8fcbf5d7ebb4",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb"
      },
      {
        "name": "resource_builder.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb",
        "checksum": "0a3eeed3ac838e236f32182287c28a4e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb"
      },
      {
        "name": "constants.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/constants.rb",
        "checksum": "efd4289af6a720c2710a23b88ea0aafb",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb"
      },
      {
        "name": "property.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/property.rb",
        "checksum": "6560515cec66ec348ffa80ff2021d261",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb"
      },
      {
        "name": "yum_repository.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb",
        "checksum": "3bf2a206239de1557b3659e8c51a4b8e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb"
      },
      {
        "name": "action_class.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb",
        "checksum": "7f3d89cd82eca7ecd1de6be5f0b4af6d",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb"
      },
      {
        "name": "apt_repository.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb",
        "checksum": "5705f579343ec7dff89cc1c34e9ef10c",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb"
      },
      {
        "name": "apt_update.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb",
        "checksum": "5fa9c14ec63384c51fe1071dbdd52cab",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb"
      },
      {
        "name": "platform_introspection.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb",
        "checksum": "2690ff8e2c5dc987bc4123947cf0e3f3",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb"
      },
      {
        "name": "universal.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb",
        "checksum": "9d71c99eca293d43674ab77dbba88241",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb"
      },
      {
        "name": "core.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb",
        "checksum": "f1c2b00bbac075ee11e8a83258439a73",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb"
      },
      {
        "name": "recipe.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb",
        "checksum": "ca4e2ed78545fd62843f237ebbe03c30",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb"
      },
      {
        "name": "declare_resource.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb",
        "checksum": "f23f7ae13ddd061f66cf86221ade29db",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb"
      },
      {
        "name": "delayed_evaluator.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb",
        "checksum": "7038f6ec92541b206b0f1bd7a851f5b6",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb"
      },
      {
        "name": "lazy_module_include.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb",
        "checksum": "b906fc248e4a6b162941475d8e2bfd9d",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb"
      },
      {
        "name": "params_validate.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb",
        "checksum": "8696257c66e53b46af59d751d851039e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb"
      },
      {
        "name": "properties.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb",
        "checksum": "f546297a0749500f39ba062e373393db",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb"
      },
      {
        "name": "notifying_block.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb",
        "checksum": "583adee37f6d51a8adbf74159cdc423a",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb"
      },
      {
        "name": "powershell_out.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb",
        "checksum": "16cd8a22e608dea2a9d2461884eab29d",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb"
      },
      {
        "name": "resource.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource.rb",
        "checksum": "d19f359202755a398965aade0ef43f53",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb"
      },
      {
        "name": "noop.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb",
        "checksum": "c64a1d50ecad452ef89ea703c7a7e7dd",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb"
      },
      {
        "name": "yum_repository.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb",
        "checksum": "c330ae1ffbd94b1cfe2d01774cce12d8",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb"
      },
      {
        "name": "apt_repository.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb",
        "checksum": "bce0f2507e05702692a74a9e5f9e3aab",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb"
      },
      {
        "name": "apt_update.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb",
        "checksum": "1a97c5653df8ffdbb634b57f646603ac",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb"
      },
      {
        "name": "recipe.rb",
        "path": "files/lib/chef_compat/recipe.rb",
        "checksum": "63ccbe80441aff3a4232a920c1780a76",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb"
      },
      {
        "name": "recipe_hook.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb",
        "checksum": "8b91d52fdc51fa090357946998e73587",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb"
      },
      {
        "name": "provider.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/provider.rb",
        "checksum": "e34cd92d299c2f140432240f81e87ec9",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb"
      },
      {
        "name": "resource_builder.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource_builder.rb",
        "checksum": "b5c39505d9ad1c122f086180e9506f69",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb"
      },
      {
        "name": "run_context.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/run_context.rb",
        "checksum": "7883361cb5ef606c5215f401c6fa9503",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb"
      },
      {
        "name": "runner.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/runner.rb",
        "checksum": "c3583b5e2b79224cd1764b393c304c5f",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb"
      },
      {
        "name": "node.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/node.rb",
        "checksum": "9f36cd47c9de8ae8b836ac63a915148b",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb"
      },
      {
        "name": "log.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/log.rb",
        "checksum": "bcf79fcc571c428f06ce449e96d49b46",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb"
      },
      {
        "name": "property.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/property.rb",
        "checksum": "ecf6b84f34b5b1b3b50755cc6df2d061",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb"
      },
      {
        "name": "resource_collection.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource_collection.rb",
        "checksum": "214c3e75087c9311e33225a7106c1b45",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb"
      },
      {
        "name": "lwrp_base.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb",
        "checksum": "96227071b1f592e172998e1af8a48058",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb"
      },
      {
        "name": "params_validate.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb",
        "checksum": "f9b44255d786e7203bf548a4c82abb12",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb"
      },
      {
        "name": "recipe.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/recipe.rb",
        "checksum": "2e00007d71c4b356ad37d4853f5ec31e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb"
      },
      {
        "name": "resource_set.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb",
        "checksum": "8854c764ed4f33c339e2b65f55eceba5",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb"
      },
      {
        "name": "resource_list.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb",
        "checksum": "18fe49afa215382cf565d5a8a6c99d8c",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb"
      },
      {
        "name": "exceptions.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/exceptions.rb",
        "checksum": "3b200c3cbc9200da7dd99a93c03bb68c",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb"
      },
      {
        "name": "resource.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource.rb",
        "checksum": "c1c3b5c9d5aa63f9e992f5cf45b47277",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb"
      },
      {
        "name": "chef.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef.rb",
        "checksum": "1bce1d5d2c63e9ae1bed6bfd15927611",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb"
      },
      {
        "name": "resource.rb",
        "path": "files/lib/chef_compat/resource.rb",
        "checksum": "5883119a6ad28ede763c0895dbbf35d1",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb"
      },
      {
        "name": "copied_from_chef.rb",
        "path": "files/lib/chef_compat/copied_from_chef.rb",
        "checksum": "99864174cd4ffa5d3a9f5d028ec08acb",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb"
      },
      {
        "name": "compat_resource.rb",
        "path": "files/lib/compat_resource.rb",
        "checksum": "10a787696950ed004459959020b62b98",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb"
      },
      {
        "name": "chef_upstream_version.rb",
        "path": "files/lib/chef_upstream_version.rb",
        "checksum": "1a0eb518532ac43de616d652307b32ad",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb"
      }
    ],
    "templates": [

    ],
    "resources": [

    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "3b659d9c5f0662e9edff1e63dc6bdc04",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "d3feb45ccb55102305a4294e1695f372",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "233fa6000f669ae13b7296485d2d9e03",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "1a1846f093ef88e45f36be805b136368",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "compat_resource",
      "description": "Brings the modern custom resource syntax to earlier Chef 12 releases prior to 12.5",
      "maintainer": "John Keiser",
      "maintainer_email": "jkeiser@chef.io",
      "license": "Apache 2.0",
      "platforms": {

      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {

      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {

      },
      "version": "12.14.3",
      "source_url": "https://github.com/chef-cookbooks/compat_resource",
      "issues_url": "https://github.com/chef-cookbooks/compat_resource/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "12.14.3",
    "name": "compat_resource-12.14.3",
    "cookbook_name": "compat_resource",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "windows": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "929fb1e3a803f78aa24fb8f93722d32a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "powershell_helper.rb",
        "path": "libraries/powershell_helper.rb",
        "checksum": "60a9b235848d43b15e867de2e76f6289",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb"
      },
      {
        "name": "version.rb",
        "path": "libraries/version.rb",
        "checksum": "4601cd96441fc2f72d57aae5e6c8c45f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version.rb"
      },
      {
        "name": "windows_helper.rb",
        "path": "libraries/windows_helper.rb",
        "checksum": "1d31b238f62a3dccf7f52784b7d5c236",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_helper.rb"
      },
      {
        "name": "windows_privileged.rb",
        "path": "libraries/windows_privileged.rb",
        "checksum": "e755af24657d24c6733d4124076ae67c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb"
      },
      {
        "name": "registry_helper.rb",
        "path": "libraries/registry_helper.rb",
        "checksum": "b75d98a0470d3fd78633efa3d97918b1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/registry_helper.rb"
      },
      {
        "name": "feature_base.rb",
        "path": "libraries/feature_base.rb",
        "checksum": "7995fb0f7bf0aadb1a9d63ac3b97be7a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/feature_base.rb"
      },
      {
        "name": "windows_package.rb",
        "path": "libraries/windows_package.rb",
        "checksum": "cee8c54c5eb947f073a66e5ed49282ff",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_package.rb"
      },
      {
        "name": "wmi_helper.rb",
        "path": "libraries/wmi_helper.rb",
        "checksum": "142b4bda71c1c9fa6e670f099f577221",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb"
      },
      {
        "name": "powershell_out.rb",
        "path": "libraries/powershell_out.rb",
        "checksum": "9926131c54794ec07856dcc667048ef7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_out.rb"
      },
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "b3eba306350f870b44d4c9598fad8f2b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "eebc875d6a1c8d910ba2be263acebba1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "certificate_binding.rb",
        "path": "resources/certificate_binding.rb",
        "checksum": "9a33f76b35c5982c496d2b6db75000b1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate_binding.rb"
      },
      {
        "name": "font.rb",
        "path": "resources/font.rb",
        "checksum": "47ec6a0a8953d85595f4858eacbe5122",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/font.rb"
      },
      {
        "name": "certificate.rb",
        "path": "resources/certificate.rb",
        "checksum": "df606a3e6d1f4e08e7122353cd5f4f13",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate.rb"
      },
      {
        "name": "pagefile.rb",
        "path": "resources/pagefile.rb",
        "checksum": "055186c728bab62e461a8ce86dfc419a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/pagefile.rb"
      },
      {
        "name": "zipfile.rb",
        "path": "resources/zipfile.rb",
        "checksum": "b3d456c4a85713a8f7faf437de1211d5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/zipfile.rb"
      },
      {
        "name": "printer_port.rb",
        "path": "resources/printer_port.rb",
        "checksum": "35a62465af24dca21df99fc5b6ed35d8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer_port.rb"
      },
      {
        "name": "printer.rb",
        "path": "resources/printer.rb",
        "checksum": "76edf8dd7a25718d6ac2b6e9b5d6d742",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer.rb"
      },
      {
        "name": "shortcut.rb",
        "path": "resources/shortcut.rb",
        "checksum": "12eda82a0cde26366fa77d1a771d246f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/shortcut.rb"
      },
      {
        "name": "feature.rb",
        "path": "resources/feature.rb",
        "checksum": "5ec3b02ef11edc28239760e110e462f2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature.rb"
      },
      {
        "name": "path.rb",
        "path": "resources/path.rb",
        "checksum": "b98748b2ae98c83c77640c88a7c3c1fd",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/path.rb"
      },
      {
        "name": "http_acl.rb",
        "path": "resources/http_acl.rb",
        "checksum": "6f4a630cbb4fc8b0cae090873b354473",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/http_acl.rb"
      },
      {
        "name": "task.rb",
        "path": "resources/task.rb",
        "checksum": "88b9a27089ff4a070f587f9fdfa11b96",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/task.rb"
      },
      {
        "name": "auto_run.rb",
        "path": "resources/auto_run.rb",
        "checksum": "ae88b159819a12b7fddcece6eac3bd61",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/auto_run.rb"
      }
    ],
    "providers": [
      {
        "name": "certificate_binding.rb",
        "path": "providers/certificate_binding.rb",
        "checksum": "7c71cb486d2b4eee2aec27916f6722da",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/certificate_binding.rb"
      },
      {
        "name": "font.rb",
        "path": "providers/font.rb",
        "checksum": "e2358e2955cf41dd079451d32f80e98b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/font.rb"
      },
      {
        "name": "certificate.rb",
        "path": "providers/certificate.rb",
        "checksum": "71a28a6d140831b66e0b7678cf6af632",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/certificate.rb"
      },
      {
        "name": "pagefile.rb",
        "path": "providers/pagefile.rb",
        "checksum": "386a6e2a61cf544d2d4d0fe557e176c3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/pagefile.rb"
      },
      {
        "name": "zipfile.rb",
        "path": "providers/zipfile.rb",
        "checksum": "4685415dfe3af840a73c0a756417dc52",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/zipfile.rb"
      },
      {
        "name": "printer_port.rb",
        "path": "providers/printer_port.rb",
        "checksum": "97ceccfbcf8c159205d5c834f5d222e2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/printer_port.rb"
      },
      {
        "name": "printer.rb",
        "path": "providers/printer.rb",
        "checksum": "6bbcabe6ba05dbb4b6d9ef1e7b350bc9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/printer.rb"
      },
      {
        "name": "feature_servermanagercmd.rb",
        "path": "providers/feature_servermanagercmd.rb",
        "checksum": "be07c212ab219f6bdb0826bc41a4235f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_servermanagercmd.rb"
      },
      {
        "name": "feature_powershell.rb",
        "path": "providers/feature_powershell.rb",
        "checksum": "72d38258c46148f35cc24a2badf740d7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_powershell.rb"
      },
      {
        "name": "shortcut.rb",
        "path": "providers/shortcut.rb",
        "checksum": "a164761467d05d91f4860c6e9e93882a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/shortcut.rb"
      },
      {
        "name": "path.rb",
        "path": "providers/path.rb",
        "checksum": "5bbbad54beabef404b7360135b91aba9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/path.rb"
      },
      {
        "name": "http_acl.rb",
        "path": "providers/http_acl.rb",
        "checksum": "a622f8141bc2c32ec351ad39e0e3c125",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/http_acl.rb"
      },
      {
        "name": "task.rb",
        "path": "providers/task.rb",
        "checksum": "3d44cb23e86ca20dbe3f1cb0c8156578",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/task.rb"
      },
      {
        "name": "feature_dism.rb",
        "path": "providers/feature_dism.rb",
        "checksum": "fcea6e0ea6e0d1a24d8578647793e083",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_dism.rb"
      },
      {
        "name": "auto_run.rb",
        "path": "providers/auto_run.rb",
        "checksum": "eb56d3f7648c8849d5ff5de3d6985bfd",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/auto_run.rb"
      }
    ],
    "root_files": [
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "be472b193d33305bd4a72969c77a3690",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/MAINTAINERS.md"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "83aa20fb94731fad0444b14bd09afa49",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/README.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/CONTRIBUTING.md"
      },
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "1b038f07b3d35803d72ea28dea140514",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/.foodcritic"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "580cd41eb4b173b1099e9afec84153ea",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "19aae3a460acf70b57607752b1798a82",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "windows",
      "description": "Provides a set of useful Windows-specific primitives.",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "windows": ">= 0.0.0"
      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "windows": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "windows": ""
      },
      "version": "2.0.2",
      "source_url": "https://github.com/chef-cookbooks/windows",
      "issues_url": "https://github.com/chef-cookbooks/windows/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.0.2",
    "name": "windows-2.0.2",
    "cookbook_name": "windows",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  }
}
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2016-09-13T12:59:43+01:00] INFO: Loading cookbooks [nginx@2.7.6, iptables@2.2.0, apt@2.9.2, bluepill@2.4.3, build-essential@2.4.0, ohai@2.1.0, runit@1.8.0, yum-epel@0.7.1, rsyslog@4.0.1, 7-zip@1.0.2, packagecloud@0.2.5, yum@4.0.0, compat_resource@12.14.3, windows@2.0.2]
[2016-09-13T12:59:43+01:00] DEBUG: Cookbooks detail: [#<Chef::CookbookVersion:0x00000003b76dc8 @name="nginx", @root_paths=[], @frozen=false, @attribute_filenames=["devel.rb", "syslog.rb", "pagespeed.rb", "rate_limiting.rb", "echo.rb", "source.rb", "status.rb", "openssl_source.rb", "lua.rb", "upload_progress.rb", "default.rb", "auth_request.rb", "passenger.rb", "socketproxy.rb", "set_misc.rb", "repo.rb", "naxsi.rb", "headers_more.rb", "geoip.rb"], @definition_filenames=["nginx_site.rb"], @template_filenames=["nginx.init.erb", "nginx.conf.erb", "nginx-upstart.conf.erb", "sv-nginx-log-run.erb", "nginx.pill.erb", "default-site.erb", "nginx.rb.erb", "nginx.init.erb", "nxdissite.erb", "sv-nginx-run.erb", "nginx.sysconfig.erb", "nxensite.erb", "authorized_ip.erb", "http_realip.conf.erb", "passenger.conf.erb", "http_gzip_static.conf.erb", "socketproxy.conf.erb", "http_geoip.conf.erb", "nginx_status.erb", "upload_progress.erb", "nginx.init.erb", "nginx.init.erb", "nginx.init.erb"], @file_filenames=["mime.types", "naxsi_core.rules"], @recipe_filenames=["http_auth_request_module.rb", "http_geoip_module.rb", "syslog_module.rb", "http_spdy_module.rb", "http_mp4_module.rb", "commons.rb", "http_echo_module.rb", "http_ssl_module.rb", "source.rb", "ohai_plugin.rb", "ngx_lua_module.rb", "http_realip_module.rb", "http_perl_module.rb", "http_gzip_static_module.rb", "headers_more_module.rb", "ngx_devel_module.rb", "http_stub_status_module.rb", "openssl_source.rb", "lua.rb", "upload_progress_module.rb", "commons_script.rb", "package.rb", "default.rb", "repo_passenger.rb", "ipv6.rb", "passenger.rb", "socketproxy.rb", "naxsi_module.rb", "commons_conf.rb", "set_misc.rb", "repo.rb", "authorized_ips.rb", "commons_dir.rb", "pagespeed_module.rb"], @recipe_filenames_by_name={"http_auth_request_module"=>"http_auth_request_module.rb", "http_geoip_module"=>"http_geoip_module.rb", "syslog_module"=>"syslog_module.rb", "http_spdy_module"=>"http_spdy_module.rb", "http_mp4_module"=>"http_mp4_module.rb", "commons"=>"commons.rb", "http_echo_module"=>"http_echo_module.rb", "http_ssl_module"=>"http_ssl_module.rb", "source"=>"source.rb", "ohai_plugin"=>"ohai_plugin.rb", "ngx_lua_module"=>"ngx_lua_module.rb", "http_realip_module"=>"http_realip_module.rb", "http_perl_module"=>"http_perl_module.rb", "http_gzip_static_module"=>"http_gzip_static_module.rb", "headers_more_module"=>"headers_more_module.rb", "ngx_devel_module"=>"ngx_devel_module.rb", "http_stub_status_module"=>"http_stub_status_module.rb", "openssl_source"=>"openssl_source.rb", "lua"=>"lua.rb", "upload_progress_module"=>"upload_progress_module.rb", "commons_script"=>"commons_script.rb", "package"=>"package.rb", "default"=>"default.rb", "repo_passenger"=>"repo_passenger.rb", "ipv6"=>"ipv6.rb", "passenger"=>"passenger.rb", "socketproxy"=>"socketproxy.rb", "naxsi_module"=>"naxsi_module.rb", "commons_conf"=>"commons_conf.rb", "set_misc"=>"set_misc.rb", "repo"=>"repo.rb", "authorized_ips"=>"authorized_ips.rb", "commons_dir"=>"commons_dir.rb", "pagespeed_module"=>"pagespeed_module.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=[], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["Guardfile", "TESTING.md", ".rubocop.yml", ".kitchen.yml", "README.md", "Rakefile", "Berksfile", ".travis.yml", "CONTRIBUTING.md", ".gitignore", ".rspec", "ROADMAP.md", "Berksfile.lock", "metadata.json", "Gemfile", "LICENSE", ".kitchen.cloud.yml", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000003b763a0 @name="nginx", @description="Installs and configures nginx", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "ubuntu"=>">= 0.0.0"}, @dependencies={"apt"=>"~> 2.2", "bluepill"=>"~> 2.3", "build-essential"=>"~> 2.0", "ohai"=>"~> 2.0", "runit"=>"~> 1.2", "yum-epel"=>"~> 0.3"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"nginx::http_auth_request_module"=>">= 0.0.0", "nginx::http_geoip_module"=>">= 0.0.0", "nginx::syslog_module"=>">= 0.0.0", "nginx::http_spdy_module"=>">= 0.0.0", "nginx::http_mp4_module"=>">= 0.0.0", "nginx::commons"=>">= 0.0.0", "nginx::http_echo_module"=>">= 0.0.0", "nginx::http_ssl_module"=>">= 0.0.0", "nginx::source"=>">= 0.0.0", "nginx::ohai_plugin"=>">= 0.0.0", "nginx::ngx_lua_module"=>">= 0.0.0", "nginx::http_realip_module"=>">= 0.0.0", "nginx::http_perl_module"=>">= 0.0.0", "nginx::http_gzip_static_module"=>">= 0.0.0", "nginx::headers_more_module"=>">= 0.0.0", "nginx::ngx_devel_module"=>">= 0.0.0", "nginx::http_stub_status_module"=>">= 0.0.0", "nginx::openssl_source"=>">= 0.0.0", "nginx::lua"=>">= 0.0.0", "nginx::upload_progress_module"=>">= 0.0.0", "nginx::commons_script"=>">= 0.0.0", "nginx::package"=>">= 0.0.0", "nginx"=>">= 0.0.0", "nginx::repo_passenger"=>">= 0.0.0", "nginx::ipv6"=>">= 0.0.0", "nginx::passenger"=>">= 0.0.0", "nginx::socketproxy"=>">= 0.0.0", "nginx::naxsi_module"=>">= 0.0.0", "nginx::commons_conf"=>">= 0.0.0", "nginx::set_misc"=>">= 0.0.0", "nginx::repo"=>">= 0.0.0", "nginx::authorized_ips"=>">= 0.0.0", "nginx::commons_dir"=>">= 0.0.0", "nginx::pagespeed_module"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"nginx"=>"Installs nginx package and sets up configuration with Debian apache style with sites-enabled/sites-available", "nginx::source"=>"Installs nginx from source and sets up configuration with Debian apache style with sites-enabled/sites-available", "nginx::http_auth_request_module"=>"", "nginx::http_geoip_module"=>"", "nginx::syslog_module"=>"", "nginx::http_spdy_module"=>"", "nginx::http_mp4_module"=>"", "nginx::commons"=>"", "nginx::http_echo_module"=>"", "nginx::http_ssl_module"=>"", "nginx::ohai_plugin"=>"", "nginx::ngx_lua_module"=>"", "nginx::http_realip_module"=>"", "nginx::http_perl_module"=>"", "nginx::http_gzip_static_module"=>"", "nginx::headers_more_module"=>"", "nginx::ngx_devel_module"=>"", "nginx::http_stub_status_module"=>"", "nginx::openssl_source"=>"", "nginx::lua"=>"", "nginx::upload_progress_module"=>"", "nginx::commons_script"=>"", "nginx::package"=>"", "nginx::repo_passenger"=>"", "nginx::ipv6"=>"", "nginx::passenger"=>"", "nginx::socketproxy"=>"", "nginx::naxsi_module"=>"", "nginx::commons_conf"=>"", "nginx::set_misc"=>"", "nginx::repo"=>"", "nginx::authorized_ips"=>"", "nginx::commons_dir"=>"", "nginx::pagespeed_module"=>""}, @version="2.7.6", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"devel"=>"devel.rb", "syslog"=>"syslog.rb", "pagespeed"=>"pagespeed.rb", "rate_limiting"=>"rate_limiting.rb", "echo"=>"echo.rb", "source"=>"source.rb", "status"=>"status.rb", "openssl_source"=>"openssl_source.rb", "lua"=>"lua.rb", "upload_progress"=>"upload_progress.rb", "default"=>"default.rb", "auth_request"=>"auth_request.rb", "passenger"=>"passenger.rb", "socketproxy"=>"socketproxy.rb", "set_misc"=>"set_misc.rb", "repo"=>"repo.rb", "naxsi"=>"naxsi.rb", "headers_more"=>"headers_more.rb", "geoip"=>"geoip.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000003b74ed8 @cookbook_version=#<Chef::CookbookVersion:0x00000003b76dc8 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"http_auth_request_module.rb", "path"=>"recipes/http_auth_request_module.rb", "checksum"=>"57872712b5fdfad83324e7dbc2d5eae1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_auth_request_module.rb"}, {"name"=>"http_geoip_module.rb", "path"=>"recipes/http_geoip_module.rb", "checksum"=>"392460d473e85de1b31b08f01f6e1317", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_geoip_module.rb"}, {"name"=>"syslog_module.rb", "path"=>"recipes/syslog_module.rb", "checksum"=>"3c83f16bf0231cdc799cefca1e591a7c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/syslog_module.rb"}, {"name"=>"http_spdy_module.rb", "path"=>"recipes/http_spdy_module.rb", "checksum"=>"acf80305497a5ed5067387517e0ec081", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_spdy_module.rb"}, {"name"=>"http_mp4_module.rb", "path"=>"recipes/http_mp4_module.rb", "checksum"=>"e5f3850a8534adefc75a4b3f84a69299", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_mp4_module.rb"}, {"name"=>"commons.rb", "path"=>"recipes/commons.rb", "checksum"=>"8c59eee1522f7c309c1156df14e6db71", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons.rb"}, {"name"=>"http_echo_module.rb", "path"=>"recipes/http_echo_module.rb", "checksum"=>"d5a9db6296f594bc6594ca1afc053fbd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_echo_module.rb"}, {"name"=>"http_ssl_module.rb", "path"=>"recipes/http_ssl_module.rb", "checksum"=>"6de67cf5b451f96d4071eb8b59560c65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_ssl_module.rb"}, {"name"=>"source.rb", "path"=>"recipes/source.rb", "checksum"=>"3ca88b398f4376d74a8c8d98d34ff274", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/source.rb"}, {"name"=>"ohai_plugin.rb", "path"=>"recipes/ohai_plugin.rb", "checksum"=>"ff39813addc05b7e7efb8326caccebea", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ohai_plugin.rb"}, {"name"=>"ngx_lua_module.rb", "path"=>"recipes/ngx_lua_module.rb", "checksum"=>"9dd811651f6c63c1392f8ba2ff1b43d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ngx_lua_module.rb"}, {"name"=>"http_realip_module.rb", "path"=>"recipes/http_realip_module.rb", "checksum"=>"b016aa609a269f80da401f857c3223b0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_realip_module.rb"}, {"name"=>"http_perl_module.rb", "path"=>"recipes/http_perl_module.rb", "checksum"=>"695b6d60b875777eba86885fe44bb128", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_perl_module.rb"}, {"name"=>"http_gzip_static_module.rb", "path"=>"recipes/http_gzip_static_module.rb", "checksum"=>"8c189d666b7adaaaa89833975e9699ca", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_gzip_static_module.rb"}, {"name"=>"headers_more_module.rb", "path"=>"recipes/headers_more_module.rb", "checksum"=>"0d0545c7aa6b8fbb1c64892bc55ef06e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/headers_more_module.rb"}, {"name"=>"ngx_devel_module.rb", "path"=>"recipes/ngx_devel_module.rb", "checksum"=>"b4d48338f440847e6dc6173cd2cddd85", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ngx_devel_module.rb"}, {"name"=>"http_stub_status_module.rb", "path"=>"recipes/http_stub_status_module.rb", "checksum"=>"a5c5a7e3bd2b715cec415bc7c5409906", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_stub_status_module.rb"}, {"name"=>"openssl_source.rb", "path"=>"recipes/openssl_source.rb", "checksum"=>"9e73ac95f5c9ba9ad39822df25ddc742", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/openssl_source.rb"}, {"name"=>"lua.rb", "path"=>"recipes/lua.rb", "checksum"=>"44f504feebaf1a6997d96112b52e8d3b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/lua.rb"}, {"name"=>"upload_progress_module.rb", "path"=>"recipes/upload_progress_module.rb", "checksum"=>"f4ad9ebb14e16d231d2dbf260f2b33fc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/upload_progress_module.rb"}, {"name"=>"commons_script.rb", "path"=>"recipes/commons_script.rb", "checksum"=>"a8178be8d509845a4d72f0ad819fb5be", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_script.rb"}, {"name"=>"package.rb", "path"=>"recipes/package.rb", "checksum"=>"6fb6b0f107678adf1128c225fb50e6e5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/package.rb"}, {"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"fd5506ee0f68adab91dfc81d9a30d1e6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/default.rb"}, {"name"=>"repo_passenger.rb", "path"=>"recipes/repo_passenger.rb", "checksum"=>"1d1a60313683767b5dfa6c14c01a192d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/repo_passenger.rb"}, {"name"=>"ipv6.rb", "path"=>"recipes/ipv6.rb", "checksum"=>"d4e7b3e914b7d8c792606b491b45fb5b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ipv6.rb"}, {"name"=>"passenger.rb", "path"=>"recipes/passenger.rb", "checksum"=>"1cbcaa27ca5ef4af51f3ba487d50463e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/passenger.rb"}, {"name"=>"socketproxy.rb", "path"=>"recipes/socketproxy.rb", "checksum"=>"8747f23bd1ea6312f857bb736c9c5df3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/socketproxy.rb"}, {"name"=>"naxsi_module.rb", "path"=>"recipes/naxsi_module.rb", "checksum"=>"930fde170b7cb04ffad41416f82b18aa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/naxsi_module.rb"}, {"name"=>"commons_conf.rb", "path"=>"recipes/commons_conf.rb", "checksum"=>"94e4f5010d01699763194bc8b03419dc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_conf.rb"}, {"name"=>"set_misc.rb", "path"=>"recipes/set_misc.rb", "checksum"=>"3dfe5da7aca751a36c4f6845d8d97fd3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/set_misc.rb"}, {"name"=>"repo.rb", "path"=>"recipes/repo.rb", "checksum"=>"2daa04746f22aedc42d0790ece4933a6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/repo.rb"}, {"name"=>"authorized_ips.rb", "path"=>"recipes/authorized_ips.rb", "checksum"=>"e00a76c166d778e9cf98b2eb16b6ec2e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/authorized_ips.rb"}, {"name"=>"commons_dir.rb", "path"=>"recipes/commons_dir.rb", "checksum"=>"57f37c919384f9bd2a685a5857bf8045", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_dir.rb"}, {"name"=>"pagespeed_module.rb", "path"=>"recipes/pagespeed_module.rb", "checksum"=>"0de78d38e3b96623539267cb024e65dc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/pagespeed_module.rb"}], "definitions"=>[{"name"=>"nginx_site.rb", "path"=>"definitions/nginx_site.rb", "checksum"=>"14a6cbe8f1d0c395dd075cd7ce199c95", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/definitions/nginx_site.rb"}], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"051c778ffa1b57ea4591074056f87f1a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/libraries/matchers.rb"}], "attributes"=>[{"name"=>"devel.rb", "path"=>"attributes/devel.rb", "checksum"=>"2443959c45767ec19dab1befa6384008", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/devel.rb"}, {"name"=>"syslog.rb", "path"=>"attributes/syslog.rb", "checksum"=>"7649be724e8bb9bbdeb5683d00b4180b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/syslog.rb"}, {"name"=>"pagespeed.rb", "path"=>"attributes/pagespeed.rb", "checksum"=>"6a501ffec7fe72a2b8186fdbf4f7abb2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/pagespeed.rb"}, {"name"=>"rate_limiting.rb", "path"=>"attributes/rate_limiting.rb", "checksum"=>"f782e8e5548fe9a24c9db1e4fda19ab5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/rate_limiting.rb"}, {"name"=>"echo.rb", "path"=>"attributes/echo.rb", "checksum"=>"c812b71f63e394af3d7d863d9e6648e8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/echo.rb"}, {"name"=>"source.rb", "path"=>"attributes/source.rb", "checksum"=>"acda9607fd275a310dec35ecba1f3372", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/source.rb"}, {"name"=>"status.rb", "path"=>"attributes/status.rb", "checksum"=>"59b7be8873d8fcd1c1f6e50c3bda75d2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/status.rb"}, {"name"=>"openssl_source.rb", "path"=>"attributes/openssl_source.rb", "checksum"=>"350b31654748ca820851ddec07d9ce85", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/openssl_source.rb"}, {"name"=>"lua.rb", "path"=>"attributes/lua.rb", "checksum"=>"1e94fc455dacfc3e389bd1d8099a3487", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/lua.rb"}, {"name"=>"upload_progress.rb", "path"=>"attributes/upload_progress.rb", "checksum"=>"0afb2971d5f59537908b14ccd0df612f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/upload_progress.rb"}, {"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"fec3032780acc3fd9394b958db139672", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/default.rb"}, {"name"=>"auth_request.rb", "path"=>"attributes/auth_request.rb", "checksum"=>"034fe5d49a612def4d11f2202754a602", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/auth_request.rb"}, {"name"=>"passenger.rb", "path"=>"attributes/passenger.rb", "checksum"=>"891cecfb4df1cf678fb60123b2cf5f27", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/passenger.rb"}, {"name"=>"socketproxy.rb", "path"=>"attributes/socketproxy.rb", "checksum"=>"347729c8bc4c0a8d8f33efd07e52b33d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/socketproxy.rb"}, {"name"=>"set_misc.rb", "path"=>"attributes/set_misc.rb", "checksum"=>"9766246a643bf195b8070e2ce40ae088", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/set_misc.rb"}, {"name"=>"repo.rb", "path"=>"attributes/repo.rb", "checksum"=>"de2c99955b52d053a687c88e3fefd310", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/repo.rb"}, {"name"=>"naxsi.rb", "path"=>"attributes/naxsi.rb", "checksum"=>"559fa1cd63d859c442cc07e7bf94b801", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/naxsi.rb"}, {"name"=>"headers_more.rb", "path"=>"attributes/headers_more.rb", "checksum"=>"bd91358861484900b2a7e415fbd6e822", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/headers_more.rb"}, {"name"=>"geoip.rb", "path"=>"attributes/geoip.rb", "checksum"=>"5227a895b3994d78317484252f025eda", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/geoip.rb"}], "files"=>[{"name"=>"mime.types", "path"=>"files/default/mime.types", "checksum"=>"87f7f349a7b081a7c77ea81e91900b4f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/files/default/mime.types"}, {"name"=>"naxsi_core.rules", "path"=>"files/default/naxsi_core.rules", "checksum"=>"e51d0753f33db2dc0647069dd6729500", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/files/default/naxsi_core.rules"}], "templates"=>[{"name"=>"nginx.init.erb", "path"=>"templates/suse/nginx.init.erb", "checksum"=>"896d875e63cd7e288afede8c7fde3bf7", "specificity"=>"suse", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/suse/nginx.init.erb"}, {"name"=>"nginx.conf.erb", "path"=>"templates/default/nginx.conf.erb", "checksum"=>"ba86213184a6e2a6a9e5c91b1e120363", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.conf.erb"}, {"name"=>"nginx-upstart.conf.erb", "path"=>"templates/default/nginx-upstart.conf.erb", "checksum"=>"ec9a27afb2bf64bf653b31f4726d6983", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx-upstart.conf.erb"}, {"name"=>"sv-nginx-log-run.erb", "path"=>"templates/default/sv-nginx-log-run.erb", "checksum"=>"09f2bf988663175cd1b7973198dfb5eb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-log-run.erb"}, {"name"=>"nginx.pill.erb", "path"=>"templates/default/nginx.pill.erb", "checksum"=>"d5cec53c6aab66f829db9e1e61aea9f0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.pill.erb"}, {"name"=>"default-site.erb", "path"=>"templates/default/default-site.erb", "checksum"=>"282e5ef755b521b75e4daae9b72fee12", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/default-site.erb"}, {"name"=>"nginx.rb.erb", "path"=>"templates/default/plugins/nginx.rb.erb", "checksum"=>"9ac55559cbd9e4bd8c8e0f74b15855aa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/plugins/nginx.rb.erb"}, {"name"=>"nginx.init.erb", "path"=>"templates/default/nginx.init.erb", "checksum"=>"735741e2e231b2b89e012d6b55c6d6cf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.init.erb"}, {"name"=>"nxdissite.erb", "path"=>"templates/default/nxdissite.erb", "checksum"=>"e54bbff0120a2342ef2ffd8f7c0b962b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nxdissite.erb"}, {"name"=>"sv-nginx-run.erb", "path"=>"templates/default/sv-nginx-run.erb", "checksum"=>"0891c2f6a528af6c722eb5833684af65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-run.erb"}, {"name"=>"nginx.sysconfig.erb", "path"=>"templates/default/nginx.sysconfig.erb", "checksum"=>"26a3872e8bdbdd614fa17ef13ff9e310", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.sysconfig.erb"}, {"name"=>"nxensite.erb", "path"=>"templates/default/nxensite.erb", "checksum"=>"d0a082a3abd9fa78bc178f560d89c5d3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nxensite.erb"}, {"name"=>"authorized_ip.erb", "path"=>"templates/default/modules/authorized_ip.erb", "checksum"=>"00de1147914315cd8f7d4e592b1a91e2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/authorized_ip.erb"}, {"name"=>"http_realip.conf.erb", "path"=>"templates/default/modules/http_realip.conf.erb", "checksum"=>"09faeae5a287e947323cb0b434e8f9d7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_realip.conf.erb"}, {"name"=>"passenger.conf.erb", "path"=>"templates/default/modules/passenger.conf.erb", "checksum"=>"ab4ff5e1fc04e1eade85c28f5187dc4f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/passenger.conf.erb"}, {"name"=>"http_gzip_static.conf.erb", "path"=>"templates/default/modules/http_gzip_static.conf.erb", "checksum"=>"af39c4f3abe53ed442c62b3077e109ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_gzip_static.conf.erb"}, {"name"=>"socketproxy.conf.erb", "path"=>"templates/default/modules/socketproxy.conf.erb", "checksum"=>"9ca555a3a3080e2bcd48e47e08cd4835", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/socketproxy.conf.erb"}, {"name"=>"http_geoip.conf.erb", "path"=>"templates/default/modules/http_geoip.conf.erb", "checksum"=>"b99cb264ff12c46175a7100c974cbb34", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_geoip.conf.erb"}, {"name"=>"nginx_status.erb", "path"=>"templates/default/modules/nginx_status.erb", "checksum"=>"aaab4f24237e586e5e3247b11ecbfb62", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/nginx_status.erb"}, {"name"=>"upload_progress.erb", "path"=>"templates/default/modules/upload_progress.erb", "checksum"=>"6bebd6809ab6ca51d1ba5f4493bbb3c9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/upload_progress.erb"}, {"name"=>"nginx.init.erb", "path"=>"templates/gentoo/nginx.init.erb", "checksum"=>"05b1977779a0c79b20d0fda55a218097", "specificity"=>"gentoo", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/gentoo/nginx.init.erb"}, {"name"=>"nginx.init.erb", "path"=>"templates/debian/nginx.init.erb", "checksum"=>"f5dbe182ae7efa7324b09218e10936b0", "specificity"=>"debian", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/debian/nginx.init.erb"}, {"name"=>"nginx.init.erb", "path"=>"templates/ubuntu/nginx.init.erb", "checksum"=>"f5dbe182ae7efa7324b09218e10936b0", "specificity"=>"ubuntu", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/ubuntu/nginx.init.erb"}], "resources"=>[], "providers"=>[], "root_files"=>[{"name"=>"Guardfile", "path"=>"Guardfile", "checksum"=>"6c919c0a3ec2d6c554157e49de37f556", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Guardfile"}, {"name"=>"TESTING.md", "path"=>"TESTING.md", "checksum"=>"dc8ab8309fe5e56c6ac65887de58eb87", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/TESTING.md"}, {"name"=>".rubocop.yml", "path"=>".rubocop.yml", "checksum"=>"90a727d23d3fa663b705599ae28e6894", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.rubocop.yml"}, {"name"=>".kitchen.yml", "path"=>".kitchen.yml", "checksum"=>"179d3b92dbbb205671b978cb58698b31", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.kitchen.yml"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"b22df1e591254d4b0c28695e914f37bc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/README.md"}, {"name"=>"Rakefile", "path"=>"Rakefile", "checksum"=>"e26309265d55c8387ab8be5d52faa98f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Rakefile"}, {"name"=>"Berksfile", "path"=>"Berksfile", "checksum"=>"fcf5a3afd1726aa0e759aedcd48f8585", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Berksfile"}, {"name"=>".travis.yml", "path"=>".travis.yml", "checksum"=>"79b22141612ecae780ad261a8d1ff2d2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.travis.yml"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"c4530849219d824d7bb5bddb6770f442", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/CONTRIBUTING.md"}, {"name"=>".gitignore", "path"=>".gitignore", "checksum"=>"7bd173c6a79fee02ea83511d73c6cf65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.gitignore"}, {"name"=>".rspec", "path"=>".rspec", "checksum"=>"cf27e515df6d29fcf8a3a6040249c355", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.rspec"}, {"name"=>"ROADMAP.md", "path"=>"ROADMAP.md", "checksum"=>"c6cc1b61540ac01d921c669274b7d182", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/ROADMAP.md"}, {"name"=>"Berksfile.lock", "path"=>"Berksfile.lock", "checksum"=>"29da2ca4e4798a9c7b8c8f5c863c91a2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Berksfile.lock"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"a129d48ebd1a39e0e84aec2d85c638e7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/metadata.json"}, {"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"3fc0ab4ce6b6795559b435965fad8a30", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Gemfile"}, {"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"8f7bb094c7232b058c7e9f2e431f389c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/LICENSE"}, {"name"=>".kitchen.cloud.yml", "path"=>".kitchen.cloud.yml", "checksum"=>"4006fbb40412dab1a612c37d52c760c0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.kitchen.cloud.yml"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"4e19619ff3ef3e58324e8ae32f6e3aaa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/CHANGELOG.md"}], "metadata"=>{"name"=>"nginx", "description"=>"Installs and configures nginx", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "ubuntu"=>">= 0.0.0"}, "dependencies"=>{"apt"=>"~> 2.2", "bluepill"=>"~> 2.3", "build-essential"=>"~> 2.0", "ohai"=>"~> 2.0", "runit"=>"~> 1.2", "yum-epel"=>"~> 0.3"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"nginx::http_auth_request_module"=>">= 0.0.0", "nginx::http_geoip_module"=>">= 0.0.0", "nginx::syslog_module"=>">= 0.0.0", "nginx::http_spdy_module"=>">= 0.0.0", "nginx::http_mp4_module"=>">= 0.0.0", "nginx::commons"=>">= 0.0.0", "nginx::http_echo_module"=>">= 0.0.0", "nginx::http_ssl_module"=>">= 0.0.0", "nginx::source"=>">= 0.0.0", "nginx::ohai_plugin"=>">= 0.0.0", "nginx::ngx_lua_module"=>">= 0.0.0", "nginx::http_realip_module"=>">= 0.0.0", "nginx::http_perl_module"=>">= 0.0.0", "nginx::http_gzip_static_module"=>">= 0.0.0", "nginx::headers_more_module"=>">= 0.0.0", "nginx::ngx_devel_module"=>">= 0.0.0", "nginx::http_stub_status_module"=>">= 0.0.0", "nginx::openssl_source"=>">= 0.0.0", "nginx::lua"=>">= 0.0.0", "nginx::upload_progress_module"=>">= 0.0.0", "nginx::commons_script"=>">= 0.0.0", "nginx::package"=>">= 0.0.0", "nginx"=>">= 0.0.0", "nginx::repo_passenger"=>">= 0.0.0", "nginx::ipv6"=>">= 0.0.0", "nginx::passenger"=>">= 0.0.0", "nginx::socketproxy"=>">= 0.0.0", "nginx::naxsi_module"=>">= 0.0.0", "nginx::commons_conf"=>">= 0.0.0", "nginx::set_misc"=>">= 0.0.0", "nginx::repo"=>">= 0.0.0", "nginx::authorized_ips"=>">= 0.0.0", "nginx::commons_dir"=>">= 0.0.0", "nginx::pagespeed_module"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"nginx"=>"Installs nginx package and sets up configuration with Debian apache style with sites-enabled/sites-available", "nginx::source"=>"Installs nginx from source and sets up configuration with Debian apache style with sites-enabled/sites-available", "nginx::http_auth_request_module"=>"", "nginx::http_geoip_module"=>"", "nginx::syslog_module"=>"", "nginx::http_spdy_module"=>"", "nginx::http_mp4_module"=>"", "nginx::commons"=>"", "nginx::http_echo_module"=>"", "nginx::http_ssl_module"=>"", "nginx::ohai_plugin"=>"", "nginx::ngx_lua_module"=>"", "nginx::http_realip_module"=>"", "nginx::http_perl_module"=>"", "nginx::http_gzip_static_module"=>"", "nginx::headers_more_module"=>"", "nginx::ngx_devel_module"=>"", "nginx::http_stub_status_module"=>"", "nginx::openssl_source"=>"", "nginx::lua"=>"", "nginx::upload_progress_module"=>"", "nginx::commons_script"=>"", "nginx::package"=>"", "nginx::repo_passenger"=>"", "nginx::ipv6"=>"", "nginx::passenger"=>"", "nginx::socketproxy"=>"", "nginx::naxsi_module"=>"", "nginx::commons_conf"=>"", "nginx::set_misc"=>"", "nginx::repo"=>"", "nginx::authorized_ips"=>"", "nginx::commons_dir"=>"", "nginx::pagespeed_module"=>""}, "version"=>"2.7.6", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.7.6", "name"=>"nginx-2.7.6", "cookbook_name"=>"nginx", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"57872712b5fdfad83324e7dbc2d5eae1"=>nil, "392460d473e85de1b31b08f01f6e1317"=>nil, "3c83f16bf0231cdc799cefca1e591a7c"=>nil, "acf80305497a5ed5067387517e0ec081"=>nil, "e5f3850a8534adefc75a4b3f84a69299"=>nil, "8c59eee1522f7c309c1156df14e6db71"=>nil, "d5a9db6296f594bc6594ca1afc053fbd"=>nil, "6de67cf5b451f96d4071eb8b59560c65"=>nil, "3ca88b398f4376d74a8c8d98d34ff274"=>nil, "ff39813addc05b7e7efb8326caccebea"=>nil, "9dd811651f6c63c1392f8ba2ff1b43d5"=>nil, "b016aa609a269f80da401f857c3223b0"=>nil, "695b6d60b875777eba86885fe44bb128"=>nil, "8c189d666b7adaaaa89833975e9699ca"=>nil, "0d0545c7aa6b8fbb1c64892bc55ef06e"=>nil, "b4d48338f440847e6dc6173cd2cddd85"=>nil, "a5c5a7e3bd2b715cec415bc7c5409906"=>nil, "9e73ac95f5c9ba9ad39822df25ddc742"=>nil, "44f504feebaf1a6997d96112b52e8d3b"=>nil, "f4ad9ebb14e16d231d2dbf260f2b33fc"=>nil, "a8178be8d509845a4d72f0ad819fb5be"=>nil, "6fb6b0f107678adf1128c225fb50e6e5"=>nil, "fd5506ee0f68adab91dfc81d9a30d1e6"=>nil, "1d1a60313683767b5dfa6c14c01a192d"=>nil, "d4e7b3e914b7d8c792606b491b45fb5b"=>nil, "1cbcaa27ca5ef4af51f3ba487d50463e"=>nil, "8747f23bd1ea6312f857bb736c9c5df3"=>nil, "930fde170b7cb04ffad41416f82b18aa"=>nil, "94e4f5010d01699763194bc8b03419dc"=>nil, "3dfe5da7aca751a36c4f6845d8d97fd3"=>nil, "2daa04746f22aedc42d0790ece4933a6"=>nil, "e00a76c166d778e9cf98b2eb16b6ec2e"=>nil, "57f37c919384f9bd2a685a5857bf8045"=>nil, "0de78d38e3b96623539267cb024e65dc"=>nil, "14a6cbe8f1d0c395dd075cd7ce199c95"=>nil, "051c778ffa1b57ea4591074056f87f1a"=>nil, "2443959c45767ec19dab1befa6384008"=>nil, "7649be724e8bb9bbdeb5683d00b4180b"=>nil, "6a501ffec7fe72a2b8186fdbf4f7abb2"=>nil, "f782e8e5548fe9a24c9db1e4fda19ab5"=>nil, "c812b71f63e394af3d7d863d9e6648e8"=>nil, "acda9607fd275a310dec35ecba1f3372"=>nil, "59b7be8873d8fcd1c1f6e50c3bda75d2"=>nil, "350b31654748ca820851ddec07d9ce85"=>nil, "1e94fc455dacfc3e389bd1d8099a3487"=>nil, "0afb2971d5f59537908b14ccd0df612f"=>nil, "fec3032780acc3fd9394b958db139672"=>nil, "034fe5d49a612def4d11f2202754a602"=>nil, "891cecfb4df1cf678fb60123b2cf5f27"=>nil, "347729c8bc4c0a8d8f33efd07e52b33d"=>nil, "9766246a643bf195b8070e2ce40ae088"=>nil, "de2c99955b52d053a687c88e3fefd310"=>nil, "559fa1cd63d859c442cc07e7bf94b801"=>nil, "bd91358861484900b2a7e415fbd6e822"=>nil, "5227a895b3994d78317484252f025eda"=>nil, "87f7f349a7b081a7c77ea81e91900b4f"=>nil, "e51d0753f33db2dc0647069dd6729500"=>nil, "896d875e63cd7e288afede8c7fde3bf7"=>nil, "ba86213184a6e2a6a9e5c91b1e120363"=>nil, "ec9a27afb2bf64bf653b31f4726d6983"=>nil, "09f2bf988663175cd1b7973198dfb5eb"=>nil, "d5cec53c6aab66f829db9e1e61aea9f0"=>nil, "282e5ef755b521b75e4daae9b72fee12"=>nil, "9ac55559cbd9e4bd8c8e0f74b15855aa"=>nil, "735741e2e231b2b89e012d6b55c6d6cf"=>nil, "e54bbff0120a2342ef2ffd8f7c0b962b"=>nil, "0891c2f6a528af6c722eb5833684af65"=>nil, "26a3872e8bdbdd614fa17ef13ff9e310"=>nil, "d0a082a3abd9fa78bc178f560d89c5d3"=>nil, "00de1147914315cd8f7d4e592b1a91e2"=>nil, "09faeae5a287e947323cb0b434e8f9d7"=>nil, "ab4ff5e1fc04e1eade85c28f5187dc4f"=>nil, "af39c4f3abe53ed442c62b3077e109ad"=>nil, "9ca555a3a3080e2bcd48e47e08cd4835"=>nil, "b99cb264ff12c46175a7100c974cbb34"=>nil, "aaab4f24237e586e5e3247b11ecbfb62"=>nil, "6bebd6809ab6ca51d1ba5f4493bbb3c9"=>nil, "05b1977779a0c79b20d0fda55a218097"=>nil, "f5dbe182ae7efa7324b09218e10936b0"=>nil, "6c919c0a3ec2d6c554157e49de37f556"=>nil, "dc8ab8309fe5e56c6ac65887de58eb87"=>nil, "90a727d23d3fa663b705599ae28e6894"=>nil, "179d3b92dbbb205671b978cb58698b31"=>nil, "b22df1e591254d4b0c28695e914f37bc"=>nil, "e26309265d55c8387ab8be5d52faa98f"=>nil, "fcf5a3afd1726aa0e759aedcd48f8585"=>nil, "79b22141612ecae780ad261a8d1ff2d2"=>nil, "c4530849219d824d7bb5bddb6770f442"=>nil, "7bd173c6a79fee02ea83511d73c6cf65"=>nil, "cf27e515df6d29fcf8a3a6040249c355"=>nil, "c6cc1b61540ac01d921c669274b7d182"=>nil, "29da2ca4e4798a9c7b8c8f5c863c91a2"=>nil, "a129d48ebd1a39e0e84aec2d85c638e7"=>nil, "3fc0ab4ce6b6795559b435965fad8a30"=>nil, "8f7bb094c7232b058c7e9f2e431f389c"=>nil, "4006fbb40412dab1a612c37d52c760c0"=>nil, "4e19619ff3ef3e58324e8ae32f6e3aaa"=>nil}, @manifest_records_by_path={"recipes/http_auth_request_module.rb"=>{"name"=>"http_auth_request_module.rb", "path"=>"recipes/http_auth_request_module.rb", "checksum"=>"57872712b5fdfad83324e7dbc2d5eae1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_auth_request_module.rb"}, "recipes/http_geoip_module.rb"=>{"name"=>"http_geoip_module.rb", "path"=>"recipes/http_geoip_module.rb", "checksum"=>"392460d473e85de1b31b08f01f6e1317", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_geoip_module.rb"}, "recipes/syslog_module.rb"=>{"name"=>"syslog_module.rb", "path"=>"recipes/syslog_module.rb", "checksum"=>"3c83f16bf0231cdc799cefca1e591a7c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/syslog_module.rb"}, "recipes/http_spdy_module.rb"=>{"name"=>"http_spdy_module.rb", "path"=>"recipes/http_spdy_module.rb", "checksum"=>"acf80305497a5ed5067387517e0ec081", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_spdy_module.rb"}, "recipes/http_mp4_module.rb"=>{"name"=>"http_mp4_module.rb", "path"=>"recipes/http_mp4_module.rb", "checksum"=>"e5f3850a8534adefc75a4b3f84a69299", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_mp4_module.rb"}, "recipes/commons.rb"=>{"name"=>"commons.rb", "path"=>"recipes/commons.rb", "checksum"=>"8c59eee1522f7c309c1156df14e6db71", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons.rb"}, "recipes/http_echo_module.rb"=>{"name"=>"http_echo_module.rb", "path"=>"recipes/http_echo_module.rb", "checksum"=>"d5a9db6296f594bc6594ca1afc053fbd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_echo_module.rb"}, "recipes/http_ssl_module.rb"=>{"name"=>"http_ssl_module.rb", "path"=>"recipes/http_ssl_module.rb", "checksum"=>"6de67cf5b451f96d4071eb8b59560c65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_ssl_module.rb"}, "recipes/source.rb"=>{"name"=>"source.rb", "path"=>"recipes/source.rb", "checksum"=>"3ca88b398f4376d74a8c8d98d34ff274", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/source.rb"}, "recipes/ohai_plugin.rb"=>{"name"=>"ohai_plugin.rb", "path"=>"recipes/ohai_plugin.rb", "checksum"=>"ff39813addc05b7e7efb8326caccebea", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ohai_plugin.rb"}, "recipes/ngx_lua_module.rb"=>{"name"=>"ngx_lua_module.rb", "path"=>"recipes/ngx_lua_module.rb", "checksum"=>"9dd811651f6c63c1392f8ba2ff1b43d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ngx_lua_module.rb"}, "recipes/http_realip_module.rb"=>{"name"=>"http_realip_module.rb", "path"=>"recipes/http_realip_module.rb", "checksum"=>"b016aa609a269f80da401f857c3223b0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_realip_module.rb"}, "recipes/http_perl_module.rb"=>{"name"=>"http_perl_module.rb", "path"=>"recipes/http_perl_module.rb", "checksum"=>"695b6d60b875777eba86885fe44bb128", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_perl_module.rb"}, "recipes/http_gzip_static_module.rb"=>{"name"=>"http_gzip_static_module.rb", "path"=>"recipes/http_gzip_static_module.rb", "checksum"=>"8c189d666b7adaaaa89833975e9699ca", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_gzip_static_module.rb"}, "recipes/headers_more_module.rb"=>{"name"=>"headers_more_module.rb", "path"=>"recipes/headers_more_module.rb", "checksum"=>"0d0545c7aa6b8fbb1c64892bc55ef06e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/headers_more_module.rb"}, "recipes/ngx_devel_module.rb"=>{"name"=>"ngx_devel_module.rb", "path"=>"recipes/ngx_devel_module.rb", "checksum"=>"b4d48338f440847e6dc6173cd2cddd85", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ngx_devel_module.rb"}, "recipes/http_stub_status_module.rb"=>{"name"=>"http_stub_status_module.rb", "path"=>"recipes/http_stub_status_module.rb", "checksum"=>"a5c5a7e3bd2b715cec415bc7c5409906", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_stub_status_module.rb"}, "recipes/openssl_source.rb"=>{"name"=>"openssl_source.rb", "path"=>"recipes/openssl_source.rb", "checksum"=>"9e73ac95f5c9ba9ad39822df25ddc742", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/openssl_source.rb"}, "recipes/lua.rb"=>{"name"=>"lua.rb", "path"=>"recipes/lua.rb", "checksum"=>"44f504feebaf1a6997d96112b52e8d3b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/lua.rb"}, "recipes/upload_progress_module.rb"=>{"name"=>"upload_progress_module.rb", "path"=>"recipes/upload_progress_module.rb", "checksum"=>"f4ad9ebb14e16d231d2dbf260f2b33fc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/upload_progress_module.rb"}, "recipes/commons_script.rb"=>{"name"=>"commons_script.rb", "path"=>"recipes/commons_script.rb", "checksum"=>"a8178be8d509845a4d72f0ad819fb5be", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_script.rb"}, "recipes/package.rb"=>{"name"=>"package.rb", "path"=>"recipes/package.rb", "checksum"=>"6fb6b0f107678adf1128c225fb50e6e5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/package.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"fd5506ee0f68adab91dfc81d9a30d1e6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/default.rb"}, "recipes/repo_passenger.rb"=>{"name"=>"repo_passenger.rb", "path"=>"recipes/repo_passenger.rb", "checksum"=>"1d1a60313683767b5dfa6c14c01a192d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/repo_passenger.rb"}, "recipes/ipv6.rb"=>{"name"=>"ipv6.rb", "path"=>"recipes/ipv6.rb", "checksum"=>"d4e7b3e914b7d8c792606b491b45fb5b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ipv6.rb"}, "recipes/passenger.rb"=>{"name"=>"passenger.rb", "path"=>"recipes/passenger.rb", "checksum"=>"1cbcaa27ca5ef4af51f3ba487d50463e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/passenger.rb"}, "recipes/socketproxy.rb"=>{"name"=>"socketproxy.rb", "path"=>"recipes/socketproxy.rb", "checksum"=>"8747f23bd1ea6312f857bb736c9c5df3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/socketproxy.rb"}, "recipes/naxsi_module.rb"=>{"name"=>"naxsi_module.rb", "path"=>"recipes/naxsi_module.rb", "checksum"=>"930fde170b7cb04ffad41416f82b18aa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/naxsi_module.rb"}, "recipes/commons_conf.rb"=>{"name"=>"commons_conf.rb", "path"=>"recipes/commons_conf.rb", "checksum"=>"94e4f5010d01699763194bc8b03419dc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_conf.rb"}, "recipes/set_misc.rb"=>{"name"=>"set_misc.rb", "path"=>"recipes/set_misc.rb", "checksum"=>"3dfe5da7aca751a36c4f6845d8d97fd3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/set_misc.rb"}, "recipes/repo.rb"=>{"name"=>"repo.rb", "path"=>"recipes/repo.rb", "checksum"=>"2daa04746f22aedc42d0790ece4933a6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/repo.rb"}, "recipes/authorized_ips.rb"=>{"name"=>"authorized_ips.rb", "path"=>"recipes/authorized_ips.rb", "checksum"=>"e00a76c166d778e9cf98b2eb16b6ec2e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/authorized_ips.rb"}, "recipes/commons_dir.rb"=>{"name"=>"commons_dir.rb", "path"=>"recipes/commons_dir.rb", "checksum"=>"57f37c919384f9bd2a685a5857bf8045", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_dir.rb"}, "recipes/pagespeed_module.rb"=>{"name"=>"pagespeed_module.rb", "path"=>"recipes/pagespeed_module.rb", "checksum"=>"0de78d38e3b96623539267cb024e65dc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/pagespeed_module.rb"}, "definitions/nginx_site.rb"=>{"name"=>"nginx_site.rb", "path"=>"definitions/nginx_site.rb", "checksum"=>"14a6cbe8f1d0c395dd075cd7ce199c95", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/definitions/nginx_site.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"051c778ffa1b57ea4591074056f87f1a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/libraries/matchers.rb"}, "attributes/devel.rb"=>{"name"=>"devel.rb", "path"=>"attributes/devel.rb", "checksum"=>"2443959c45767ec19dab1befa6384008", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/devel.rb"}, "attributes/syslog.rb"=>{"name"=>"syslog.rb", "path"=>"attributes/syslog.rb", "checksum"=>"7649be724e8bb9bbdeb5683d00b4180b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/syslog.rb"}, "attributes/pagespeed.rb"=>{"name"=>"pagespeed.rb", "path"=>"attributes/pagespeed.rb", "checksum"=>"6a501ffec7fe72a2b8186fdbf4f7abb2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/pagespeed.rb"}, "attributes/rate_limiting.rb"=>{"name"=>"rate_limiting.rb", "path"=>"attributes/rate_limiting.rb", "checksum"=>"f782e8e5548fe9a24c9db1e4fda19ab5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/rate_limiting.rb"}, "attributes/echo.rb"=>{"name"=>"echo.rb", "path"=>"attributes/echo.rb", "checksum"=>"c812b71f63e394af3d7d863d9e6648e8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/echo.rb"}, "attributes/source.rb"=>{"name"=>"source.rb", "path"=>"attributes/source.rb", "checksum"=>"acda9607fd275a310dec35ecba1f3372", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/source.rb"}, "attributes/status.rb"=>{"name"=>"status.rb", "path"=>"attributes/status.rb", "checksum"=>"59b7be8873d8fcd1c1f6e50c3bda75d2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/status.rb"}, "attributes/openssl_source.rb"=>{"name"=>"openssl_source.rb", "path"=>"attributes/openssl_source.rb", "checksum"=>"350b31654748ca820851ddec07d9ce85", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/openssl_source.rb"}, "attributes/lua.rb"=>{"name"=>"lua.rb", "path"=>"attributes/lua.rb", "checksum"=>"1e94fc455dacfc3e389bd1d8099a3487", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/lua.rb"}, "attributes/upload_progress.rb"=>{"name"=>"upload_progress.rb", "path"=>"attributes/upload_progress.rb", "checksum"=>"0afb2971d5f59537908b14ccd0df612f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/upload_progress.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"fec3032780acc3fd9394b958db139672", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/default.rb"}, "attributes/auth_request.rb"=>{"name"=>"auth_request.rb", "path"=>"attributes/auth_request.rb", "checksum"=>"034fe5d49a612def4d11f2202754a602", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/auth_request.rb"}, "attributes/passenger.rb"=>{"name"=>"passenger.rb", "path"=>"attributes/passenger.rb", "checksum"=>"891cecfb4df1cf678fb60123b2cf5f27", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/passenger.rb"}, "attributes/socketproxy.rb"=>{"name"=>"socketproxy.rb", "path"=>"attributes/socketproxy.rb", "checksum"=>"347729c8bc4c0a8d8f33efd07e52b33d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/socketproxy.rb"}, "attributes/set_misc.rb"=>{"name"=>"set_misc.rb", "path"=>"attributes/set_misc.rb", "checksum"=>"9766246a643bf195b8070e2ce40ae088", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/set_misc.rb"}, "attributes/repo.rb"=>{"name"=>"repo.rb", "path"=>"attributes/repo.rb", "checksum"=>"de2c99955b52d053a687c88e3fefd310", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/repo.rb"}, "attributes/naxsi.rb"=>{"name"=>"naxsi.rb", "path"=>"attributes/naxsi.rb", "checksum"=>"559fa1cd63d859c442cc07e7bf94b801", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/naxsi.rb"}, "attributes/headers_more.rb"=>{"name"=>"headers_more.rb", "path"=>"attributes/headers_more.rb", "checksum"=>"bd91358861484900b2a7e415fbd6e822", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/headers_more.rb"}, "attributes/geoip.rb"=>{"name"=>"geoip.rb", "path"=>"attributes/geoip.rb", "checksum"=>"5227a895b3994d78317484252f025eda", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/geoip.rb"}, "files/default/mime.types"=>{"name"=>"mime.types", "path"=>"files/default/mime.types", "checksum"=>"87f7f349a7b081a7c77ea81e91900b4f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/files/default/mime.types"}, "files/default/naxsi_core.rules"=>{"name"=>"naxsi_core.rules", "path"=>"files/default/naxsi_core.rules", "checksum"=>"e51d0753f33db2dc0647069dd6729500", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/files/default/naxsi_core.rules"}, "templates/suse/nginx.init.erb"=>{"name"=>"nginx.init.erb", "path"=>"templates/suse/nginx.init.erb", "checksum"=>"896d875e63cd7e288afede8c7fde3bf7", "specificity"=>"suse", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/suse/nginx.init.erb"}, "templates/default/nginx.conf.erb"=>{"name"=>"nginx.conf.erb", "path"=>"templates/default/nginx.conf.erb", "checksum"=>"ba86213184a6e2a6a9e5c91b1e120363", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.conf.erb"}, "templates/default/nginx-upstart.conf.erb"=>{"name"=>"nginx-upstart.conf.erb", "path"=>"templates/default/nginx-upstart.conf.erb", "checksum"=>"ec9a27afb2bf64bf653b31f4726d6983", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx-upstart.conf.erb"}, "templates/default/sv-nginx-log-run.erb"=>{"name"=>"sv-nginx-log-run.erb", "path"=>"templates/default/sv-nginx-log-run.erb", "checksum"=>"09f2bf988663175cd1b7973198dfb5eb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-log-run.erb"}, "templates/default/nginx.pill.erb"=>{"name"=>"nginx.pill.erb", "path"=>"templates/default/nginx.pill.erb", "checksum"=>"d5cec53c6aab66f829db9e1e61aea9f0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.pill.erb"}, "templates/default/default-site.erb"=>{"name"=>"default-site.erb", "path"=>"templates/default/default-site.erb", "checksum"=>"282e5ef755b521b75e4daae9b72fee12", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/default-site.erb"}, "templates/default/plugins/nginx.rb.erb"=>{"name"=>"nginx.rb.erb", "path"=>"templates/default/plugins/nginx.rb.erb", "checksum"=>"9ac55559cbd9e4bd8c8e0f74b15855aa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/plugins/nginx.rb.erb"}, "templates/default/nginx.init.erb"=>{"name"=>"nginx.init.erb", "path"=>"templates/default/nginx.init.erb", "checksum"=>"735741e2e231b2b89e012d6b55c6d6cf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.init.erb"}, "templates/default/nxdissite.erb"=>{"name"=>"nxdissite.erb", "path"=>"templates/default/nxdissite.erb", "checksum"=>"e54bbff0120a2342ef2ffd8f7c0b962b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nxdissite.erb"}, "templates/default/sv-nginx-run.erb"=>{"name"=>"sv-nginx-run.erb", "path"=>"templates/default/sv-nginx-run.erb", "checksum"=>"0891c2f6a528af6c722eb5833684af65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-run.erb"}, "templates/default/nginx.sysconfig.erb"=>{"name"=>"nginx.sysconfig.erb", "path"=>"templates/default/nginx.sysconfig.erb", "checksum"=>"26a3872e8bdbdd614fa17ef13ff9e310", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.sysconfig.erb"}, "templates/default/nxensite.erb"=>{"name"=>"nxensite.erb", "path"=>"templates/default/nxensite.erb", "checksum"=>"d0a082a3abd9fa78bc178f560d89c5d3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nxensite.erb"}, "templates/default/modules/authorized_ip.erb"=>{"name"=>"authorized_ip.erb", "path"=>"templates/default/modules/authorized_ip.erb", "checksum"=>"00de1147914315cd8f7d4e592b1a91e2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/authorized_ip.erb"}, "templates/default/modules/http_realip.conf.erb"=>{"name"=>"http_realip.conf.erb", "path"=>"templates/default/modules/http_realip.conf.erb", "checksum"=>"09faeae5a287e947323cb0b434e8f9d7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_realip.conf.erb"}, "templates/default/modules/passenger.conf.erb"=>{"name"=>"passenger.conf.erb", "path"=>"templates/default/modules/passenger.conf.erb", "checksum"=>"ab4ff5e1fc04e1eade85c28f5187dc4f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/passenger.conf.erb"}, "templates/default/modules/http_gzip_static.conf.erb"=>{"name"=>"http_gzip_static.conf.erb", "path"=>"templates/default/modules/http_gzip_static.conf.erb", "checksum"=>"af39c4f3abe53ed442c62b3077e109ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_gzip_static.conf.erb"}, "templates/default/modules/socketproxy.conf.erb"=>{"name"=>"socketproxy.conf.erb", "path"=>"templates/default/modules/socketproxy.conf.erb", "checksum"=>"9ca555a3a3080e2bcd48e47e08cd4835", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/socketproxy.conf.erb"}, "templates/default/modules/http_geoip.conf.erb"=>{"name"=>"http_geoip.conf.erb", "path"=>"templates/default/modules/http_geoip.conf.erb", "checksum"=>"b99cb264ff12c46175a7100c974cbb34", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_geoip.conf.erb"}, "templates/default/modules/nginx_status.erb"=>{"name"=>"nginx_status.erb", "path"=>"templates/default/modules/nginx_status.erb", "checksum"=>"aaab4f24237e586e5e3247b11ecbfb62", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/nginx_status.erb"}, "templates/default/modules/upload_progress.erb"=>{"name"=>"upload_progress.erb", "path"=>"templates/default/modules/upload_progress.erb", "checksum"=>"6bebd6809ab6ca51d1ba5f4493bbb3c9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/upload_progress.erb"}, "templates/gentoo/nginx.init.erb"=>{"name"=>"nginx.init.erb", "path"=>"templates/gentoo/nginx.init.erb", "checksum"=>"05b1977779a0c79b20d0fda55a218097", "specificity"=>"gentoo", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/gentoo/nginx.init.erb"}, "templates/debian/nginx.init.erb"=>{"name"=>"nginx.init.erb", "path"=>"templates/debian/nginx.init.erb", "checksum"=>"f5dbe182ae7efa7324b09218e10936b0", "specificity"=>"debian", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/debian/nginx.init.erb"}, "templates/ubuntu/nginx.init.erb"=>{"name"=>"nginx.init.erb", "path"=>"templates/ubuntu/nginx.init.erb", "checksum"=>"f5dbe182ae7efa7324b09218e10936b0", "specificity"=>"ubuntu", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/ubuntu/nginx.init.erb"}, "Guardfile"=>{"name"=>"Guardfile", "path"=>"Guardfile", "checksum"=>"6c919c0a3ec2d6c554157e49de37f556", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Guardfile"}, "TESTING.md"=>{"name"=>"TESTING.md", "path"=>"TESTING.md", "checksum"=>"dc8ab8309fe5e56c6ac65887de58eb87", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/TESTING.md"}, ".rubocop.yml"=>{"name"=>".rubocop.yml", "path"=>".rubocop.yml", "checksum"=>"90a727d23d3fa663b705599ae28e6894", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.rubocop.yml"}, ".kitchen.yml"=>{"name"=>".kitchen.yml", "path"=>".kitchen.yml", "checksum"=>"179d3b92dbbb205671b978cb58698b31", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.kitchen.yml"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"b22df1e591254d4b0c28695e914f37bc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/README.md"}, "Rakefile"=>{"name"=>"Rakefile", "path"=>"Rakefile", "checksum"=>"e26309265d55c8387ab8be5d52faa98f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Rakefile"}, "Berksfile"=>{"name"=>"Berksfile", "path"=>"Berksfile", "checksum"=>"fcf5a3afd1726aa0e759aedcd48f8585", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Berksfile"}, ".travis.yml"=>{"name"=>".travis.yml", "path"=>".travis.yml", "checksum"=>"79b22141612ecae780ad261a8d1ff2d2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.travis.yml"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"c4530849219d824d7bb5bddb6770f442", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/CONTRIBUTING.md"}, ".gitignore"=>{"name"=>".gitignore", "path"=>".gitignore", "checksum"=>"7bd173c6a79fee02ea83511d73c6cf65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.gitignore"}, ".rspec"=>{"name"=>".rspec", "path"=>".rspec", "checksum"=>"cf27e515df6d29fcf8a3a6040249c355", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.rspec"}, "ROADMAP.md"=>{"name"=>"ROADMAP.md", "path"=>"ROADMAP.md", "checksum"=>"c6cc1b61540ac01d921c669274b7d182", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/ROADMAP.md"}, "Berksfile.lock"=>{"name"=>"Berksfile.lock", "path"=>"Berksfile.lock", "checksum"=>"29da2ca4e4798a9c7b8c8f5c863c91a2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Berksfile.lock"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"a129d48ebd1a39e0e84aec2d85c638e7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/metadata.json"}, "Gemfile"=>{"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"3fc0ab4ce6b6795559b435965fad8a30", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Gemfile"}, "LICENSE"=>{"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"8f7bb094c7232b058c7e9f2e431f389c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/LICENSE"}, ".kitchen.cloud.yml"=>{"name"=>".kitchen.cloud.yml", "path"=>".kitchen.cloud.yml", "checksum"=>"4006fbb40412dab1a612c37d52c760c0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.kitchen.cloud.yml"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"4e19619ff3ef3e58324e8ae32f6e3aaa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/nginx/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000003ad2110 @name="iptables", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=["rebuild-iptables.erb", "iptables-config.erb", "iptables_load.erb"], @file_filenames=[], @recipe_filenames=["disabled.rb", "default.rb", "_package.rb"], @recipe_filenames_by_name={"disabled"=>"disabled.rb", "default"=>"default.rb", "_package"=>"_package.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["rule.rb"], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "metadata.json", "Gemfile", "chefignore", "LICENSE"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000003ad16e8 @name="iptables", @description="Installs the iptables daemon and provides a LWRP for managing rules", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"redhat"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "oracle"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"iptables::disabled"=>">= 0.0.0", "iptables"=>">= 0.0.0", "iptables::_package"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"default"=>"Installs iptables and sets up .d style config directory of iptables rules", "disabled"=>"Disables iptables", "iptables::disabled"=>"", "iptables"=>"", "iptables::_package"=>""}, @version="2.2.0", @source_url="https://github.com/chef-cookbooks/iptables", @issues_url="https://github.com/chef-cookbooks/iptables/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000003ad09f0 @cookbook_version=#<Chef::CookbookVersion:0x00000003ad2110 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"disabled.rb", "path"=>"recipes/disabled.rb", "checksum"=>"82d28bdfd053dd5c9553ababa5340aaf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/disabled.rb"}, {"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"66479113d127c5aeab668cafe752590a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/default.rb"}, {"name"=>"_package.rb", "path"=>"recipes/_package.rb", "checksum"=>"dfa3d025993c0b2ac5e585e8b21a871d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/_package.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"f12847b26e2c9b1ca35782d2444dd713", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"61a64f6cbb807349971733c56900736a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/attributes/default.rb"}], "files"=>[], "templates"=>[{"name"=>"rebuild-iptables.erb", "path"=>"templates/default/rebuild-iptables.erb", "checksum"=>"6f68e1c4aebfc8a2095bc9fee1c69376", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb"}, {"name"=>"iptables-config.erb", "path"=>"templates/default/iptables-config.erb", "checksum"=>"375a02610e0c4703fe9ac43bcb19819b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb"}, {"name"=>"iptables_load.erb", "path"=>"templates/default/iptables_load.erb", "checksum"=>"2df62510beedaefde3f8e312aedb70a4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb"}], "resources"=>[{"name"=>"rule.rb", "path"=>"resources/rule.rb", "checksum"=>"83793ab3fba05ba7cc59b68cc59f6c83", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/resources/rule.rb"}], "providers"=>[], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"74b632c3446e9af39ea0c1737fbc4e60", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"4823f885ec2f3e914465211907cac86e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/README.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"a47ceba0705c430e221728440796db45", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/metadata.json"}, {"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"4652a1daae2f5b262c90b6d49367dc2d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Gemfile"}, {"name"=>"chefignore", "path"=>"chefignore", "checksum"=>"9cec09c5cac3f114c47ba1dfa866c480", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/chefignore"}, {"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"fa818a259cbed7ce8bc2a22d35a464fc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/LICENSE"}], "metadata"=>{"name"=>"iptables", "description"=>"Installs the iptables daemon and provides a LWRP for managing rules", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"redhat"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "oracle"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"iptables::disabled"=>">= 0.0.0", "iptables"=>">= 0.0.0", "iptables::_package"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"default"=>"Installs iptables and sets up .d style config directory of iptables rules", "disabled"=>"Disables iptables", "iptables::disabled"=>"", "iptables"=>"", "iptables::_package"=>""}, "version"=>"2.2.0", "source_url"=>"https://github.com/chef-cookbooks/iptables", "issues_url"=>"https://github.com/chef-cookbooks/iptables/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.2.0", "name"=>"iptables-2.2.0", "cookbook_name"=>"iptables", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"83793ab3fba05ba7cc59b68cc59f6c83"=>nil, "82d28bdfd053dd5c9553ababa5340aaf"=>nil, "66479113d127c5aeab668cafe752590a"=>nil, "dfa3d025993c0b2ac5e585e8b21a871d"=>nil, "f12847b26e2c9b1ca35782d2444dd713"=>nil, "61a64f6cbb807349971733c56900736a"=>nil, "6f68e1c4aebfc8a2095bc9fee1c69376"=>nil, "375a02610e0c4703fe9ac43bcb19819b"=>nil, "2df62510beedaefde3f8e312aedb70a4"=>nil, "74b632c3446e9af39ea0c1737fbc4e60"=>nil, "4823f885ec2f3e914465211907cac86e"=>nil, "a47ceba0705c430e221728440796db45"=>nil, "4652a1daae2f5b262c90b6d49367dc2d"=>nil, "9cec09c5cac3f114c47ba1dfa866c480"=>nil, "fa818a259cbed7ce8bc2a22d35a464fc"=>nil}, @manifest_records_by_path={"resources/rule.rb"=>{"name"=>"rule.rb", "path"=>"resources/rule.rb", "checksum"=>"83793ab3fba05ba7cc59b68cc59f6c83", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/resources/rule.rb"}, "recipes/disabled.rb"=>{"name"=>"disabled.rb", "path"=>"recipes/disabled.rb", "checksum"=>"82d28bdfd053dd5c9553ababa5340aaf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/disabled.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"66479113d127c5aeab668cafe752590a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/default.rb"}, "recipes/_package.rb"=>{"name"=>"_package.rb", "path"=>"recipes/_package.rb", "checksum"=>"dfa3d025993c0b2ac5e585e8b21a871d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/_package.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"f12847b26e2c9b1ca35782d2444dd713", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"61a64f6cbb807349971733c56900736a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/attributes/default.rb"}, "templates/default/rebuild-iptables.erb"=>{"name"=>"rebuild-iptables.erb", "path"=>"templates/default/rebuild-iptables.erb", "checksum"=>"6f68e1c4aebfc8a2095bc9fee1c69376", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb"}, "templates/default/iptables-config.erb"=>{"name"=>"iptables-config.erb", "path"=>"templates/default/iptables-config.erb", "checksum"=>"375a02610e0c4703fe9ac43bcb19819b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb"}, "templates/default/iptables_load.erb"=>{"name"=>"iptables_load.erb", "path"=>"templates/default/iptables_load.erb", "checksum"=>"2df62510beedaefde3f8e312aedb70a4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"74b632c3446e9af39ea0c1737fbc4e60", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"4823f885ec2f3e914465211907cac86e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/README.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"a47ceba0705c430e221728440796db45", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/metadata.json"}, "Gemfile"=>{"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"4652a1daae2f5b262c90b6d49367dc2d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Gemfile"}, "chefignore"=>{"name"=>"chefignore", "path"=>"chefignore", "checksum"=>"9cec09c5cac3f114c47ba1dfa866c480", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/chefignore"}, "LICENSE"=>{"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"fa818a259cbed7ce8bc2a22d35a464fc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/LICENSE"}}>>, #<Chef::CookbookVersion:0x00000003a8c3e0 @name="apt", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=["acng.conf.erb", "01proxy.erb", "20auto-upgrades.erb", "acng.conf.erb", "unattended-upgrades.seed.erb", "50unattended-upgrades.erb", "10recommends.erb", "acng.conf.erb"], @file_filenames=["15update-stamp", "apt-proxy-v2.conf"], @recipe_filenames=["default.rb", "cacher-ng.rb", "cacher-client.rb", "unattended-upgrades.rb"], @recipe_filenames_by_name={"default"=>"default.rb", "cacher-ng"=>"cacher-ng.rb", "cacher-client"=>"cacher-client.rb", "unattended-upgrades"=>"unattended-upgrades.rb"}, @library_filenames=["helpers.rb", "network.rb", "apt_update.rb", "matchers.rb"], @resource_filenames=["repository.rb", "preference.rb"], @provider_filenames=["repository.rb", "preference.rb"], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000003a86e90 @name="apt", @description="Configures apt and apt services. Ships resources for managing apt repositories", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"ubuntu"=>">= 0.0.0", "debian"=>">= 0.0.0"}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"apt"=>">= 0.0.0", "apt::cacher-ng"=>">= 0.0.0", "apt::cacher-client"=>">= 0.0.0", "apt::unattended-upgrades"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"apt::default"=>"Runs apt-get update during compile phase and sets up preseed directories", "apt::cacher-ng"=>"Set up an apt-cacher-ng caching proxy", "apt::cacher-client"=>"Client for the apt::cacher-ng caching proxy", "apt"=>"", "apt::unattended-upgrades"=>""}, @version="2.9.2", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000003a85658 @cookbook_version=#<Chef::CookbookVersion:0x00000003a8c3e0 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"b3c1f23dc1f98032cf36d40c2f7a7167", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/default.rb"}, {"name"=>"cacher-ng.rb", "path"=>"recipes/cacher-ng.rb", "checksum"=>"d33250d19785c3ad1fb9dbeccd03a3fe", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/cacher-ng.rb"}, {"name"=>"cacher-client.rb", "path"=>"recipes/cacher-client.rb", "checksum"=>"9309d587b46d92393c4a923d46d16994", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/cacher-client.rb"}, {"name"=>"unattended-upgrades.rb", "path"=>"recipes/unattended-upgrades.rb", "checksum"=>"0a1e398c099510a122ba11288d1c392a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/unattended-upgrades.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"helpers.rb", "path"=>"libraries/helpers.rb", "checksum"=>"209d67d5323aa04242e9552a7bc94552", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/helpers.rb"}, {"name"=>"network.rb", "path"=>"libraries/network.rb", "checksum"=>"1a1b9bd023e84d5c1e369a623f411e9b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/network.rb"}, {"name"=>"apt_update.rb", "path"=>"libraries/apt_update.rb", "checksum"=>"56d6874fee02cec18cc63a3ba3048615", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/apt_update.rb"}, {"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"cdeb104d4aad86aa5d233ffde31467e3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"67396b808f43ce3ab7e031e8fd826715", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/attributes/default.rb"}], "files"=>[{"name"=>"15update-stamp", "path"=>"files/default/15update-stamp", "checksum"=>"b9de0ac9e2c9854b1bb213e362dc4e41", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/files/default/15update-stamp"}, {"name"=>"apt-proxy-v2.conf", "path"=>"files/default/apt-proxy-v2.conf", "checksum"=>"fdd69a59686e05653874bd7bba84adc3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/files/default/apt-proxy-v2.conf"}], "templates"=>[{"name"=>"acng.conf.erb", "path"=>"templates/debian-6.0/acng.conf.erb", "checksum"=>"90a927da4827bafc52e8266952880006", "specificity"=>"debian-6.0", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/debian-6.0/acng.conf.erb"}, {"name"=>"01proxy.erb", "path"=>"templates/default/01proxy.erb", "checksum"=>"3bd9dbec40e4bfb072fb97163acba08a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/01proxy.erb"}, {"name"=>"20auto-upgrades.erb", "path"=>"templates/default/20auto-upgrades.erb", "checksum"=>"362f31b2fbf624dc272a09c1129481de", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/20auto-upgrades.erb"}, {"name"=>"acng.conf.erb", "path"=>"templates/default/acng.conf.erb", "checksum"=>"797cfd1ea88e09090189557263025410", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/acng.conf.erb"}, {"name"=>"unattended-upgrades.seed.erb", "path"=>"templates/default/unattended-upgrades.seed.erb", "checksum"=>"e7b2494a57dc54c0df3e93beabf1f7a1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/unattended-upgrades.seed.erb"}, {"name"=>"50unattended-upgrades.erb", "path"=>"templates/default/50unattended-upgrades.erb", "checksum"=>"100c94c880f80d76fa6d461440781966", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/50unattended-upgrades.erb"}, {"name"=>"10recommends.erb", "path"=>"templates/default/10recommends.erb", "checksum"=>"8ccea01d9d5306901dc51457c6680701", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/10recommends.erb"}, {"name"=>"acng.conf.erb", "path"=>"templates/ubuntu-10.04/acng.conf.erb", "checksum"=>"b32d998cd4282cc158591f24c5f65816", "specificity"=>"ubuntu-10.04", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/ubuntu-10.04/acng.conf.erb"}], "resources"=>[{"name"=>"repository.rb", "path"=>"resources/repository.rb", "checksum"=>"1187dc7a42171850b0b9acf192c66c68", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/resources/repository.rb"}, {"name"=>"preference.rb", "path"=>"resources/preference.rb", "checksum"=>"5095fa7d8aff5ad50c4f4445d15221ff", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/resources/preference.rb"}], "providers"=>[{"name"=>"repository.rb", "path"=>"providers/repository.rb", "checksum"=>"cb65abd23f6453e627896cbe748c6818", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/providers/repository.rb"}, {"name"=>"preference.rb", "path"=>"providers/preference.rb", "checksum"=>"be2f372e58b4b9d502806c40b745d7e1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/providers/preference.rb"}], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"1f54c716a1583fba5376c90f3ec58802", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"fa589cdd92a64a2428338913c689e1c6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"cac6ee8dcf384ce1b4de282a1609d5da", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"9040cd17edaba2b38b8bd882a6e6294c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/CHANGELOG.md"}], "metadata"=>{"name"=>"apt", "description"=>"Configures apt and apt services. Ships resources for managing apt repositories", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"ubuntu"=>">= 0.0.0", "debian"=>">= 0.0.0"}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"apt"=>">= 0.0.0", "apt::cacher-ng"=>">= 0.0.0", "apt::cacher-client"=>">= 0.0.0", "apt::unattended-upgrades"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"apt::default"=>"Runs apt-get update during compile phase and sets up preseed directories", "apt::cacher-ng"=>"Set up an apt-cacher-ng caching proxy", "apt::cacher-client"=>"Client for the apt::cacher-ng caching proxy", "apt"=>"", "apt::unattended-upgrades"=>""}, "version"=>"2.9.2", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.9.2", "name"=>"apt-2.9.2", "cookbook_name"=>"apt", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"1187dc7a42171850b0b9acf192c66c68"=>nil, "5095fa7d8aff5ad50c4f4445d15221ff"=>nil, "cb65abd23f6453e627896cbe748c6818"=>nil, "be2f372e58b4b9d502806c40b745d7e1"=>nil, "b3c1f23dc1f98032cf36d40c2f7a7167"=>nil, "d33250d19785c3ad1fb9dbeccd03a3fe"=>nil, "9309d587b46d92393c4a923d46d16994"=>nil, "0a1e398c099510a122ba11288d1c392a"=>nil, "209d67d5323aa04242e9552a7bc94552"=>nil, "1a1b9bd023e84d5c1e369a623f411e9b"=>nil, "56d6874fee02cec18cc63a3ba3048615"=>nil, "cdeb104d4aad86aa5d233ffde31467e3"=>nil, "67396b808f43ce3ab7e031e8fd826715"=>nil, "b9de0ac9e2c9854b1bb213e362dc4e41"=>nil, "fdd69a59686e05653874bd7bba84adc3"=>nil, "90a927da4827bafc52e8266952880006"=>nil, "3bd9dbec40e4bfb072fb97163acba08a"=>nil, "362f31b2fbf624dc272a09c1129481de"=>nil, "797cfd1ea88e09090189557263025410"=>nil, "e7b2494a57dc54c0df3e93beabf1f7a1"=>nil, "100c94c880f80d76fa6d461440781966"=>nil, "8ccea01d9d5306901dc51457c6680701"=>nil, "b32d998cd4282cc158591f24c5f65816"=>nil, "1f54c716a1583fba5376c90f3ec58802"=>nil, "fa589cdd92a64a2428338913c689e1c6"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "cac6ee8dcf384ce1b4de282a1609d5da"=>nil, "9040cd17edaba2b38b8bd882a6e6294c"=>nil}, @manifest_records_by_path={"resources/repository.rb"=>{"name"=>"repository.rb", "path"=>"resources/repository.rb", "checksum"=>"1187dc7a42171850b0b9acf192c66c68", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/resources/repository.rb"}, "resources/preference.rb"=>{"name"=>"preference.rb", "path"=>"resources/preference.rb", "checksum"=>"5095fa7d8aff5ad50c4f4445d15221ff", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/resources/preference.rb"}, "providers/repository.rb"=>{"name"=>"repository.rb", "path"=>"providers/repository.rb", "checksum"=>"cb65abd23f6453e627896cbe748c6818", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/providers/repository.rb"}, "providers/preference.rb"=>{"name"=>"preference.rb", "path"=>"providers/preference.rb", "checksum"=>"be2f372e58b4b9d502806c40b745d7e1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/providers/preference.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"b3c1f23dc1f98032cf36d40c2f7a7167", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/default.rb"}, "recipes/cacher-ng.rb"=>{"name"=>"cacher-ng.rb", "path"=>"recipes/cacher-ng.rb", "checksum"=>"d33250d19785c3ad1fb9dbeccd03a3fe", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/cacher-ng.rb"}, "recipes/cacher-client.rb"=>{"name"=>"cacher-client.rb", "path"=>"recipes/cacher-client.rb", "checksum"=>"9309d587b46d92393c4a923d46d16994", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/cacher-client.rb"}, "recipes/unattended-upgrades.rb"=>{"name"=>"unattended-upgrades.rb", "path"=>"recipes/unattended-upgrades.rb", "checksum"=>"0a1e398c099510a122ba11288d1c392a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/unattended-upgrades.rb"}, "libraries/helpers.rb"=>{"name"=>"helpers.rb", "path"=>"libraries/helpers.rb", "checksum"=>"209d67d5323aa04242e9552a7bc94552", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/helpers.rb"}, "libraries/network.rb"=>{"name"=>"network.rb", "path"=>"libraries/network.rb", "checksum"=>"1a1b9bd023e84d5c1e369a623f411e9b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/network.rb"}, "libraries/apt_update.rb"=>{"name"=>"apt_update.rb", "path"=>"libraries/apt_update.rb", "checksum"=>"56d6874fee02cec18cc63a3ba3048615", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/apt_update.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"cdeb104d4aad86aa5d233ffde31467e3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"67396b808f43ce3ab7e031e8fd826715", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/attributes/default.rb"}, "files/default/15update-stamp"=>{"name"=>"15update-stamp", "path"=>"files/default/15update-stamp", "checksum"=>"b9de0ac9e2c9854b1bb213e362dc4e41", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/files/default/15update-stamp"}, "files/default/apt-proxy-v2.conf"=>{"name"=>"apt-proxy-v2.conf", "path"=>"files/default/apt-proxy-v2.conf", "checksum"=>"fdd69a59686e05653874bd7bba84adc3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/files/default/apt-proxy-v2.conf"}, "templates/debian-6.0/acng.conf.erb"=>{"name"=>"acng.conf.erb", "path"=>"templates/debian-6.0/acng.conf.erb", "checksum"=>"90a927da4827bafc52e8266952880006", "specificity"=>"debian-6.0", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/debian-6.0/acng.conf.erb"}, "templates/default/01proxy.erb"=>{"name"=>"01proxy.erb", "path"=>"templates/default/01proxy.erb", "checksum"=>"3bd9dbec40e4bfb072fb97163acba08a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/01proxy.erb"}, "templates/default/20auto-upgrades.erb"=>{"name"=>"20auto-upgrades.erb", "path"=>"templates/default/20auto-upgrades.erb", "checksum"=>"362f31b2fbf624dc272a09c1129481de", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/20auto-upgrades.erb"}, "templates/default/acng.conf.erb"=>{"name"=>"acng.conf.erb", "path"=>"templates/default/acng.conf.erb", "checksum"=>"797cfd1ea88e09090189557263025410", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/acng.conf.erb"}, "templates/default/unattended-upgrades.seed.erb"=>{"name"=>"unattended-upgrades.seed.erb", "path"=>"templates/default/unattended-upgrades.seed.erb", "checksum"=>"e7b2494a57dc54c0df3e93beabf1f7a1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/unattended-upgrades.seed.erb"}, "templates/default/50unattended-upgrades.erb"=>{"name"=>"50unattended-upgrades.erb", "path"=>"templates/default/50unattended-upgrades.erb", "checksum"=>"100c94c880f80d76fa6d461440781966", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/50unattended-upgrades.erb"}, "templates/default/10recommends.erb"=>{"name"=>"10recommends.erb", "path"=>"templates/default/10recommends.erb", "checksum"=>"8ccea01d9d5306901dc51457c6680701", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/10recommends.erb"}, "templates/ubuntu-10.04/acng.conf.erb"=>{"name"=>"acng.conf.erb", "path"=>"templates/ubuntu-10.04/acng.conf.erb", "checksum"=>"b32d998cd4282cc158591f24c5f65816", "specificity"=>"ubuntu-10.04", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/ubuntu-10.04/acng.conf.erb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"1f54c716a1583fba5376c90f3ec58802", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"fa589cdd92a64a2428338913c689e1c6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"cac6ee8dcf384ce1b4de282a1609d5da", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"9040cd17edaba2b38b8bd882a6e6294c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/apt/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000003a745d8 @name="bluepill", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=["bluepill_init.freebsd.erb", "bluepill_init.lsb.erb", "bluepill_init.rhel.erb", "bluepill_rsyslog.conf.erb", "bluepill_init.fedora.erb"], @file_filenames=[], @recipe_filenames=["rsyslog.rb", "default.rb"], @recipe_filenames_by_name={"rsyslog"=>"rsyslog.rb", "default"=>"default.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["service.rb"], @provider_filenames=["service.rb"], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", ".foodcritic", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000003a63990 @name="bluepill", @description="Installs bluepill gem and configures to manage services, includes bluepill_service LWRP", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={}, @dependencies={"rsyslog"=>">= 2.0"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"bluepill::rsyslog"=>">= 0.0.0", "bluepill"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"bluepill::default"=>"Installs bluepill rubygem and sets up management directories", "bluepill::rsyslog"=>"", "bluepill"=>""}, @version="2.4.3", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000003a62bf8 @cookbook_version=#<Chef::CookbookVersion:0x00000003a745d8 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"rsyslog.rb", "path"=>"recipes/rsyslog.rb", "checksum"=>"4089a0b984571d01279896b22da22887", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/recipes/rsyslog.rb"}, {"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"d4f5fa0bc84eef83ce1ad79b30b94c2d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"bf9c0fc8b9f1a93592cded70da2a8ed6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"594c70bf688b431bd23166f7a7cb5fd8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/attributes/default.rb"}], "files"=>[], "templates"=>[{"name"=>"bluepill_init.freebsd.erb", "path"=>"templates/default/bluepill_init.freebsd.erb", "checksum"=>"79edec90ce032ec29f6300f06f7f12e6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.freebsd.erb"}, {"name"=>"bluepill_init.lsb.erb", "path"=>"templates/default/bluepill_init.lsb.erb", "checksum"=>"1ec96d44e2728c4876df297a34551de3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.lsb.erb"}, {"name"=>"bluepill_init.rhel.erb", "path"=>"templates/default/bluepill_init.rhel.erb", "checksum"=>"db878a32ec06e115e91a5fe7c90d0a32", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.rhel.erb"}, {"name"=>"bluepill_rsyslog.conf.erb", "path"=>"templates/default/bluepill_rsyslog.conf.erb", "checksum"=>"1cb7d6e6a4fff825327a569bfffbd620", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_rsyslog.conf.erb"}, {"name"=>"bluepill_init.fedora.erb", "path"=>"templates/default/bluepill_init.fedora.erb", "checksum"=>"db878a32ec06e115e91a5fe7c90d0a32", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.fedora.erb"}], "resources"=>[{"name"=>"service.rb", "path"=>"resources/service.rb", "checksum"=>"6668e0048ef80c6603754ee8bdb1b801", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/resources/service.rb"}], "providers"=>[{"name"=>"service.rb", "path"=>"providers/service.rb", "checksum"=>"090a1b4dcb31f22399561bb41d0d8147", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/providers/service.rb"}], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"1f54c716a1583fba5376c90f3ec58802", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"e4bac5964c93d722362288b159d9be78", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/CONTRIBUTING.md"}, {"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"8dadb87b3bedc7da9d5de41778957b57", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/.foodcritic"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"d7f7100d9efa6bea5af31d00d36144d8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"31bebbcbd9769468fedafa2dcae7d47b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/CHANGELOG.md"}], "metadata"=>{"name"=>"bluepill", "description"=>"Installs bluepill gem and configures to manage services, includes bluepill_service LWRP", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{}, "dependencies"=>{"rsyslog"=>">= 2.0"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"bluepill::rsyslog"=>">= 0.0.0", "bluepill"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"bluepill::default"=>"Installs bluepill rubygem and sets up management directories", "bluepill::rsyslog"=>"", "bluepill"=>""}, "version"=>"2.4.3", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.4.3", "name"=>"bluepill-2.4.3", "cookbook_name"=>"bluepill", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"6668e0048ef80c6603754ee8bdb1b801"=>nil, "090a1b4dcb31f22399561bb41d0d8147"=>nil, "4089a0b984571d01279896b22da22887"=>nil, "d4f5fa0bc84eef83ce1ad79b30b94c2d"=>nil, "bf9c0fc8b9f1a93592cded70da2a8ed6"=>nil, "594c70bf688b431bd23166f7a7cb5fd8"=>nil, "79edec90ce032ec29f6300f06f7f12e6"=>nil, "1ec96d44e2728c4876df297a34551de3"=>nil, "db878a32ec06e115e91a5fe7c90d0a32"=>nil, "1cb7d6e6a4fff825327a569bfffbd620"=>nil, "1f54c716a1583fba5376c90f3ec58802"=>nil, "e4bac5964c93d722362288b159d9be78"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "8dadb87b3bedc7da9d5de41778957b57"=>nil, "d7f7100d9efa6bea5af31d00d36144d8"=>nil, "31bebbcbd9769468fedafa2dcae7d47b"=>nil}, @manifest_records_by_path={"resources/service.rb"=>{"name"=>"service.rb", "path"=>"resources/service.rb", "checksum"=>"6668e0048ef80c6603754ee8bdb1b801", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/resources/service.rb"}, "providers/service.rb"=>{"name"=>"service.rb", "path"=>"providers/service.rb", "checksum"=>"090a1b4dcb31f22399561bb41d0d8147", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/providers/service.rb"}, "recipes/rsyslog.rb"=>{"name"=>"rsyslog.rb", "path"=>"recipes/rsyslog.rb", "checksum"=>"4089a0b984571d01279896b22da22887", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/recipes/rsyslog.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"d4f5fa0bc84eef83ce1ad79b30b94c2d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/recipes/default.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"bf9c0fc8b9f1a93592cded70da2a8ed6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"594c70bf688b431bd23166f7a7cb5fd8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/attributes/default.rb"}, "templates/default/bluepill_init.freebsd.erb"=>{"name"=>"bluepill_init.freebsd.erb", "path"=>"templates/default/bluepill_init.freebsd.erb", "checksum"=>"79edec90ce032ec29f6300f06f7f12e6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.freebsd.erb"}, "templates/default/bluepill_init.lsb.erb"=>{"name"=>"bluepill_init.lsb.erb", "path"=>"templates/default/bluepill_init.lsb.erb", "checksum"=>"1ec96d44e2728c4876df297a34551de3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.lsb.erb"}, "templates/default/bluepill_init.rhel.erb"=>{"name"=>"bluepill_init.rhel.erb", "path"=>"templates/default/bluepill_init.rhel.erb", "checksum"=>"db878a32ec06e115e91a5fe7c90d0a32", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.rhel.erb"}, "templates/default/bluepill_rsyslog.conf.erb"=>{"name"=>"bluepill_rsyslog.conf.erb", "path"=>"templates/default/bluepill_rsyslog.conf.erb", "checksum"=>"1cb7d6e6a4fff825327a569bfffbd620", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_rsyslog.conf.erb"}, "templates/default/bluepill_init.fedora.erb"=>{"name"=>"bluepill_init.fedora.erb", "path"=>"templates/default/bluepill_init.fedora.erb", "checksum"=>"db878a32ec06e115e91a5fe7c90d0a32", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.fedora.erb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"1f54c716a1583fba5376c90f3ec58802", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"e4bac5964c93d722362288b159d9be78", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/CONTRIBUTING.md"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"8dadb87b3bedc7da9d5de41778957b57", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/.foodcritic"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"d7f7100d9efa6bea5af31d00d36144d8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"31bebbcbd9769468fedafa2dcae7d47b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000003a363f0 @name="build-essential", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["_debian.rb", "_solaris2.rb", "_suse.rb", "default.rb", "_mac_os_x.rb", "_omnios.rb", "_smartos.rb", "_rhel.rb", "_fedora.rb", "_freebsd.rb", "_windows.rb"], @recipe_filenames_by_name={"_debian"=>"_debian.rb", "_solaris2"=>"_solaris2.rb", "_suse"=>"_suse.rb", "default"=>"default.rb", "_mac_os_x"=>"_mac_os_x.rb", "_omnios"=>"_omnios.rb", "_smartos"=>"_smartos.rb", "_rhel"=>"_rhel.rb", "_fedora"=>"_fedora.rb", "_freebsd"=>"_freebsd.rb", "_windows"=>"_windows.rb"}, @library_filenames=["timing.rb", "_msys_helper.rb", "xcode_command_line_tools.rb", "matchers.rb"], @resource_filenames=["msys_archive.rb"], @provider_filenames=["msys_archive.rb"], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", ".foodcritic", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000003a35a40 @name="build-essential", @description="Installs C compiler / build tools", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "fedora"=>">= 0.0.0", "freebsd"=>">= 0.0.0", "mac_os_x"=>">= 10.7.0", "mac_os_x_server"=>">= 10.7.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "smartos"=>">= 0.0.0", "suse"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "windows"=>">= 0.0.0"}, @dependencies={"7-zip"=>">= 0.0.0"}, @recommendations={}, @suggestions={"pkgutil"=>">= 0.0.0"}, @conflicting={}, @providing={"build-essential::_debian"=>">= 0.0.0", "build-essential::_solaris2"=>">= 0.0.0", "build-essential::_suse"=>">= 0.0.0", "build-essential"=>">= 0.0.0", "build-essential::_mac_os_x"=>">= 0.0.0", "build-essential::_omnios"=>">= 0.0.0", "build-essential::_smartos"=>">= 0.0.0", "build-essential::_rhel"=>">= 0.0.0", "build-essential::_fedora"=>">= 0.0.0", "build-essential::_freebsd"=>">= 0.0.0", "build-essential::_windows"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"build-essential"=>"Installs packages required for compiling C software from source.", "build-essential::_debian"=>"", "build-essential::_solaris2"=>"", "build-essential::_suse"=>"", "build-essential::_mac_os_x"=>"", "build-essential::_omnios"=>"", "build-essential::_smartos"=>"", "build-essential::_rhel"=>"", "build-essential::_fedora"=>"", "build-essential::_freebsd"=>"", "build-essential::_windows"=>""}, @version="2.4.0", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000003a34aa0 @cookbook_version=#<Chef::CookbookVersion:0x00000003a363f0 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"_debian.rb", "path"=>"recipes/_debian.rb", "checksum"=>"30a4126ff578125b2fc815475d869144", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_debian.rb"}, {"name"=>"_solaris2.rb", "path"=>"recipes/_solaris2.rb", "checksum"=>"dc53e2bb31c1daf9a55c7b6602079822", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_solaris2.rb"}, {"name"=>"_suse.rb", "path"=>"recipes/_suse.rb", "checksum"=>"2228af928d48e76574a682c38e424c63", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_suse.rb"}, {"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"64a8929e479e993f2b4fdab85a7d17bb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/default.rb"}, {"name"=>"_mac_os_x.rb", "path"=>"recipes/_mac_os_x.rb", "checksum"=>"104dc2a080fe85b8699bae1d628e93fa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_mac_os_x.rb"}, {"name"=>"_omnios.rb", "path"=>"recipes/_omnios.rb", "checksum"=>"2974fcf058caab734e3bf9f61cc82572", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_omnios.rb"}, {"name"=>"_smartos.rb", "path"=>"recipes/_smartos.rb", "checksum"=>"bfd331aa75f6f633862681a43d039dfa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_smartos.rb"}, {"name"=>"_rhel.rb", "path"=>"recipes/_rhel.rb", "checksum"=>"610e57a0764525a6b9eb9ce9bce42cf3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_rhel.rb"}, {"name"=>"_fedora.rb", "path"=>"recipes/_fedora.rb", "checksum"=>"7d4af45d59964ec8bfd8d2607fe07c17", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_fedora.rb"}, {"name"=>"_freebsd.rb", "path"=>"recipes/_freebsd.rb", "checksum"=>"3979ab0c6b8ee9c54ea38e29f49afbd1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_freebsd.rb"}, {"name"=>"_windows.rb", "path"=>"recipes/_windows.rb", "checksum"=>"67d7304aead856fafb5b550ce5475060", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_windows.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"timing.rb", "path"=>"libraries/timing.rb", "checksum"=>"6c2e5aace7d6de54171346d1aad12be8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/timing.rb"}, {"name"=>"_msys_helper.rb", "path"=>"libraries/_msys_helper.rb", "checksum"=>"88fa06ab80e17267aa0fd1219c78823a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/_msys_helper.rb"}, {"name"=>"xcode_command_line_tools.rb", "path"=>"libraries/xcode_command_line_tools.rb", "checksum"=>"e5ab8b440cd036170c227e967c17b19f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/xcode_command_line_tools.rb"}, {"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"d335f41ea86d9d46ef7ce90e902543ec", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"2b051bc8711058e8be3b5f972e7b7f4e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/attributes/default.rb"}], "files"=>[], "templates"=>[], "resources"=>[{"name"=>"msys_archive.rb", "path"=>"resources/msys_archive.rb", "checksum"=>"d2958c3582e1be45fdf62ca831c2b210", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/msys_archive.rb"}], "providers"=>[{"name"=>"msys_archive.rb", "path"=>"providers/msys_archive.rb", "checksum"=>"03586a741c391b8f5ae95735b374a0b7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/providers/msys_archive.rb"}], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"cdc4c121084284fbb4ccc71dd2d7fd10", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"59c527865bee83f78135c6d55d2f50a9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md"}, {"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"5e0cef2fbf9378ffb742c14a506c4919", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/.foodcritic"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"11ba1d1559498887e289f37e526ebe3e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"cb7e5ebf52cc7fa1a9274a2f10ec5e87", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CHANGELOG.md"}], "metadata"=>{"name"=>"build-essential", "description"=>"Installs C compiler / build tools", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "fedora"=>">= 0.0.0", "freebsd"=>">= 0.0.0", "mac_os_x"=>">= 10.7.0", "mac_os_x_server"=>">= 10.7.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "smartos"=>">= 0.0.0", "suse"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "windows"=>">= 0.0.0"}, "dependencies"=>{"7-zip"=>">= 0.0.0"}, "recommendations"=>{}, "suggestions"=>{"pkgutil"=>">= 0.0.0"}, "conflicting"=>{}, "providing"=>{"build-essential::_debian"=>">= 0.0.0", "build-essential::_solaris2"=>">= 0.0.0", "build-essential::_suse"=>">= 0.0.0", "build-essential"=>">= 0.0.0", "build-essential::_mac_os_x"=>">= 0.0.0", "build-essential::_omnios"=>">= 0.0.0", "build-essential::_smartos"=>">= 0.0.0", "build-essential::_rhel"=>">= 0.0.0", "build-essential::_fedora"=>">= 0.0.0", "build-essential::_freebsd"=>">= 0.0.0", "build-essential::_windows"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"build-essential"=>"Installs packages required for compiling C software from source.", "build-essential::_debian"=>"", "build-essential::_solaris2"=>"", "build-essential::_suse"=>"", "build-essential::_mac_os_x"=>"", "build-essential::_omnios"=>"", "build-essential::_smartos"=>"", "build-essential::_rhel"=>"", "build-essential::_fedora"=>"", "build-essential::_freebsd"=>"", "build-essential::_windows"=>""}, "version"=>"2.4.0", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.4.0", "name"=>"build-essential-2.4.0", "cookbook_name"=>"build-essential", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"d2958c3582e1be45fdf62ca831c2b210"=>nil, "03586a741c391b8f5ae95735b374a0b7"=>nil, "30a4126ff578125b2fc815475d869144"=>nil, "dc53e2bb31c1daf9a55c7b6602079822"=>nil, "2228af928d48e76574a682c38e424c63"=>nil, "64a8929e479e993f2b4fdab85a7d17bb"=>nil, "104dc2a080fe85b8699bae1d628e93fa"=>nil, "2974fcf058caab734e3bf9f61cc82572"=>nil, "bfd331aa75f6f633862681a43d039dfa"=>nil, "610e57a0764525a6b9eb9ce9bce42cf3"=>nil, "7d4af45d59964ec8bfd8d2607fe07c17"=>nil, "3979ab0c6b8ee9c54ea38e29f49afbd1"=>nil, "67d7304aead856fafb5b550ce5475060"=>nil, "6c2e5aace7d6de54171346d1aad12be8"=>nil, "88fa06ab80e17267aa0fd1219c78823a"=>nil, "e5ab8b440cd036170c227e967c17b19f"=>nil, "d335f41ea86d9d46ef7ce90e902543ec"=>nil, "2b051bc8711058e8be3b5f972e7b7f4e"=>nil, "cdc4c121084284fbb4ccc71dd2d7fd10"=>nil, "59c527865bee83f78135c6d55d2f50a9"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "5e0cef2fbf9378ffb742c14a506c4919"=>nil, "11ba1d1559498887e289f37e526ebe3e"=>nil, "cb7e5ebf52cc7fa1a9274a2f10ec5e87"=>nil}, @manifest_records_by_path={"resources/msys_archive.rb"=>{"name"=>"msys_archive.rb", "path"=>"resources/msys_archive.rb", "checksum"=>"d2958c3582e1be45fdf62ca831c2b210", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/msys_archive.rb"}, "providers/msys_archive.rb"=>{"name"=>"msys_archive.rb", "path"=>"providers/msys_archive.rb", "checksum"=>"03586a741c391b8f5ae95735b374a0b7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/providers/msys_archive.rb"}, "recipes/_debian.rb"=>{"name"=>"_debian.rb", "path"=>"recipes/_debian.rb", "checksum"=>"30a4126ff578125b2fc815475d869144", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_debian.rb"}, "recipes/_solaris2.rb"=>{"name"=>"_solaris2.rb", "path"=>"recipes/_solaris2.rb", "checksum"=>"dc53e2bb31c1daf9a55c7b6602079822", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_solaris2.rb"}, "recipes/_suse.rb"=>{"name"=>"_suse.rb", "path"=>"recipes/_suse.rb", "checksum"=>"2228af928d48e76574a682c38e424c63", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_suse.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"64a8929e479e993f2b4fdab85a7d17bb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/default.rb"}, "recipes/_mac_os_x.rb"=>{"name"=>"_mac_os_x.rb", "path"=>"recipes/_mac_os_x.rb", "checksum"=>"104dc2a080fe85b8699bae1d628e93fa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_mac_os_x.rb"}, "recipes/_omnios.rb"=>{"name"=>"_omnios.rb", "path"=>"recipes/_omnios.rb", "checksum"=>"2974fcf058caab734e3bf9f61cc82572", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_omnios.rb"}, "recipes/_smartos.rb"=>{"name"=>"_smartos.rb", "path"=>"recipes/_smartos.rb", "checksum"=>"bfd331aa75f6f633862681a43d039dfa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_smartos.rb"}, "recipes/_rhel.rb"=>{"name"=>"_rhel.rb", "path"=>"recipes/_rhel.rb", "checksum"=>"610e57a0764525a6b9eb9ce9bce42cf3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_rhel.rb"}, "recipes/_fedora.rb"=>{"name"=>"_fedora.rb", "path"=>"recipes/_fedora.rb", "checksum"=>"7d4af45d59964ec8bfd8d2607fe07c17", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_fedora.rb"}, "recipes/_freebsd.rb"=>{"name"=>"_freebsd.rb", "path"=>"recipes/_freebsd.rb", "checksum"=>"3979ab0c6b8ee9c54ea38e29f49afbd1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_freebsd.rb"}, "recipes/_windows.rb"=>{"name"=>"_windows.rb", "path"=>"recipes/_windows.rb", "checksum"=>"67d7304aead856fafb5b550ce5475060", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_windows.rb"}, "libraries/timing.rb"=>{"name"=>"timing.rb", "path"=>"libraries/timing.rb", "checksum"=>"6c2e5aace7d6de54171346d1aad12be8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/timing.rb"}, "libraries/_msys_helper.rb"=>{"name"=>"_msys_helper.rb", "path"=>"libraries/_msys_helper.rb", "checksum"=>"88fa06ab80e17267aa0fd1219c78823a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/_msys_helper.rb"}, "libraries/xcode_command_line_tools.rb"=>{"name"=>"xcode_command_line_tools.rb", "path"=>"libraries/xcode_command_line_tools.rb", "checksum"=>"e5ab8b440cd036170c227e967c17b19f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/xcode_command_line_tools.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"d335f41ea86d9d46ef7ce90e902543ec", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"2b051bc8711058e8be3b5f972e7b7f4e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/attributes/default.rb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"cdc4c121084284fbb4ccc71dd2d7fd10", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"59c527865bee83f78135c6d55d2f50a9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"5e0cef2fbf9378ffb742c14a506c4919", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/.foodcritic"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"11ba1d1559498887e289f37e526ebe3e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"cb7e5ebf52cc7fa1a9274a2f10ec5e87", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x000000039f1a98 @name="ohai", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=["README"], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["hint.rb"], @provider_filenames=["hint.rb"], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x000000039df028 @name="ohai", @description="Distributes a directory of custom ohai plugins", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"ubuntu"=>">= 0.0.0", "debian"=>">= 0.0.0", "centos"=>">= 0.0.0", "redhat"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "freebsd"=>">= 0.0.0", "windows"=>">= 0.0.0"}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"ohai"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"ohai::default"=>"Distributes a directory of custom ohai plugins", "ohai"=>""}, @version="2.1.0", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x000000039dcb98 @cookbook_version=#<Chef::CookbookVersion:0x000000039f1a98 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"90e1c26b502b2cae49e2040da9be19c4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"60135a7c38ed8d390188a91aeff7cf70", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"f13877ae8d41bc770428726fbee7a655", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/attributes/default.rb"}], "files"=>[{"name"=>"README", "path"=>"files/default/plugins/README", "checksum"=>"85bc3bb921efade3f2566a668ab4b639", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/files/default/plugins/README"}], "templates"=>[], "resources"=>[{"name"=>"hint.rb", "path"=>"resources/hint.rb", "checksum"=>"51fd27d8f54bccb843425bef4fd0b78e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/hint.rb"}], "providers"=>[{"name"=>"hint.rb", "path"=>"providers/hint.rb", "checksum"=>"80217c3f5aefcc521308b02eeb491d65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/providers/hint.rb"}], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"032c573c61cbc27e4111f5a15bc3c734", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"a5f9c81bd342f443a9d0af1962d46506", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"3e468eef18c824b211ee73d79d353ed5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"9b2a8cf55d60e93974d2a91c0fc036a7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CHANGELOG.md"}], "metadata"=>{"name"=>"ohai", "description"=>"Distributes a directory of custom ohai plugins", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"ubuntu"=>">= 0.0.0", "debian"=>">= 0.0.0", "centos"=>">= 0.0.0", "redhat"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "freebsd"=>">= 0.0.0", "windows"=>">= 0.0.0"}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"ohai"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"ohai::default"=>"Distributes a directory of custom ohai plugins", "ohai"=>""}, "version"=>"2.1.0", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.1.0", "name"=>"ohai-2.1.0", "cookbook_name"=>"ohai", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"51fd27d8f54bccb843425bef4fd0b78e"=>nil, "80217c3f5aefcc521308b02eeb491d65"=>nil, "90e1c26b502b2cae49e2040da9be19c4"=>nil, "60135a7c38ed8d390188a91aeff7cf70"=>nil, "f13877ae8d41bc770428726fbee7a655"=>nil, "85bc3bb921efade3f2566a668ab4b639"=>nil, "032c573c61cbc27e4111f5a15bc3c734"=>nil, "a5f9c81bd342f443a9d0af1962d46506"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "3e468eef18c824b211ee73d79d353ed5"=>nil, "9b2a8cf55d60e93974d2a91c0fc036a7"=>nil}, @manifest_records_by_path={"resources/hint.rb"=>{"name"=>"hint.rb", "path"=>"resources/hint.rb", "checksum"=>"51fd27d8f54bccb843425bef4fd0b78e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/hint.rb"}, "providers/hint.rb"=>{"name"=>"hint.rb", "path"=>"providers/hint.rb", "checksum"=>"80217c3f5aefcc521308b02eeb491d65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/providers/hint.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"90e1c26b502b2cae49e2040da9be19c4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/recipes/default.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"60135a7c38ed8d390188a91aeff7cf70", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"f13877ae8d41bc770428726fbee7a655", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/attributes/default.rb"}, "files/default/plugins/README"=>{"name"=>"README", "path"=>"files/default/plugins/README", "checksum"=>"85bc3bb921efade3f2566a668ab4b639", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/files/default/plugins/README"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"032c573c61cbc27e4111f5a15bc3c734", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"a5f9c81bd342f443a9d0af1962d46506", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"3e468eef18c824b211ee73d79d353ed5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"9b2a8cf55d60e93974d2a91c0fc036a7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x000000039a69f8 @name="runit", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=["log-config.erb", "runit-start.sh.erb", "init.d.erb"], @file_filenames=["runit.seed"], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=["resource_runit_service.rb", "helpers.rb", "default.rb", "provider_runit_service.rb", "matchers.rb"], @resource_filenames=[], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", ".foodcritic", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x000000039a5a30 @name="runit", @description="Installs runit and provides runit_service definition", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"ubuntu"=>">= 0.0.0", "debian"=>">= 0.0.0", "gentoo"=>">= 0.0.0", "centos"=>">= 0.0.0", "redhat"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "oracle"=>">= 0.0.0", "enterpriseenterprise"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, @dependencies={"packagecloud"=>">= 0.0.0", "yum-epel"=>">= 0.0.0"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"runit"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"runit"=>"Installs and configures runit"}, @version="1.8.0", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x000000039a4b58 @cookbook_version=#<Chef::CookbookVersion:0x000000039a69f8 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"e49f971608682725be42fcfaca1c6678", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"resource_runit_service.rb", "path"=>"libraries/resource_runit_service.rb", "checksum"=>"d415c404246de9fc54458a58e932733d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/resource_runit_service.rb"}, {"name"=>"helpers.rb", "path"=>"libraries/helpers.rb", "checksum"=>"7091d5e6781e16733ef5e309804bdfb8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/helpers.rb"}, {"name"=>"default.rb", "path"=>"libraries/default.rb", "checksum"=>"d41d8cd98f00b204e9800998ecf8427e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/default.rb"}, {"name"=>"provider_runit_service.rb", "path"=>"libraries/provider_runit_service.rb", "checksum"=>"8d0e87b2f49ea88504a32465cfec0719", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/provider_runit_service.rb"}, {"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"03c03da10288f37f4dfa1e05794eb7a4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"bc0501bc2766fc9e432e4c8700533851", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/attributes/default.rb"}], "files"=>[{"name"=>"runit.seed", "path"=>"files/default/runit.seed", "checksum"=>"722f120f4eab8f0421aab6807d6cce9d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/files/default/runit.seed"}], "templates"=>[{"name"=>"log-config.erb", "path"=>"templates/default/log-config.erb", "checksum"=>"91ceacf5e0121730ea401e5a03c43516", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/default/log-config.erb"}, {"name"=>"runit-start.sh.erb", "path"=>"templates/gentoo/runit-start.sh.erb", "checksum"=>"bd03533917da171167995131c075ea43", "specificity"=>"gentoo", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/gentoo/runit-start.sh.erb"}, {"name"=>"init.d.erb", "path"=>"templates/debian/init.d.erb", "checksum"=>"1e57e65fef66345a2658b001f08d3e3f", "specificity"=>"debian", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/debian/init.d.erb"}], "resources"=>[], "providers"=>[], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"1f54c716a1583fba5376c90f3ec58802", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"84e6e32ec3b6a9dbc19abee6406c01b0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/CONTRIBUTING.md"}, {"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"5e149013978f82c1fcab0e5c79163aa8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/.foodcritic"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"562fc7b428c630ad59170a9bf3145d27", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"ad51e735f6f4cc8b7ce764b541f94630", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/CHANGELOG.md"}], "metadata"=>{"name"=>"runit", "description"=>"Installs runit and provides runit_service definition", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"ubuntu"=>">= 0.0.0", "debian"=>">= 0.0.0", "gentoo"=>">= 0.0.0", "centos"=>">= 0.0.0", "redhat"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "oracle"=>">= 0.0.0", "enterpriseenterprise"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, "dependencies"=>{"packagecloud"=>">= 0.0.0", "yum-epel"=>">= 0.0.0"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"runit"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"runit"=>"Installs and configures runit"}, "version"=>"1.8.0", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"1.8.0", "name"=>"runit-1.8.0", "cookbook_name"=>"runit", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"e49f971608682725be42fcfaca1c6678"=>nil, "d415c404246de9fc54458a58e932733d"=>nil, "7091d5e6781e16733ef5e309804bdfb8"=>nil, "d41d8cd98f00b204e9800998ecf8427e"=>nil, "8d0e87b2f49ea88504a32465cfec0719"=>nil, "03c03da10288f37f4dfa1e05794eb7a4"=>nil, "bc0501bc2766fc9e432e4c8700533851"=>nil, "722f120f4eab8f0421aab6807d6cce9d"=>nil, "91ceacf5e0121730ea401e5a03c43516"=>nil, "bd03533917da171167995131c075ea43"=>nil, "1e57e65fef66345a2658b001f08d3e3f"=>nil, "1f54c716a1583fba5376c90f3ec58802"=>nil, "84e6e32ec3b6a9dbc19abee6406c01b0"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "5e149013978f82c1fcab0e5c79163aa8"=>nil, "562fc7b428c630ad59170a9bf3145d27"=>nil, "ad51e735f6f4cc8b7ce764b541f94630"=>nil}, @manifest_records_by_path={"recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"e49f971608682725be42fcfaca1c6678", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/recipes/default.rb"}, "libraries/resource_runit_service.rb"=>{"name"=>"resource_runit_service.rb", "path"=>"libraries/resource_runit_service.rb", "checksum"=>"d415c404246de9fc54458a58e932733d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/resource_runit_service.rb"}, "libraries/helpers.rb"=>{"name"=>"helpers.rb", "path"=>"libraries/helpers.rb", "checksum"=>"7091d5e6781e16733ef5e309804bdfb8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/helpers.rb"}, "libraries/default.rb"=>{"name"=>"default.rb", "path"=>"libraries/default.rb", "checksum"=>"d41d8cd98f00b204e9800998ecf8427e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/default.rb"}, "libraries/provider_runit_service.rb"=>{"name"=>"provider_runit_service.rb", "path"=>"libraries/provider_runit_service.rb", "checksum"=>"8d0e87b2f49ea88504a32465cfec0719", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/provider_runit_service.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"03c03da10288f37f4dfa1e05794eb7a4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"bc0501bc2766fc9e432e4c8700533851", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/attributes/default.rb"}, "files/default/runit.seed"=>{"name"=>"runit.seed", "path"=>"files/default/runit.seed", "checksum"=>"722f120f4eab8f0421aab6807d6cce9d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/files/default/runit.seed"}, "templates/default/log-config.erb"=>{"name"=>"log-config.erb", "path"=>"templates/default/log-config.erb", "checksum"=>"91ceacf5e0121730ea401e5a03c43516", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/default/log-config.erb"}, "templates/gentoo/runit-start.sh.erb"=>{"name"=>"runit-start.sh.erb", "path"=>"templates/gentoo/runit-start.sh.erb", "checksum"=>"bd03533917da171167995131c075ea43", "specificity"=>"gentoo", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/gentoo/runit-start.sh.erb"}, "templates/debian/init.d.erb"=>{"name"=>"init.d.erb", "path"=>"templates/debian/init.d.erb", "checksum"=>"1e57e65fef66345a2658b001f08d3e3f", "specificity"=>"debian", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/debian/init.d.erb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"1f54c716a1583fba5376c90f3ec58802", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"84e6e32ec3b6a9dbc19abee6406c01b0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/CONTRIBUTING.md"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"5e149013978f82c1fcab0e5c79163aa8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/.foodcritic"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"562fc7b428c630ad59170a9bf3145d27", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"ad51e735f6f4cc8b7ce764b541f94630", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/runit/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000003977bd0 @name="yum-epel", @root_paths=[], @frozen=false, @attribute_filenames=["epel-testing-source.rb", "epel-source.rb", "epel-testing-debuginfo.rb", "default.rb", "epel.rb", "epel-debuginfo.rb", "epel-testing.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=[], @resource_filenames=[], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000003977040 @name="yum-epel", @description="Installs and configures the EPEL Yum repository", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, @dependencies={"yum"=>">= 3.6.3"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"yum-epel"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"yum-epel"=>""}, @version="0.7.1", @source_url="https://github.com/chef-cookbooks/yum-epel", @issues_url="https://github.com/chef-cookbooks/yum-epel/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"epel-testing-source"=>"epel-testing-source.rb", "epel-source"=>"epel-source.rb", "epel-testing-debuginfo"=>"epel-testing-debuginfo.rb", "default"=>"default.rb", "epel"=>"epel.rb", "epel-debuginfo"=>"epel-debuginfo.rb", "epel-testing"=>"epel-testing.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000003976410 @cookbook_version=#<Chef::CookbookVersion:0x00000003977bd0 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"db7e1f1f7501d5fba849fb7463493530", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/recipes/default.rb"}], "definitions"=>[], "libraries"=>[], "attributes"=>[{"name"=>"epel-testing-source.rb", "path"=>"attributes/epel-testing-source.rb", "checksum"=>"cf7ed0d11e743217c331cda8e43b6598", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb"}, {"name"=>"epel-source.rb", "path"=>"attributes/epel-source.rb", "checksum"=>"ae0a2a026235862b5cf288146a99d0c7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb"}, {"name"=>"epel-testing-debuginfo.rb", "path"=>"attributes/epel-testing-debuginfo.rb", "checksum"=>"a927d6a8c4b5fa05559d2b3285e65e12", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb"}, {"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"d71d058e12c2238406e723cb929a3b26", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/default.rb"}, {"name"=>"epel.rb", "path"=>"attributes/epel.rb", "checksum"=>"23ea50849199f19fb7d32b7f55bb3239", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel.rb"}, {"name"=>"epel-debuginfo.rb", "path"=>"attributes/epel-debuginfo.rb", "checksum"=>"9be5b79b9865f942c921517daaf36f2e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb"}, {"name"=>"epel-testing.rb", "path"=>"attributes/epel-testing.rb", "checksum"=>"f00712385eafc946d62e9ec1b07a5ac1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb"}], "files"=>[], "templates"=>[], "resources"=>[], "providers"=>[], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"76ed11a7e37b3ae08ac6840856994bec", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"f5b866f1ac42586862a9a751de82d092", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"c9ccb77fbb441a541fcb5d92e66cd1cc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"03e9ff0711b32dc392739dc2446441c8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CHANGELOG.md"}], "metadata"=>{"name"=>"yum-epel", "description"=>"Installs and configures the EPEL Yum repository", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, "dependencies"=>{"yum"=>">= 3.6.3"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"yum-epel"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"yum-epel"=>""}, "version"=>"0.7.1", "source_url"=>"https://github.com/chef-cookbooks/yum-epel", "issues_url"=>"https://github.com/chef-cookbooks/yum-epel/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"0.7.1", "name"=>"yum-epel-0.7.1", "cookbook_name"=>"yum-epel", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"db7e1f1f7501d5fba849fb7463493530"=>nil, "cf7ed0d11e743217c331cda8e43b6598"=>nil, "ae0a2a026235862b5cf288146a99d0c7"=>nil, "a927d6a8c4b5fa05559d2b3285e65e12"=>nil, "d71d058e12c2238406e723cb929a3b26"=>nil, "23ea50849199f19fb7d32b7f55bb3239"=>nil, "9be5b79b9865f942c921517daaf36f2e"=>nil, "f00712385eafc946d62e9ec1b07a5ac1"=>nil, "76ed11a7e37b3ae08ac6840856994bec"=>nil, "f5b866f1ac42586862a9a751de82d092"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "c9ccb77fbb441a541fcb5d92e66cd1cc"=>nil, "03e9ff0711b32dc392739dc2446441c8"=>nil}, @manifest_records_by_path={"recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"db7e1f1f7501d5fba849fb7463493530", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/recipes/default.rb"}, "attributes/epel-testing-source.rb"=>{"name"=>"epel-testing-source.rb", "path"=>"attributes/epel-testing-source.rb", "checksum"=>"cf7ed0d11e743217c331cda8e43b6598", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb"}, "attributes/epel-source.rb"=>{"name"=>"epel-source.rb", "path"=>"attributes/epel-source.rb", "checksum"=>"ae0a2a026235862b5cf288146a99d0c7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb"}, "attributes/epel-testing-debuginfo.rb"=>{"name"=>"epel-testing-debuginfo.rb", "path"=>"attributes/epel-testing-debuginfo.rb", "checksum"=>"a927d6a8c4b5fa05559d2b3285e65e12", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"d71d058e12c2238406e723cb929a3b26", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/default.rb"}, "attributes/epel.rb"=>{"name"=>"epel.rb", "path"=>"attributes/epel.rb", "checksum"=>"23ea50849199f19fb7d32b7f55bb3239", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel.rb"}, "attributes/epel-debuginfo.rb"=>{"name"=>"epel-debuginfo.rb", "path"=>"attributes/epel-debuginfo.rb", "checksum"=>"9be5b79b9865f942c921517daaf36f2e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb"}, "attributes/epel-testing.rb"=>{"name"=>"epel-testing.rb", "path"=>"attributes/epel-testing.rb", "checksum"=>"f00712385eafc946d62e9ec1b07a5ac1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"76ed11a7e37b3ae08ac6840856994bec", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"f5b866f1ac42586862a9a751de82d092", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"c9ccb77fbb441a541fcb5d92e66cd1cc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"03e9ff0711b32dc392739dc2446441c8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x0000000395f120 @name="rsyslog", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=["49-remote.conf.erb", "rsyslog.conf.erb", "50-default.conf.erb", "omnios-manifest.xml.erb", "file-input.conf.erb", "35-server-per-host.conf.erb", "49-relp.conf.erb", "50-default.conf.erb"], @file_filenames=[], @recipe_filenames=["server.rb", "default.rb", "client.rb"], @recipe_filenames_by_name={"server"=>"server.rb", "default"=>"default.rb", "client"=>"client.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["file_input.rb"], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", ".foodcritic", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x0000000395e680 @name="rsyslog", @description="Installs and configures rsyslog", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"ubuntu"=>">= 10.04", "debian"=>">= 5.0", "redhat"=>">= 5.0", "centos"=>">= 5.0", "fedora"=>">= 20.0", "scientific"=>">= 0.0.0", "amazon"=>">= 0.0.0", "oracle"=>">= 0.0.0"}, @dependencies={"compat_resource"=>">= 0.0.0"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"rsyslog::server"=>">= 0.0.0", "rsyslog"=>">= 0.0.0", "rsyslog::client"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"rsyslog"=>"Sets up rsyslog for local logging", "rsyslog::client"=>"Sets up a client to log to a remote rsyslog server", "rsyslog::server"=>"Sets up an rsyslog server"}, @version="4.0.1", @source_url="https://github.com/chef-cookbooks/rsyslog", @issues_url="https://github.com/chef-cookbooks/rsyslog/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x0000000395d3c0 @cookbook_version=#<Chef::CookbookVersion:0x0000000395f120 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"server.rb", "path"=>"recipes/server.rb", "checksum"=>"580f743c947df2dc843bd8c9b09af8b9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/server.rb"}, {"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"f519fc4a8cfca0479deef9e8adbe61f1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/default.rb"}, {"name"=>"client.rb", "path"=>"recipes/client.rb", "checksum"=>"61f54518f486dedeb18d4d9d9b6bb1cb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/client.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"4dfdc2ebd40a705aeabf2b39a38088f8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"48a2eba80e00340043a50add8fa017a6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/attributes/default.rb"}], "files"=>[], "templates"=>[{"name"=>"49-remote.conf.erb", "path"=>"templates/default/49-remote.conf.erb", "checksum"=>"d3fb19d73b1d4d6e99e0fff8972adee2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/49-remote.conf.erb"}, {"name"=>"rsyslog.conf.erb", "path"=>"templates/default/rsyslog.conf.erb", "checksum"=>"95345275ba365b9aec01c6ebe2fe7406", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/rsyslog.conf.erb"}, {"name"=>"50-default.conf.erb", "path"=>"templates/default/50-default.conf.erb", "checksum"=>"3cd7ea4db226906cff93defe98fc773d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/50-default.conf.erb"}, {"name"=>"omnios-manifest.xml.erb", "path"=>"templates/default/omnios-manifest.xml.erb", "checksum"=>"061d2ee2ec90aa4f035cee277652788b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/omnios-manifest.xml.erb"}, {"name"=>"file-input.conf.erb", "path"=>"templates/default/file-input.conf.erb", "checksum"=>"128e95659ee113e15538851263e21920", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/file-input.conf.erb"}, {"name"=>"35-server-per-host.conf.erb", "path"=>"templates/default/35-server-per-host.conf.erb", "checksum"=>"126e2c7dd280023135dabac1c4253be1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/35-server-per-host.conf.erb"}, {"name"=>"49-relp.conf.erb", "path"=>"templates/default/49-relp.conf.erb", "checksum"=>"23492857b6ada90375c312005fc2ef37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/49-relp.conf.erb"}, {"name"=>"50-default.conf.erb", "path"=>"templates/smartos/50-default.conf.erb", "checksum"=>"ad580c1627a87517d7f8b669c167068e", "specificity"=>"smartos", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/smartos/50-default.conf.erb"}], "resources"=>[{"name"=>"file_input.rb", "path"=>"resources/file_input.rb", "checksum"=>"61a182e40b6ea51343a927ff00bc25d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/resources/file_input.rb"}], "providers"=>[], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"1f54c716a1583fba5376c90f3ec58802", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"88578319e42e60d43b4d008217890e84", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/CONTRIBUTING.md"}, {"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"a5b2087ee7c84b6c9b471df7d5e2a3cf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/.foodcritic"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"198854eb4d71cb9c3b33be1db125be03", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"022f35b4d234146847aa838f169d9e67", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/CHANGELOG.md"}], "metadata"=>{"name"=>"rsyslog", "description"=>"Installs and configures rsyslog", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"ubuntu"=>">= 10.04", "debian"=>">= 5.0", "redhat"=>">= 5.0", "centos"=>">= 5.0", "fedora"=>">= 20.0", "scientific"=>">= 0.0.0", "amazon"=>">= 0.0.0", "oracle"=>">= 0.0.0"}, "dependencies"=>{"compat_resource"=>">= 0.0.0"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"rsyslog::server"=>">= 0.0.0", "rsyslog"=>">= 0.0.0", "rsyslog::client"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"rsyslog"=>"Sets up rsyslog for local logging", "rsyslog::client"=>"Sets up a client to log to a remote rsyslog server", "rsyslog::server"=>"Sets up an rsyslog server"}, "version"=>"4.0.1", "source_url"=>"https://github.com/chef-cookbooks/rsyslog", "issues_url"=>"https://github.com/chef-cookbooks/rsyslog/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"4.0.1", "name"=>"rsyslog-4.0.1", "cookbook_name"=>"rsyslog", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"61a182e40b6ea51343a927ff00bc25d5"=>nil, "580f743c947df2dc843bd8c9b09af8b9"=>nil, "f519fc4a8cfca0479deef9e8adbe61f1"=>nil, "61f54518f486dedeb18d4d9d9b6bb1cb"=>nil, "4dfdc2ebd40a705aeabf2b39a38088f8"=>nil, "48a2eba80e00340043a50add8fa017a6"=>nil, "d3fb19d73b1d4d6e99e0fff8972adee2"=>nil, "95345275ba365b9aec01c6ebe2fe7406"=>nil, "3cd7ea4db226906cff93defe98fc773d"=>nil, "061d2ee2ec90aa4f035cee277652788b"=>nil, "128e95659ee113e15538851263e21920"=>nil, "126e2c7dd280023135dabac1c4253be1"=>nil, "23492857b6ada90375c312005fc2ef37"=>nil, "ad580c1627a87517d7f8b669c167068e"=>nil, "1f54c716a1583fba5376c90f3ec58802"=>nil, "88578319e42e60d43b4d008217890e84"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "a5b2087ee7c84b6c9b471df7d5e2a3cf"=>nil, "198854eb4d71cb9c3b33be1db125be03"=>nil, "022f35b4d234146847aa838f169d9e67"=>nil}, @manifest_records_by_path={"resources/file_input.rb"=>{"name"=>"file_input.rb", "path"=>"resources/file_input.rb", "checksum"=>"61a182e40b6ea51343a927ff00bc25d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/resources/file_input.rb"}, "recipes/server.rb"=>{"name"=>"server.rb", "path"=>"recipes/server.rb", "checksum"=>"580f743c947df2dc843bd8c9b09af8b9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/server.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"f519fc4a8cfca0479deef9e8adbe61f1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/default.rb"}, "recipes/client.rb"=>{"name"=>"client.rb", "path"=>"recipes/client.rb", "checksum"=>"61f54518f486dedeb18d4d9d9b6bb1cb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/client.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"4dfdc2ebd40a705aeabf2b39a38088f8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"48a2eba80e00340043a50add8fa017a6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/attributes/default.rb"}, "templates/default/49-remote.conf.erb"=>{"name"=>"49-remote.conf.erb", "path"=>"templates/default/49-remote.conf.erb", "checksum"=>"d3fb19d73b1d4d6e99e0fff8972adee2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/49-remote.conf.erb"}, "templates/default/rsyslog.conf.erb"=>{"name"=>"rsyslog.conf.erb", "path"=>"templates/default/rsyslog.conf.erb", "checksum"=>"95345275ba365b9aec01c6ebe2fe7406", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/rsyslog.conf.erb"}, "templates/default/50-default.conf.erb"=>{"name"=>"50-default.conf.erb", "path"=>"templates/default/50-default.conf.erb", "checksum"=>"3cd7ea4db226906cff93defe98fc773d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/50-default.conf.erb"}, "templates/default/omnios-manifest.xml.erb"=>{"name"=>"omnios-manifest.xml.erb", "path"=>"templates/default/omnios-manifest.xml.erb", "checksum"=>"061d2ee2ec90aa4f035cee277652788b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/omnios-manifest.xml.erb"}, "templates/default/file-input.conf.erb"=>{"name"=>"file-input.conf.erb", "path"=>"templates/default/file-input.conf.erb", "checksum"=>"128e95659ee113e15538851263e21920", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/file-input.conf.erb"}, "templates/default/35-server-per-host.conf.erb"=>{"name"=>"35-server-per-host.conf.erb", "path"=>"templates/default/35-server-per-host.conf.erb", "checksum"=>"126e2c7dd280023135dabac1c4253be1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/35-server-per-host.conf.erb"}, "templates/default/49-relp.conf.erb"=>{"name"=>"49-relp.conf.erb", "path"=>"templates/default/49-relp.conf.erb", "checksum"=>"23492857b6ada90375c312005fc2ef37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/49-relp.conf.erb"}, "templates/smartos/50-default.conf.erb"=>{"name"=>"50-default.conf.erb", "path"=>"templates/smartos/50-default.conf.erb", "checksum"=>"ad580c1627a87517d7f8b669c167068e", "specificity"=>"smartos", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/smartos/50-default.conf.erb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"1f54c716a1583fba5376c90f3ec58802", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"88578319e42e60d43b4d008217890e84", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/CONTRIBUTING.md"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"a5b2087ee7c84b6c9b471df7d5e2a3cf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/.foodcritic"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"198854eb4d71cb9c3b33be1db125be03", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"022f35b4d234146847aa838f169d9e67", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000003926a00 @name="7-zip", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=[], @resource_filenames=[], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["README.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000003925948 @name="7-zip", @description="Installs/Configures the 7-zip file archiver", @long_description="", @license="Apache 2.0", @maintainer="Opscode, Inc.", @maintainer_email="cookbooks@opscode.com", @platforms={"windows"=>">= 0.0.0"}, @dependencies={"windows"=>">= 1.2.2"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"7-zip"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"7-zip"=>""}, @version="1.0.2", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x0000000391bdf8 @cookbook_version=#<Chef::CookbookVersion:0x00000003926a00 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"5d1856ae1b6b681826c4f6279b0ddab0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/recipes/default.rb"}], "definitions"=>[], "libraries"=>[], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"84232213493b05e6e9067eaf82f8f205", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/attributes/default.rb"}], "files"=>[], "templates"=>[], "resources"=>[], "providers"=>[], "root_files"=>[{"name"=>"README.md", "path"=>"README.md", "checksum"=>"a981fb7bca131d68d30fc72460c18d2e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/README.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"2236655cd281e2a508a871c9f88db493", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"2f704dba870ccb6e4f5ecf55b9a9b5c2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/CHANGELOG.md"}], "metadata"=>{"name"=>"7-zip", "description"=>"Installs/Configures the 7-zip file archiver", "long_description"=>"", "maintainer"=>"Opscode, Inc.", "maintainer_email"=>"cookbooks@opscode.com", "license"=>"Apache 2.0", "platforms"=>{"windows"=>">= 0.0.0"}, "dependencies"=>{"windows"=>">= 1.2.2"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"7-zip"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"7-zip"=>""}, "version"=>"1.0.2", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"1.0.2", "name"=>"7-zip-1.0.2", "cookbook_name"=>"7-zip", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"5d1856ae1b6b681826c4f6279b0ddab0"=>nil, "84232213493b05e6e9067eaf82f8f205"=>nil, "a981fb7bca131d68d30fc72460c18d2e"=>nil, "2236655cd281e2a508a871c9f88db493"=>nil, "2f704dba870ccb6e4f5ecf55b9a9b5c2"=>nil}, @manifest_records_by_path={"recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"5d1856ae1b6b681826c4f6279b0ddab0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/recipes/default.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"84232213493b05e6e9067eaf82f8f205", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/attributes/default.rb"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"a981fb7bca131d68d30fc72460c18d2e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/README.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"2236655cd281e2a508a871c9f88db493", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"2f704dba870ccb6e4f5ecf55b9a9b5c2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x000000039005f8 @name="packagecloud", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=["yum.erb", "apt.erb"], @file_filenames=[], @recipe_filenames=[], @recipe_filenames_by_name={}, @library_filenames=["matcher.rb", "helper.rb"], @resource_filenames=["repo.rb"], @provider_filenames=["repo.rb"], @metadata_filenames=[], @root_filenames=[".rubocop.yml", ".kitchen.yml", "README.md", "THANKS", "Rakefile", "Berksfile", "Thorfile", "Berksfile.lock", "metadata.json", "Gemfile", "chefignore", "Gemfile.lock", "LICENSE"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x000000038efb68 @name="packagecloud", @description="Installs/Configures packagecloud.io repositories.", @long_description="", @license="Apache 2.0", @maintainer="Joe Damato", @maintainer_email="joe@packagecloud.io", @platforms={}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={}, @replacing={}, @attributes={}, @groupings={}, @recipes={}, @version="0.2.5", @source_url="https://github.com/computology/packagecloud-cookbook", @issues_url="https://github.com/computology/packagecloud-cookbook/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x000000038eeda8 @cookbook_version=#<Chef::CookbookVersion:0x000000039005f8 ...>, @policy_mode=false, @manifest={"recipes"=>[], "definitions"=>[], "libraries"=>[{"name"=>"matcher.rb", "path"=>"libraries/matcher.rb", "checksum"=>"c02e968d2a1df96e60a781913aafeac8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/libraries/matcher.rb"}, {"name"=>"helper.rb", "path"=>"libraries/helper.rb", "checksum"=>"63bc57ef3cc84529c78e6279c4109300", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/libraries/helper.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"4391d2c04289c218f65dd1af41869d3a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/attributes/default.rb"}], "files"=>[], "templates"=>[{"name"=>"yum.erb", "path"=>"templates/default/yum.erb", "checksum"=>"1efbb26f25cdd4ed47a35e7091b4c351", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/templates/default/yum.erb"}, {"name"=>"apt.erb", "path"=>"templates/default/apt.erb", "checksum"=>"a4cb66529a83ba69360e1b575ce921b3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/templates/default/apt.erb"}], "resources"=>[{"name"=>"repo.rb", "path"=>"resources/repo.rb", "checksum"=>"53dd79a8018aa10a891b41b9b4fdd57f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/resources/repo.rb"}], "providers"=>[{"name"=>"repo.rb", "path"=>"providers/repo.rb", "checksum"=>"922e2653a5f7478ed6587b79517984af", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/providers/repo.rb"}], "root_files"=>[{"name"=>".rubocop.yml", "path"=>".rubocop.yml", "checksum"=>"03e5916414d22937b21805a1c76cdc45", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/.rubocop.yml"}, {"name"=>".kitchen.yml", "path"=>".kitchen.yml", "checksum"=>"b2326a9178c0153df48828629cad352a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/.kitchen.yml"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"cf6e00a1728e877d61b221d8fdd1c551", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/README.md"}, {"name"=>"THANKS", "path"=>"THANKS", "checksum"=>"644f348ff12a6a68c84554a66e509361", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/THANKS"}, {"name"=>"Rakefile", "path"=>"Rakefile", "checksum"=>"4fcd335371a9b10185fad03085ccacea", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Rakefile"}, {"name"=>"Berksfile", "path"=>"Berksfile", "checksum"=>"4fbc6b7dd8f9df92868411707a10a75b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Berksfile"}, {"name"=>"Thorfile", "path"=>"Thorfile", "checksum"=>"92498e98fc44adc46767efbb436221ae", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Thorfile"}, {"name"=>"Berksfile.lock", "path"=>"Berksfile.lock", "checksum"=>"7aa46c3efe18748b34077c80a5c66e48", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Berksfile.lock"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"820eb04a6ffbf7d7641f4492b84101c2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/metadata.json"}, {"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"5e365dda061d1a54c5fa7464b77e580f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Gemfile"}, {"name"=>"chefignore", "path"=>"chefignore", "checksum"=>"5b82f6325c5fe61e11dd1f3495f8fe2c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/chefignore"}, {"name"=>"Gemfile.lock", "path"=>"Gemfile.lock", "checksum"=>"aa2d7373df4fa4f46e55d398d60d250f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Gemfile.lock"}, {"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"5ce7b20b14ba332a1054f1a78ff5dd93", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/LICENSE"}], "metadata"=>{"name"=>"packagecloud", "description"=>"Installs/Configures packagecloud.io repositories.", "long_description"=>"", "maintainer"=>"Joe Damato", "maintainer_email"=>"joe@packagecloud.io", "license"=>"Apache 2.0", "platforms"=>{}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{}, "version"=>"0.2.5", "source_url"=>"https://github.com/computology/packagecloud-cookbook", "issues_url"=>"https://github.com/computology/packagecloud-cookbook/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"0.2.5", "name"=>"packagecloud-0.2.5", "cookbook_name"=>"packagecloud", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"53dd79a8018aa10a891b41b9b4fdd57f"=>nil, "922e2653a5f7478ed6587b79517984af"=>nil, "c02e968d2a1df96e60a781913aafeac8"=>nil, "63bc57ef3cc84529c78e6279c4109300"=>nil, "4391d2c04289c218f65dd1af41869d3a"=>nil, "1efbb26f25cdd4ed47a35e7091b4c351"=>nil, "a4cb66529a83ba69360e1b575ce921b3"=>nil, "03e5916414d22937b21805a1c76cdc45"=>nil, "b2326a9178c0153df48828629cad352a"=>nil, "cf6e00a1728e877d61b221d8fdd1c551"=>nil, "644f348ff12a6a68c84554a66e509361"=>nil, "4fcd335371a9b10185fad03085ccacea"=>nil, "4fbc6b7dd8f9df92868411707a10a75b"=>nil, "92498e98fc44adc46767efbb436221ae"=>nil, "7aa46c3efe18748b34077c80a5c66e48"=>nil, "820eb04a6ffbf7d7641f4492b84101c2"=>nil, "5e365dda061d1a54c5fa7464b77e580f"=>nil, "5b82f6325c5fe61e11dd1f3495f8fe2c"=>nil, "aa2d7373df4fa4f46e55d398d60d250f"=>nil, "5ce7b20b14ba332a1054f1a78ff5dd93"=>nil}, @manifest_records_by_path={"resources/repo.rb"=>{"name"=>"repo.rb", "path"=>"resources/repo.rb", "checksum"=>"53dd79a8018aa10a891b41b9b4fdd57f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/resources/repo.rb"}, "providers/repo.rb"=>{"name"=>"repo.rb", "path"=>"providers/repo.rb", "checksum"=>"922e2653a5f7478ed6587b79517984af", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/providers/repo.rb"}, "libraries/matcher.rb"=>{"name"=>"matcher.rb", "path"=>"libraries/matcher.rb", "checksum"=>"c02e968d2a1df96e60a781913aafeac8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/libraries/matcher.rb"}, "libraries/helper.rb"=>{"name"=>"helper.rb", "path"=>"libraries/helper.rb", "checksum"=>"63bc57ef3cc84529c78e6279c4109300", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/libraries/helper.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"4391d2c04289c218f65dd1af41869d3a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/attributes/default.rb"}, "templates/default/yum.erb"=>{"name"=>"yum.erb", "path"=>"templates/default/yum.erb", "checksum"=>"1efbb26f25cdd4ed47a35e7091b4c351", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/templates/default/yum.erb"}, "templates/default/apt.erb"=>{"name"=>"apt.erb", "path"=>"templates/default/apt.erb", "checksum"=>"a4cb66529a83ba69360e1b575ce921b3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/templates/default/apt.erb"}, ".rubocop.yml"=>{"name"=>".rubocop.yml", "path"=>".rubocop.yml", "checksum"=>"03e5916414d22937b21805a1c76cdc45", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/.rubocop.yml"}, ".kitchen.yml"=>{"name"=>".kitchen.yml", "path"=>".kitchen.yml", "checksum"=>"b2326a9178c0153df48828629cad352a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/.kitchen.yml"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"cf6e00a1728e877d61b221d8fdd1c551", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/README.md"}, "THANKS"=>{"name"=>"THANKS", "path"=>"THANKS", "checksum"=>"644f348ff12a6a68c84554a66e509361", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/THANKS"}, "Rakefile"=>{"name"=>"Rakefile", "path"=>"Rakefile", "checksum"=>"4fcd335371a9b10185fad03085ccacea", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Rakefile"}, "Berksfile"=>{"name"=>"Berksfile", "path"=>"Berksfile", "checksum"=>"4fbc6b7dd8f9df92868411707a10a75b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Berksfile"}, "Thorfile"=>{"name"=>"Thorfile", "path"=>"Thorfile", "checksum"=>"92498e98fc44adc46767efbb436221ae", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Thorfile"}, "Berksfile.lock"=>{"name"=>"Berksfile.lock", "path"=>"Berksfile.lock", "checksum"=>"7aa46c3efe18748b34077c80a5c66e48", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Berksfile.lock"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"820eb04a6ffbf7d7641f4492b84101c2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/metadata.json"}, "Gemfile"=>{"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"5e365dda061d1a54c5fa7464b77e580f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Gemfile"}, "chefignore"=>{"name"=>"chefignore", "path"=>"chefignore", "checksum"=>"5b82f6325c5fe61e11dd1f3495f8fe2c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/chefignore"}, "Gemfile.lock"=>{"name"=>"Gemfile.lock", "path"=>"Gemfile.lock", "checksum"=>"aa2d7373df4fa4f46e55d398d60d250f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Gemfile.lock"}, "LICENSE"=>{"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"5ce7b20b14ba332a1054f1a78ff5dd93", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/LICENSE"}}>>, #<Chef::CookbookVersion:0x000000038c9710 @name="yum", @root_paths=[], @frozen=false, @attribute_filenames=["main.rb"], @definition_filenames=[], @template_filenames=["main.erb", "repo.erb"], @file_filenames=[], @recipe_filenames=["default.rb", "dnf_yum_compat.rb"], @recipe_filenames_by_name={"default"=>"default.rb", "dnf_yum_compat"=>"dnf_yum_compat.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["globalconfig.rb", "repository.rb"], @provider_filenames=["globalconfig.rb", "repository.rb"], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x000000038c8c70 @name="yum", @description="Configures various yum components on Red Hat-like systems", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"yum"=>">= 0.0.0", "yum::dnf_yum_compat"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"yum"=>"", "yum::dnf_yum_compat"=>""}, @version="4.0.0", @source_url="https://github.com/chef-cookbooks/yum", @issues_url="https://github.com/chef-cookbooks/yum/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"main"=>"main.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x000000038bfeb8 @cookbook_version=#<Chef::CookbookVersion:0x000000038c9710 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"cb60266e527baf327ab4aa6d53ff653f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/recipes/default.rb"}, {"name"=>"dnf_yum_compat.rb", "path"=>"recipes/dnf_yum_compat.rb", "checksum"=>"178f163bc5cb3ed034a2c35a279aa31b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/recipes/dnf_yum_compat.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"9487ba21b5b01335bf03846ae5bd1a4f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/libraries/matchers.rb"}], "attributes"=>[{"name"=>"main.rb", "path"=>"attributes/main.rb", "checksum"=>"09bd5f76172833b657b4a29bd14daf51", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/attributes/main.rb"}], "files"=>[], "templates"=>[{"name"=>"main.erb", "path"=>"templates/default/main.erb", "checksum"=>"ba21644510c5a99ac20d0da808510888", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/templates/default/main.erb"}, {"name"=>"repo.erb", "path"=>"templates/default/repo.erb", "checksum"=>"238e119a33b9d3a255e61e0caacd4b18", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/templates/default/repo.erb"}], "resources"=>[{"name"=>"globalconfig.rb", "path"=>"resources/globalconfig.rb", "checksum"=>"e827f1a5d8eb827f02a213ef691351db", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/resources/globalconfig.rb"}, {"name"=>"repository.rb", "path"=>"resources/repository.rb", "checksum"=>"91a181370f30ba3e552576f2ca93612c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/resources/repository.rb"}], "providers"=>[{"name"=>"globalconfig.rb", "path"=>"providers/globalconfig.rb", "checksum"=>"3489d68fddc77a537ac4634703a5333f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/providers/globalconfig.rb"}, {"name"=>"repository.rb", "path"=>"providers/repository.rb", "checksum"=>"97aa26c5a9df673dacd68e1de4d63403", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/providers/repository.rb"}], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"032c573c61cbc27e4111f5a15bc3c734", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"f0743fb280e6f95e86541da6571fabb7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"9caabd898d0c3fb3f080019dae8da6dc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"79d1918c56b1e4debd1be5cff7e8610a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/CHANGELOG.md"}], "metadata"=>{"name"=>"yum", "description"=>"Configures various yum components on Red Hat-like systems", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"yum"=>">= 0.0.0", "yum::dnf_yum_compat"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"yum"=>"", "yum::dnf_yum_compat"=>""}, "version"=>"4.0.0", "source_url"=>"https://github.com/chef-cookbooks/yum", "issues_url"=>"https://github.com/chef-cookbooks/yum/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"4.0.0", "name"=>"yum-4.0.0", "cookbook_name"=>"yum", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"e827f1a5d8eb827f02a213ef691351db"=>nil, "91a181370f30ba3e552576f2ca93612c"=>nil, "3489d68fddc77a537ac4634703a5333f"=>nil, "97aa26c5a9df673dacd68e1de4d63403"=>nil, "cb60266e527baf327ab4aa6d53ff653f"=>nil, "178f163bc5cb3ed034a2c35a279aa31b"=>nil, "9487ba21b5b01335bf03846ae5bd1a4f"=>nil, "09bd5f76172833b657b4a29bd14daf51"=>nil, "ba21644510c5a99ac20d0da808510888"=>nil, "238e119a33b9d3a255e61e0caacd4b18"=>nil, "032c573c61cbc27e4111f5a15bc3c734"=>nil, "f0743fb280e6f95e86541da6571fabb7"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "9caabd898d0c3fb3f080019dae8da6dc"=>nil, "79d1918c56b1e4debd1be5cff7e8610a"=>nil}, @manifest_records_by_path={"resources/globalconfig.rb"=>{"name"=>"globalconfig.rb", "path"=>"resources/globalconfig.rb", "checksum"=>"e827f1a5d8eb827f02a213ef691351db", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/resources/globalconfig.rb"}, "resources/repository.rb"=>{"name"=>"repository.rb", "path"=>"resources/repository.rb", "checksum"=>"91a181370f30ba3e552576f2ca93612c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/resources/repository.rb"}, "providers/globalconfig.rb"=>{"name"=>"globalconfig.rb", "path"=>"providers/globalconfig.rb", "checksum"=>"3489d68fddc77a537ac4634703a5333f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/providers/globalconfig.rb"}, "providers/repository.rb"=>{"name"=>"repository.rb", "path"=>"providers/repository.rb", "checksum"=>"97aa26c5a9df673dacd68e1de4d63403", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/providers/repository.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"cb60266e527baf327ab4aa6d53ff653f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/recipes/default.rb"}, "recipes/dnf_yum_compat.rb"=>{"name"=>"dnf_yum_compat.rb", "path"=>"recipes/dnf_yum_compat.rb", "checksum"=>"178f163bc5cb3ed034a2c35a279aa31b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/recipes/dnf_yum_compat.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"9487ba21b5b01335bf03846ae5bd1a4f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/libraries/matchers.rb"}, "attributes/main.rb"=>{"name"=>"main.rb", "path"=>"attributes/main.rb", "checksum"=>"09bd5f76172833b657b4a29bd14daf51", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/attributes/main.rb"}, "templates/default/main.erb"=>{"name"=>"main.erb", "path"=>"templates/default/main.erb", "checksum"=>"ba21644510c5a99ac20d0da808510888", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/templates/default/main.erb"}, "templates/default/repo.erb"=>{"name"=>"repo.erb", "path"=>"templates/default/repo.erb", "checksum"=>"238e119a33b9d3a255e61e0caacd4b18", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/templates/default/repo.erb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"032c573c61cbc27e4111f5a15bc3c734", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"f0743fb280e6f95e86541da6571fabb7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"9caabd898d0c3fb3f080019dae8da6dc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"79d1918c56b1e4debd1be5cff7e8610a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x0000000388e818 @name="compat_resource", @root_paths=[], @frozen=false, @attribute_filenames=[], @definition_filenames=[], @template_filenames=[], @file_filenames=["monkeypatches.rb", "property.rb", "lwrp_base.rb", "properties.rb", "provider.rb", "resource_builder.rb", "constants.rb", "property.rb", "yum_repository.rb", "action_class.rb", "apt_repository.rb", "apt_update.rb", "platform_introspection.rb", "universal.rb", "core.rb", "recipe.rb", "declare_resource.rb", "delayed_evaluator.rb", "lazy_module_include.rb", "params_validate.rb", "properties.rb", "notifying_block.rb", "powershell_out.rb", "resource.rb", "noop.rb", "yum_repository.rb", "apt_repository.rb", "apt_update.rb", "recipe.rb", "recipe_hook.rb", "provider.rb", "resource_builder.rb", "run_context.rb", "runner.rb", "node.rb", "log.rb", "property.rb", "resource_collection.rb", "lwrp_base.rb", "params_validate.rb", "recipe.rb", "resource_set.rb", "resource_list.rb", "exceptions.rb", "resource.rb", "chef.rb", "resource.rb", "copied_from_chef.rb", "compat_resource.rb", "chef_upstream_version.rb"], @recipe_filenames=[], @recipe_filenames_by_name={}, @library_filenames=["autoload.rb"], @resource_filenames=[], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x0000000388da30 @name="compat_resource", @description="Brings the modern custom resource syntax to earlier Chef 12 releases prior to 12.5", @long_description="", @license="Apache 2.0", @maintainer="John Keiser", @maintainer_email="jkeiser@chef.io", @platforms={}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={}, @replacing={}, @attributes={}, @groupings={}, @recipes={}, @version="12.14.3", @source_url="https://github.com/chef-cookbooks/compat_resource", @issues_url="https://github.com/chef-cookbooks/compat_resource/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={}, @cookbook_manifest=#<Chef::CookbookManifest:0x0000000388ce50 @cookbook_version=#<Chef::CookbookVersion:0x0000000388e818 ...>, @policy_mode=false, @manifest={"recipes"=>[], "definitions"=>[], "libraries"=>[{"name"=>"autoload.rb", "path"=>"libraries/autoload.rb", "checksum"=>"2de5199263c0422e26a6cbf61f286886", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb"}], "attributes"=>[], "files"=>[{"name"=>"monkeypatches.rb", "path"=>"files/lib/chef_compat/monkeypatches.rb", "checksum"=>"b2404022c1051b495c90aaf110bfa218", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb"}, {"name"=>"property.rb", "path"=>"files/lib/chef_compat/property.rb", "checksum"=>"daf82ee6985f4e02e41fc73636925361", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb"}, {"name"=>"lwrp_base.rb", "path"=>"files/lib/chef_compat/resource/lwrp_base.rb", "checksum"=>"22edef9e101aacbb839c1ab567735115", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb"}, {"name"=>"properties.rb", "path"=>"files/lib/chef_compat/mixin/properties.rb", "checksum"=>"3ff71fa0b65269aab0ab5f2c75d80e6e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb"}, {"name"=>"provider.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider.rb", "checksum"=>"ecca0fc6e3ce187b02ed8fcbf5d7ebb4", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb"}, {"name"=>"resource_builder.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb", "checksum"=>"0a3eeed3ac838e236f32182287c28a4e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb"}, {"name"=>"constants.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/constants.rb", "checksum"=>"efd4289af6a720c2710a23b88ea0aafb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb"}, {"name"=>"property.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/property.rb", "checksum"=>"6560515cec66ec348ffa80ff2021d261", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb"}, {"name"=>"yum_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb", "checksum"=>"3bf2a206239de1557b3659e8c51a4b8e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb"}, {"name"=>"action_class.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb", "checksum"=>"7f3d89cd82eca7ecd1de6be5f0b4af6d", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb"}, {"name"=>"apt_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb", "checksum"=>"5705f579343ec7dff89cc1c34e9ef10c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb"}, {"name"=>"apt_update.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb", "checksum"=>"5fa9c14ec63384c51fe1071dbdd52cab", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb"}, {"name"=>"platform_introspection.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb", "checksum"=>"2690ff8e2c5dc987bc4123947cf0e3f3", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb"}, {"name"=>"universal.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb", "checksum"=>"9d71c99eca293d43674ab77dbba88241", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb"}, {"name"=>"core.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb", "checksum"=>"f1c2b00bbac075ee11e8a83258439a73", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb"}, {"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb", "checksum"=>"ca4e2ed78545fd62843f237ebbe03c30", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb"}, {"name"=>"declare_resource.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb", "checksum"=>"f23f7ae13ddd061f66cf86221ade29db", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb"}, {"name"=>"delayed_evaluator.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb", "checksum"=>"7038f6ec92541b206b0f1bd7a851f5b6", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb"}, {"name"=>"lazy_module_include.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb", "checksum"=>"b906fc248e4a6b162941475d8e2bfd9d", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb"}, {"name"=>"params_validate.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb", "checksum"=>"8696257c66e53b46af59d751d851039e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb"}, {"name"=>"properties.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb", "checksum"=>"f546297a0749500f39ba062e373393db", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb"}, {"name"=>"notifying_block.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb", "checksum"=>"583adee37f6d51a8adbf74159cdc423a", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb"}, {"name"=>"powershell_out.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb", "checksum"=>"16cd8a22e608dea2a9d2461884eab29d", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb"}, {"name"=>"resource.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource.rb", "checksum"=>"d19f359202755a398965aade0ef43f53", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb"}, {"name"=>"noop.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb", "checksum"=>"c64a1d50ecad452ef89ea703c7a7e7dd", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb"}, {"name"=>"yum_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb", "checksum"=>"c330ae1ffbd94b1cfe2d01774cce12d8", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb"}, {"name"=>"apt_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb", "checksum"=>"bce0f2507e05702692a74a9e5f9e3aab", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb"}, {"name"=>"apt_update.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb", "checksum"=>"1a97c5653df8ffdbb634b57f646603ac", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb"}, {"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/recipe.rb", "checksum"=>"63ccbe80441aff3a4232a920c1780a76", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb"}, {"name"=>"recipe_hook.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb", "checksum"=>"8b91d52fdc51fa090357946998e73587", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb"}, {"name"=>"provider.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/provider.rb", "checksum"=>"e34cd92d299c2f140432240f81e87ec9", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb"}, {"name"=>"resource_builder.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_builder.rb", "checksum"=>"b5c39505d9ad1c122f086180e9506f69", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb"}, {"name"=>"run_context.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/run_context.rb", "checksum"=>"7883361cb5ef606c5215f401c6fa9503", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb"}, {"name"=>"runner.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/runner.rb", "checksum"=>"c3583b5e2b79224cd1764b393c304c5f", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb"}, {"name"=>"node.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/node.rb", "checksum"=>"9f36cd47c9de8ae8b836ac63a915148b", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb"}, {"name"=>"log.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/log.rb", "checksum"=>"bcf79fcc571c428f06ce449e96d49b46", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb"}, {"name"=>"property.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/property.rb", "checksum"=>"ecf6b84f34b5b1b3b50755cc6df2d061", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb"}, {"name"=>"resource_collection.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection.rb", "checksum"=>"214c3e75087c9311e33225a7106c1b45", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb"}, {"name"=>"lwrp_base.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb", "checksum"=>"96227071b1f592e172998e1af8a48058", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb"}, {"name"=>"params_validate.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb", "checksum"=>"f9b44255d786e7203bf548a4c82abb12", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb"}, {"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/recipe.rb", "checksum"=>"2e00007d71c4b356ad37d4853f5ec31e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb"}, {"name"=>"resource_set.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb", "checksum"=>"8854c764ed4f33c339e2b65f55eceba5", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb"}, {"name"=>"resource_list.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb", "checksum"=>"18fe49afa215382cf565d5a8a6c99d8c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb"}, {"name"=>"exceptions.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/exceptions.rb", "checksum"=>"3b200c3cbc9200da7dd99a93c03bb68c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb"}, {"name"=>"resource.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource.rb", "checksum"=>"c1c3b5c9d5aa63f9e992f5cf45b47277", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb"}, {"name"=>"chef.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef.rb", "checksum"=>"1bce1d5d2c63e9ae1bed6bfd15927611", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb"}, {"name"=>"resource.rb", "path"=>"files/lib/chef_compat/resource.rb", "checksum"=>"5883119a6ad28ede763c0895dbbf35d1", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb"}, {"name"=>"copied_from_chef.rb", "path"=>"files/lib/chef_compat/copied_from_chef.rb", "checksum"=>"99864174cd4ffa5d3a9f5d028ec08acb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb"}, {"name"=>"compat_resource.rb", "path"=>"files/lib/compat_resource.rb", "checksum"=>"10a787696950ed004459959020b62b98", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb"}, {"name"=>"chef_upstream_version.rb", "path"=>"files/lib/chef_upstream_version.rb", "checksum"=>"1a0eb518532ac43de616d652307b32ad", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb"}], "templates"=>[], "resources"=>[], "providers"=>[], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"3b659d9c5f0662e9edff1e63dc6bdc04", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"d3feb45ccb55102305a4294e1695f372", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"233fa6000f669ae13b7296485d2d9e03", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"1a1846f093ef88e45f36be805b136368", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CHANGELOG.md"}], "metadata"=>{"name"=>"compat_resource", "description"=>"Brings the modern custom resource syntax to earlier Chef 12 releases prior to 12.5", "long_description"=>"", "maintainer"=>"John Keiser", "maintainer_email"=>"jkeiser@chef.io", "license"=>"Apache 2.0", "platforms"=>{}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{}, "version"=>"12.14.3", "source_url"=>"https://github.com/chef-cookbooks/compat_resource", "issues_url"=>"https://github.com/chef-cookbooks/compat_resource/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"12.14.3", "name"=>"compat_resource-12.14.3", "cookbook_name"=>"compat_resource", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"2de5199263c0422e26a6cbf61f286886"=>nil, "b2404022c1051b495c90aaf110bfa218"=>nil, "daf82ee6985f4e02e41fc73636925361"=>nil, "22edef9e101aacbb839c1ab567735115"=>nil, "3ff71fa0b65269aab0ab5f2c75d80e6e"=>nil, "ecca0fc6e3ce187b02ed8fcbf5d7ebb4"=>nil, "0a3eeed3ac838e236f32182287c28a4e"=>nil, "efd4289af6a720c2710a23b88ea0aafb"=>nil, "6560515cec66ec348ffa80ff2021d261"=>nil, "3bf2a206239de1557b3659e8c51a4b8e"=>nil, "7f3d89cd82eca7ecd1de6be5f0b4af6d"=>nil, "5705f579343ec7dff89cc1c34e9ef10c"=>nil, "5fa9c14ec63384c51fe1071dbdd52cab"=>nil, "2690ff8e2c5dc987bc4123947cf0e3f3"=>nil, "9d71c99eca293d43674ab77dbba88241"=>nil, "f1c2b00bbac075ee11e8a83258439a73"=>nil, "ca4e2ed78545fd62843f237ebbe03c30"=>nil, "f23f7ae13ddd061f66cf86221ade29db"=>nil, "7038f6ec92541b206b0f1bd7a851f5b6"=>nil, "b906fc248e4a6b162941475d8e2bfd9d"=>nil, "8696257c66e53b46af59d751d851039e"=>nil, "f546297a0749500f39ba062e373393db"=>nil, "583adee37f6d51a8adbf74159cdc423a"=>nil, "16cd8a22e608dea2a9d2461884eab29d"=>nil, "d19f359202755a398965aade0ef43f53"=>nil, "c64a1d50ecad452ef89ea703c7a7e7dd"=>nil, "c330ae1ffbd94b1cfe2d01774cce12d8"=>nil, "bce0f2507e05702692a74a9e5f9e3aab"=>nil, "1a97c5653df8ffdbb634b57f646603ac"=>nil, "63ccbe80441aff3a4232a920c1780a76"=>nil, "8b91d52fdc51fa090357946998e73587"=>nil, "e34cd92d299c2f140432240f81e87ec9"=>nil, "b5c39505d9ad1c122f086180e9506f69"=>nil, "7883361cb5ef606c5215f401c6fa9503"=>nil, "c3583b5e2b79224cd1764b393c304c5f"=>nil, "9f36cd47c9de8ae8b836ac63a915148b"=>nil, "bcf79fcc571c428f06ce449e96d49b46"=>nil, "ecf6b84f34b5b1b3b50755cc6df2d061"=>nil, "214c3e75087c9311e33225a7106c1b45"=>nil, "96227071b1f592e172998e1af8a48058"=>nil, "f9b44255d786e7203bf548a4c82abb12"=>nil, "2e00007d71c4b356ad37d4853f5ec31e"=>nil, "8854c764ed4f33c339e2b65f55eceba5"=>nil, "18fe49afa215382cf565d5a8a6c99d8c"=>nil, "3b200c3cbc9200da7dd99a93c03bb68c"=>nil, "c1c3b5c9d5aa63f9e992f5cf45b47277"=>nil, "1bce1d5d2c63e9ae1bed6bfd15927611"=>nil, "5883119a6ad28ede763c0895dbbf35d1"=>nil, "99864174cd4ffa5d3a9f5d028ec08acb"=>nil, "10a787696950ed004459959020b62b98"=>nil, "1a0eb518532ac43de616d652307b32ad"=>nil, "3b659d9c5f0662e9edff1e63dc6bdc04"=>nil, "d3feb45ccb55102305a4294e1695f372"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "233fa6000f669ae13b7296485d2d9e03"=>nil, "1a1846f093ef88e45f36be805b136368"=>nil}, @manifest_records_by_path={"libraries/autoload.rb"=>{"name"=>"autoload.rb", "path"=>"libraries/autoload.rb", "checksum"=>"2de5199263c0422e26a6cbf61f286886", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb"}, "files/lib/chef_compat/monkeypatches.rb"=>{"name"=>"monkeypatches.rb", "path"=>"files/lib/chef_compat/monkeypatches.rb", "checksum"=>"b2404022c1051b495c90aaf110bfa218", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb"}, "files/lib/chef_compat/property.rb"=>{"name"=>"property.rb", "path"=>"files/lib/chef_compat/property.rb", "checksum"=>"daf82ee6985f4e02e41fc73636925361", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb"}, "files/lib/chef_compat/resource/lwrp_base.rb"=>{"name"=>"lwrp_base.rb", "path"=>"files/lib/chef_compat/resource/lwrp_base.rb", "checksum"=>"22edef9e101aacbb839c1ab567735115", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb"}, "files/lib/chef_compat/mixin/properties.rb"=>{"name"=>"properties.rb", "path"=>"files/lib/chef_compat/mixin/properties.rb", "checksum"=>"3ff71fa0b65269aab0ab5f2c75d80e6e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider.rb"=>{"name"=>"provider.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider.rb", "checksum"=>"ecca0fc6e3ce187b02ed8fcbf5d7ebb4", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb"=>{"name"=>"resource_builder.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb", "checksum"=>"0a3eeed3ac838e236f32182287c28a4e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb"}, "files/lib/chef_compat/copied_from_chef/chef/constants.rb"=>{"name"=>"constants.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/constants.rb", "checksum"=>"efd4289af6a720c2710a23b88ea0aafb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb"}, "files/lib/chef_compat/copied_from_chef/chef/property.rb"=>{"name"=>"property.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/property.rb", "checksum"=>"6560515cec66ec348ffa80ff2021d261", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb"=>{"name"=>"yum_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb", "checksum"=>"3bf2a206239de1557b3659e8c51a4b8e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb"=>{"name"=>"action_class.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb", "checksum"=>"7f3d89cd82eca7ecd1de6be5f0b4af6d", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb"=>{"name"=>"apt_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb", "checksum"=>"5705f579343ec7dff89cc1c34e9ef10c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb"=>{"name"=>"apt_update.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb", "checksum"=>"5fa9c14ec63384c51fe1071dbdd52cab", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb"=>{"name"=>"platform_introspection.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb", "checksum"=>"2690ff8e2c5dc987bc4123947cf0e3f3", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb"=>{"name"=>"universal.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb", "checksum"=>"9d71c99eca293d43674ab77dbba88241", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb"=>{"name"=>"core.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb", "checksum"=>"f1c2b00bbac075ee11e8a83258439a73", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb"=>{"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb", "checksum"=>"ca4e2ed78545fd62843f237ebbe03c30", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb"=>{"name"=>"declare_resource.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb", "checksum"=>"f23f7ae13ddd061f66cf86221ade29db", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb"}, "files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb"=>{"name"=>"delayed_evaluator.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb", "checksum"=>"7038f6ec92541b206b0f1bd7a851f5b6", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb"=>{"name"=>"lazy_module_include.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb", "checksum"=>"b906fc248e4a6b162941475d8e2bfd9d", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb"=>{"name"=>"params_validate.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb", "checksum"=>"8696257c66e53b46af59d751d851039e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb"=>{"name"=>"properties.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb", "checksum"=>"f546297a0749500f39ba062e373393db", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb"=>{"name"=>"notifying_block.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb", "checksum"=>"583adee37f6d51a8adbf74159cdc423a", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb"=>{"name"=>"powershell_out.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb", "checksum"=>"16cd8a22e608dea2a9d2461884eab29d", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource.rb"=>{"name"=>"resource.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource.rb", "checksum"=>"d19f359202755a398965aade0ef43f53", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb"=>{"name"=>"noop.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb", "checksum"=>"c64a1d50ecad452ef89ea703c7a7e7dd", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb"=>{"name"=>"yum_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb", "checksum"=>"c330ae1ffbd94b1cfe2d01774cce12d8", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb"=>{"name"=>"apt_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb", "checksum"=>"bce0f2507e05702692a74a9e5f9e3aab", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb"=>{"name"=>"apt_update.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb", "checksum"=>"1a97c5653df8ffdbb634b57f646603ac", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb"}, "files/lib/chef_compat/recipe.rb"=>{"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/recipe.rb", "checksum"=>"63ccbe80441aff3a4232a920c1780a76", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb"}, "files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb"=>{"name"=>"recipe_hook.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb", "checksum"=>"8b91d52fdc51fa090357946998e73587", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb"}, "files/lib/chef_compat/monkeypatches/chef/provider.rb"=>{"name"=>"provider.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/provider.rb", "checksum"=>"e34cd92d299c2f140432240f81e87ec9", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource_builder.rb"=>{"name"=>"resource_builder.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_builder.rb", "checksum"=>"b5c39505d9ad1c122f086180e9506f69", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb"}, "files/lib/chef_compat/monkeypatches/chef/run_context.rb"=>{"name"=>"run_context.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/run_context.rb", "checksum"=>"7883361cb5ef606c5215f401c6fa9503", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb"}, "files/lib/chef_compat/monkeypatches/chef/runner.rb"=>{"name"=>"runner.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/runner.rb", "checksum"=>"c3583b5e2b79224cd1764b393c304c5f", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb"}, "files/lib/chef_compat/monkeypatches/chef/node.rb"=>{"name"=>"node.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/node.rb", "checksum"=>"9f36cd47c9de8ae8b836ac63a915148b", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb"}, "files/lib/chef_compat/monkeypatches/chef/log.rb"=>{"name"=>"log.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/log.rb", "checksum"=>"bcf79fcc571c428f06ce449e96d49b46", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb"}, "files/lib/chef_compat/monkeypatches/chef/property.rb"=>{"name"=>"property.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/property.rb", "checksum"=>"ecf6b84f34b5b1b3b50755cc6df2d061", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource_collection.rb"=>{"name"=>"resource_collection.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection.rb", "checksum"=>"214c3e75087c9311e33225a7106c1b45", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb"=>{"name"=>"lwrp_base.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb", "checksum"=>"96227071b1f592e172998e1af8a48058", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb"}, "files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb"=>{"name"=>"params_validate.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb", "checksum"=>"f9b44255d786e7203bf548a4c82abb12", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb"}, "files/lib/chef_compat/monkeypatches/chef/recipe.rb"=>{"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/recipe.rb", "checksum"=>"2e00007d71c4b356ad37d4853f5ec31e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb"=>{"name"=>"resource_set.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb", "checksum"=>"8854c764ed4f33c339e2b65f55eceba5", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb"=>{"name"=>"resource_list.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb", "checksum"=>"18fe49afa215382cf565d5a8a6c99d8c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb"}, "files/lib/chef_compat/monkeypatches/chef/exceptions.rb"=>{"name"=>"exceptions.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/exceptions.rb", "checksum"=>"3b200c3cbc9200da7dd99a93c03bb68c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource.rb"=>{"name"=>"resource.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource.rb", "checksum"=>"c1c3b5c9d5aa63f9e992f5cf45b47277", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb"}, "files/lib/chef_compat/monkeypatches/chef.rb"=>{"name"=>"chef.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef.rb", "checksum"=>"1bce1d5d2c63e9ae1bed6bfd15927611", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb"}, "files/lib/chef_compat/resource.rb"=>{"name"=>"resource.rb", "path"=>"files/lib/chef_compat/resource.rb", "checksum"=>"5883119a6ad28ede763c0895dbbf35d1", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb"}, "files/lib/chef_compat/copied_from_chef.rb"=>{"name"=>"copied_from_chef.rb", "path"=>"files/lib/chef_compat/copied_from_chef.rb", "checksum"=>"99864174cd4ffa5d3a9f5d028ec08acb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb"}, "files/lib/compat_resource.rb"=>{"name"=>"compat_resource.rb", "path"=>"files/lib/compat_resource.rb", "checksum"=>"10a787696950ed004459959020b62b98", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb"}, "files/lib/chef_upstream_version.rb"=>{"name"=>"chef_upstream_version.rb", "path"=>"files/lib/chef_upstream_version.rb", "checksum"=>"1a0eb518532ac43de616d652307b32ad", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"3b659d9c5f0662e9edff1e63dc6bdc04", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"d3feb45ccb55102305a4294e1695f372", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"233fa6000f669ae13b7296485d2d9e03", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"1a1846f093ef88e45f36be805b136368", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x0000000385b2b0 @name="windows", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=["powershell_helper.rb", "version.rb", "windows_helper.rb", "windows_privileged.rb", "registry_helper.rb", "feature_base.rb", "windows_package.rb", "wmi_helper.rb", "powershell_out.rb", "matchers.rb"], @resource_filenames=["certificate_binding.rb", "font.rb", "certificate.rb", "pagefile.rb", "zipfile.rb", "printer_port.rb", "printer.rb", "shortcut.rb", "feature.rb", "path.rb", "http_acl.rb", "task.rb", "auto_run.rb"], @provider_filenames=["certificate_binding.rb", "font.rb", "certificate.rb", "pagefile.rb", "zipfile.rb", "printer_port.rb", "printer.rb", "feature_servermanagercmd.rb", "feature_powershell.rb", "shortcut.rb", "path.rb", "http_acl.rb", "task.rb", "feature_dism.rb", "auto_run.rb"], @metadata_filenames=[], @root_filenames=["MAINTAINERS.md", "README.md", "CONTRIBUTING.md", ".foodcritic", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000003859a28 @name="windows", @description="Provides a set of useful Windows-specific primitives.", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"windows"=>">= 0.0.0"}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"windows"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"windows"=>""}, @version="2.0.2", @source_url="https://github.com/chef-cookbooks/windows", @issues_url="https://github.com/chef-cookbooks/windows/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000003858ad8 @cookbook_version=#<Chef::CookbookVersion:0x0000000385b2b0 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"929fb1e3a803f78aa24fb8f93722d32a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"powershell_helper.rb", "path"=>"libraries/powershell_helper.rb", "checksum"=>"60a9b235848d43b15e867de2e76f6289", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb"}, {"name"=>"version.rb", "path"=>"libraries/version.rb", "checksum"=>"4601cd96441fc2f72d57aae5e6c8c45f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version.rb"}, {"name"=>"windows_helper.rb", "path"=>"libraries/windows_helper.rb", "checksum"=>"1d31b238f62a3dccf7f52784b7d5c236", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_helper.rb"}, {"name"=>"windows_privileged.rb", "path"=>"libraries/windows_privileged.rb", "checksum"=>"e755af24657d24c6733d4124076ae67c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb"}, {"name"=>"registry_helper.rb", "path"=>"libraries/registry_helper.rb", "checksum"=>"b75d98a0470d3fd78633efa3d97918b1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/registry_helper.rb"}, {"name"=>"feature_base.rb", "path"=>"libraries/feature_base.rb", "checksum"=>"7995fb0f7bf0aadb1a9d63ac3b97be7a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/feature_base.rb"}, {"name"=>"windows_package.rb", "path"=>"libraries/windows_package.rb", "checksum"=>"cee8c54c5eb947f073a66e5ed49282ff", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_package.rb"}, {"name"=>"wmi_helper.rb", "path"=>"libraries/wmi_helper.rb", "checksum"=>"142b4bda71c1c9fa6e670f099f577221", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb"}, {"name"=>"powershell_out.rb", "path"=>"libraries/powershell_out.rb", "checksum"=>"9926131c54794ec07856dcc667048ef7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_out.rb"}, {"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"b3eba306350f870b44d4c9598fad8f2b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"eebc875d6a1c8d910ba2be263acebba1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/attributes/default.rb"}], "files"=>[], "templates"=>[], "resources"=>[{"name"=>"certificate_binding.rb", "path"=>"resources/certificate_binding.rb", "checksum"=>"9a33f76b35c5982c496d2b6db75000b1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate_binding.rb"}, {"name"=>"font.rb", "path"=>"resources/font.rb", "checksum"=>"47ec6a0a8953d85595f4858eacbe5122", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/font.rb"}, {"name"=>"certificate.rb", "path"=>"resources/certificate.rb", "checksum"=>"df606a3e6d1f4e08e7122353cd5f4f13", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate.rb"}, {"name"=>"pagefile.rb", "path"=>"resources/pagefile.rb", "checksum"=>"055186c728bab62e461a8ce86dfc419a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/pagefile.rb"}, {"name"=>"zipfile.rb", "path"=>"resources/zipfile.rb", "checksum"=>"b3d456c4a85713a8f7faf437de1211d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/zipfile.rb"}, {"name"=>"printer_port.rb", "path"=>"resources/printer_port.rb", "checksum"=>"35a62465af24dca21df99fc5b6ed35d8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer_port.rb"}, {"name"=>"printer.rb", "path"=>"resources/printer.rb", "checksum"=>"76edf8dd7a25718d6ac2b6e9b5d6d742", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer.rb"}, {"name"=>"shortcut.rb", "path"=>"resources/shortcut.rb", "checksum"=>"12eda82a0cde26366fa77d1a771d246f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/shortcut.rb"}, {"name"=>"feature.rb", "path"=>"resources/feature.rb", "checksum"=>"5ec3b02ef11edc28239760e110e462f2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature.rb"}, {"name"=>"path.rb", "path"=>"resources/path.rb", "checksum"=>"b98748b2ae98c83c77640c88a7c3c1fd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/path.rb"}, {"name"=>"http_acl.rb", "path"=>"resources/http_acl.rb", "checksum"=>"6f4a630cbb4fc8b0cae090873b354473", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/http_acl.rb"}, {"name"=>"task.rb", "path"=>"resources/task.rb", "checksum"=>"88b9a27089ff4a070f587f9fdfa11b96", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/task.rb"}, {"name"=>"auto_run.rb", "path"=>"resources/auto_run.rb", "checksum"=>"ae88b159819a12b7fddcece6eac3bd61", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/auto_run.rb"}], "providers"=>[{"name"=>"certificate_binding.rb", "path"=>"providers/certificate_binding.rb", "checksum"=>"7c71cb486d2b4eee2aec27916f6722da", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/certificate_binding.rb"}, {"name"=>"font.rb", "path"=>"providers/font.rb", "checksum"=>"e2358e2955cf41dd079451d32f80e98b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/font.rb"}, {"name"=>"certificate.rb", "path"=>"providers/certificate.rb", "checksum"=>"71a28a6d140831b66e0b7678cf6af632", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/certificate.rb"}, {"name"=>"pagefile.rb", "path"=>"providers/pagefile.rb", "checksum"=>"386a6e2a61cf544d2d4d0fe557e176c3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/pagefile.rb"}, {"name"=>"zipfile.rb", "path"=>"providers/zipfile.rb", "checksum"=>"4685415dfe3af840a73c0a756417dc52", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/zipfile.rb"}, {"name"=>"printer_port.rb", "path"=>"providers/printer_port.rb", "checksum"=>"97ceccfbcf8c159205d5c834f5d222e2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/printer_port.rb"}, {"name"=>"printer.rb", "path"=>"providers/printer.rb", "checksum"=>"6bbcabe6ba05dbb4b6d9ef1e7b350bc9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/printer.rb"}, {"name"=>"feature_servermanagercmd.rb", "path"=>"providers/feature_servermanagercmd.rb", "checksum"=>"be07c212ab219f6bdb0826bc41a4235f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_servermanagercmd.rb"}, {"name"=>"feature_powershell.rb", "path"=>"providers/feature_powershell.rb", "checksum"=>"72d38258c46148f35cc24a2badf740d7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_powershell.rb"}, {"name"=>"shortcut.rb", "path"=>"providers/shortcut.rb", "checksum"=>"a164761467d05d91f4860c6e9e93882a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/shortcut.rb"}, {"name"=>"path.rb", "path"=>"providers/path.rb", "checksum"=>"5bbbad54beabef404b7360135b91aba9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/path.rb"}, {"name"=>"http_acl.rb", "path"=>"providers/http_acl.rb", "checksum"=>"a622f8141bc2c32ec351ad39e0e3c125", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/http_acl.rb"}, {"name"=>"task.rb", "path"=>"providers/task.rb", "checksum"=>"3d44cb23e86ca20dbe3f1cb0c8156578", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/task.rb"}, {"name"=>"feature_dism.rb", "path"=>"providers/feature_dism.rb", "checksum"=>"fcea6e0ea6e0d1a24d8578647793e083", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_dism.rb"}, {"name"=>"auto_run.rb", "path"=>"providers/auto_run.rb", "checksum"=>"eb56d3f7648c8849d5ff5de3d6985bfd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/auto_run.rb"}], "root_files"=>[{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"be472b193d33305bd4a72969c77a3690", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/MAINTAINERS.md"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"83aa20fb94731fad0444b14bd09afa49", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/README.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/CONTRIBUTING.md"}, {"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"1b038f07b3d35803d72ea28dea140514", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/.foodcritic"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"580cd41eb4b173b1099e9afec84153ea", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"19aae3a460acf70b57607752b1798a82", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/CHANGELOG.md"}], "metadata"=>{"name"=>"windows", "description"=>"Provides a set of useful Windows-specific primitives.", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"windows"=>">= 0.0.0"}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"windows"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"windows"=>""}, "version"=>"2.0.2", "source_url"=>"https://github.com/chef-cookbooks/windows", "issues_url"=>"https://github.com/chef-cookbooks/windows/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.0.2", "name"=>"windows-2.0.2", "cookbook_name"=>"windows", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"9a33f76b35c5982c496d2b6db75000b1"=>nil, "47ec6a0a8953d85595f4858eacbe5122"=>nil, "df606a3e6d1f4e08e7122353cd5f4f13"=>nil, "055186c728bab62e461a8ce86dfc419a"=>nil, "b3d456c4a85713a8f7faf437de1211d5"=>nil, "35a62465af24dca21df99fc5b6ed35d8"=>nil, "76edf8dd7a25718d6ac2b6e9b5d6d742"=>nil, "12eda82a0cde26366fa77d1a771d246f"=>nil, "5ec3b02ef11edc28239760e110e462f2"=>nil, "b98748b2ae98c83c77640c88a7c3c1fd"=>nil, "6f4a630cbb4fc8b0cae090873b354473"=>nil, "88b9a27089ff4a070f587f9fdfa11b96"=>nil, "ae88b159819a12b7fddcece6eac3bd61"=>nil, "7c71cb486d2b4eee2aec27916f6722da"=>nil, "e2358e2955cf41dd079451d32f80e98b"=>nil, "71a28a6d140831b66e0b7678cf6af632"=>nil, "386a6e2a61cf544d2d4d0fe557e176c3"=>nil, "4685415dfe3af840a73c0a756417dc52"=>nil, "97ceccfbcf8c159205d5c834f5d222e2"=>nil, "6bbcabe6ba05dbb4b6d9ef1e7b350bc9"=>nil, "be07c212ab219f6bdb0826bc41a4235f"=>nil, "72d38258c46148f35cc24a2badf740d7"=>nil, "a164761467d05d91f4860c6e9e93882a"=>nil, "5bbbad54beabef404b7360135b91aba9"=>nil, "a622f8141bc2c32ec351ad39e0e3c125"=>nil, "3d44cb23e86ca20dbe3f1cb0c8156578"=>nil, "fcea6e0ea6e0d1a24d8578647793e083"=>nil, "eb56d3f7648c8849d5ff5de3d6985bfd"=>nil, "929fb1e3a803f78aa24fb8f93722d32a"=>nil, "60a9b235848d43b15e867de2e76f6289"=>nil, "4601cd96441fc2f72d57aae5e6c8c45f"=>nil, "1d31b238f62a3dccf7f52784b7d5c236"=>nil, "e755af24657d24c6733d4124076ae67c"=>nil, "b75d98a0470d3fd78633efa3d97918b1"=>nil, "7995fb0f7bf0aadb1a9d63ac3b97be7a"=>nil, "cee8c54c5eb947f073a66e5ed49282ff"=>nil, "142b4bda71c1c9fa6e670f099f577221"=>nil, "9926131c54794ec07856dcc667048ef7"=>nil, "b3eba306350f870b44d4c9598fad8f2b"=>nil, "eebc875d6a1c8d910ba2be263acebba1"=>nil, "be472b193d33305bd4a72969c77a3690"=>nil, "83aa20fb94731fad0444b14bd09afa49"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "1b038f07b3d35803d72ea28dea140514"=>nil, "580cd41eb4b173b1099e9afec84153ea"=>nil, "19aae3a460acf70b57607752b1798a82"=>nil}, @manifest_records_by_path={"resources/certificate_binding.rb"=>{"name"=>"certificate_binding.rb", "path"=>"resources/certificate_binding.rb", "checksum"=>"9a33f76b35c5982c496d2b6db75000b1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate_binding.rb"}, "resources/font.rb"=>{"name"=>"font.rb", "path"=>"resources/font.rb", "checksum"=>"47ec6a0a8953d85595f4858eacbe5122", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/font.rb"}, "resources/certificate.rb"=>{"name"=>"certificate.rb", "path"=>"resources/certificate.rb", "checksum"=>"df606a3e6d1f4e08e7122353cd5f4f13", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate.rb"}, "resources/pagefile.rb"=>{"name"=>"pagefile.rb", "path"=>"resources/pagefile.rb", "checksum"=>"055186c728bab62e461a8ce86dfc419a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/pagefile.rb"}, "resources/zipfile.rb"=>{"name"=>"zipfile.rb", "path"=>"resources/zipfile.rb", "checksum"=>"b3d456c4a85713a8f7faf437de1211d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/zipfile.rb"}, "resources/printer_port.rb"=>{"name"=>"printer_port.rb", "path"=>"resources/printer_port.rb", "checksum"=>"35a62465af24dca21df99fc5b6ed35d8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer_port.rb"}, "resources/printer.rb"=>{"name"=>"printer.rb", "path"=>"resources/printer.rb", "checksum"=>"76edf8dd7a25718d6ac2b6e9b5d6d742", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer.rb"}, "resources/shortcut.rb"=>{"name"=>"shortcut.rb", "path"=>"resources/shortcut.rb", "checksum"=>"12eda82a0cde26366fa77d1a771d246f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/shortcut.rb"}, "resources/feature.rb"=>{"name"=>"feature.rb", "path"=>"resources/feature.rb", "checksum"=>"5ec3b02ef11edc28239760e110e462f2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature.rb"}, "resources/path.rb"=>{"name"=>"path.rb", "path"=>"resources/path.rb", "checksum"=>"b98748b2ae98c83c77640c88a7c3c1fd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/path.rb"}, "resources/http_acl.rb"=>{"name"=>"http_acl.rb", "path"=>"resources/http_acl.rb", "checksum"=>"6f4a630cbb4fc8b0cae090873b354473", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/http_acl.rb"}, "resources/task.rb"=>{"name"=>"task.rb", "path"=>"resources/task.rb", "checksum"=>"88b9a27089ff4a070f587f9fdfa11b96", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/task.rb"}, "resources/auto_run.rb"=>{"name"=>"auto_run.rb", "path"=>"resources/auto_run.rb", "checksum"=>"ae88b159819a12b7fddcece6eac3bd61", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/auto_run.rb"}, "providers/certificate_binding.rb"=>{"name"=>"certificate_binding.rb", "path"=>"providers/certificate_binding.rb", "checksum"=>"7c71cb486d2b4eee2aec27916f6722da", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/certificate_binding.rb"}, "providers/font.rb"=>{"name"=>"font.rb", "path"=>"providers/font.rb", "checksum"=>"e2358e2955cf41dd079451d32f80e98b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/font.rb"}, "providers/certificate.rb"=>{"name"=>"certificate.rb", "path"=>"providers/certificate.rb", "checksum"=>"71a28a6d140831b66e0b7678cf6af632", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/certificate.rb"}, "providers/pagefile.rb"=>{"name"=>"pagefile.rb", "path"=>"providers/pagefile.rb", "checksum"=>"386a6e2a61cf544d2d4d0fe557e176c3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/pagefile.rb"}, "providers/zipfile.rb"=>{"name"=>"zipfile.rb", "path"=>"providers/zipfile.rb", "checksum"=>"4685415dfe3af840a73c0a756417dc52", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/zipfile.rb"}, "providers/printer_port.rb"=>{"name"=>"printer_port.rb", "path"=>"providers/printer_port.rb", "checksum"=>"97ceccfbcf8c159205d5c834f5d222e2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/printer_port.rb"}, "providers/printer.rb"=>{"name"=>"printer.rb", "path"=>"providers/printer.rb", "checksum"=>"6bbcabe6ba05dbb4b6d9ef1e7b350bc9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/printer.rb"}, "providers/feature_servermanagercmd.rb"=>{"name"=>"feature_servermanagercmd.rb", "path"=>"providers/feature_servermanagercmd.rb", "checksum"=>"be07c212ab219f6bdb0826bc41a4235f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_servermanagercmd.rb"}, "providers/feature_powershell.rb"=>{"name"=>"feature_powershell.rb", "path"=>"providers/feature_powershell.rb", "checksum"=>"72d38258c46148f35cc24a2badf740d7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_powershell.rb"}, "providers/shortcut.rb"=>{"name"=>"shortcut.rb", "path"=>"providers/shortcut.rb", "checksum"=>"a164761467d05d91f4860c6e9e93882a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/shortcut.rb"}, "providers/path.rb"=>{"name"=>"path.rb", "path"=>"providers/path.rb", "checksum"=>"5bbbad54beabef404b7360135b91aba9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/path.rb"}, "providers/http_acl.rb"=>{"name"=>"http_acl.rb", "path"=>"providers/http_acl.rb", "checksum"=>"a622f8141bc2c32ec351ad39e0e3c125", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/http_acl.rb"}, "providers/task.rb"=>{"name"=>"task.rb", "path"=>"providers/task.rb", "checksum"=>"3d44cb23e86ca20dbe3f1cb0c8156578", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/task.rb"}, "providers/feature_dism.rb"=>{"name"=>"feature_dism.rb", "path"=>"providers/feature_dism.rb", "checksum"=>"fcea6e0ea6e0d1a24d8578647793e083", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_dism.rb"}, "providers/auto_run.rb"=>{"name"=>"auto_run.rb", "path"=>"providers/auto_run.rb", "checksum"=>"eb56d3f7648c8849d5ff5de3d6985bfd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/auto_run.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"929fb1e3a803f78aa24fb8f93722d32a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/recipes/default.rb"}, "libraries/powershell_helper.rb"=>{"name"=>"powershell_helper.rb", "path"=>"libraries/powershell_helper.rb", "checksum"=>"60a9b235848d43b15e867de2e76f6289", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb"}, "libraries/version.rb"=>{"name"=>"version.rb", "path"=>"libraries/version.rb", "checksum"=>"4601cd96441fc2f72d57aae5e6c8c45f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version.rb"}, "libraries/windows_helper.rb"=>{"name"=>"windows_helper.rb", "path"=>"libraries/windows_helper.rb", "checksum"=>"1d31b238f62a3dccf7f52784b7d5c236", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_helper.rb"}, "libraries/windows_privileged.rb"=>{"name"=>"windows_privileged.rb", "path"=>"libraries/windows_privileged.rb", "checksum"=>"e755af24657d24c6733d4124076ae67c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb"}, "libraries/registry_helper.rb"=>{"name"=>"registry_helper.rb", "path"=>"libraries/registry_helper.rb", "checksum"=>"b75d98a0470d3fd78633efa3d97918b1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/registry_helper.rb"}, "libraries/feature_base.rb"=>{"name"=>"feature_base.rb", "path"=>"libraries/feature_base.rb", "checksum"=>"7995fb0f7bf0aadb1a9d63ac3b97be7a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/feature_base.rb"}, "libraries/windows_package.rb"=>{"name"=>"windows_package.rb", "path"=>"libraries/windows_package.rb", "checksum"=>"cee8c54c5eb947f073a66e5ed49282ff", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_package.rb"}, "libraries/wmi_helper.rb"=>{"name"=>"wmi_helper.rb", "path"=>"libraries/wmi_helper.rb", "checksum"=>"142b4bda71c1c9fa6e670f099f577221", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb"}, "libraries/powershell_out.rb"=>{"name"=>"powershell_out.rb", "path"=>"libraries/powershell_out.rb", "checksum"=>"9926131c54794ec07856dcc667048ef7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_out.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"b3eba306350f870b44d4c9598fad8f2b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"eebc875d6a1c8d910ba2be263acebba1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/attributes/default.rb"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"be472b193d33305bd4a72969c77a3690", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/MAINTAINERS.md"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"83aa20fb94731fad0444b14bd09afa49", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/README.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/CONTRIBUTING.md"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"1b038f07b3d35803d72ea28dea140514", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/.foodcritic"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"580cd41eb4b173b1099e9afec84153ea", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"19aae3a460acf70b57607752b1798a82", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/CHANGELOG.md"}}>>]
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_auth_request_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000228d2f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/recipes/http_auth_request_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000228d640>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_auth_request_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_geoip_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000021aaf70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/recipes/http_geoip_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000021ab0b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_geoip_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_geoip_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

country_dat          = "#{node['nginx']['geoip']['path']}/GeoIP.dat"
country_src_filename = ::File.basename(node['nginx']['geoip']['country_dat_url'])
country_src_filepath = "#{Chef::Config['file_cache_path']}/#{country_src_filename}"
city_dat             = nil
city_src_filename    = ::File.basename(node['nginx']['geoip']['city_dat_url'])
city_src_filepath    = "#{Chef::Config['file_cache_path']}/#{city_src_filename}"
geolib_filename      = ::File.basename(node['nginx']['geoip']['lib_url'])
geolib_filepath      = "#{Chef::Config['file_cache_path']}/#{geolib_filename}"

remote_file geolib_filepath do
  source   node['nginx']['geoip']['lib_url']
  checksum node['nginx']['geoip']['lib_checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

bash 'extract_geolib' do
  cwd  ::File.dirname(geolib_filepath)
  code <<-EOH
    tar xzvf #{geolib_filepath} -C #{::File.dirname(geolib_filepath)}
    cd GeoIP-#{node['nginx']['geoip']['lib_version']}
    ./configure
    make && make install
  EOH
  environment('echo' => 'echo') if node['platform_family'] == 'rhel' && node['platform_version'].to_f < 6
  creates    "/usr/local/lib/libGeoIP.so.#{node['nginx']['geoip']['lib_version']}"
  subscribes :run, "remote_file[#{geolib_filepath}]"
end

directory node['nginx']['geoip']['path'] do
  owner     'root'
  group     node['root_group']
  mode      '0755'
  recursive true
end

remote_file country_src_filepath do
  not_if do
    File.exist?(country_src_filepath) &&
      File.mtime(country_src_filepath) > Time.now - 86_400
  end
  source   node['nginx']['geoip']['country_dat_url']
  checksum node['nginx']['geoip']['country_dat_checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

bash 'gunzip_geo_lite_country_dat' do
  code <<-EOH
    gunzip -c "#{country_src_filepath}" > #{country_dat}
  EOH
  creates country_dat
end

if node['nginx']['geoip']['enable_city']
  city_dat  = "#{node['nginx']['geoip']['path']}/GeoLiteCity.dat"

  remote_file city_src_filepath do
    not_if do
      File.exist?(city_src_filepath) &&
        File.mtime(city_src_filepath) > Time.now - 86_400
    end
    source   node['nginx']['geoip']['city_dat_url']
    checksum node['nginx']['geoip']['city_dat_checksum']
    owner    'root'
    group    node['root_group']
    mode     '0644'
  end

  bash 'gunzip_geo_lite_city_dat' do
    code <<-EOH
      gunzip -c "#{city_src_filepath}" > #{city_dat}
    EOH
    creates city_dat
  end
end

template "#{node['nginx']['dir']}/conf.d/http_geoip.conf" do
  source 'modules/http_geoip.conf.erb'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  variables(
    :country_dat => country_dat,
    :city_dat => city_dat
  )
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_geoip_module', "--with-ld-opt='-Wl,-R,/usr/local/lib -L /usr/local/lib'"]
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/syslog_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020d8458
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/syslog_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000020d8a20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "syslog_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_spdy_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020346a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/http_spdy_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002034790>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_spdy_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_spdy_module
#
# Author:: Christoph Buente (<christoph@meinekleinefarm.org>)
#
# Copyright 2013, MeinekleineFarm.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_spdy_module']
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_mp4_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f81ac8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/http_mp4_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f81e10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_mp4_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_auth_request_module
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright 2013, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Documentation:
#   http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
if node['nginx']['source']['version'] >= '1.5.4'
  node.run_state['nginx_configure_flags'] =
    node.run_state['nginx_configure_flags'] | ['--with-http_auth_request_module']
else
  arm_src_filename = ::File.basename(node['nginx']['auth_request']['url'])
  arm_src_filepath = "#{Chef::Config['file_cache_path']}/#{arm_src_filename}"
  arm_extract_path = "#{Chef::Config['file_cache_path']}/nginx_auth_request/#{node['nginx']['auth_request']['checksum']}"

  remote_file arm_src_filepath do
    source   node['nginx']['auth_request']['url']
    checksum node['nginx']['auth_request']['checksum']
    owner    'root'
    group    node['root_group']
    mode     '0644'
  end

  bash 'extract_auth_request_module' do
    cwd ::File.dirname(arm_src_filepath)
    code <<-EOH
      mkdir -p #{arm_extract_path}
      tar xzf #{arm_src_filename} -C #{arm_extract_path}
      mv #{arm_extract_path}/*/* #{arm_extract_path}/
    EOH
    not_if { ::File.exist?(arm_extract_path) }
  end

  node.run_state['nginx_configure_flags'] =
    node.run_state['nginx_configure_flags'] | ["--add-module=#{arm_extract_path}"]
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_auth_request_module.rb to tempfile /tmp/chef-rest20160913-19215-nqvnpj
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_auth_request_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Creating directory /root/.chef/cookbooks
[2016-09-13T12:59:43+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx
[2016-09-13T12:59:43+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/recipes
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_geoip_module.rb to tempfile /tmp/chef-rest20160913-19215-sy4wst
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_geoip_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/commons.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001ecd8c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/commons.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001ecdac8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "commons.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_spdy_module.rb to tempfile /tmp/chef-rest20160913-19215-9m6zg8
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_spdy_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_mp4_module']
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: syslog_module
#
# Author:: Bob Ziuchkovski (<bob@bz-technology.com>)
#
# Copyright 2014, UserTesting
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

nginx_src = "#{Chef::Config['file_cache_path']}/nginx-#{node['nginx']['source']['version']}"
nginx_syslog_src = "#{Chef::Config['file_cache_path']}/nginx_syslog_module"

major, minor, patch = node['nginx']['source']['version'].split('.').map { |s| Integer(s) }
fail 'Unsupported nginx version' if major != 1
case minor
when 2
  case patch
  when 0..6
    syslog_patch = 'syslog_1.2.0.patch'
  else
    syslog_patch = 'syslog_1.2.7.patch'
  end
when 3
  case patch
  when 0..9
    syslog_patch = 'syslog_1.2.0.patch'
  when 10..13
    syslog_patch = 'syslog_1.3.11.patch'
  else
    syslog_patch = 'syslog_1.3.14.patch'
  end
when 4
  syslog_patch = 'syslog_1.4.0.patch'
when 5..6
  syslog_patch = 'syslog_1.5.6.patch'
when 7
  syslog_patch = 'syslog_1.7.0.patch'
else
  fail 'Unsupported nginx version'
end

git nginx_syslog_src do
  repository node['nginx']['syslog']['git_repo']
  revision node['nginx']['syslog']['git_revision']
  action :sync
  user 'root'
  group 'root'
end

execute 'apply_nginx_syslog_patch' do
  cwd  nginx_src
  command "patch -p1 < #{nginx_syslog_src}/#{syslog_patch}"
  not_if "patch -p1 --dry-run --reverse --silent < #{nginx_syslog_src}/#{syslog_patch}", :cwd => nginx_src
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{nginx_syslog_src}"]
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/syslog_module.rb to tempfile /tmp/chef-rest20160913-19215-89lpku
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/source.rb
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/syslog_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_mp4_module.rb to tempfile /tmp/chef-rest20160913-19215-siu7r1
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_mp4_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000157a980
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000157aac0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "source.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_ssl_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e46b68
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/http_ssl_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e47068>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_ssl_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/ohai_plugin.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000013c1198
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/ohai_plugin.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000013c1828>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "ohai_plugin.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/ngx_lua_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001384040
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/ngx_lua_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000013842c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "ngx_lua_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_gzip_static_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: commons
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'nginx::commons_dir'
include_recipe 'nginx::commons_script'
include_recipe 'nginx::commons_conf'
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons.rb to tempfile /tmp/chef-rest20160913-19215-12r0ssy
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_echo_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000013a33f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/http_echo_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000013a36e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_echo_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_ssl_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_ssl_module']
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/commons.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_ssl_module.rb to tempfile /tmp/chef-rest20160913-19215-1ixznbj
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_ssl_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_stub_status_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_perl_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000012f3b30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/recipes/http_gzip_static_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000012f3d60>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_gzip_static_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_gzip_static_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

template "#{node['nginx']['dir']}/conf.d/http_gzip_static.conf" do
  source 'modules/http_gzip_static.conf.erb'
  owner 'root'
  group node['root_group']
  mode '0644'
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_gzip_static_module']
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_gzip_static_module.rb to tempfile /tmp/chef-rest20160913-19215-1fnobew
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_gzip_static_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: source
#
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Joshua Timberman (<joshua@chef.io>)
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2009-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This is for Chef 10 and earlier where attributes aren't loaded
# deterministically (resolved in Chef 11).
node.load_attribute_by_short_filename('source', 'nginx') if node.respond_to?(:load_attribute_by_short_filename)

nginx_url = node['nginx']['source']['url'] ||
            "http://nginx.org/download/nginx-#{node['nginx']['source']['version']}.tar.gz"

node.set['nginx']['binary']          = node['nginx']['source']['sbin_path']
node.set['nginx']['daemon_disable']  = true

unless node['nginx']['source']['use_existing_user']
  user node['nginx']['user'] do
    system true
    shell  '/bin/false'
    home   '/var/www'
  end
end

include_recipe 'nginx::ohai_plugin'
include_recipe 'nginx::commons_dir'
include_recipe 'nginx::commons_script'
include_recipe 'build-essential::default'

src_filepath  = "#{Chef::Config['file_cache_path'] || '/tmp'}/nginx-#{node['nginx']['source']['version']}.tar.gz"
packages = value_for_platform_family(
  %w(rhel fedora suse) => %w(pcre-devel openssl-devel),
  %w(gentoo)      => [],
  %w(default)     => %w(libpcre3 libpcre3-dev libssl-dev)
)

packages.each do |name|
  package name
end

remote_file nginx_url do
  source   nginx_url
  checksum node['nginx']['source']['checksum']
  path     src_filepath
  backup   false
end

node.run_state['nginx_force_recompile'] = false
node.run_state['nginx_configure_flags'] =
  node['nginx']['source']['default_configure_flags'] | node['nginx']['configure_flags']

include_recipe 'nginx::commons_conf'

cookbook_file "#{node['nginx']['dir']}/mime.types" do
  source 'mime.types'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end

# source install depends on the existence of the `tar` package
package 'tar'

# Unpack downloaded source so we could apply nginx patches
# in custom modules - example http://yaoweibin.github.io/nginx_tcp_proxy_module/
# patch -p1 < /path/to/nginx_tcp_proxy_module/tcp.patch
bash 'unarchive_source' do
  cwd  ::File.dirname(src_filepath)
  code <<-EOH
    tar zxf #{::File.basename(src_filepath)} -C #{::File.dirname(src_filepath)}
  EOH
  not_if { ::File.directory?("#{Chef::Config['file_cache_path'] || '/tmp'}/nginx-#{node['nginx']['source']['version']}") }
end

node['nginx']['source']['modules'].each do |ngx_module|
  include_recipe ngx_module
end

configure_flags       = node.run_state['nginx_configure_flags']
nginx_force_recompile = node.run_state['nginx_force_recompile']

bash 'compile_nginx_source' do
  cwd  ::File.dirname(src_filepath)
  code <<-EOH
    cd nginx-#{node['nginx']['source']['version']} &&
    ./configure #{node.run_state['nginx_configure_flags'].join(' ')} &&
    make && make install
  EOH

  not_if do
    nginx_force_recompile == false &&
      node.automatic_attrs['nginx'] &&
      node.automatic_attrs['nginx']['version'] == node['nginx']['source']['version'] &&
      node.automatic_attrs['nginx']['configure_arguments'].sort == configure_flags.sort
  end

  notifies :restart, 'service[nginx]'
  notifies :reload,  'ohai[reload_nginx]', :immediately
end

case node['nginx']['init_style']
when 'runit'
  node.set['nginx']['src_binary'] = node['nginx']['binary']
  include_recipe 'runit::default'

  runit_service 'nginx'

  service 'nginx' do
    supports       :status => true, :restart => true, :reload => true
    reload_command "#{node['runit']['sv_bin']} hup #{node['runit']['service_dir']}/nginx"
  end
when 'bluepill'
  include_recipe 'bluepill::default'

  template "#{node['bluepill']['conf_dir']}/nginx.pill" do
    source 'nginx.pill.erb'
    mode   '0644'
  end

  bluepill_service 'nginx' do
    action [:enable, :load]
  end

  service 'nginx' do
    supports       :status => true, :restart => true, :reload => true
    reload_command "[[ -f #{node['nginx']['pid']} ]] && kill -HUP `cat #{node['nginx']['pid']}` || true"
    action         :nothing
  end
when 'upstart'
  # we rely on this to set up nginx.conf with daemon disable instead of doing
  # it in the upstart init script.
  node.set['nginx']['daemon_disable']  = node['nginx']['upstart']['foreground']

  template '/etc/init/nginx.conf' do
    source 'nginx-upstart.conf.erb'
    owner  'root'
    group  node['root_group']
    mode   '0644'
  end

  service 'nginx' do
    provider Chef::Provider::Service::Upstart
    supports :status => true, :restart => true, :reload => true
    action   :nothing
  end
else
  node.set['nginx']['daemon_disable'] = false

  generate_init = true

  case node['platform']
  when 'gentoo'
    generate_template = false
  when 'debian', 'ubuntu'
    generate_template = true
    defaults_path    = '/etc/default/nginx'
  when 'freebsd'
    generate_init    = false
  else
    generate_template = true
    defaults_path    = '/etc/sysconfig/nginx'
  end

  template '/etc/init.d/nginx' do
    source 'nginx.init.erb'
    owner  'root'
    group  node['root_group']
    mode   '0755'
  end if generate_init

  if generate_template
    template defaults_path do
      source 'nginx.sysconfig.erb'
      owner  'root'
      group  node['root_group']
      mode   '0644'
    end
  end

  service 'nginx' do
    supports :status => true, :restart => true, :reload => true
    action   :enable
  end
end

node.run_state.delete('nginx_configure_flags')
node.run_state.delete('nginx_force_recompile')
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/source.rb to tempfile /tmp/chef-rest20160913-19215-2000bm
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/source.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/lua.rb
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_echo_module
#
# Author:: Danial Pearce (<danial@cushycms.com>)
#
# Copyright 2012-2013, CushyCMS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

echo_src_filename = "echo-nginx-module-v#{node['nginx']['echo']['version']}.tar.gz"
echo_src_filepath = "#{Chef::Config['file_cache_path']}/#{echo_src_filename}"
echo_extract_path = "#{Chef::Config['file_cache_path']}/nginx_echo_module/#{node['nginx']['echo']['checksum']}"

remote_file echo_src_filepath do
  source   node['nginx']['echo']['url']
  checksum node['nginx']['echo']['checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

bash 'extract_http_echo_module' do
  cwd ::File.dirname(echo_src_filepath)
  code <<-EOH
    mkdir -p #{echo_extract_path}
    tar xzf #{echo_src_filename} -C #{echo_extract_path}
    mv #{echo_extract_path}/*/* #{echo_extract_path}/
  EOH

  not_if { ::File.exist?(echo_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{echo_extract_path}"]
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_echo_module.rb to tempfile /tmp/chef-rest20160913-19215-1r4ql51
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_echo_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/upload_progress_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/ngx_devel_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/http_realip_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f12428
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/recipes/http_stub_status_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f12518>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_stub_status_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000135f330
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/http_perl_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000135f4c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_perl_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipes:: lua
#
# Author:: Arthur Freyman (<afreyman@riotgames.com>)
#
# Copyright 2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

lua_src_filename = ::File.basename(node['nginx']['lua']['url'])
lua_src_filepath = "#{Chef::Config['file_cache_path']}/#{lua_src_filename}"
lua_extract_path = "#{Chef::Config['file_cache_path']}/nginx-lua-#{node['nginx']['lua']['version']}"

remote_file lua_src_filepath do
  source   node['nginx']['lua']['url']
  checksum node['nginx']['lua']['checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

bash 'extract_lua_module' do
  cwd  ::File.dirname(lua_src_filepath)
  code <<-EOH
    mkdir -p #{lua_extract_path}
    tar xzf #{lua_src_filename} -C #{lua_extract_path}
  EOH
  not_if { ::File.exist?(lua_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{lua_extract_path}/lua-nginx-module-#{node['nginx']['lua']['version']}"]

include_recipe 'nginx::lua'
include_recipe 'nginx::ngx_devel_module'
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ngx_lua_module.rb to tempfile /tmp/chef-rest20160913-19215-15vrkke
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/ngx_lua_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/commons_script.rb
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/headers_more_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: ohai_plugin
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

ohai 'reload_nginx' do
  plugin 'nginx'
  action :nothing
end

template "#{node['ohai']['plugin_path']}/nginx.rb" do
  source 'plugins/nginx.rb.erb'
  owner  'root'
  group  node['root_group']
  mode   '0755'
  notifies :reload, 'ohai[reload_nginx]', :immediately
end

include_recipe 'ohai::default'
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ohai_plugin.rb to tempfile /tmp/chef-rest20160913-19215-1uh2i1f
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/ohai_plugin.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e4d330
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/lua.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e4d4e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "lua.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003de37f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/recipes/upload_progress_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003de3980>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "upload_progress_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f355b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/ngx_devel_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f356a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "ngx_devel_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000013760f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/recipes/http_realip_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001376508>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "http_realip_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_stub_status_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'nginx::authorized_ips'

template 'nginx_status' do
  path "#{node['nginx']['dir']}/sites-available/nginx_status"
  source 'modules/nginx_status.erb'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end

nginx_site 'nginx_status'

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_stub_status_module']
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_perl_module
#
# Author:: Akzhan Abdulin (<akzhan.abdulin@gmail.com>)
#
# Copyright 2012-2013, REG.RU
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_perl_module']
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_stub_status_module.rb to tempfile /tmp/chef-rest20160913-19215-cwq3fp
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_perl_module.rb to tempfile /tmp/chef-rest20160913-19215-1fab82z
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_stub_status_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_perl_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003b9f778
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/commons_script.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003b9fae8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "commons_script.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/openssl_source.rb
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b452f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/recipes/headers_more_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b45438>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "headers_more_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/package.rb
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: upload_progress_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

upm_src_filename = ::File.basename(node['nginx']['upload_progress']['url'])
upm_src_filepath = "#{Chef::Config['file_cache_path']}/#{upm_src_filename}"
upm_extract_path = "#{Chef::Config['file_cache_path']}/nginx_upload_progress/#{node['nginx']['upload_progress']['checksum']}"

remote_file upm_src_filepath do
  source   node['nginx']['upload_progress']['url']
  checksum node['nginx']['upload_progress']['checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

template "#{node['nginx']['dir']}/conf.d/upload_progress.conf" do
  source 'modules/upload_progress.erb'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end

bash 'extract_upload_progress_module' do
  cwd  ::File.dirname(upm_src_filepath)
  code <<-EOH
    mkdir -p #{upm_extract_path}
    tar xzf #{upm_src_filename} -C #{upm_extract_path}
    mv #{upm_extract_path}/*/* #{upm_extract_path}/
  EOH
  not_if { ::File.exist?(upm_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{upm_extract_path}"]
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/upload_progress_module.rb to tempfile /tmp/chef-rest20160913-19215-1vmly6r
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/upload_progress_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: default
#
# Copyright 2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

luajit_src_filename = ::File.basename(node['nginx']['luajit']['url'])
luajit_src_filepath = "#{Chef::Config['file_cache_path']}/#{luajit_src_filename}"
luajit_extract_path = "#{Chef::Config['file_cache_path']}/luajit-#{node['nginx']['luajit']['version']}"

remote_file luajit_src_filepath do
  source   node['nginx']['luajit']['url']
  checksum node['nginx']['luajit']['checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

bash 'extract_luajit' do
  cwd  ::File.dirname(luajit_src_filepath)
  code <<-EOH
    mkdir -p #{luajit_extract_path}
    tar xzf #{luajit_src_filename} -C #{luajit_extract_path}
    cd luajit-#{node['nginx']['luajit']['version']}/LuaJIT-#{node['nginx']['luajit']['version']}
    make && make install
    export LUAJIT_INC="/usr/local/include/luajit-2.0"
    export LUAJIT_LIB="usr/local/lib"
  EOH
  not_if { ::File.exist?(luajit_extract_path) }
end

package 'lua-devel' do
  action :install
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipes:: devel
#
# Author:: Arthur Freyman (<afreyman@riotgames.com>)
#
# Copyright 2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

devel_src_filename = ::File.basename(node['nginx']['devel']['url'])
devel_src_filepath = "#{Chef::Config['file_cache_path']}/#{devel_src_filename}"
devel_extract_path = "#{Chef::Config['file_cache_path']}/nginx-devel-#{node['nginx']['devel']['version']}"

remote_file devel_src_filepath do
  source   node['nginx']['devel']['url']
  checksum node['nginx']['devel']['checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

bash 'extract_devel_module' do
  cwd  ::File.dirname(devel_src_filepath)
  code <<-EOH
    mkdir -p #{devel_extract_path}
    tar xzf #{devel_src_filename} -C #{devel_extract_path}
  EOH
  not_if { ::File.exist?(devel_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{devel_extract_path}/ngx_devel_kit-#{node['nginx']['devel']['version']}"]
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: http_realip_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Documentation: http://wiki.nginx.org/HttpRealIpModule

# Currently only accepts X-Forwarded-For or X-Real-IP
node.default['nginx']['realip']['header']            = 'X-Forwarded-For'
node.default['nginx']['realip']['addresses']         = ['127.0.0.1']
node.default['nginx']['realip']['real_ip_recursive'] = 'off'

template "#{node['nginx']['dir']}/conf.d/http_realip.conf" do
  source 'modules/http_realip.conf.erb'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_realip_module']
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/http_realip_module.rb to tempfile /tmp/chef-rest20160913-19215-1c9qtlm
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/http_realip_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ngx_devel_module.rb to tempfile /tmp/chef-rest20160913-19215-k5njp0
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/default.rb
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/lua.rb to tempfile /tmp/chef-rest20160913-19215-1x17xg0
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/ngx_devel_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/repo_passenger.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e86c20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/openssl_source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e86ce8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "openssl_source.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: openssl_source
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright 2013, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

src_filename = ::File.basename(node['nginx']['openssl_source']['url'])
src_filepath = "#{Chef::Config['file_cache_path']}/#{src_filename}"
extract_path = "#{Chef::Config['file_cache_path']}/openssl-#{node['nginx']['openssl_source']['version']}"

remote_file src_filepath do
  source node['nginx']['openssl_source']['url']
  owner  'root'
  group  node['root_group']
  mode   '0644'
  not_if { ::File.exist?(src_filepath) }
end

bash 'extract_openssl' do
  cwd  ::File.dirname(src_filepath)
  code <<-EOH
    mkdir -p #{extract_path}
    tar xzf #{src_filename} -C #{extract_path}
    mv #{extract_path}/*/* #{extract_path}/
  EOH
  not_if { ::File.exist?(extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--with-openssl=#{extract_path}"]
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/openssl_source.rb to tempfile /tmp/chef-rest20160913-19215-m3tebk
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: headers_more_module
#
# Author:: Lucas Jandrew (<ljandrew@riotgames.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tar_location = "#{Chef::Config['file_cache_path']}/headers_more.tar.gz"
module_location = "#{Chef::Config['file_cache_path']}/headers_more/#{node['nginx']['headers_more']['source_checksum']}"

remote_file tar_location do
  source   node['nginx']['headers_more']['source_url']
  checksum node['nginx']['headers_more']['source_checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

directory module_location do
  owner     'root'
  group     node['root_group']
  mode      '0755'
  recursive true
  action    :create
end

bash 'extract_headers_more' do
  cwd  ::File.dirname(tar_location)
  user 'root'
  code <<-EOH
    tar -zxf #{tar_location} -C #{module_location}
  EOH
  not_if { ::File.exist?("#{module_location}/headers-more-nginx-module-#{node['nginx']['headers_more']['version']}/config") }
end

node.run_state['nginx_configure_flags'] =
    node.run_state['nginx_configure_flags'] | ["--add-module=#{module_location}/headers-more-nginx-module-#{node['nginx']['headers_more']['version']}/"]
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/headers_more_module.rb to tempfile /tmp/chef-rest20160913-19215-1otmvc1
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/lua.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/openssl_source.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/headers_more_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a8ef28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/package.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a8eff0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "package.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/ipv6.rb
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/passenger.rb
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039d34a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039d35c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/socketproxy.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000386ae90
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/socketproxy.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000386af58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "socketproxy.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: common/script
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

%w(nxensite nxdissite).each do |nxscript|
  template "#{node['nginx']['script_dir']}/#{nxscript}" do
    source "#{nxscript}.erb"
    mode   '0755'
    owner  'root'
    group  node['root_group']
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/naxsi_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037c9c98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/naxsi_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037c9dd8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "naxsi_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/commons_conf.rb
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_script.rb to tempfile /tmp/chef-rest20160913-19215-okygn2
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/commons_script.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003902308
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/ipv6.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003902470>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "ipv6.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038be8b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/passenger.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038bea40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "passenger.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/set_misc.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003753480
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/set_misc.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003753548>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "set_misc.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039c57e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/repo_passenger.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039c58a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "repo_passenger.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
include_recipe 'nginx::commons_dir'

directory node['nginx']['socketproxy']['root'] do
  owner node['nginx']['socketproxy']['app_owner']
  group node['nginx']['socketproxy']['app_owner']
  mode 00755
  action :create
end

context_names = node['nginx']['socketproxy']['apps'].map do |_app, app_conf|
  app_conf['context_name']
end

fail 'More than one app has the same context_name configured.' if context_names.uniq.length != context_names.length

template node['nginx']['dir'] + '/sites-available/socketproxy.conf' do
  source 'modules/socketproxy.conf.erb'
  owner 'root'
  group 'root'
  mode 00644
  notifies :reload, 'service[nginx]', :delayed
end

link node['nginx']['dir'] + '/sites-enabled/socketproxy.conf' do
  to node['nginx']['dir'] + '/sites-available/socketproxy.conf'
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/socketproxy.rb to tempfile /tmp/chef-rest20160913-19215-19xffhd
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: package
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'nginx::ohai_plugin'

if platform_family?('rhel')
  if node['nginx']['repo_source'] == 'epel'
    include_recipe 'yum-epel'
  elsif node['nginx']['repo_source'] == 'nginx'
    include_recipe 'nginx::repo'
    package_install_opts = '--disablerepo=* --enablerepo=nginx'
  elsif node['nginx']['repo_source'].to_s.empty?
    log "node['nginx']['repo_source'] was not set, no additional yum repositories will be installed." do
      level :debug
    end
  else
    fail ArgumentError, "Unknown value '#{node['nginx']['repo_source']}' was passed to the nginx cookbook."
  end
elsif platform_family?('debian')
  include_recipe 'nginx::repo_passenger' if node['nginx']['repo_source'] == 'passenger'
  include_recipe 'nginx::repo'           if node['nginx']['repo_source'] == 'nginx'
end

package node['nginx']['package_name'] do
  options package_install_opts
  notifies :reload, 'ohai[reload_nginx]', :immediately
  not_if 'which nginx'
end

service 'nginx' do
  supports :status => true, :restart => true, :reload => true
  action   :enable
end

include_recipe 'nginx::commons'
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003792720
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/commons_conf.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003792888>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "commons_conf.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/package.rb to tempfile /tmp/chef-rest20160913-19215-5orjym
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/package.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/socketproxy.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: naxsi_module
#
# Author:: Artiom Lunev (<artiom.lunev@gmail.com>)
#
# Copyright 2012-2013, Artiom Lunev
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

cookbook_file "#{node['nginx']['dir']}/naxsi_core.rules" do
  source 'naxsi_core.rules'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end

naxsi_src_filename = ::File.basename(node['nginx']['naxsi']['url'])
naxsi_src_filepath = "#{Chef::Config['file_cache_path']}/#{naxsi_src_filename}"
naxsi_extract_path = "#{Chef::Config['file_cache_path']}/nginx-naxsi-#{node['nginx']['naxsi']['version']}"

remote_file naxsi_src_filepath do
  source   node['nginx']['naxsi']['url']
  checksum node['nginx']['naxsi']['checksum']
  owner    'root'
  group    node['root_group']
  mode     '0644'
end

bash 'extract_naxsi_module' do
  cwd  ::File.dirname(naxsi_src_filepath)
  code <<-EOH
    mkdir -p #{naxsi_extract_path}
    tar xzf #{naxsi_src_filename} -C #{naxsi_extract_path}
  EOH
  not_if { ::File.exist?(naxsi_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{naxsi_extract_path}/naxsi-#{node['nginx']['naxsi']['version']}/naxsi_src"]
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/naxsi_module.rb to tempfile /tmp/chef-rest20160913-19215-1j0jp2j
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: ipv6
#
# Author:: Alan Harper (alan@sct.com.au)
#
# Copyright 2013 Alan Harper
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-ipv6']
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/naxsi_module.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: Passenger
#
# Copyright 2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

packages = value_for_platform_family(
  %w(rhel)   => node['nginx']['passenger']['packages']['rhel'],
  %w(fedora)   => node['nginx']['passenger']['packages']['fedora'],
  %w(debian) => node['nginx']['passenger']['packages']['debian']
)

unless packages.empty?
  packages.each do |name|
    package name
  end
end

gem_package 'rake' if node['nginx']['passenger']['install_rake']

if node['nginx']['passenger']['install_method'] == 'package'
  package node['nginx']['package_name']
  package 'passenger'
elsif node['nginx']['passenger']['install_method'] == 'source'

  gem_package 'passenger' do
    action     :install
    version    node['nginx']['passenger']['version']
    gem_binary node['nginx']['passenger']['gem_binary'] if node['nginx']['passenger']['gem_binary']
  end

  node.run_state['nginx_configure_flags'] =
    node.run_state['nginx_configure_flags'] | ["--add-module=#{node['nginx']['passenger']['root']}/ext/nginx"]

end

template "#{node['nginx']['dir']}/conf.d/passenger.conf" do
  source 'modules/passenger.conf.erb'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/passenger.rb to tempfile /tmp/chef-rest20160913-19215-uf06ud
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/passenger.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/definitions/nginx_site.rb
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/repo.rb
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
# Cookbook Name:: nginx
# Recipe:: repo_passenger
# Author:: Jose Alberto Suarez Lopez <ja@josealberto.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

case node['platform_family']
when 'rhel', 'fedora'

  log 'There is not official phusion passenger repo for redhat based systems.' do
    level :info
  end

when 'debian'
  include_recipe 'apt::default'
  package 'apt-transport-https'

  apt_repository 'phusionpassenger' do
    uri 'https://oss-binaries.phusionpassenger.com/apt/passenger'
    distribution node['lsb']['codename']
    components %w(main)
    deb_src true
    keyserver 'keyserver.ubuntu.com'
    key '561F9B9CAC40B2F7'
  end

  include_recipe 'nginx::passenger'
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/repo_passenger.rb to tempfile /tmp/chef-rest20160913-19215-3uk406
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/ipv6.rb to tempfile /tmp/chef-rest20160913-19215-19vlr1k
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/repo_passenger.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipes:: set_misc
#

set_misc_src_filename = ::File.basename(node['nginx']['set_misc']['url'])
set_misc_src_filepath = "#{Chef::Config['file_cache_path']}/#{set_misc_src_filename}"
set_misc_extract_path = "#{Chef::Config['file_cache_path']}/nginx-set_misc-#{node['nginx']['set_misc']['version']}"

remote_file set_misc_src_filepath do
  source   node['nginx']['set_misc']['url']
  checksum node['nginx']['set_misc']['checksum']
  owner    'root'
  group    'root'
  mode     '0644'
end

bash 'extract_set_misc_module' do
  cwd  ::File.dirname(set_misc_src_filepath)
  code <<-EOH
    mkdir -p #{set_misc_extract_path}
    tar xzf #{set_misc_src_filename} -C #{set_misc_extract_path}
  EOH
  not_if { ::File.exist?(set_misc_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{set_misc_extract_path}/set-misc-nginx-module-#{node['nginx']['set_misc']['version']}"]

include_recipe 'nginx::ngx_devel_module'
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: common/conf
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

template 'nginx.conf' do
  path   "#{node['nginx']['dir']}/nginx.conf"
  source node['nginx']['conf_template']
  cookbook node['nginx']['conf_cookbook']
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end

template "#{node['nginx']['dir']}/sites-available/default" do
  source 'default-site.erb'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end

nginx_site 'default' do
  enable node['nginx']['default_site_enabled']
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/set_misc.rb to tempfile /tmp/chef-rest20160913-19215-1p954fg
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_conf.rb to tempfile /tmp/chef-rest20160913-19215-v6duu7
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/authorized_ips.rb
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/commons_conf.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x000000022488b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/authorized_ips.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002248130>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "authorized_ips.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/set_misc.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/commons_dir.rb
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: default
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe "nginx::#{node['nginx']['install_method']}"

service 'nginx' do
  supports :status => true, :restart => true, :reload => true
  action   :start
end

node['nginx']['default']['modules'].each do |ngx_module|
  include_recipe "nginx::#{ngx_module}"
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000214bbb0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/definitions/nginx_site.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002154170>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "definitions",
   "nginx_site.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-zg7io1
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000239efe8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/repo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000239f128>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "repo.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/default.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/recipes/pagespeed_module.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000218b198
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/pagespeed_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000218b350>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "pagespeed_module.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/devel.rb
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/libraries/matchers.rb
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/ipv6.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002203170
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/recipes/commons_dir.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002203b48>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "recipes",
   "commons_dir.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: authorized_ips
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.default['nginx']['remote_ip_var']  = 'remote_addr'
node.default['nginx']['authorized_ips'] = ['127.0.0.1/32']

template 'authorized_ip' do
  path   "#{node['nginx']['dir']}/authorized_ip"
  source 'modules/authorized_ip.erb'
  owner  'root'
  group  node['root_group']
  mode   '0644'
  notifies :reload, 'service[nginx]', :delayed
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/authorized_ips.rb to tempfile /tmp/chef-rest20160913-19215-1sua5ig
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: repo
# Author:: Nick Rycar <nrycar@bluebox.net>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

case node['platform_family']
when 'rhel', 'fedora'

  yum_repository 'nginx' do
    description 'Nginx.org Repository'
    baseurl         node['nginx']['upstream_repository']
    gpgkey      'http://nginx.org/keys/nginx_signing.key'
    action :create
  end

when 'debian'
  include_recipe 'apt::default'

  apt_repository 'nginx' do
    uri          node['nginx']['upstream_repository']
    distribution node['lsb']['codename']
    components   %w(nginx)
    deb_src      true
    key          'http://nginx.org/keys/nginx_signing.key'
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/authorized_ips.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/repo.rb to tempfile /tmp/chef-rest20160913-19215-1l0mf9p
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Definition:: nginx_site
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

define :nginx_site, :enable => true, :timing => :delayed do
  if params[:enable]

    if params[:template]
      template "#{node['nginx']['dir']}/sites-available/#{params[:name]}" do
        source params[:template]
        variables(params[:variables])
      end
    end

    execute "nxensite #{params[:name]}" do
      command "#{node['nginx']['script_dir']}/nxensite #{params[:name]}"
      notifies :reload, 'service[nginx]', params[:timing]
      not_if do
        ::File.symlink?("#{node['nginx']['dir']}/sites-enabled/#{params[:name]}") ||
          ::File.symlink?("#{node['nginx']['dir']}/sites-enabled/000-#{params[:name]}")
      end
    end
  else
    execute "nxdissite #{params[:name]}" do
      command "#{node['nginx']['script_dir']}/nxdissite #{params[:name]}"
      notifies :reload, 'service[nginx]', params[:timing]
      only_if do
        ::File.symlink?("#{node['nginx']['dir']}/sites-enabled/#{params[:name]}") ||
          ::File.symlink?("#{node['nginx']['dir']}/sites-enabled/000-#{params[:name]}")
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/definitions/nginx_site.rb to tempfile /tmp/chef-rest20160913-19215-1u8349e
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/syslog.rb
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f1c330
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/syslog.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f1c470>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "syslog.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/pagespeed.rb
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/recipes/repo.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f0dcb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f0de48>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)
  # Custom ChefSpec matchers
  module ChefSpec::Matchers
    RSpec::Matchers.define :enable_nginx_site do |site|
      match do |chef_run|
        chef_run.resource_collection.all_resources.any? do |resource|
          resource.resource_name == :execute && resource.name =~ /.*nxensite.*#{site}/
        end
      end
    end

    RSpec::Matchers.define :disable_nginx_site do |site|
      match do |chef_run|
        chef_run.resource_collection.all_resources.any? do |resource|
          resource.resource_name == :execute && resource.name =~ /.*nxdissite.*#{site}/
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:43+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-1jafs2u
[2016-09-13T12:59:43+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:43+01:00] INFO: Storing updated cookbooks/nginx/libraries/matchers.rb in the cache.
[2016-09-13T12:59:43+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/libraries
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: pagespeed_module
#

src_filename = ::File.basename(node['nginx']['pagespeed']['url'])
src_filepath = "#{Chef::Config['file_cache_path']}/#{src_filename}"
extract_path = "#{Chef::Config['file_cache_path']}/nginx_pagespeed-#{node['nginx']['pagespeed']['version']}"

remote_file src_filepath do
  source   node['nginx']['pagespeed']['url']
  owner    'root'
  group    node['root_group']
  mode     '0644'
  not_if { ::File.exist?(src_filepath) }
end

psol_src_filename = "psol-#{::File.basename(node['nginx']['psol']['url'])}"
psol_src_filepath = "#{Chef::Config['file_cache_path']}/#{psol_src_filename}"
psol_extract_path = "#{Chef::Config['file_cache_path']}/nginx_pagespeed-#{node['nginx']['pagespeed']['version']}/psol"

remote_file psol_src_filepath do
  source   node['nginx']['psol']['url']
  owner    'root'
  group    node['root_group']
  mode     '0644'
  not_if { ::File.exist?(psol_src_filepath) }
end

packages = value_for_platform_family(
    %w(rhel)   => node['nginx']['pagespeed']['packages']['rhel'],
    %w(debian) => node['nginx']['pagespeed']['packages']['debian']
)

unless packages.empty?
  packages.each do |name|
    package name
  end
end

bash 'extract_pagespeed' do
  cwd  ::File.dirname(src_filepath)
  code <<-EOH
    mkdir -p #{extract_path}
    tar xzf #{src_filename} -C #{extract_path}
    mv #{extract_path}/*/* #{extract_path}/
  EOH
  not_if { ::File.exist?(extract_path) }
end

bash 'extract_psol' do
  cwd  ::File.dirname(psol_src_filepath)
  code <<-EOH
    mkdir -p #{psol_extract_path}
    tar xzf #{psol_src_filename} -C #{psol_extract_path}
    mv #{psol_extract_path}/*/* #{psol_extract_path}/
  EOH
  not_if { ::File.exist?(psol_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{extract_path}"]
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: common/dir
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

directory node['nginx']['dir'] do
  owner     'root'
  group     node['root_group']
  mode      '0755'
  recursive true
end

directory node['nginx']['log_dir'] do
  mode      node['nginx']['log_dir_perm']
  owner     node['nginx']['user']
  action    :create
  recursive true
end

directory File.dirname(node['nginx']['pid']) do
  owner     'root'
  group     node['root_group']
  mode      '0755'
  recursive true
end

%w(sites-available sites-enabled conf.d).each do |leaf|
  directory File.join(node['nginx']['dir'], leaf) do
    owner 'root'
    group node['root_group']
    mode  '0755'
  end
end

if !node['nginx']['default_site_enabled'] && (node['platform_family'] == 'rhel' || node['platform_family'] == 'fedora')
  %w(default.conf example_ssl.conf).each do |config|
    file "/etc/nginx/conf.d/#{config}" do
      action :delete
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/commons_dir.rb to tempfile /tmp/chef-rest20160913-19215-jsuaa1
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f69478
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/devel.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f69838>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "devel.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/recipes/pagespeed_module.rb to tempfile /tmp/chef-rest20160913-19215-1it0cr4
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/source.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/recipes/commons_dir.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/definitions/nginx_site.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/definitions
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/recipes/pagespeed_module.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:43+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001361928
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/pagespeed.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001361a18>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "pagespeed.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/echo.rb
[2016-09-13T12:59:43+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/rate_limiting.rb
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/status.rb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: devel
#
# Author:: Arthur Freyman (<afreyman@riotgames.com>)
#
# Copyright 2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['devel']['version']  = '0.2.18'
default['nginx']['devel']['url']      = "https://github.com/simpl/ngx_devel_kit/archive/v#{node['nginx']['devel']['version']}.tar.gz"
default['nginx']['devel']['checksum'] = 'c9c9f0a1b068d38c6c45b15d9605f1b2344dbcd45abf0764cd8e2ba92d6a3d2c'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/devel.rb to tempfile /tmp/chef-rest20160913-19215-1nsp30l
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b138c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b13cf8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "source.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/openssl_source.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---

#
# Cookbook Name:: nginx
# Attributes:: syslog
#
# Author:: Bob Ziuchkovski (<bob@bz-technology.com>)
#
# Copyright 2014, UserTesting
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['syslog']['git_repo']     = 'https://github.com/yaoweibin/nginx_syslog_patch.git'
default['nginx']['syslog']['git_revision'] = 'master'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/syslog.rb to tempfile /tmp/chef-rest20160913-19215-18pornf
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/devel.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/attributes
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/lua.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f1fc90
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/lua.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f1fd58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "lua.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/syslog.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: pagespeed_module
#
default['nginx']['pagespeed']['version'] = '1.8.31.4'
default['nginx']['pagespeed']['url']     = "https://github.com/pagespeed/ngx_pagespeed/archive/release-#{node['nginx']['pagespeed']['version']}-beta.tar.gz"
default['nginx']['psol']['url']          = "https://dl.google.com/dl/page-speed/psol/#{node['nginx']['pagespeed']['version']}.tar.gz"
default['nginx']['pagespeed']['packages']['rhel'] = %w(gcc-c++ pcre-dev pcre-devel zlib-devel make)
default['nginx']['pagespeed']['packages']['debian'] = %w(build-essential zlib1g-dev libpcre3 libpcre3-dev)
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/pagespeed.rb to tempfile /tmp/chef-rest20160913-19215-zkkhj9
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/pagespeed.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000400cc48
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/echo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000400ce78>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "echo.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000f1e618
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/rate_limiting.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000f1edc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "rate_limiting.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fc11f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/status.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fc12e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "status.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: status
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright 2013, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['status']['port'] = '8090'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f45918
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/attributes/openssl_source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f45b48>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "openssl_source.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/status.rb to tempfile /tmp/chef-rest20160913-19215-1ynckj5
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: openssl_source
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright 2013, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['openssl_source']['version']  = '1.0.1h'
default['nginx']['openssl_source']['url']      = "http://www.openssl.org/source/openssl-#{node['nginx']['openssl_source']['version']}.tar.gz"
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/default.rb
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/auth_request.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/status.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/passenger.rb
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/openssl_source.rb to tempfile /tmp/chef-rest20160913-19215-1qyroc6
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/openssl_source.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: echo
#
# Author:: Danial Pearce (<github@tigris.id.au>)
#
# Copyright 2013, Danial Pearce
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['echo']['version']        = '0.57'
default['nginx']['echo']['url']            = "https://github.com/openresty/echo-nginx-module/archive/v#{node['nginx']['echo']['version']}.tar.gz"
default['nginx']['echo']['checksum']       = '8467237ca0fae74ca7a32fbd34fc6044df307098415d48068214c9c235695a07'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/echo.rb to tempfile /tmp/chef-rest20160913-19215-10jfaop
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attribute:: rate_limiting
#
# Copyright 2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['enable_rate_limiting']    = false
default['nginx']['rate_limiting_zone_name'] = 'default'
default['nginx']['rate_limiting_backoff']   = '10m'
default['nginx']['rate_limit']              = '1r/s'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/echo.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/rate_limiting.rb to tempfile /tmp/chef-rest20160913-19215-1kru9wk
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: lua
#
# Author:: Arthur Freyman (<afreyman@riotgames.com>)
#
# Copyright 2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['lua']['version']  = '0.8.7'
default['nginx']['lua']['url']      = "https://github.com/chaoslawful/lua-nginx-module/archive/v#{node['nginx']['lua']['version']}.tar.gz"
default['nginx']['lua']['checksum'] = '4b9be3c159b9c884a38e044e07aaf4d06bd2893977d0b0dae02c124d8e907f93'

default['nginx']['luajit']['version']  = '2.0.2'
default['nginx']['luajit']['url']	     = "http://luajit.org/download/LuaJIT-#{node['nginx']['luajit']['version']}.tar.gz"
default['nginx']['luajit']['checksum'] = 'c05202974a5890e777b181908ac237625b499aece026654d7cc33607e3f46c38'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/rate_limiting.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: source
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_attribute 'nginx::default'

default['nginx']['source']['version']                 = node['nginx']['version']
default['nginx']['source']['prefix']                  = "/opt/nginx-#{node['nginx']['source']['version']}"
default['nginx']['source']['conf_path']               = "#{node['nginx']['dir']}/nginx.conf"
default['nginx']['source']['sbin_path']               = "#{node['nginx']['source']['prefix']}/sbin/nginx"
default['nginx']['source']['default_configure_flags'] = %W(
  --prefix=#{node['nginx']['source']['prefix']}
  --conf-path=#{node['nginx']['dir']}/nginx.conf
  --sbin-path=#{node['nginx']['source']['sbin_path']}
)

default['nginx']['configure_flags']    = []
default['nginx']['source']['version']  = node['nginx']['version']
default['nginx']['source']['url']      = "http://nginx.org/download/nginx-#{node['nginx']['source']['version']}.tar.gz"
default['nginx']['source']['checksum'] = 'b5608c2959d3e7ad09b20fc8f9e5bd4bc87b3bc8ba5936a513c04ed8f1391a18'
default['nginx']['source']['modules']  = %w(
  nginx::http_ssl_module
  nginx::http_gzip_static_module
)
default['nginx']['source']['use_existing_user'] = false
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/lua.rb to tempfile /tmp/chef-rest20160913-19215-pafdck
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/lua.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/source.rb to tempfile /tmp/chef-rest20160913-19215-2lmn8h
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/source.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/geoip.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d79530
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d79c38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d18280
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/auth_request.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d18af0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "auth_request.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/socketproxy.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c456c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/passenger.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c45c40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "passenger.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attribute:: passenger
#
# Author:: Alex Dergachev (<alex@evolvingweb.ca>)
#
# Copyright 2013, Chef Software, Inc.
# Copyright 2012, Susan Potter
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.default['nginx']['passenger']['version'] = '4.0.57'

if node['nginx']['repo_source'] == 'passenger'
  node.default['nginx']['passenger']['root'] = '/usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini'
  node.default['nginx']['passenger']['ruby'] = '/usr/bin/ruby'
elsif node['languages'].attribute?('ruby')
  node.default['nginx']['passenger']['root'] = "#{node['languages']['ruby']['gems_dir']}/gems/passenger-#{node['nginx']['passenger']['version']}"
  node.default['nginx']['passenger']['ruby'] = node['languages']['ruby']['ruby_bin']
else
  Chef::Log.warn("node['languages']['ruby'] attribute not detected in #{cookbook_name}::#{recipe_name}")
  Chef::Log.warn("Install a Ruby for automatic detection of node['nginx']['passenger'] attributes (root, ruby)")
  Chef::Log.warn('Using default values that may or may not work for this system.')
  node.default['nginx']['passenger']['root'] = "/usr/lib/ruby/gems/1.8/gems/passenger-#{node['nginx']['passenger']['version']}"
  node.default['nginx']['passenger']['ruby'] = '/usr/bin/ruby'
end

if platform_family?('rhel') && node['platform_version'].to_i >= 6
  node.default['nginx']['passenger']['packages']['rhel'] = %w(ruby-devel libcurl-devel)
else
  node.default['nginx']['passenger']['packages']['rhel'] = %w(ruby-devel curl-devel)
end
node.default['nginx']['passenger']['packages']['fedora'] = %w(ruby-devel libcurl-devel)
node.default['nginx']['passenger']['packages']['debian'] = %w(ruby-dev libcurl4-gnutls-dev)

node.default['nginx']['passenger']['install_rake'] = true
node.default['nginx']['passenger']['spawn_method'] = 'smart-lv2'
node.default['nginx']['passenger']['buffer_response'] = 'on'
node.default['nginx']['passenger']['max_pool_size'] = 6
node.default['nginx']['passenger']['min_instances'] = 1
node.default['nginx']['passenger']['max_instances_per_app'] = 0
node.default['nginx']['passenger']['pool_idle_time'] = 300
node.default['nginx']['passenger']['max_requests'] = 0
node.default['nginx']['passenger']['gem_binary'] = nil

# NodeJs disable by default
node.default['nginx']['passenger']['nodejs'] = nil
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/headers_more.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039983f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/headers_more.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039984c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "headers_more.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/passenger.rb to tempfile /tmp/chef-rest20160913-19215-1ejp8wx
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/upload_progress.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/passenger.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000396dea0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/geoip.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000396e0f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "geoip.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: default
#
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Joshua Timberman (<joshua@chef.io>)
#
# Copyright 2009-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# In order to update the version, the checksum attribute must be changed too.
# This attribute is in the source.rb file, though we recommend overriding
# attributes by modifying a role, or the node itself.
default['nginx']['version']      = '1.6.2'
default['nginx']['package_name'] = 'nginx'
default['nginx']['port']         = '80'
default['nginx']['dir']          = '/etc/nginx'
default['nginx']['script_dir']   = '/usr/sbin'
default['nginx']['log_dir']      = '/var/log/nginx'
default['nginx']['log_dir_perm'] = '0750'
default['nginx']['binary']       = '/usr/sbin/nginx'
default['nginx']['default_root'] = '/var/www/nginx-default'
default['nginx']['ulimit']       = '1024'

default['nginx']['pid'] = '/var/run/nginx.pid'

case node['platform_family']
when 'debian'
  default['nginx']['user']       = 'www-data'
  default['nginx']['init_style'] = 'runit'
  if platform == 'ubuntu' && platform_version == '14.04'
    default['nginx']['pid'] = '/run/nginx.pid'
  end
when 'rhel', 'fedora'
  default['nginx']['user']        = 'nginx'
  default['nginx']['init_style']  = 'init'
  default['nginx']['repo_source'] = 'epel'
when 'gentoo'
  default['nginx']['user']       = 'nginx'
  default['nginx']['init_style'] = 'init'
when 'freebsd'
  default['nginx']['package_name'] = 'www/nginx'
  default['nginx']['user']         = 'www'
  default['nginx']['dir']          = '/usr/local/etc/nginx'
  default['nginx']['script_dir']   = '/usr/local/sbin'
  default['nginx']['binary']       = '/usr/local/sbin/nginx'
  default['nginx']['default_root'] = '/usr/local/www/nginx-dist'
when 'suse'
  default['nginx']['user']       = 'wwwrun'
  default['nginx']['init_style'] = 'init'
  default['nginx']['group']      = 'www'
else
  default['nginx']['user']       = 'www-data'
  default['nginx']['init_style'] = 'init'
end

default['nginx']['upstart']['runlevels']     = '2345'
default['nginx']['upstart']['respawn_limit'] = nil
default['nginx']['upstart']['foreground']    = true

default['nginx']['group'] = node['nginx']['group'] || node['nginx']['user']

default['nginx']['gzip']              = 'on'
default['nginx']['gzip_static']       = 'off'
default['nginx']['gzip_http_version'] = '1.0'
default['nginx']['gzip_comp_level']   = '2'
default['nginx']['gzip_proxied']      = 'any'
default['nginx']['gzip_vary']         = 'off'
default['nginx']['gzip_buffers']      = nil
default['nginx']['gzip_types'] = %w(
  text/plain
  text/css
  application/x-javascript
  text/xml
  application/xml
  application/rss+xml
  application/atom+xml
  text/javascript
  application/javascript
  application/json
  text/mathml
)
default['nginx']['gzip_min_length']   = 1_000
default['nginx']['gzip_disable']      = 'MSIE [1-6]\.'

default['nginx']['keepalive']            = 'on'
default['nginx']['keepalive_requests']   = 100
default['nginx']['keepalive_timeout']    = 65
default['nginx']['worker_processes']     = node['cpu'] && node['cpu']['total'] ? node['cpu']['total'] : 1
default['nginx']['worker_connections']   = 1_024
default['nginx']['worker_rlimit_nofile'] = nil
default['nginx']['multi_accept']         = false
default['nginx']['event']                = nil
default['nginx']['accept_mutex_delay']   = nil
default['nginx']['server_tokens']        = nil
default['nginx']['server_names_hash_bucket_size'] = 64
default['nginx']['variables_hash_max_size']       = 1024
default['nginx']['variables_hash_bucket_size']    = 64
default['nginx']['sendfile'] = 'on'
default['nginx']['underscores_in_headers'] = nil
default['nginx']['tcp_nodelay'] = 'on'
default['nginx']['tcp_nopush'] = 'on'

default['nginx']['access_log_options']     = nil
default['nginx']['error_log_options']      = nil
default['nginx']['disable_access_log']     = false
default['nginx']['log_formats']            = {}
default['nginx']['install_method']         = 'package'
default['nginx']['default_site_enabled']   = true
default['nginx']['types_hash_max_size']    = 2_048
default['nginx']['types_hash_bucket_size'] = 64

default['nginx']['proxy_read_timeout']          = nil
default['nginx']['client_body_buffer_size']     = nil
default['nginx']['client_max_body_size']        = nil
default['nginx']['large_client_header_buffers'] = nil
default['nginx']['default']['modules']          = []

default['nginx']['extra_configs'] = {}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: auth_request
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright 2013, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['auth_request']['url']      = 'http://mdounin.ru/hg/ngx_http_auth_request_module/archive/ee8ff54f9b66.tar.gz'
default['nginx']['auth_request']['checksum'] = '7ab85e1c350c5a9c60ed1319c45fed144cc3c3e1'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/auth_request.rb to tempfile /tmp/chef-rest20160913-19215-pkwgve
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-t45vku
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/auth_request.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/naxsi.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038e5668
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/naxsi.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038e5730>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "naxsi.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/default.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/set_misc.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000397f5d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/set_misc.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000397f6a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "set_misc.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f07b68
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/attributes/upload_progress.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f07c80>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "upload_progress.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/files/default/mime.types
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037c2ee8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/files/default/mime.types",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037c2fd8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "files",
   "default",
   "mime.types"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: geoip
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['geoip']['path']                 = '/srv/geoip'
default['nginx']['geoip']['enable_city']          = true
default['nginx']['geoip']['country_dat_url']      = 'http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz'
default['nginx']['geoip']['country_dat_checksum'] = '79ff1099e96c2dc1c2539c9a18aaa13a9afd085cae477df60d95f1644d42bc07'
default['nginx']['geoip']['city_dat_url']         = 'http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz'
default['nginx']['geoip']['city_dat_checksum']    = '8a6467033a528f68b1a97de24d9d0ce86c8e8e83683820e16e433ddbd3f712f7'
default['nginx']['geoip']['lib_version']          = '1.6.3'
lib_version = node['nginx']['geoip']['lib_version'] # convenience variable for line length
default['nginx']['geoip']['lib_url']              = "https://github.com/maxmind/geoip-api-c/releases/download/v#{lib_version}/GeoIP-#{lib_version}.tar.gz"
default['nginx']['geoip']['lib_checksum']         = 'e483839a81a91c3c85df89ef409fc7b526c489e0355d537861cfd1ea9534a8f2'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/geoip.rb to tempfile /tmp/chef-rest20160913-19215-tya9kz
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/geoip.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/files/default/naxsi_core.rules
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/attributes/repo.rb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: headers_more
#
# Author:: Lucas Jandrew (<ljandrew@riotgames.com>)
#
# Copyright 2012-2013, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['headers_more']['version']         = '0.25'
default['nginx']['headers_more']['source_url']      = "https://github.com/openresty/headers-more-nginx-module/archive/v#{node['nginx']['headers_more']['version']}.tar.gz"
default['nginx']['headers_more']['source_checksum'] = '1473f96f59dcec9d83ce65d691559993c1f80da8c0a4c0c0a30dae9f969eeabf'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/headers_more.rb to tempfile /tmp/chef-rest20160913-19215-1m8rqlz
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/headers_more.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/nginx-upstart.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: naxsi
#
# Author:: Artiom Lunev (<artiom.lunev@gmail.com>)
#
# Copyright 2012-2013, Artiom Lunev
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['naxsi']['version'] = '0.53-2'
default['nginx']['naxsi']['url'] = "https://github.com/nbs-system/naxsi/archive/#{node['nginx']['naxsi']['version']}.tar.gz"
default['nginx']['naxsi']['checksum'] = '3eadff1d91995beae41b92733ade28091c2075a24ae37058f4d6aa90b0f4b660'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a56cb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/socketproxy.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a56f60>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "socketproxy.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/naxsi.rb to tempfile /tmp/chef-rest20160913-19215-k0troq
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/naxsi.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
types {
    text/html                             html htm shtml;
    text/css                              css;
    text/xml                              xml;
    image/gif                             gif;
    image/jpeg                            jpeg jpg;
    application/javascript                js;
    application/json                      json;
    application/atom+xml                  atom;
    application/rss+xml                   rss;
    text/cache.manifest                   manifest;
    text/mathml                           mml;
    text/plain                            txt;
    text/vnd.sun.j2me.app-descriptor      jad;
    text/vnd.wap.wml                      wml;
    text/x-component                      htc;
    image/png                             png;
    image/tiff                            tif tiff;
    image/vnd.wap.wbmp                    wbmp;
    image/x-icon                          ico;
    image/x-jng                           jng;
    image/x-ms-bmp                        bmp;
    image/svg+xml                         svg svgz;
    image/webp                            webp;
    application/java-archive              jar war ear;
    application/mac-binhex40              hqx;
    application/msword                    doc;
    application/pdf                       pdf;
    application/postscript                ps eps ai;
    application/rtf                       rtf;
    application/vnd.ms-excel              xls;
    application/vnd.ms-powerpoint         ppt;
    application/vnd.wap.wmlc              wmlc;
    application/vnd.google-earth.kml+xml  kml;
    application/vnd.google-earth.kmz      kmz;
    application/x-7z-compressed           7z;
    application/x-cocoa                   cco;
    application/x-java-archive-diff       jardiff;
    application/x-java-jnlp-file          jnlp;
    application/x-makeself                run;
    application/x-perl                    pl pm;
    application/x-pilot                   prc pdb;
    application/x-rar-compressed          rar;
    application/x-redhat-package-manager  rpm;
    application/x-sea                     sea;
    application/x-shockwave-flash         swf;
    application/x-stuffit                 sit;
    application/x-tcl                     tcl tk;
    application/x-x509-ca-cert            der pem crt;
    application/x-xpinstall               xpi;
    application/xhtml+xml                 xhtml;
    application/zip                       zip;
    application/octet-stream              bin exe dll;
    application/octet-stream              deb;
    application/octet-stream              dmg;
    application/octet-stream              iso img;
    application/octet-stream              msi msp msm;
    font/ttf                              ttf;
    font/opentype                         otf;
    application/x-font-woff               woff;
    application/vnd.ms-fontobject         eot;
    audio/midi                            mid midi kar;
    audio/mpeg                            mp3;
    audio/ogg                             ogg;
    audio/x-m4a                           m4a;
    audio/x-realaudio                     ra;
    video/3gpp                            3gpp 3gp;
    video/mp4                             mp4;
    video/mpeg                            mpeg mpg;
    video/quicktime                       mov;
    video/webm                            webm;
    video/x-flv                           flv;
    video/x-m4v                           m4v;
    video/x-mng                           mng;
    video/x-ms-asf                        asx asf;
    video/x-ms-wmv                        wmv;
    video/x-msvideo                       avi;
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/files/default/mime.types to tempfile /tmp/chef-rest20160913-19215-19rnhr9
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/nginx.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/files/default/mime.types in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/files
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/files/default
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: upload_progress
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['upload_progress']['url']               = 'https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0'
default['nginx']['upload_progress']['checksum']          = '3fb903dab595cf6656fa0fc5743a48daffbba2f6b5c554836be630800eaad4e2'
default['nginx']['upload_progress']['javascript_output'] = true
default['nginx']['upload_progress']['zone_name']         = 'proxied'
default['nginx']['upload_progress']['zone_size']         = '1m'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/upload_progress.rb to tempfile /tmp/chef-rest20160913-19215-1q5wh4d
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/upload_progress.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/default-site.erb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Attributes:: set_misc
#

default['nginx']['set_misc']['version']  = '0.24'
default['nginx']['set_misc']['url']      = "https://github.com/agentzh/set-misc-nginx-module/archive/v#{node['nginx']['set_misc']['version']}.tar.gz"
default['nginx']['set_misc']['checksum'] = 'da404a7dac5fa4a0a86f42b4ec7648b607f4cd66'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/set_misc.rb to tempfile /tmp/chef-rest20160913-19215-1cn0zc9
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/set_misc.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/plugins/nginx.rb.erb
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/suse/nginx.init.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003709a10
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/suse/nginx.init.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003709c68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "suse",
   "nginx.init.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
default['nginx']['socketproxy']['root'] = '/usr/share/nginx/apps'
default['nginx']['socketproxy']['app_owner'] = 'root'
default['nginx']['socketproxy']['logname'] = 'socketproxy'
default['nginx']['socketproxy']['log_level'] = 'error'
# default['nginx']['socketproxy']['default_app'] = 'default'
# default['nginx']['socketproxy']['apps'] = {
#   'default' => {
#     'prepend_slash' => false,
#     'context_name' => '',
#     'subdir' => 'current',
#     'socket_path' => 'shared/sockets/unicorn.sock'
#   }
# }
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/socketproxy.rb to tempfile /tmp/chef-rest20160913-19215-eaee55
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-log-run.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003684d88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/nginx.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003684ea0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "nginx.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/socketproxy.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/nginx.pill.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039a6340
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/attributes/repo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039a6480>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "attributes",
   "repo.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003792ba8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/files/default/naxsi_core.rules",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003792d10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "files",
   "default",
   "naxsi_core.rules"]>

[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000216f380
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/default-site.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002178098>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "default-site.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
server {
  listen   <%= node['nginx']['port'] -%>;
  server_name  <%= node['hostname'] %>;

  access_log  <%= node['nginx']['log_dir'] %>/localhost.access.log;

  location / {
    root   <%= node['nginx']['default_root'] %>;
    index  index.html index.htm;
  }
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/default-site.erb to tempfile /tmp/chef-rest20160913-19215-22ovob
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003614a38
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/nginx-upstart.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003614b00>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "nginx-upstart.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000229b2e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-log-run.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000229ba10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "sv-nginx-log-run.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/default-site.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/templates
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/templates/default
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/nginx.init.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001ef5a00
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/nginx.init.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001ef5cf8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "nginx.init.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
#
# nginx
#
### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO

# Source function library.
. /etc/rc.status

rc_reset

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit
exec=<%= node['nginx']['binary'] %>
prog=$(basename $exec)

# default options, overruled by items in sysconfig
NGINX_GLOBAL=""

[ -e /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx

lockfile=/var/lock/subsys/nginx

start() {
    [ -x $exec ] || exit 5
    echo -n $"Starting $prog: "
    # if not running, start it up here, usually something like "daemon $exec"
    options=""
    if [ "${NGINX_GLOBAL}" != ""  ]; then
        options="-g ${NGINX_GLOBAL}"
    fi
    $exec $options
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    rc_status -v
}

stop() {
  echo -n $"Stopping $prog: "
  $exec -s stop
  retval=$?
  echo
  [ $retval -eq 0 ] && rm -f $lockfile
  rc_status -v
}

restart() {
    stop
    start
    rc_status
}

reload() {
	echo -n $"Reloading $prog: "
	$exec -s reload
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
  rc_status -v
}

configtest() {
    if [ "$#" -ne 0 ] ; then
        case "$1" in
            -q)
                FLAG=$1
                ;;
            *)
                ;;
        esac
        shift
    fi
    ${exec} -t $FLAG
    RETVAL=$?
    return $RETVAL
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status nginx
        ;;
  restart)
        restart
        ;;
  reload|force-reload)
		reload
		;;
  condrestart)
        [ -f $lockfile ] && restart || :
        ;;
  configtest)
        configtest
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|configtest}"
        exit 1
esac

exit $?
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/suse/nginx.init.erb to tempfile /tmp/chef-rest20160913-19215-1x7r28v
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000021f2b18
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/nginx.pill.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000021f2dc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "nginx.pill.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# nginx

description "nginx http daemon"

start on (local-filesystems and net-device-up IFACE=lo and runlevel [<%= node['nginx']['upstart']['runlevels'] %>])
stop on runlevel [!<%= node['nginx']['upstart']['runlevels'] %>]

env DAEMON=<%= node['nginx']['binary'] %>
env PID=<%= node['nginx']['pid'] %>
env CONFIG=<%= node['nginx']['source']['conf_path'] %>

respawn
<% if node['nginx']['upstart']['respawn_limit'] %>
respawn limit <%= node['nginx']['upstart']['respawn_limit'] %>
<% end %>

pre-start script
  ${DAEMON} -t
  if [ $? -ne 0 ]; then
    exit $?
  fi
end script

<% unless node['nginx']['upstart']['foreground'] %>
expect fork
<% else %>
console output
<% end %>

exec ${DAEMON} -c "${CONFIG}"

<% if node.recipe?('nginx::passenger') and not node['nginx']['upstart']['foreground'] %>
# classic example of why pidfiles should have gone away
# with the advent of fork().  we missed that bus a long
# time ago so hack around it.
post-stop script
  start-stop-daemon --stop --pidfile ${PID} --name nginx --exec ${DAEMON} --signal QUIT
end script
<% end %>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx-upstart.conf.erb to tempfile /tmp/chef-rest20160913-19215-ti9vbo
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/nginx-upstart.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: nginx
# Recipe:: repo
#
# Author:: Nick Rycar <nrycar@bluebox.net>
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

case node['platform_family']
when 'rhel', 'fedora'
  case node['platform']
  when 'centos'
    # See http://wiki.nginx.org/Install
    default['nginx']['upstream_repository'] = "http://nginx.org/packages/centos/#{node['platform_version'].to_i}/$basearch/"
  when 'amazon'
    default['nginx']['upstream_repository'] = 'http://nginx.org/packages/rhel/6/$basearch/'
  else
    default['nginx']['upstream_repository'] = "http://nginx.org/packages/rhel/#{node['platform_version'].to_i}/$basearch/"
  end
when 'debian'
  default['nginx']['upstream_repository'] = "http://nginx.org/packages/#{node['platform']}"
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/attributes/repo.rb to tempfile /tmp/chef-rest20160913-19215-l10cfg
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/attributes/repo.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020c8d50
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/plugins/nginx.rb.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000020c8f30>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "plugins",
   "nginx.rb.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

provides "nginx"
provides "nginx/version"
provides "nginx/configure_arguments"
provides "nginx/prefix"
provides "nginx/conf_path"

def parse_flags(flags)
  prefix = nil
  conf_path = nil

  flags.each do |flag|
    case flag
    when /^--prefix=(.+)$/
      prefix = $1
    when /^--conf-path=(.+)$/
      conf_path = $1
    end
  end

  [ prefix, conf_path ]
end

nginx Mash.new unless nginx
nginx[:version]             = nil unless nginx[:version]
nginx[:configure_arguments] = Array.new unless nginx[:configure_arguments]
nginx[:prefix]              = nil unless nginx[:prefix]
nginx[:conf_path]           = nil unless nginx[:conf_path]

status, stdout, stderr = run_command(:no_status_check => true, :command => "<%= node['nginx']['binary'] %> -V")

if status == 0
  stderr.split("\n").each do |line|
    case line
    when /^configure arguments:(.+)/
      # This could be better: I'm splitting on configure arguments which removes them and also
      # adds a blank string at index 0 of the array. This is why we drop index 0 and map to
      # add the '--' prefix back to the configure argument.
      nginx[:configure_arguments] = $1.split(/\s--/).drop(1).map { |ca| "--#{ca}" }

      prefix, conf_path = parse_flags(nginx[:configure_arguments])

      nginx[:prefix] = prefix
      nginx[:conf_path] = conf_path
    when /^nginx version: nginx\/(\d+\.\d+\.\d+)/
      nginx[:version] = $1
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/plugins/nginx.rb.erb to tempfile /tmp/chef-rest20160913-19215-10aojvt
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
exec svlogd -tt ./main
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/nxdissite.erb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/plugins/nginx.rb.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/templates/default/plugins
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
user <%= node['nginx']['user'] %><% if node['nginx']['user'] != node['nginx']['group'] %> <%= node['nginx']['group'] %><% end %>;
worker_processes  <%= node['nginx']['worker_processes'] %>;
<% if node['nginx']['daemon_disable'] -%>
daemon off;
<% end -%>
<% if node['nginx']['worker_rlimit_nofile'] -%>
worker_rlimit_nofile <%= node['nginx']['worker_rlimit_nofile'] %>;
<% end -%>

error_log  <%= node['nginx']['log_dir'] %>/error.log<% if node['nginx']['error_log_options'] %> <%= node['nginx']['error_log_options'] %><% end %>;
pid        <%= node['nginx']['pid'] %>;

events {
  worker_connections  <%= node['nginx']['worker_connections'] %>;
<% if node['nginx']['multi_accept'] -%>
  multi_accept on;
<% end -%>
<% if node['nginx']['event'] -%>
  use <%= node['nginx']['event'] %>;
<% end -%>
<% if node['nginx']['accept_mutex_delay'] -%>
  accept_mutex_delay <%= node['nginx']['accept_mutex_delay'] %>ms;
<% end -%>
}

http {
  <% if node.recipe?('nginx::naxsi_module') %>
  include       <%= node['nginx']['dir'] %>/naxsi_core.rules;
  <% end %>

  include       <%= node['nginx']['dir'] %>/mime.types;
  default_type  application/octet-stream;

  <% node['nginx']['log_formats'].each do |name, format| %>
  log_format <%= name %> <%= format %>;
  <% end -%>

  <% if node['nginx']['disable_access_log'] -%>
  access_log    off;
  <% else -%>
  access_log    <%= node['nginx']['log_dir'] %>/access.log<% if node['nginx']['access_log_options'] %> <%= node['nginx']['access_log_options'] %><% end %>;
  <% end %>
  <% if node['nginx']['server_tokens'] -%>
  server_tokens <%= node['nginx']['server_tokens'] %>;
  <% end -%>

  sendfile <%= node['nginx']['sendfile'] %>;
  tcp_nopush <%= node['nginx']['tcp_nopush'] %>;
  tcp_nodelay <%= node['nginx']['tcp_nodelay'] %>;

  <% if node['nginx']['keepalive'] == 'on' %>
  keepalive_requests <%= node['nginx']['keepalive_requests'] %>;
  keepalive_timeout  <%= node['nginx']['keepalive_timeout'] %>;
  <% end %>

  <% unless node['nginx']['underscores_in_headers'].nil? %>
  underscores_in_headers <%= node['nginx']['underscores_in_headers'] %>;
  <% end %>

  gzip  <%= node['nginx']['gzip'] %>;
  <% if node['nginx']['gzip'] == 'on' %>
  gzip_http_version <%= node['nginx']['gzip_http_version'] %>;
  gzip_comp_level <%= node['nginx']['gzip_comp_level'] %>;
  gzip_proxied <%= node['nginx']['gzip_proxied'] %>;
  gzip_vary <%= node['nginx']['gzip_vary'] %>;
  <% if node['nginx']['gzip_buffers'] -%>
  gzip_buffers <%= node['nginx']['gzip_buffers'] %>;
  <% end -%>
  gzip_types <%= node['nginx']['gzip_types'].join(' ') %>;
  gzip_min_length  <%= node['nginx']['gzip_min_length'] %>;
  gzip_disable     "<%= node['nginx']['gzip_disable'] %>";
  <% end %>


  variables_hash_max_size <%= node['nginx']['variables_hash_max_size'] %>;
  variables_hash_bucket_size <%= node['nginx']['variables_hash_bucket_size'] %>;
  server_names_hash_bucket_size <%= node['nginx']['server_names_hash_bucket_size'] %>;
  types_hash_max_size <%= node['nginx']['types_hash_max_size'] %>;
  types_hash_bucket_size <%= node['nginx']['types_hash_bucket_size'] %>;
  <% if node['nginx']['proxy_read_timeout'] -%>
  proxy_read_timeout <%= node['nginx']['proxy_read_timeout'] %>;
  <% end -%>
  <% if node['nginx']['client_body_buffer_size'] -%>
  client_body_buffer_size <%= node['nginx']['client_body_buffer_size'] %>;
  <% end -%>
  <% if node['nginx']['client_max_body_size'] -%>
  client_max_body_size <%= node['nginx']['client_max_body_size'] %>;
  <% end -%>
  <% if node['nginx']['large_client_header_buffers'] -%>
  large_client_header_buffers <%= node['nginx']['large_client_header_buffers'] %>;
  <% end -%>

  <% if node['nginx']['enable_rate_limiting'] -%>
  limit_req_zone $binary_remote_addr zone=<%= node['nginx']['rate_limiting_zone_name'] %>:<%= node['nginx']['rate_limiting_backoff'] %> rate=<%= node['nginx']['rate_limit'] %>;
  <% end -%>

  <% node['nginx']['extra_configs'].each do |key, value| -%>
  <%= key %> <%= value %>;
  <% end -%>

  include <%= node['nginx']['dir'] %>/conf.d/*.conf;
  include <%= node['nginx']['dir'] %>/sites-enabled/*;
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.conf.erb to tempfile /tmp/chef-rest20160913-19215-1qwonvm
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/suse/nginx.init.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/templates/suse
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/nginx.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
Bluepill.application("nginx", :log_file => "<%= node['nginx']['log_dir'] %>/bluepill-nginx.log") do |app|
  app.process("nginx") do |process|
    process.pid_file           = "<%= node['nginx']['pid'] %>"
    process.working_dir        = "<%= node['nginx']['source']['prefix'] %>"
    process.start_command      = "<%= node['nginx']['binary'] %> -c <%= node['nginx']['dir'] %>/nginx.conf"
    process.stop_command       = "kill -QUIT {{PID}}"
    process.restart_command    = "kill -HUP {{PID}}"
    process.daemonize          = true
    process.stdout             = process.stderr = "<%= node['nginx']['log_dir'] %>/nginx.log"

    process.monitor_children do |child_process|
      child_process.stop_command = "kill -QUIT {{PID}}"
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-log-run.erb to tempfile /tmp/chef-rest20160913-19215-sbpisn
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.pill.erb to tempfile /tmp/chef-rest20160913-19215-1e2wafn
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
##################################
## INTERNAL RULES IDS:1-10      ##
##################################
#weird_request : 1
#big_body : 2
#no_content_type : 3

#@MainRule "msg:weird/incorrect request" id:1;
#@MainRule "msg:big request, unparsed" id:2;
#@MainRule "msg:uncommon hex encoding (%00 etc.)" id:10;
#@MainRule "msg:uncommon/empty content-type in POST" id:11;
#@MainRule "msg:uncommon/malformed URL" id:12;

#MainRule "str:123FREETEXT" "msg:exemple learning test pattern"  "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:BLOCK" id:0;

##################################
## SQL Injections IDs:1000-1099 ##
##################################
MainRule "rx:select|union|update|delete|insert|table|from|ascii|hex|unhex|drop" "msg:sql keywords" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:4" id:1000;
MainRule "str:\"" "msg:double quote" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8,$XSS:8" id:1001;
MainRule "str:0x" "msg:0x, possible hex encoding" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:2" id:1002;
## Hardcore rules
MainRule "str:/*" "msg:mysql comment (/*)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8" id:1003;
MainRule "str:*/" "msg:mysql comment (*/)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8" id:1004;
MainRule "str:|" "msg:mysql keyword (|)"  "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8" id:1005;
MainRule "str:&&" "msg:mysql keyword (&&)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8" id:1006;
## end of hardcore rules
MainRule "str:--" "msg:mysql comment (--)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:4" id:1007;
MainRule "str:;" "msg:; in stuff" "mz:BODY|URL|ARGS" "s:$SQL:4,$XSS:8" id:1008;
MainRule "str:=" "msg:equal in var, probable sql/xss" "mz:ARGS|BODY" "s:$SQL:2" id:1009;
MainRule "str:(" "msg:parenthesis, probable sql/xss" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$SQL:4,$XSS:8" id:1010;
MainRule "str:)" "msg:parenthesis, probable sql/xss" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$SQL:4,$XSS:8" id:1011;
MainRule "str:'" "msg:simple quote" "mz:ARGS|BODY|URL|$HEADERS_VAR:Cookie" "s:$SQL:4,$XSS:8" id:1013;
MainRule "str:," "msg:, in stuff" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:4" id:1015;
MainRule "str:#" "msg:mysql comment (#)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:4" id:1016;

###############################
## OBVIOUS RFI IDs:1100-1199 ##
###############################
MainRule "str:http://" "msg:http:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1100;
MainRule "str:https://" "msg:https:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1101;
MainRule "str:ftp://" "msg:ftp:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1102;
MainRule "str:php://" "msg:php:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1103;
MainRule "str:sftp://" "msg:sftp:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1104;
MainRule "str:zlib://" "msg:zlib:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1105;
MainRule "str:data://" "msg:data:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1106;
MainRule "str:glob://" "msg:glob:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1107;
MainRule "str:phar://" "msg:phar:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1108;
MainRule "str:file://" "msg:file:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1109;

#######################################
## Directory traversal IDs:1200-1299 ##
#######################################
MainRule "str:.." "msg:double dot" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1200;
MainRule "str:/etc/passwd" "msg:obvious probe" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1202;
MainRule "str:c:\\" "msg:obvious windows path" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1203;
MainRule "str:cmd.exe" "msg:obvious probe" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1204;
MainRule "str:\\" "msg:backslash" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1205;
#MainRule "str:/" "msg:slash in args" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:2" id:1206;

########################################
## Cross Site Scripting IDs:1300-1399 ##
########################################
MainRule "str:<" "msg:html open tag" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$XSS:8" id:1302;
MainRule "str:>" "msg:html close tag" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$XSS:8" id:1303;
MainRule "str:[" "msg:[, possible js" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$XSS:4" id:1310;
MainRule "str:]" "msg:], possible js" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$XSS:4" id:1311;
MainRule "str:~" "msg:~ character" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$XSS:4" id:1312;
MainRule "str:`"  "msg:grave accent !" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$XSS:8" id:1314;
MainRule "rx:%[2|3]."  "msg:double encoding !" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$XSS:8" id:1315;

####################################
## Evading tricks IDs: 1400-1500 ##
####################################
MainRule "str:&#" "msg: utf7/8 encoding" "mz:ARGS|BODY|URL|$HEADERS_VAR:Cookie" "s:$EVADE:4" id:1400;
MainRule "str:%U" "msg: M$ encoding" "mz:ARGS|BODY|URL|$HEADERS_VAR:Cookie" "s:$EVADE:4" id:1401;
MainRule negative "rx:multipart/form-data|application/x-www-form-urlencoded" "msg:Content is neither mulipart/x-www-form.." "mz:$HEADERS_VAR:Content-type" "s:$EVADE:4" id:1402;

#############################
## File uploads: 1500-1600 ##
#############################
MainRule "rx:.ph|.asp|.ht" "msg:asp/php file upload!" "mz:FILE_EXT" "s:$UPLOAD:8" id:1500;
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/files/default/naxsi_core.rules to tempfile /tmp/chef-rest20160913-19215-zh9f38
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/nginx.pill.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/files/default/naxsi_core.rules in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
#
# nginx
#
# chkconfig:   - 57 47
# description: nginx
# processname:  nginx
# config:       /etc/sysconfig/nginx
#

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit
exec=<%= node['nginx']['binary'] %>
prog=$(basename $exec)

# default options, overruled by items in sysconfig
NGINX_GLOBAL=""

[ -e /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx

lockfile=/var/lock/subsys/nginx

start() {
    [ -x $exec ] || exit 5
    echo -n $"Starting $prog: "
    # if not running, start it up here, usually something like "daemon $exec"
    options=""
    if [ "${NGINX_GLOBAL}" != ""  ]; then
        options="-g ${NGINX_GLOBAL}"
    fi
    $exec $options
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
	return $retval
}

stop() {
	echo -n $"Stopping $prog: "
	$exec -s stop
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

restart() {
    stop
    start
}

reload() {
	echo -n $"Reloading $prog: "
	$exec -s reload
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

configtest() {
    if [ "$#" -ne 0 ] ; then
        case "$1" in
            -q)
                FLAG=$1
                ;;
            *)
                ;;
        esac
        shift
    fi
    ${exec} -t $FLAG
    RETVAL=$?
    return $RETVAL
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status nginx
        ;;
  restart)
        restart
        ;;
  reload|force-reload)
		reload
		;;
  condrestart)
        [ -f $lockfile ] && restart || :
        ;;
  configtest)
        configtest
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|configtest}"
        exit 1
esac

exit $?
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000135b050
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/nxdissite.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000135b258>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "nxdissite.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.init.erb to tempfile /tmp/chef-rest20160913-19215-176mqj7
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/nginx.sysconfig.erb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/modules/authorized_ip.erb
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-run.erb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/sv-nginx-log-run.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/nginx.init.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/modules/http_realip.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/nxensite.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f9de60
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/nxensite.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f9df28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "nxensite.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/modules/http_gzip_static.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f44e50
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/modules/http_gzip_static.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f44f18>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "modules",
   "http_gzip_static.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fe2330
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/nginx.sysconfig.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fe24c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "nginx.sysconfig.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fd2340
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/modules/authorized_ip.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fd2520>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "modules",
   "authorized_ip.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fc1fe0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-run.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fc20a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "sv-nginx-run.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/modules/socketproxy.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e908b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/modules/socketproxy.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e909a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "modules",
   "socketproxy.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fa4620
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/modules/http_realip.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fa4788>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "modules",
   "http_realip.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
<% node['nginx']['realip']['addresses'].each do |address| %>
set_real_ip_from <%= address %>;
<% end %>
real_ip_header <%= node['nginx']['realip']['header'] %>;
<% if node['nginx']['version'] >= '1.2.1' -%>
real_ip_recursive <%= node['nginx']['realip']['real_ip_recursive'] %>;
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/modules/passenger.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_realip.conf.erb to tempfile /tmp/chef-rest20160913-19215-f6qd5w
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh -e

SYSCONFDIR='<%= node['nginx']['dir'] %>'

if [ -z $1 ]; then
        echo "Which site would you like to enable?"
        echo -n "Your choices are: "
        ls $SYSCONFDIR/sites-available/* | \
        sed -e "s,$SYSCONFDIR/sites-available/,,g" | xargs echo
        echo -n "Site name? "
        read SITENAME
else
        SITENAME=$1
fi

if [ $SITENAME = "default" ]; then
        PRIORITY="000"
fi

if [ -e $SYSCONFDIR/sites-enabled/$SITENAME -o \
     -e $SYSCONFDIR/sites-enabled/"$PRIORITY"-"$SITENAME" ]; then
        echo "This site is already enabled!"
        exit 0
fi

if ! [ -e $SYSCONFDIR/sites-available/$SITENAME ]; then
        echo "This site does not exist!"
        exit 1
fi

if [ $SITENAME = "default" ]; then
        ln -sf $SYSCONFDIR/sites-available/$SITENAME \
               $SYSCONFDIR/sites-enabled/"$PRIORITY"-"$SITENAME"
else
        ln -sf $SYSCONFDIR/sites-available/$SITENAME $SYSCONFDIR/sites-enabled/$SITENAME
fi

echo "Site $SITENAME installed; reload nginx to enable."
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nxensite.erb to tempfile /tmp/chef-rest20160913-19215-kqrpbn
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/nxensite.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
geo $<%= node['nginx']['remote_ip_var'] %> $authorized_ip {
  default no;
  <% node['nginx']['authorized_ips'].each do |ip| %>
  <%= "#{ip} yes;" %>
  <% end %>
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
NGINX_GLOBAL=<%= node['nginx']['global'] %>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/authorized_ip.erb to tempfile /tmp/chef-rest20160913-19215-1wj1ckv
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nginx.sysconfig.erb to tempfile /tmp/chef-rest20160913-19215-cidsyp
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/nginx.sysconfig.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/modules/http_realip.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/templates/default/modules
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/modules/http_geoip.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
 server {

    set $app_home <%= node['nginx']['socketproxy']['root'] %>;

    <% if node['nginx']['sts_max_age'] -%>
    add_header Strict-Transport-Security "max-age=<%= node['nginx']['sts_max_age'] %>";
    <% end -%>

    listen <%= node['nginx']['port'] %> default;

    access_log <%= node['nginx']['log_dir'] %>/<%= node['nginx']['socketproxy']['logname'] %>.access.log<% if node['nginx']['access_log_options'] %> <%= node['nginx']['access_log_options'] %><% end %>;
    error_log <%= node['nginx']['log_dir'] %>/<%= node['nginx']['socketproxy']['logname'] %>.error.log <%= node['nginx']['socketproxy']['log_level'] %>;

    <% if node['nginx']['server_name'] -%>
    server_name ~^<%= node['nginx']['server_name'] %>\..*$;
    <% end -%>

    client_max_body_size 4G;
    keepalive_timeout 5;

    root $app_home/<%= node['nginx']['socketproxy']['default_app'] %>/<%= node['nginx']['socketproxy']['apps'][node['nginx']['socketproxy']['default_app']]['subdir'] %>/public;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

    if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS|PATCH)$ ) {
      return 405;
    }

    <% node['nginx']['socketproxy']['apps'].each do |app, app_conf|
      if app_conf['context_name']
        base_loc = "/#{app_conf['context_name'].gsub(/^\/+/,'').gsub(/\/+$/,'')}"
      else
        base_loc = ""
      end
    -%>

    location ~ "^<%= base_loc %>/assets/(.*/)*.*-[0-9a-f]{32}.*" {
      gzip_static on;
      expires     max;
      add_header  Cache-Control public;
    }

    location ^~ /<%= app_conf['context_name'] %> {

      alias $app_home/<%= app %>/<%= app_conf['subdir'] %>/public/;

      try_files $uri/index.html $uri.html $uri @app_<%= app %>;
      error_page 404              /404.html;
      error_page 422              /422.html;
      error_page 500 502 503 504  /500.html;
      error_page 403              /403.html;

    }

    location @app_<%= app %> {

      proxy_read_timeout 600;
      <%
        if app_conf['socket']['type']
          case app_conf['socket']['type']
          when 'unix'
      -%>
      proxy_pass http://unix:$app_home/<%= app %>/<%= app_conf['socket']['path'] %><% if app_conf['prepend_slash'] %>:/<% end %>;
      <%
          when 'tcp'
      -%>
      proxy_pass http://localhost:<%= app_conf['socket']['port'] -%>;
      <%
          end
        else
      -%>
      proxy_pass http://unix:$app_home/<%= app %>/<%= app_conf['socket_path'] %><% if app_conf['prepend_slash'] %>:/<% end %>;
      <%
        end
      -%>

    }

    <% end # node['nginx']['socketproxy']['apps'].each -%>

    error_page 500 502 504 /50x.html;
    location = /50x.html {
      root html;
    }

}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/socketproxy.conf.erb to tempfile /tmp/chef-rest20160913-19215-1vn63mx
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/modules/socketproxy.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
ulimit -n <%= node['nginx']['ulimit'] %>
exec 2>&1
exec <%= node['nginx']['src_binary'] %> -c <%= node['nginx']['dir'] %>/nginx.conf
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh -e

SYSCONFDIR='<%= node['nginx']['dir'] %>'

if [ -z $1 ]; then
        echo "Which site would you like to disable?"
        echo -n "Your choices are: "
        ls $SYSCONFDIR/sites-enabled/* | \
        sed -e "s,$SYSCONFDIR/sites-enabled/,,g" | xargs echo
        echo -n "Site name? "
        read SITENAME
else
        SITENAME=$1
fi

if [ $SITENAME = "default" ]; then
        PRIORITY="000"
fi

if ! [ -e $SYSCONFDIR/sites-enabled/$SITENAME -o \
       -e $SYSCONFDIR/sites-enabled/"$PRIORITY"-"$SITENAME" ]; then
        echo "This site is already disabled, or does not exist!"
        exit 1
fi

if ! rm $SYSCONFDIR/sites-enabled/$SITENAME 2>/dev/null; then
        rm -f $SYSCONFDIR/sites-enabled/"$PRIORITY"-"$SITENAME"
fi
echo "Site $SITENAME disabled; reload nginx to disable."
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/sv-nginx-run.erb to tempfile /tmp/chef-rest20160913-19215-1erhnho
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/nxdissite.erb to tempfile /tmp/chef-rest20160913-19215-1b8ynfq
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f68cd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/modules/passenger.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f68e18>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "modules",
   "passenger.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/nxdissite.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/modules/authorized_ip.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
gzip_static <%= node['nginx']['gzip_static'] %>;
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/modules/nginx_status.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a7cd78
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/modules/nginx_status.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a7ce40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "modules",
   "nginx_status.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/default/modules/upload_progress.erb
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_gzip_static.conf.erb to tempfile /tmp/chef-rest20160913-19215-u0fty2
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/debian/nginx.init.erb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
passenger_root <%= node['nginx']['passenger']['root'] %>;
passenger_ruby <%= node['nginx']['passenger']['ruby'] %>;
passenger_max_pool_size <%= node['nginx']['passenger']['max_pool_size'] %>;
passenger_spawn_method <%= node['nginx']['passenger']['spawn_method'] %>;
passenger_buffer_response <%= node['nginx']['passenger']['buffer_response'] %>;
passenger_min_instances <%= node['nginx']['passenger']['min_instances'] %>;
passenger_max_instances_per_app <%= node['nginx']['passenger']['max_instances_per_app'] %>;
passenger_pool_idle_time <%= node['nginx']['passenger']['pool_idle_time'] %>;
passenger_max_requests <%= node['nginx']['passenger']['max_requests'] %>;

<%- if node['nginx']['passenger']['nodejs'] %>
  passenger_nodejs <%= node['nginx']['passenger']['nodejs'] %>;
<% end %>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/passenger.conf.erb to tempfile /tmp/chef-rest20160913-19215-1sgfqvv
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/ubuntu/nginx.init.erb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003950990
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/ubuntu/nginx.init.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003950a80>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "ubuntu",
   "nginx.init.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e552b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/modules/http_geoip.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e553c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "modules",
   "http_geoip.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/modules/passenger.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/modules/http_gzip_static.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
include authorized_ip;

server {
  listen <%= node['nginx']['status']['port'] %>;
  server_name _;

  location /nginx_status {
    if ($authorized_ip = no) {
      return 404;
    }
    stub_status on;
    access_log off;
  }
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039a5850
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/default/modules/upload_progress.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039a5968>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "default",
   "modules",
   "upload_progress.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/nginx_status.erb to tempfile /tmp/chef-rest20160913-19215-12wentl
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/modules/nginx_status.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000399e208
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/debian/nginx.init.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000399e410>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "debian",
   "nginx.init.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/sv-nginx-run.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/templates/gentoo/nginx.init.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003853ba0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/nginx/templates/gentoo/nginx.init.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003853d08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "templates",
   "gentoo",
   "nginx.init.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh

### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=<%= node['nginx']['binary'] %>
NAME=nginx
DESC=nginx
PID=<%= node['nginx']['pid'] %>

# Include nginx defaults if available
if [ -f /etc/default/nginx ]; then
	. /etc/default/nginx
fi

test -x $DAEMON || exit 0

set -e

. /lib/lsb/init-functions

test_nginx_config() {
	if $DAEMON -t $DAEMON_OPTS >/dev/null 2>&1; then
		return 0
	else
		$DAEMON -t $DAEMON_OPTS
		return $?
	fi
}

case "$1" in
	start)
		echo -n "Starting $DESC: "
		test_nginx_config
		# Check if the ULIMIT is set in /etc/default/nginx
		if [ -n "$ULIMIT" ]; then
			# Set the ulimits
			ulimit $ULIMIT
		fi
		start-stop-daemon --start --quiet --pidfile $PID \
		    --exec $DAEMON -- $DAEMON_OPTS || true
		echo "$NAME."
		;;

	stop)
		echo -n "Stopping $DESC: "
		start-stop-daemon --stop --quiet --pidfile $PID \
		    --exec $DAEMON || true
		echo "$NAME."
		;;

	restart|force-reload)
		echo -n "Restarting $DESC: "
		start-stop-daemon --stop --quiet --pidfile \
		    $PID --exec $DAEMON || true
		sleep 1
		test_nginx_config
		start-stop-daemon --start --quiet --pidfile \
		    $PID --exec $DAEMON -- $DAEMON_OPTS || true
		echo "$NAME."
		;;

	reload)
		echo -n "Reloading $DESC configuration: "
		test_nginx_config
		start-stop-daemon --stop --signal HUP --quiet --pidfile $PID \
		    --exec $DAEMON || true
		echo "$NAME."
		;;

	configtest|testconfig)
		echo -n "Testing $DESC configuration: "
		if test_nginx_config; then
			echo "$NAME."
		else
			exit $?
		fi
		;;

	status)
		status_of_proc -p $PID "$DAEMON" nginx && exit 0 || exit $?
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|reload|force-reload|status|configtest}" >&2
		exit 1
		;;
esac

exit 0
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/ubuntu/nginx.init.erb to tempfile /tmp/chef-rest20160913-19215-9p5ds7
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/TESTING.md
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/.rubocop.yml
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
geoip_country <%= @country_dat %>;
<% if @city_dat -%>
geoip_city <%= @city_dat %>;
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/http_geoip.conf.erb to tempfile /tmp/chef-rest20160913-19215-1d4dqp6
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/modules/http_geoip.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh

### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=<%= node['nginx']['binary'] %>
NAME=nginx
DESC=nginx
PID=<%= node['nginx']['pid'] %>

# Include nginx defaults if available
if [ -f /etc/default/nginx ]; then
	. /etc/default/nginx
fi

test -x $DAEMON || exit 0

set -e

. /lib/lsb/init-functions

test_nginx_config() {
	if $DAEMON -t $DAEMON_OPTS >/dev/null 2>&1; then
		return 0
	else
		$DAEMON -t $DAEMON_OPTS
		return $?
	fi
}

case "$1" in
	start)
		echo -n "Starting $DESC: "
		test_nginx_config
		# Check if the ULIMIT is set in /etc/default/nginx
		if [ -n "$ULIMIT" ]; then
			# Set the ulimits
			ulimit $ULIMIT
		fi
		start-stop-daemon --start --quiet --pidfile $PID \
		    --exec $DAEMON -- $DAEMON_OPTS || true
		echo "$NAME."
		;;

	stop)
		echo -n "Stopping $DESC: "
		start-stop-daemon --stop --quiet --pidfile $PID \
		    --exec $DAEMON || true
		echo "$NAME."
		;;

	restart|force-reload)
		echo -n "Restarting $DESC: "
		start-stop-daemon --stop --quiet --pidfile \
		    $PID --exec $DAEMON || true
		sleep 1
		test_nginx_config
		start-stop-daemon --start --quiet --pidfile \
		    $PID --exec $DAEMON -- $DAEMON_OPTS || true
		echo "$NAME."
		;;

	reload)
		echo -n "Reloading $DESC configuration: "
		test_nginx_config
		start-stop-daemon --stop --signal HUP --quiet --pidfile $PID \
		    --exec $DAEMON || true
		echo "$NAME."
		;;

	configtest|testconfig)
		echo -n "Testing $DESC configuration: "
		if test_nginx_config; then
			echo "$NAME."
		else
			exit $?
		fi
		;;

	status)
		status_of_proc -p $PID "$DAEMON" nginx && exit 0 || exit $?
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|reload|force-reload|status|configtest}" >&2
		exit 1
		;;
esac

exit 0
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/debian/nginx.init.erb to tempfile /tmp/chef-rest20160913-19215-1hfhka
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/debian/nginx.init.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/templates/debian
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/Berksfile
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
upload_progress <%= node['nginx']['upload_progress']['zone_name'] -%> <%= node['nginx']['upload_progress']['zone_size'] -%>;
<% if node['nginx']['upload_progress']['javascript_output'] -%>
upload_progress_java_output;
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/default/modules/upload_progress.erb to tempfile /tmp/chef-rest20160913-19215-16dg9p5
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/default/modules/upload_progress.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/README.md
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/Guardfile
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/ubuntu/nginx.init.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/templates/ubuntu
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/sbin/runscript
# Copyright 1999-2012 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/www-servers/nginx/files/nginx.initd,v 1.1 2012/02/11 10:17:30 hollow Exp $

extra_commands="configtest"
extra_started_commands="upgrade reload"

description="Robust, small and high performance http and reverse proxy server"
description_configtest="Run nginx' internal config check."
description_upgrade="Upgrade the nginx binary without losing connections."
description_reload="Reload the nginx configuration without losing connections."

nginx_config=<%= node['nginx']['source']['conf_path'] %>

command=<%= node['nginx']['binary'] %>
command_args="-c ${nginx_config}"
pidfile=<%= node['nginx']['pid'] %>

depend() {
	need net
	use dns logger netmount
}

start_pre() {
	if [ "${RC_CMD}" != "restart" ]; then
		configtest || return 1
	fi
}

stop_pre() {
	if [ "${RC_CMD}" = "restart" ]; then
		configtest || return 1
	fi
}

stop_post() {
	rm -f ${pidfile}
}

reload() {
	configtest || return 1
	ebegin "Refreshing nginx' configuration"
	kill -HUP `cat ${pidfile}` &>/dev/null
	eend $? "Failed to reload nginx"
}

upgrade() {
	configtest || return 1
	ebegin "Upgrading nginx"

	einfo "Sending USR2 to old binary"
	kill -USR2 `cat ${pidfile}` &>/dev/null

	einfo "Sleeping 3 seconds before pid-files checking"
	sleep 3

	if [ ! -f ${pidfile}.oldbin ]; then
		eerror "File with old pid not found"
		return 1
	fi

	if [ ! -f ${pidfile} ]; then
		eerror "New binary failed to start"
		return 1
	fi

	einfo "Sleeping 3 seconds before WINCH"
	sleep 3 ; kill -WINCH `cat ${pidfile}.oldbin`

	einfo "Sending QUIT to old binary"
	kill -QUIT `cat ${pidfile}.oldbin`

	einfo "Upgrade completed"
	eend $? "Upgrade failed"
}

configtest() {
	ebegin "Checking nginx' configuration"
	${command} -c ${nginx_config} -t -q

	if [ $? -ne 0 ]; then
		${command} -c ${nginx_config} -t
	fi

	eend $? "failed, please correct errors above"
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037b7750
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/.rubocop.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037b78e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   ".rubocop.yml"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/Rakefile
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/.kitchen.yml
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003658828
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/Berksfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003658990>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "Berksfile"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000371ad60
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000371ae50>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "README.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000393a618
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/Guardfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000393a6e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "Guardfile"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# Guardfile for automated testing

# guard 'kitchen', cli: ['-c 2'] do
#   watch(%r{.kitchen.*/.+})
#   watch(%r{test/.+})
#   watch(%r{^recipes/(.+)\.rb$})
#   watch(%r{^attributes/(.+)\.rb$})
#   watch(%r{^files/(.+)})
#   watch(%r{^templates/(.+)})
#   watch(%r{^providers/(.+)\.rb})
#   watch(%r{^resources/(.+)\.rb})
# end

guard :foodcritic, cookbook_paths: '.', cli: ['--epic-fail', 'any'] do
  watch(%r{attributes/.+\.rb$})
  watch(%r{providers/.+\.rb$})
  watch(%r{recipes/.+\.rb$})
  watch(%r{resources/.+\.rb$})
  watch('metadata.rb')
end

# ChefSpec tests
guard :rspec, cmd: 'bundle exec rspec', all_on_start: true do
  watch(%r{^spec/.+_spec\.rb$})
  watch(%r{^(recipes)/(.+)\.rb$})   { |m| "spec/#{m[1]}_spec.rb" }
  watch('spec/spec_helper.rb')      { 'spec' }
end

guard :rubocop do
  watch(%r{.+\.rb$})
  watch(%r{(?:.+/)?\.rubocop\.yml$}) { |m| File.dirname(m[0]) }
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037c3140
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/TESTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037c3230>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "TESTING.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/templates/gentoo/nginx.init.erb to tempfile /tmp/chef-rest20160913-19215-s8d2eq
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/templates/gentoo/nginx.init.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/nginx/templates/gentoo
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Guardfile to tempfile /tmp/chef-rest20160913-19215-1s2wygp
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/Guardfile in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/CONTRIBUTING.md
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
AllCops:
  Exclude:
    - Guardfile
    - 'vendor/**/*'
AlignParameters:
  Enabled: false
ClassAndModuleChildren:
  Enabled: false
Encoding:
  Enabled: false
LineLength:
  Max: 200
HashSyntax:
  EnforcedStyle: hash_rockets
  Exclude:
    - Rakefile
    - 'spec/**/*'
    - 'test/**/*'
# Don't fail on whitespace between method names and arguments
Style/SingleSpaceBeforeFirstArg:
  Enabled: false
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.rubocop.yml to tempfile /tmp/chef-rest20160913-19215-5npy3g
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/.rubocop.yml in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003681818
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/Rakefile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003681c28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "Rakefile"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037513d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/.kitchen.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003751518>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   ".kitchen.yml"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'rspec/core/rake_task'
require 'rubocop/rake_task'
require 'foodcritic'
require 'kitchen'

# Style tests. Rubocop and Foodcritic
namespace :style do
  desc 'Run Ruby style checks'
  RuboCop::RakeTask.new(:ruby)

  desc 'Run Chef style checks'
  FoodCritic::Rake::LintTask.new(:chef) do |t|
    t.options = {
      fail_tags: ['any'],
      tags: [
        '~FC005',
        '~FC015',
        '~FC023'
      ]
    }
  end
end

desc 'Run all style checks'
task style: ['style:ruby', 'style:chef']

# Rspec and ChefSpec
desc 'Run ChefSpec examples'
RSpec::Core::RakeTask.new(:spec)

# Integration tests. Kitchen.ci
namespace :integration do
  desc 'Run Test Kitchen with Vagrant'
  task :vagrant do
    Kitchen.logger = Kitchen.default_file_logger
    Kitchen::Config.new.instances.each do |instance|
      instance.test(:always)
    end
  end

  desc 'Run Test Kitchen with cloud plugins'
  task :cloud do
    run_kitchen = true
    if ENV['TRAVIS'] == 'true' && ENV['TRAVIS_PULL_REQUEST'] != 'false'
      run_kitchen = false
    end

    if run_kitchen
      Kitchen.logger = Kitchen.default_file_logger
      @loader = Kitchen::Loader::YAML.new(project_config: './.kitchen.cloud.yml')
      config = Kitchen::Config.new(loader: @loader)
      config.instances.each do |instance|
        instance.test(:always)
      end
    end
  end
end

desc 'Run all tests on Travis'
task travis: ['style', 'spec', 'integration:cloud']

# Default
task default: ['style', 'spec', 'integration:vagrant']
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Rakefile to tempfile /tmp/chef-rest20160913-19215-p7enuz
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
source 'https://supermarket.chef.io'
metadata

group :integration do
  cookbook 'apt', '~> 2.0'
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/.travis.yml
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000023951f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/.travis.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002395330>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   ".travis.yml"]>

[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Berksfile to tempfile /tmp/chef-rest20160913-19215-uzdsb8
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/Berksfile in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/.rspec
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002017a28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/.rspec",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002017b68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   ".rspec"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
nginx Cookbook
==============
[![Cookbook](http://img.shields.io/cookbook/v/nginx.svg)](https://github.com/miketheman/nginx)
[![Build Status](https://travis-ci.org/miketheman/nginx.svg?branch=master)](https://travis-ci.org/miketheman/nginx)
[![Gitter chat](https://img.shields.io/badge/Gitter-miketheman%2Fnginx-brightgreen.svg)](https://gitter.im/miketheman/nginx)

Installs nginx from package OR source code and sets up configuration handling similar to Debian's Apache2 scripts.

# READ THIS FIRST

After having struggled with the cookbook format and the interfaces being brittle, the maintainers have decided to begin rewriting the core implmenetation of the nginx cookbook from the ground up, to allow for better flexibility, testability and maintianability.

To this end, we request that you not open new issues for the existing codebase.

Pull requests for bugs will be merged, any obvious optimizations and clarifications will be merged, and a 2.7.5 release will be shipped, and we will focus on writing the 3.0.0 version.

Thank you for your help on this front!

-- The Maintainers

---


Requirements
------------
### Cookbooks
The following cookbooks are direct dependencies because they're used for common "default" functionality.

- build-essential (for nginx::source)
- ohai (for nginx::ohai_plugin)

The following cookbook is not a strict dependency because its use can be controlled by an attribute, so it may not be a common "default."

- runit (for nginx::source)
- On RHEL family distros, the "yum" cookbook is required for `recipe[yum::epel]`.
- On Ubuntu, when using Nginx.org's stable package, `recipe[apt::default]` is required.


### Platforms
The following platforms are supported and tested under test kitchen:

- Ubuntu 10.04, Ubuntu 12.04, Ubuntu 14.04
- CentOS 5.8, 6.3

Other Debian and RHEL family distributions are assumed to work.


Attributes
----------
Node attributes for this cookbook are logically separated into different files. Some attributes are set only via a specific recipe.

### default
Generally used attributes. Some have platform specific values. See `attributes/default.rb`. "The Config" refers to "nginx.conf" the main config file.

- `node['nginx']['dir']` - Location for Nginx configuration.
- `node['nginx']['conf_template']` - The `source` template to use when creating the `nginx.conf`.
- `node['nginx']['conf_cookbook']` - The cookbook where `node['nginx']['conf_template']` resides.
- `node['nginx']['log_dir']` - Location for Nginx logs.
- `node['nginx']['log_dir_perm']` - Permissions for Nginx logs folder.
- `node['nginx']['user']` - User that Nginx will run as.
- `node['nginx']['group]` - Group for Nginx.
- `node['nginx']['port']` - Port for nginx to listen on.
- `node['nginx']['binary']` - Path to the Nginx binary.
- `node['nginx']['init_style']` - How to run Nginx as a service when
  using `nginx::source`. Values can be "runit", "upstart", "init" or
  "bluepill".  When using runit or bluepill, those recipes will be
  included as well and are dependencies of this cookbook.  Recipes
  are not included for upstart, it is assumed that upstart is built
  into the platform you are using (ubuntu or el6).  This attribute is
  not used in the `nginx` recipe because the package manager's init
  script style for the platform is assumed.  Upstart is never set as
  a default as this represents a change in behavior, if you are running
  ubuntu or el6 and want to use upstart, please set this attribute in
  a role or similar.
- `node['nginx']['upstart']['foreground']` - Set this to true if you
  want upstart to run nginx in the foreground, set to false if you
  want upstart to detach and track the process via pid.
- `node['nginx']['upstart']['runlevels']` - String of runlevels in the
  format '2345' which determines which runlevels nginx will start at
  when entering and stop at when leaving.
- `node['nginx']['upstart']['respawn_limit']` - Respawn limit in upstart
  stanza format, count followed by space followed by interval in seconds.
- `node['nginx']['pid']` - Location of the PID file.
- `node['nginx']['keepalive']` - Whether to use `keepalive_timeout`,
  any value besides "on" will leave that option out of the config.
- `node['nginx']['keepalive_requests']` - used for config value of
  `keepalive_requests`.
- `node['nginx']['keepalive_timeout']` - used for config value of
  `keepalive_timeout`.
- `node['nginx']['worker_processes']` - used for config value of
  `worker_processes`.
- `node['nginx']['worker_connections']` - used for config value of
  `events { worker_connections }`
- `node['nginx']['worker_rlimit_nofile']` - used for config value of
  `worker_rlimit_nofile`. Can replace any "ulimit -n" command. The
  value depend on your usage (cache or not) but must always be
  superior than worker_connections.
- `node['nginx']['multi_accept']` - used for config value of `events {
  multi_accept }`. Try to accept() as many connections as possible.
  Disable by default.
- `node['nginx']['event']` - used for config value of `events { use
  }`. Set the event-model. By default nginx looks for the most
  suitable method for your OS.
- `node['nginx']['accept_mutex_delay']` - used for config value of
  `accept_mutex_delay`
- `node['nginx']['server_tokens']` - used for config value of
  `server_tokens`.
- `node['nginx']['server_names_hash_bucket_size']` - used for config
  value of `server_names_hash_bucket_size`.
- `node['nginx']['disable_access_log']` - set to true to disable the
  general access log, may be useful on high traffic sites.
- `node['nginx']['access_log_options']` - Set to a string of additional options
  to be appended to the access log directive
- `node['nginx']['error_log_options']` - Set to a string of additional options
  to be appended to the error log directive
- `node['nginx']['default_site_enabled']` - enable the default site
- `node['nginx']['sendfile']` - Whether to use `sendfile`. Defaults to "on".
- `node['nginx']['tcp_nopush']` - Whether to use `tcp_nopush`. Defaults to "on".
- `node['nginx']['tcp_nodelay']` - Whether to use `tcp_nodelay`. Defaults to "on".
- `node['nginx']['install_method']` - Whether nginx is installed from
  packages or from source.
- `node['nginx']['types_hash_max_size']` - Used for the
  `types_hash_max_size` configuration directive.
- `node['nginx']['types_hash_bucket_size']` - Used for the
  `types_hash_bucket_size` configuration directive.
- `node['nginx']['proxy_read_timeout']` - defines a timeout (between two
  successive read operations) for reading a response from the proxied server.
- `node['nginx']['client_body_buffer_size']` - used for config value of
  `client_body_buffer_size`.
- `node['nginx']['client_max_body_size']` - specifies the maximum accepted body
  size of a client request, as indicated by the request header Content-Length.
- `node['nginx']['repo_source']` - when installed from a package this attribute affects
  which yum repositories, if any, will be added before installing the nginx package. The
  default value of 'epel' will use the `yum::epel` recipe, 'nginx' will use the
  `nginx::repo` recipe, 'passenger' will use the 'nginx::repo_passenger' recipe, and setting no value will not add any additional repositories.
* `node['nginx']['sts_max_age']` - Enable Strict Transport Security for all apps (See: http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security).  This attribute adds the following header:

  Strict-Transport-Security max-age=SECONDS

to all incoming requests and takes an integer (in seconds) as its argument.
* `node['nginx']['default']['modules']` - Array specifying which
modules to enable via the conf-enabled config include function.
Currently the only valid value is "socketproxy".

Other configurations

- `node['nginx']['extra_configs']` - a Hash of key/values to nginx configuration.

Rate Limiting

- `node['nginx']['enable_rate_limiting']` - set to true to enable rate
  limiting (`limit_req_zone` in nginx.conf)
- `node['nginx']['rate_limiting_zone_name']` - sets the zone in
  `limit_req_zone`.
- `node['nginx']['rate_limiting_backoff']` - sets the backoff time for
  `limit_req_zone`.
- `node['nginx']['rate_limit']` - set the rate limit amount for
  `limit_req_zone`.

### gzip module

- `node['nginx']['gzip']` - Whether to use gzip, can be "on" or "off"
- `node['nginx']['gzip_http_version']` - used for config value of `gzip_http_version`.
- `node['nginx']['gzip_comp_level']` - used for config value of `gzip_comp_level`.
- `node['nginx']['gzip_proxied']` - used for config value of `gzip_proxied`.
- `node['nginx']['gzip_vary']` - used for config value of `gzip_vary`.
- `node['nginx']['gzip_buffers']` - used for config value of `gzip_buffers`.
- `node['nginx']['gzip_types']` - used for config value of `gzip_types` - must be an Array.
- `node['nginx']['gzip_min_length']` - used for config value of `gzip_min_length`.
- `node['nginx']['gzip_disable']` - used for config value of `gzip_disable`.
- `node['nginx']['gzip_static']` - used for config value of `gzip_static` (`http_gzip_static_module` must be enabled)
### Attributes set in recipes

#### nginx::source
- `node['nginx']['daemon_disable']` - Whether the daemon should be
  disabled which can be true or false; disable the daemon (run in the
  foreground) when using a service supervisor such as runit or
  bluepill for "init_style". This is automatically set in the
  `nginx::source` recipe when the init style is not bluepill or runit.

#### nginx::authorized_ips
- `node['nginx']['remote_ip_var']` - The remote ip variable name to
  use.
- `node['nginx']['authorized_ips']` - IPs authorized by the module

#### nginx::http_realip_module
From: http://nginx.org/en/docs/http/ngx_http_realip_module.html

- `node['nginx']['realip']['header']` - Header to use for the RealIp
  Module; only accepts "X-Forwarded-For" or "X-Real-IP"
- `node['nginx']['realip']['addresses']` - Addresses to use for the
  `http_realip` configuration.
- `node['nginx']['realip']['real_ip_recursive']` - If recursive search is enabled, the original client address that matches one of the trusted addresses is replaced by the last non-trusted address sent in the request header field. Can be on "on" or "off" (default).

### source
These attributes are used in the `nginx::source` recipe. Some of them
are dynamically modified during the run. See `attributes/source.rb`
for default values.

- `node['nginx']['source']['url']` - (versioned) URL for the Nginx
  source code. By default this will use the version specified as
  `node['nginx']['version']`.
- `node['nginx']['source']['prefix']` - (versioned) prefix for
  installing nginx from source
- `node['nginx']['source']['conf_path']` - location of the main config
  file, in `node['nginx']['dir']` by default.
- `node['nginx']['source']['modules']` - Array of modules that should
  be compiled into Nginx by including their recipes in
  `nginx::source`.
- `node['nginx']['source']['default_configure_flags']` - The default
  flags passed to the configure script when building Nginx.
- `node['nginx']['configure_flags']` - Preserved for compatibility and
  dynamically generated from the
  `node['nginx']['source']['default_configure_flags']` in the
  `nginx::source` recipe.
* `node['nginx']['source']['use_existing_user']` - set to `true` if you
  do not want `nginx::source` recipe to create system user with name
  `node['nginx']['user']`.

### geoip
These attributes are used in the `nginx::http_geoip_module` recipe.
Please note that the `country_dat_checksum` and `city_dat_checksum`
are based on downloads from a datacenter in Fremont, CA, USA. You
really should override these with checksums for the geo tarballs from
your node location.

**Note** The upstream, maxmind.com, may block access for repeated
  downloads of the data files. It is recommended that you download and
  host the data files, and change the URLs in the attributes.

- `node['nginx']['geoip']['path']` - Location where to install the
  geoip libraries.
- `node['nginx']['geoip']['enable_city']` - Whether to enable City
  data
- `node['nginx']['geoip']['country_dat_url']` - Country data tarball
  URL
- `node['nginx']['geoip']['country_dat_checksum']` - Country data
  tarball checksum
- `node['nginx']['geoip']['city_dat_url']` - City data tarball URL
- `node['nginx']['geoip']['city_dat_checksum']` - City data tarball
  checksum
- `node['nginx']['geoip']['lib_version']` - Version of the GeoIP
  library to install
- `node['nginx']['geoip']['lib_url']` - (Versioned) Tarball URL of the
  GeoIP library
- `node['nginx']['geoip']['lib_checksum']` - Checksum of the GeoIP
  library tarball

### upload_progress
These attributes are used in the `nginx::upload_progress_module`
recipe.

- `node['nginx']['upload_progress']['url']` - URL for the tarball.
- `node['nginx']['upload_progress']['checksum']` - Checksum of the
  tarball.
- `node['nginx']['upload_progress']['javascript_output']` - Output in javascript.
  Default is `true` for backwards compatibility.
- `node['nginx']['upload_progress']['zone_name']` - Zone name which will
  be used to store the per-connection tracking information.
  Default is `proxied`.
- `node['nginx']['upload_progress']['zone_size']` - Zone size in bytes.
  Default is `1m` (1 megabyte).

### passenger
These attributes are used in the `nginx::passenger` recipe.

- `node['nginx']['passenger']['version']` - passenger gem version
- `node['nginx']['passenger']['root']` - passenger gem root path
- `node['nginx']['passenger']['install_rake']` - set to false if rake already present on system
- `node['nginx']['passenger']['max_pool_size']` - maximum passenger
  pool size (default=10)
- `node['nginx']['passenger']['ruby']` - Ruby path for Passenger to
  use (default=`$(which ruby)`)
- `node['nginx']['passenger']['spawn_method']` - passenger spawn
  method to use (default=`smart-lv2`)
- `node['nginx']['passenger']['buffer_response']` - turns on or off
  response buffering (default=`on`)
- `node['nginx']['passenger']['max_pool_size']` - passenger maximum
  pool size (default=`6`)
- `node['nginx']['passenger']['min_instances']` - minimum instances
  (default=`1`)
- `node['nginx']['passenger']['max_instances_per_app']` - maximum
  instances per app (default=`0`)
- `node['nginx']['passenger']['pool_idle_time']` - passenger pool idle
  time (default=`300`)
- `node['nginx']['passenger']['max_requests']` - maximum requests
  (default=`0`)
- `node['nginx']['passenger']['nodejs']` - Nodejs path for Passenger to
  use (default=nil)

Basic configuration to use the official Phusion Passenger repositories:
- `node['nginx']['repo_source']` - 'passenger'
- `node['nginx']['package_name']` - 'nginx-extras'
- `node['nginx']['passenger']['install_method']` - 'package'

### echo
These attributes are used in the `nginx::http_echo_module` recipe.

- `node['nginx']['echo']['version']` - The version of `http_echo` you
  want (default: 0.40)
- `node['nginx']['echo']['url']` - URL for the tarball.
- `node['nginx']['echo']['checksum']` - Checksum of the tarball.

### status
These attributes are used in the `nginx::http_stub_status_module` recipe.

- `node['nginx']['status']['port']` - The port on which nginx will
  serve the status info (default: 8090)

### syslog
These attributes are used in the `nginx::syslog_module` recipe.

- `node['nginx']['syslog']['git_repo']` - The git repository url to use
  for the syslog patches.
- `node['nginx']['syslog']['git_revision']` - The revision on the git
  repository to checkout.

### openssl_source
These attributes are used in the `nginx::openssl_source` recipe.

- `node['nginx']['openssl_source']['version']` - The version of OpenSSL
  you want to download and use (default: 1.0.1e)
- `node['nginx']['openssl_source']['url']` - The url for the OpenSSL source


## socketproxy.rb

These attributes are used in the `nginx::socketproxy` recipe.

* `node['nginx']['socketproxy']['root']` - The directory (on your server) where socketproxy apps are deployed.
* `node['nginx']['socketproxy']['default_app']` - Static assets directory for requests to "/" that don't meet any proxy_pass filter requirements.
* `node['nginx']['socketproxy']['apps']['app_name']['prepend_slash']` - Prepend a slash to requests to app "app_name" before sending them to the socketproxy socket.
* `node['nginx']['socketproxy']['apps']['app_name']['context_name']` - URI (e.g. "app_name" in order to achieve "http://mydomain.com/app_name") at which to host the application "app_name"
* `node['nginx']['socketproxy']['apps']['app_name']['subdir']` - Directory (under `node['nginx']['socketproxy']['root']`) in which to find the application.

Recipes
-------
This cookbook provides three main recipes for installing Nginx.

- `default.rb` - *Use this recipe* if you have a native package for
  Nginx.
- `repo.rb` - The developer of Nginx also maintain
  [stable packages](http://nginx.org/en/download.html) for several
  platforms.
- `source.rb` - *Use this recipe* if you do not have a native package for
  Nginx, or if you want to install a newer version than is available,
  or if you have custom module compilation needs.

Several recipes are related to the `source` recipe specifically. See
that recipe's section below for a description.

### default
The default recipe will install Nginx as a native package for the
system through the package manager and sets up the configuration
according to the Debian site enable/disable style with `sites-enabled`
using the `nxensite` and `nxdissite` scripts. The nginx service will
be managed with the normal init scripts that are presumably included
in the native package.

Includes the `ohai_plugin` recipe so the plugin is available.

### socketproxy

This will add socketproxy support to your nginx proxy setup.  Do not
include this recipe directly.  Instead, add it to the
`node['nginx']['default']['modules']` array (see below).

### ohai_plugin

This recipe provides an Ohai plugin as a template. It is included by
both the `default` and `source` recipes.

### authorized_ips
Sets up configuration for the `authorized_ip` nginx module.

### source
This recipe is responsible for building Nginx from source. It ensures
that the required packages to build Nginx are installed (pcre,
openssl, compile tools). The source will be downloaded from the
`node['nginx']['source']['url']`. The `node['nginx']['user']` will be
created as a system user. If you want to use existing user set
`node['nginx']['source']['use_existing_user']` to `true`. The appropriate
configuration and log directories and config files will be created
as well according to the attributes `node['nginx']['dir']` and
`node['nginx']['log_dir']`.

The recipe attempts to detect whether additional modules should be
added to the configure command through recipe inclusion (see below),
and whether the version or configuration flags have changed and should
trigger a recompile.

The nginx service will be set up according to
`node['nginx']['init_style']`. Available options are:

- runit: uses runit cookbook and sets up `runit_service`.
- bluepill: uses bluepill cookbook and sets up `bluepill_service`.
- anything else (e.g., "init") will use the nginx init script
  template.

**RHEL/CentOS** This recipe should work on RHEL/CentOS with "init" as
  the init style.

The following recipes are used to build module support into Nginx. To
use a module in the `nginx::source` recipe, add its recipe name to the
attribute `node['nginx']['source']['modules']`.

- `ipv6.rb` - enables IPv6 support
- `http_echo_module.rb` - downloads the `http_echo_module` module and
  enables it as a module when compiling nginx.
- `http_geoip_module.rb` - installs the GeoIP libraries and data files
  and enables the module for compilation.
- `http_gzip_static_module.rb` - enables the module for compilation. Be sure to set `node['nginx']['gzip_static'] = 'yes'`.
- `http_perl_module.rb` - enables embedded Perl for compilation.
- `http_realip_module.rb` - enables the module for compilation and
  creates the configuration.
- `http_ssl_module.rb` - enables SSL for compilation.
- `http_stub_status_module.rb` - provides `nginx_status` configuration
  and enables the module for compilation.
- `naxsi_module` - enables the naxsi module for the web application
  firewall for nginx.
- `passenger` - builds the passenger gem and configuration for
  "`mod_passenger`".
- `syslog` - enables syslog support for nginx.  This only works with
  source builds.  See https://github.com/yaoweibin/nginx_syslog_patch
- `upload_progress_module.rb` - builds the `upload_progress` module
  and enables it as a module when compiling nginx.
- `openssl_source.rb` - downloads and uses custom OpenSSL source
  when compiling nginx

Definitions
-----------

The cookbook provides a new definition. At some point in the future this definition may be refactored into a lightweight resource and provider as suggested by [foodcritic rule FC015](http://acrmp.github.com/foodcritic/#FC015).

### nginx\_site

Enable or disable a Server Block in
`#{node['nginx']['dir']}/sites-available` by calling nxensite or
nxdissite (introduced by this cookbook) to manage the symbolic link in
`#{node['nginx']['dir']}/sites-enabled`.

### Parameters:

* `name` - Name of the site.
* `enable` - Default true, which uses `nxensite` to enable the site. If false, the site will be disabled with `nxdissite`.
* `template` - (optional) Path to the source for the `template` resource.
* `variables` - (optional) Variables to be used with the `template` resource


Adding New Modules
------------------
To add a new module to be compiled into nginx in the source recipe,
the node's run state is manipulated in a recipe, and the module as a
recipe should be added to `node['nginx']['source']['modules']`. For
example:

```ruby
node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_stub_status_module']
```

The recipe will be included by `recipe[nginx::source]` automatically,
adding the configure flags. Add any other configuration templates or
other resources as required. See the recipes described above for
examples.


Ohai Plugin
-----------
The `ohai_plugin` recipe includes an Ohai plugin. It will be
automatically installed and activated, providing the following
attributes via ohai, no matter how nginx is installed (source or
package):

- `node['nginx']['version']` - version of nginx
- `node['nginx']['configure_arguments']` - options passed to
  `./configure` when nginx was built
- `node['nginx']['prefix']` - installation prefix
- `node['nginx']['conf_path']` - configuration file path

In the source recipe, it is used to determine whether control
attributes for building nginx have changed.


Usage
-----
Include the recipe on your node or role that fits how you wish to
install Nginx on your system per the recipes section above. Modify the
attributes as required in your role to change how various
configuration is applied per the attributes section above. In general,
override attributes in the role should be used when changing
attributes.

There's some redundancy in that the config handling hasn't been
separated from the installation method (yet), so use only one of the
recipes, default or source.


License & Authors
-----------------
- Author:: Joshua Timberman (<joshua@chef.io>)
- Author:: Adam Jacob (<adam@chef.io>)
- Author:: AJ Christensen (<aj@chef.io>)
- Author:: Jamie Winsor (<jamie@vialstudios.com>)
- Author:: Mike Fiedler (<miketheman@gmail.com>)

```text
Copyright 2008-2014, Chef Software, Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/README.md to tempfile /tmp/chef-rest20160913-19215-oi2iuh
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/ROADMAP.md
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/Rakefile in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001ee8490
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/ROADMAP.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001ee87b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "ROADMAP.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/.gitignore
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001ecca38
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/.gitignore",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001eccbc8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   ".gitignore"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
sudo: false
language: ruby
cache: bundler
bundler_args: --without development kitchen_docker kitchen_vagrant
rvm:
- 2.1.4
script:
- bundle exec rake style
- bundle exec rake spec
notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/3ba4761e5efe291965bf
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/README.md in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.travis.yml to tempfile /tmp/chef-rest20160913-19215-i17ce4
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/Berksfile.lock
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/.travis.yml in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002321d18
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002321ea8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
--color
--require spec_helper
--tag ~wip
--tag focus
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.rspec to tempfile /tmp/chef-rest20160913-19215-1xcdd0m
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
driver:
  name: vagrant

provisioner:
  name: chef_zero

platforms:
  - name: centos-5.10
  - name: centos-6.5
  - name: ubuntu-10.04
    run_list:
        - recipe[apt]
  - name: ubuntu-12.04
    run_list:
        - recipe[apt]

suites:
  - name: default
    run_list:
      - recipe[nginx::default]
  - name: source
    run_list:
      - recipe[nginx::default]
    attributes:
      nginx:
        install_method: source
  - name: upstream_repo
    run_list:
      - recipe[nginx::repo]
      - recipe[nginx::default]
    attributes:
      nginx:
        repo_source: nginx
  - name: modules
    run_list:
      - recipe[nginx::source]
    attributes:
      nginx:
        source:
          modules:
            - nginx::headers_more_module
            - nginx::http_auth_request_module
            - nginx::http_echo_module
            - nginx::http_geoip_module
            - nginx::http_gzip_static_module
            - nginx::http_realip_module
            - nginx::http_spdy_module
            - nginx::http_ssl_module
            - nginx::http_stub_status_module
            - nginx::naxsi_module
            - nginx::ngx_devel_module
            - nginx::ngx_lua_module
            - nginx::openssl_source
            - nginx::upload_progress_module
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.kitchen.yml to tempfile /tmp/chef-rest20160913-19215-1g5uoc
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/.rspec in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
yum Cookbook TESTING doc
========================

Bundler
-------
A ruby environment with Bundler installed is a prerequisite for using
the testing harness shipped with this cookbook. At the time of this
writing, it works with Ruby 2.0 and Bundler 1.5.3. All programs
involved, with the exception of Vagrant, can be installed by cd'ing
into the parent directory of this cookbook and running "bundle install"

Rakefile
--------
The Rakefile ships with a number of tasks, each of which can be ran
individually, or in groups. Typing "rake" by itself will perform style
checks with Rubocop and Foodcritic, ChefSpec with rspec, and
integration with Test Kitchen using the Vagrant driver by
default.Alternatively, integration tests can be ran with Test Kitchen
cloud drivers.

```
$ rake -T
rake integration:cloud    # Run Test Kitchen with cloud plugins
rake integration:vagrant  # Run Test Kitchen with Vagrant
rake spec                 # Run ChefSpec examples
rake style                # Run all style checks
rake style:chef           # Lint Chef cookbooks
rake style:ruby           # Run Ruby style checks
rake travis               # Run all tests on Travis
```

Style Testing
-------------
Ruby style tests can be performed by Rubocop by issuing either
```
bundle exec rubocop
```
or
```
rake style:ruby
```

Chef style tests can be performed with Foodcritic by issuing either
```
bundle exec foodcritic
```
or
```
rake style:chef
```

Spec Testing
-------------
Unit testing is done by running Rspec examples. Rspec will test any
libraries, then test recipes using ChefSpec. This works by compiling a
recipe (but not converging it), and allowing the user to make
assertions about the resource_collection.

Integration Testing
-------------------
Integration testing is performed by Test Kitchen. Test Kitchen will
use either the Vagrant driver or various cloud drivers to instantiate
machines and apply cookbooks. After a successful converge, tests are
uploaded and ran out of band of Chef. Tests should be designed to
ensure that a recipe has accomplished its goal.

Integration Testing using Vagrant
---------------------------------
Integration tests can be performed on a local workstation using
Virtualbox or VMWare. Detailed instructions for setting this up can be
found at the [Bento](https://github.com/chef/bento) project web site.

Integration tests using Vagrant can be performed with either
```
bundle exec kitchen test
```
or
```
rake integration:vagrant
```

Integration Testing using Cloud providers
-----------------------------------------
Integration tests can be performed on cloud providers using
Test Kitchen plugins. This cookbook ships a ```.kitchen.cloud.yml```
that references environmental variables present in the shell that
```kitchen test``` is ran from. These usually contain authentication
tokens for driving IaaS APIs, as well as the paths to ssh private keys
needed for Test Kitchen log into them after they've been created.

Examples of environment variables being set in ```~/.bash_profile```:
```
# digital_ocean
export DIGITAL_OCEAN_CLIENT_ID='your_bits_here'
export DIGITAL_OCEAN_API_KEY='your_bits_here'
export DIGITAL_OCEAN_SSH_KEY_IDS='your_bits_here'

# aws
export AWS_ACCESS_KEY_ID='your_bits_here'
export AWS_SECRET_ACCESS_KEY='your_bits_here'
export AWS_KEYPAIR_NAME='your_bits_here'

# joyent
export SDC_CLI_ACCOUNT='your_bits_here'
export SDC_CLI_IDENTITY='your_bits_here'
export SDC_CLI_KEY_ID='your_bits_here'
```

Integration tests using cloud drivers can be performed with either
```
export KITCHEN_YAML=.kitchen.cloud.yml
bundle exec kitchen test
```
or
```
rake integration:cloud
```

Digital Ocean Hint
------------------
At the time of this writing, you cannot find the numerical values
needed for your SSH_KEY_IDS from the GUI. Instead, you will need to
access the API from the command line.

    curl -L 'https://api.digitalocean.com/ssh_keys/?client_id=your_bits_here&api_key=your_bits_here'

Words about .travis.yml
-----------------------
In order for Travis to perform integration tests on public cloud
providers, two major things need to happen. First, the environment
variables referenced by ```.kitchen.cloud.yml``` need to be made
available. Second, the private half of the ssh keys needed to log into
machines need to be dropped off on the machine.

The first part is straight forward. The travis gem can encrypt
environment variables against the public key on the Travis repository
and add them to the .travis.yml.

```
gem install travis
travis encrypt AWS_ACCESS_KEY_ID='your_bits_here' --add
travis encrypt AWS_SECRET_ACCESS_'your_bits_here' --add
travis encrypt AWS_KEYPAIR_NAME='your_bits_here' --add
travis encrypt EC2_SSH_KEY_PATH='~/.ssh/id_ec2.pem' --add

travis encrypt DIGITAL_OCEAN_CLIENT_ID='your_bits_here' --add
travis encrypt DIGITAL_OCEAN_API_KEY='your_bits_here' --add
travis encrypt DIGITAL_OCEAN_SSH_KEY_IDS='your_bits_here' --add
travis encrypt DIGITAL_OCEAN_SSH_KEY_PATH='~/.ssh/id_do.pem' --add
```

The second part is a little more complicated. Travis ENV variables are
restricted to 90 bytes, and will not fit an entire SSH key. This can
be worked around by breaking them up into 90 byte chunks, stashing
them into ENV variables, then digging them out in the
```before_install``` section of .travis.yml

Here is an AWK script to do the encoding.
```
base64 ~/.ssh/travisci_cook_digitalocean.pem | \
awk '{
  j=0;
  for( i=1; i<length; i=i+90 ) {
    system("travis encrypt DO_KEY_CHUNK_" j "=" substr($0, i, 90) " --add");
    j++;
  }
}'

base64 ~/.ssh/travisci_cook_ec2.pem | \
awk '{
  j=0;
  for( i=1; i<length; i=i+90 ) {
    system("travis encrypt EC2_KEY_CHUNK_" j "=" substr($0, i, 90)" --add");
    j++;
  }
}'
```

Then in .travis.yml:
```
before_install:
- echo -n $DO_KEY_CHUNK_{0..30} >> ~/.ssh/id_do.base64
- cat ~/.ssh/id_do.base64 | tr -d ' ' | base64 --decode >  ~/.ssh/id_do.pem
  - echo -n $EC2_KEY_CHUNK_{0..30} >> ~/.ssh/id_ec2.base64
  - cat ~/.ssh/id_ec2.base64 | tr -d ' ' | base64 --decode > ~/.ssh/id_ec2.pem
```

--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/TESTING.md to tempfile /tmp/chef-rest20160913-19215-4t3zvl
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/TESTING.md in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/.kitchen.yml in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/Gemfile
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/metadata.json
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b51878
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b51a08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "metadata.json"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/LICENSE
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b459d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/LICENSE",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b445d8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "LICENSE"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# Contributing to Chef Software Cookbooks

We are glad you want to contribute to Chef Software Cookbooks! The first
step is the desire to improve the project.

You can find the answers to additional frequently asked questions
[on the wiki](http://wiki.chef.io/display/chef/How+to+Contribute).

You can find additional information about
[contributing to cookbooks](http://wiki.chef.io/display/chef/How+to+Contribute+to+Chef+Cookbooks)
on the wiki as well.

## Quick-contribute

* Create an account on our [bug tracker](http://tickets.chef.io)
* Sign our contributor agreement (CLA)
[ online](https://secure.echosign.com/public/hostedForm?formid=PJIF5694K6L)
(keep reading if you're contributing on behalf of your employer)
* Create a ticket for your change on the
  [bug tracker](http://tickets.chef.io)
* Link to your patch as a rebased git branch or pull request from the
  ticket
* Resolve the ticket as fixed

We regularly review contributions and will get back to you if we have
any suggestions or concerns.

## The Apache License and the CLA/CCLA

Licensing is very important to open source projects, it helps ensure
the software continues to be available under the terms that the author
desired. Chef uses the Apache 2.0 license to strike a balance between
open contribution and allowing you to use the software however you
would like to.

The license tells you what rights you have that are provided by the
copyright holder. It is important that the contributor fully
understands what rights they are licensing and agrees to them.
Sometimes the copyright holder isn't the contributor, most often when
the contributor is doing work for a company.

To make a good faith effort to ensure these criteria are met, Chef
requires a Contributor License Agreement (CLA) or a Corporate
Contributor License Agreement (CCLA) for all contributions. This is
without exception due to some matters not being related to copyright
and to avoid having to continually check with our lawyers about small
patches.

It only takes a few minutes to complete a CLA, and you retain the
copyright to your contribution.

You can complete our contributor agreement (CLA)
[ online](https://secure.echosign.com/public/hostedForm?formid=PJIF5694K6L).
If you're contributing on behalf of your employer, have your employer
fill out our
[Corporate CLA](https://secure.echosign.com/public/hostedForm?formid=PIE6C7AX856)
instead.

## Ticket Tracker (JIRA)

The [ticket tracker](http://tickets.chef.io) is the most important
documentation for the code base. It provides significant historical
information, such as:

* Which release a bug fix is included in
* Discussion regarding the design and merits of features
* Error output to aid in finding similar bugs

Each ticket should aim to fix one bug or add one feature.

## Using git

You can get a quick copy of the repository for this cookbook by
running `git clone
git://github.com/chef-coobkooks/COOKBOOKNAME.git`.

For collaboration purposes, it is best if you create a Github account
and fork the repository to your own account. Once you do this you will
be able to push your changes to your Github repository for others to
see and use.

If you have another repository in your GitHub account named the same
as the cookbook, we suggest you suffix the repository with -cookbook.

### Branches and Commits

You should submit your patch as a git branch named after the ticket,
such as COOK-1337. This is called a _topic branch_ and allows users to
associate a branch of code with the ticket.

It is a best practice to have your commit message have a _summary
line_ that includes the ticket number, followed by an empty line and
then a brief description of the commit. This also helps other
contributors understand the purpose of changes to the code.

    [COOK-1757] - platform_family and style

    * use platform_family for platform checking
    * update notifies syntax to "resource_type[resource_name]" instead of
      resources() lookup
    * COOK-692 - delete config files dropped off by packages in conf.d
    * dropped debian 4 support because all other platforms have the same
      values, and it is older than "old stable" debian release

Remember that not all users use Chef in the same way or on the same
operating systems as you, so it is helpful to be clear about your use
case and change so they can understand it even when it doesn't apply
to them.

### Github and Pull Requests

All of Chef's open source cookbook projects are available on
[Github](http://www.github.com/chef-cookbooks).

We don't require you to use Github, and we will even take patch diffs
attached to tickets on the tracker. However Github has a lot of
convenient features, such as being able to see a diff of changes
between a pull request and the main repository quickly without
downloading the branch.

If you do choose to use a pull request, please provide a link to the
pull request from the ticket __and__ a link to the ticket from the
pull request. Because pull requests only have two states, open and
closed, we can't easily filter pull requests that are waiting for a
reply from the author for various reasons.

### More information

Additional help with git is available on the
[Working with Git](http://wiki.chef.io/display/chef/Working+with+Git)
wiki page.

## Functional and Unit Tests

This cookbook is set up to run tests under
[Chef's test-kitchen](https://github.com/chef/test-kitchen). It
uses minitest-chef to run integration tests after the node has been
converged to verify that the state of the node.

Test kitchen should run completely without exception using the default
[baseboxes provided by Chef](https://github.com/chef/bento).
Because Test Kitchen creates VirtualBox machines and runs through
every configuration in the Kitchenfile, it may take some time for
these tests to complete.

If your changes are only for a specific recipe, run only its
configuration with Test Kitchen. If you are adding a new recipe, or
other functionality such as a LWRP or definition, please add
appropriate tests and ensure they run with Test Kitchen.

If any don't pass, investigate them before submitting your patch.

Any new feature should have unit tests included with the patch with
good code coverage to help protect it from future changes. Similarly,
patches that fix a bug or regression should have a _regression test_.
Simply put, this is a test that would fail without your patch but
passes with it. The goal is to ensure this bug doesn't regress in the
future. Consider a regular expression that doesn't match a certain
pattern that it should, so you provide a patch and a test to ensure
that the part of the code that uses this regular expression works as
expected. Later another contributor may modify this regular expression
in a way that breaks your use cases. The test you wrote will fail,
signalling to them to research your ticket and use case and accounting
for it.

If you need help writing tests, please ask on the Chef Developer's
mailing list, or the #chef-hacking IRC channel.

## Code Review

Chef Software regularly reviews code contributions and provides suggestions
for improvement in the code itself or the implementation.

We find contributions by searching the ticket tracker for _resolved_
tickets with a status of _fixed_. If we have feedback we will reopen
the ticket and you should resolve it again when you've made the
changes or have a response to our feedback. When we believe the patch
is ready to be merged, we will tag the _Code Reviewed_ field with
_Reviewed_.

Depending on the project, these tickets are then merged within a week
or two, depending on the current release cycle.

## Release Cycle

The versioning for Chef Software Cookbook projects is X.Y.Z.

* X is a major release, which may not be fully compatible with prior
  major releases
* Y is a minor release, which adds both new features and bug fixes
* Z is a patch release, which adds just bug fixes

A released version of a cookbook will end in an even number, e.g.
"1.2.4" or "0.8.0". When development for the next version of the
cookbook begins, the "Z" patch number is incremented to the next odd
number, however the next release of the cookbook may be a major or
minor incrementing version.

Releases of Chef's cookbooks are usually announced on the Chef user
mailing list. Releases of several cookbooks may be batched together
and announced on the [Chef Software Blog](http://www.chef.io/blog).

## Working with the community

These resources will help you learn more about Chef and connect to
other members of the Chef community:

* [chef](http://lists.chef.io/sympa/info/chef) and
  [chef-dev](http://lists.chef.io/sympa/info/chef-dev) mailing
  lists
* #chef and #chef-hacking IRC channels on irc.freenode.net
* [Community Cookbook site](http://community.chef.io)
* [Chef wiki](http://wiki.chef.io/display/chef)
* Chef Software Chef [product page](http://www.chef.io/chef)


## Cookbook Contribution Do's and Don't's

Please do include tests for your contribution. If you need help, ask
on the
[chef-dev mailing list](http://lists.chef.io/sympa/info/chef-dev)
or the
[#chef-hacking IRC channel](http://community.chef.io/chat/chef-hacking).
Not all platforms that a cookbook supports may be supported by Test
Kitchen. Please provide evidence of testing your contribution if it
isn't trivial so we don't have to duplicate effort in testing. Chef
10.14+ "doc" formatted output is sufficient.

Please do indicate new platform (families) or platform versions in the
commit message, and update the relevant ticket.

If a contribution adds new platforms or platform versions, indicate
such in the body of the commit message(s), and update the relevant
COOK ticket. When writing commit messages, it is helpful for others if
you indicate the COOK ticket. For example:

    git commit -m '[COOK-1041] - Updated pool resource to correctly
    delete.'

Please do use [foodcritic](http://acrmp.github.com/foodcritic) to
lint-check the cookbook. Except FC007, it should pass all correctness
rules. FC007 is okay as long as the dependent cookbooks are *required*
for the default behavior of the cookbook, such as to support an
uncommon platform, secondary recipe, etc.

Please do ensure that your changes do not break or modify behavior for
other platforms supported by the cookbook. For example if your changes
are for Debian, make sure that they do not break on CentOS.

Please do not modify the version number in the metadata.rb, Chef
will select the appropriate version based on the release cycle
information above.

Please do not update the CHANGELOG.md for a new version. Not all
changes to a cookbook may be merged and released in the same versions.
Chef Software will update the CHANGELOG.md when releasing a new version of
the cookbook.
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-1157ji
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/.kitchen.cloud.yml
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
.vagrant
Berksfile.lock
Gemfile.lock
*~
*#
.#*
\#*#
.*.sw[a-z]
*.un~
.bundle
.cache
.kitchen
bin
.kitchen.local.yml
.coverage
.ruby-gemset
.ruby-version
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/nginx/CHANGELOG.md
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.gitignore to tempfile /tmp/chef-rest20160913-19215-1eoinz9
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fba2e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fba420>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "CHANGELOG.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000d19fe8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/Gemfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000d1a218>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "Gemfile"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# Roadmap

This attempts to describe a roadmap for any upcoming versions and development.

## Pre-2.8

- Update toolchain and test suite so they can pass locally
  See about tests passing in cloud config/travis
- Review open Issues/Pull requests and classify as bug vs improvement, assign to milestones
- Review existing COOK tickets with [this filter](https://tickets.chef.io/secure/IssueNavigator.jspa?reset=true&jqlQuery=project+%3D+COOK+AND+status+in+%28Open%2C+%22In+Progress%22%2C+Reopened%29+AND+component+%3D+nginx+AND+project+%3D+COOK+ORDER+BY+updated+ASC%2C+key+DESC)
  attempt to close out as many as possible, especially
- Rework CONTRIBUTING.md to reflect non-Chef Software maintainers
- Rework TESTING.md to reflect actual testing method
- Apply stylistic choices to codebase

## Version 2.7.5

- Toolchain updates for current versions
- Test suites pass on CentOS & Ubuntu Long-Term Supported versions
- Any new documentation and test suites
- Any currently open bugs/pull requests fixing bugs

## Version 2.8

- Any new behaviors/functionality/feature introduced in current pull requests.

## Version 3.0

- Anything we can think of that we want to change.
  Please Fork/Edit/PullRequest ideas to this list with some context and reasoning.
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "nginx",
  "description": "Installs and configures nginx",
  "long_description": "",
  "maintainer": "Chef Software, Inc.",
  "maintainer_email": "cookbooks@chef.io",
  "license": "Apache 2.0",
  "platforms": {
    "amazon": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "oracle": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "scientific": ">= 0.0.0",
    "ubuntu": ">= 0.0.0"
  },
  "dependencies": {
    "apt": "~> 2.2",
    "bluepill": "~> 2.3",
    "build-essential": "~> 2.0",
    "ohai": "~> 2.0",
    "runit": "~> 1.2",
    "yum-epel": "~> 0.3"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "nginx/dir": {
      "display_name": "Nginx Directory",
      "description": "Location of nginx configuration files",
      "default": "/etc/nginx",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/log_dir": {
      "display_name": "Nginx Log Directory",
      "description": "Location for nginx logs",
      "default": "/var/log/nginx",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/user": {
      "display_name": "Nginx User",
      "description": "User nginx will run as",
      "default": "www-data",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/binary": {
      "display_name": "Nginx Binary",
      "description": "Location of the nginx server binary",
      "default": "/usr/sbin/nginx",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/gzip": {
      "display_name": "Nginx Gzip",
      "description": "Whether gzip is enabled",
      "default": "on",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/gzip_http_version": {
      "display_name": "Nginx Gzip HTTP Version",
      "description": "Version of HTTP Gzip",
      "default": "1.0",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/gzip_comp_level": {
      "display_name": "Nginx Gzip Compression Level",
      "description": "Amount of compression to use",
      "default": "2",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/gzip_proxied": {
      "display_name": "Nginx Gzip Proxied",
      "description": "Whether gzip is proxied",
      "default": "any",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/gzip_types": {
      "display_name": "Nginx Gzip Types",
      "description": "Supported MIME-types for gzip",
      "type": "array",
      "default": [
        "text/plain",
        "text/css",
        "application/x-javascript",
        "text/xml",
        "application/xml",
        "application/xml+rss",
        "text/javascript",
        "application/javascript",
        "application/json"
      ],
      "choice": [

      ],
      "calculated": false,
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/keepalive": {
      "display_name": "Nginx Keepalive",
      "description": "Whether to enable keepalive",
      "default": "on",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/keepalive_timeout": {
      "display_name": "Nginx Keepalive Timeout",
      "default": "65",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/worker_processes": {
      "display_name": "Nginx Worker Processes",
      "description": "Number of worker processes",
      "default": "1",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/worker_connections": {
      "display_name": "Nginx Worker Connections",
      "description": "Number of connections per worker",
      "default": "1024",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/server_names_hash_bucket_size": {
      "display_name": "Nginx Server Names Hash Bucket Size",
      "default": "64",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/types_hash_max_size": {
      "display_name": "Nginx Types Hash Max Size",
      "default": "2048",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/types_hash_bucket_size": {
      "display_name": "Nginx Types Hash Bucket Size",
      "default": "64",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/disable_access_log": {
      "display_name": "Disable Access Log",
      "default": "false",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/default_site_enabled": {
      "display_name": "Default site enabled",
      "default": "true",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/sendfile": {
      "display_name": "Nginx sendfile",
      "description": "Whether to enable sendfile",
      "default": "on",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/tcp_nopush": {
      "display_name": "Nginx tcp_nopush",
      "description": "Whether to enable tcp_nopush",
      "default": "on",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "nginx/tcp_nodelay": {
      "display_name": "Nginx tcp_nodelay",
      "description": "Whether to enable tcp_nodelay",
      "default": "on",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    }
  },
  "groupings": {
  },
  "recipes": {
    "nginx": "Installs nginx package and sets up configuration with Debian apache style with sites-enabled/sites-available",
    "nginx::source": "Installs nginx from source and sets up configuration with Debian apache style with sites-enabled/sites-available"
  },
  "version": "2.7.6",
  "source_url": "",
  "issues_url": "",
  "privacy": false,
  "chef_versions": [

  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/ROADMAP.md to tempfile /tmp/chef-rest20160913-19215-79b8cx
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/ROADMAP.md in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/.gitignore in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/metadata.json to tempfile /tmp/chef-rest20160913-19215-xbbgpb
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000014aa848
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/Berksfile.lock",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000014aabe0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   "Berksfile.lock"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fdf4a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/nginx/.kitchen.cloud.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fdf590>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "nginx",
   ".kitchen.cloud.yml"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/metadata.json in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/recipes/disabled.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/resources/rule.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f9e1a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/resources/rule.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f9e2e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "resources",
   "rule.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
                              Apache License
                        Version 2.0, January 2004
                     http://www.apache.org/licenses/

TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

1. Definitions.

   "License" shall mean the terms and conditions for use, reproduction,
   and distribution as defined by Sections 1 through 9 of this document.

   "Licensor" shall mean the copyright owner or entity authorized by
   the copyright owner that is granting the License.

   "Legal Entity" shall mean the union of the acting entity and all
   other entities that control, are controlled by, or are under common
   control with that entity. For the purposes of this definition,
   "control" means (i) the power, direct or indirect, to cause the
   direction or management of such entity, whether by contract or
   otherwise, or (ii) ownership of fifty percent (50%) or more of the
   outstanding shares, or (iii) beneficial ownership of such entity.

   "You" (or "Your") shall mean an individual or Legal Entity
   exercising permissions granted by this License.

   "Source" form shall mean the preferred form for making modifications,
   including but not limited to software source code, documentation
   source, and configuration files.

   "Object" form shall mean any form resulting from mechanical
   transformation or translation of a Source form, including but
   not limited to compiled object code, generated documentation,
   and conversions to other media types.

   "Work" shall mean the work of authorship, whether in Source or
   Object form, made available under the License, as indicated by a
   copyright notice that is included in or attached to the work
   (an example is provided in the Appendix below).

   "Derivative Works" shall mean any work, whether in Source or Object
   form, that is based on (or derived from) the Work and for which the
   editorial revisions, annotations, elaborations, or other modifications
   represent, as a whole, an original work of authorship. For the purposes
   of this License, Derivative Works shall not include works that remain
   separable from, or merely link (or bind by name) to the interfaces of,
   the Work and Derivative Works thereof.

   "Contribution" shall mean any work of authorship, including
   the original version of the Work and any modifications or additions
   to that Work or Derivative Works thereof, that is intentionally
   submitted to Licensor for inclusion in the Work by the copyright owner
   or by an individual or Legal Entity authorized to submit on behalf of
   the copyright owner. For the purposes of this definition, "submitted"
   means any form of electronic, verbal, or written communication sent
   to the Licensor or its representatives, including but not limited to
   communication on electronic mailing lists, source code control systems,
   and issue tracking systems that are managed by, or on behalf of, the
   Licensor for the purpose of discussing and improving the Work, but
   excluding communication that is conspicuously marked or otherwise
   designated in writing by the copyright owner as "Not a Contribution."

   "Contributor" shall mean Licensor and any individual or Legal Entity
   on behalf of whom a Contribution has been received by Licensor and
   subsequently incorporated within the Work.

2. Grant of Copyright License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   copyright license to reproduce, prepare Derivative Works of,
   publicly display, publicly perform, sublicense, and distribute the
   Work and such Derivative Works in Source or Object form.

3. Grant of Patent License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   (except as stated in this section) patent license to make, have made,
   use, offer to sell, sell, import, and otherwise transfer the Work,
   where such license applies only to those patent claims licensable
   by such Contributor that are necessarily infringed by their
   Contribution(s) alone or by combination of their Contribution(s)
   with the Work to which such Contribution(s) was submitted. If You
   institute patent litigation against any entity (including a
   cross-claim or counterclaim in a lawsuit) alleging that the Work
   or a Contribution incorporated within the Work constitutes direct
   or contributory patent infringement, then any patent licenses
   granted to You under this License for that Work shall terminate
   as of the date such litigation is filed.

4. Redistribution. You may reproduce and distribute copies of the
   Work or Derivative Works thereof in any medium, with or without
   modifications, and in Source or Object form, provided that You
   meet the following conditions:

   (a) You must give any other recipients of the Work or
       Derivative Works a copy of this License; and

   (b) You must cause any modified files to carry prominent notices
       stating that You changed the files; and

   (c) You must retain, in the Source form of any Derivative Works
       that You distribute, all copyright, patent, trademark, and
       attribution notices from the Source form of the Work,
       excluding those notices that do not pertain to any part of
       the Derivative Works; and

   (d) If the Work includes a "NOTICE" text file as part of its
       distribution, then any Derivative Works that You distribute must
       include a readable copy of the attribution notices contained
       within such NOTICE file, excluding those notices that do not
       pertain to any part of the Derivative Works, in at least one
       of the following places: within a NOTICE text file distributed
       as part of the Derivative Works; within the Source form or
       documentation, if provided along with the Derivative Works; or,
       within a display generated by the Derivative Works, if and
       wherever such third-party notices normally appear. The contents
       of the NOTICE file are for informational purposes only and
       do not modify the License. You may add Your own attribution
       notices within Derivative Works that You distribute, alongside
       or as an addendum to the NOTICE text from the Work, provided
       that such additional attribution notices cannot be construed
       as modifying the License.

   You may add Your own copyright statement to Your modifications and
   may provide additional or different license terms and conditions
   for use, reproduction, or distribution of Your modifications, or
   for any such Derivative Works as a whole, provided Your use,
   reproduction, and distribution of the Work otherwise complies with
   the conditions stated in this License.

5. Submission of Contributions. Unless You explicitly state otherwise,
   any Contribution intentionally submitted for inclusion in the Work
   by You to the Licensor shall be under the terms and conditions of
   this License, without any additional terms or conditions.
   Notwithstanding the above, nothing herein shall supersede or modify
   the terms of any separate license agreement you may have executed
   with Licensor regarding such Contributions.

6. Trademarks. This License does not grant permission to use the trade
   names, trademarks, service marks, or product names of the Licensor,
   except as required for reasonable and customary use in describing the
   origin of the Work and reproducing the content of the NOTICE file.

7. Disclaimer of Warranty. Unless required by applicable law or
   agreed to in writing, Licensor provides the Work (and each
   Contributor provides its Contributions) on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
   implied, including, without limitation, any warranties or conditions
   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
   PARTICULAR PURPOSE. You are solely responsible for determining the
   appropriateness of using or redistributing the Work and assume any
   risks associated with Your exercise of permissions under this License.

8. Limitation of Liability. In no event and under no legal theory,
   whether in tort (including negligence), contract, or otherwise,
   unless required by applicable law (such as deliberate and grossly
   negligent acts) or agreed to in writing, shall any Contributor be
   liable to You for damages, including any direct, indirect, special,
   incidental, or consequential damages of any character arising as a
   result of this License or out of the use or inability to use the
   Work (including but not limited to damages for loss of goodwill,
   work stoppage, computer failure or malfunction, or any and all
   other commercial damages or losses), even if such Contributor
   has been advised of the possibility of such damages.

9. Accepting Warranty or Additional Liability. While redistributing
   the Work or Derivative Works thereof, You may choose to offer,
   and charge a fee for, acceptance of support, warranty, indemnity,
   or other liability obligations and/or rights consistent with this
   License. However, in accepting such obligations, You may act only
   on Your own behalf and on Your sole responsibility, not on behalf
   of any other Contributor, and only if You agree to indemnify,
   defend, and hold each Contributor harmless for any liability
   incurred by, or claims asserted against, such Contributor by reason
   of your accepting any such warranty or additional liability.

END OF TERMS AND CONDITIONS

APPENDIX: How to apply the Apache License to your work.

   To apply the Apache License to your work, attach the following
   boilerplate notice, with the fields enclosed by brackets "[]"
   replaced with your own identifying information. (Don't include
   the brackets!)  The text should be enclosed in the appropriate
   comment syntax for the file format. We also recommend that a
   file or class name and description of purpose be included on the
   same "printed page" as the copyright notice for easier
   identification within third-party archives.

Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/LICENSE to tempfile /tmp/chef-rest20160913-19215-fu2fju
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/LICENSE in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
DEPENDENCIES
  apt (~> 2.0)
  nginx
    path: .
    metadata: true

GRAPH
  7-zip (1.0.2)
    windows (>= 1.2.2)
  apt (2.9.2)
  bluepill (2.4.3)
    rsyslog (>= 2.0)
  build-essential (2.4.0)
    7-zip (>= 0.0.0)
  compat_resource (12.14.3)
  nginx (2.7.6)
    apt (~> 2.2)
    bluepill (~> 2.3)
    build-essential (~> 2.0)
    ohai (~> 2.0)
    runit (~> 1.2)
    yum-epel (~> 0.3)
  ohai (2.1.0)
  packagecloud (0.2.5)
  rsyslog (4.0.1)
    compat_resource (>= 0.0.0)
  runit (1.8.0)
    packagecloud (>= 0.0.0)
    yum-epel (>= 0.0.0)
  windows (2.0.2)
  yum (4.0.0)
  yum-epel (0.7.1)
    yum (>= 3.6.3)
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Berksfile.lock to tempfile /tmp/chef-rest20160913-19215-1bz0xu2
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
---
driver_config:
  digitalocean_client_id: <%= ENV['DIGITAL_OCEAN_CLIENT_ID'] %>
  digitalocean_api_key: <%= ENV['DIGITAL_OCEAN_API_KEY'] %>
  aws_access_key_id: <%= ENV['AWS_ACCESS_KEY_ID'] %>
  aws_secret_access_key: <%= ENV['AWS_SECRET_ACCESS_KEY'] %>
  aws_ssh_key_id: <%= ENV['AWS_KEYPAIR_NAME'] %>
  availability_zone: <%= ENV['AWS_AVAILABILITY_ZONE'] %>

provisioner:
  name: chef_zero
  require_chef_omnibus: latest

platforms:
- name: centos-5.8
  driver_plugin: digitalocean
  driver_config:
    image_id: 1601
    flavor_id: 63
    region_id: 4
    ssh_key_ids: <%= ENV['DIGITAL_OCEAN_SSH_KEY_IDS'] %>
    ssh_key: <%= ENV['DIGITAL_OCEAN_SSH_KEY_PATH'] %>

- name: centos-6.4
  driver_plugin: digitalocean
  driver_config:
    image_id: 562354
    flavor_id: 63
    region_id: 4
    ssh_key_ids: <%= ENV['DIGITAL_OCEAN_SSH_KEY_IDS'] %>
    ssh_key: <%= ENV['DIGITAL_OCEAN_SSH_KEY_PATH'] %>

- name: amazon-2013.09
  driver_plugin: ec2
  driver_config:
    image_id: ami-3be4bc52
    username: ec2-user
    ssh_key: <%= ENV['EC2_SSH_KEY_PATH'] %>

- name: fedora-19
  driver_plugin: digitalocean
  driver_config:
    image_id: 3102879
    flavor_id: 63
    region_id: 4
    ssh_key_ids: <%= ENV['DIGITAL_OCEAN_SSH_KEY_IDS'] %>
    ssh_key: <%= ENV['DIGITAL_OCEAN_SSH_KEY_PATH'] %>

- name: ubuntu-1004
  driver_plugin: digitalocean
  driver_config:
    image_id: 14097
    flavor_id: 63
    region_id: 4
    ssh_key_ids: <%= ENV['DIGITAL_OCEAN_SSH_KEY_IDS'] %>
    ssh_key: <%= ENV['DIGITAL_OCEAN_SSH_KEY_PATH'] %>
  run_list:
  - recipe[apt]

- name: ubuntu-1204
  driver_plugin: digitalocean
  driver_config:
    image_id: 3101045
    flavor_id: 63
    region_id: 4
    ssh_key_ids: <%= ENV['DIGITAL_OCEAN_SSH_KEY_IDS'] %>
    ssh_key: <%= ENV['DIGITAL_OCEAN_SSH_KEY_PATH'] %>
  run_list:
  - recipe[apt]

suites:
  - name: default
    run_list:
      - recipe[nginx::default]
  - name: source
    run_list:
      - recipe[nginx::default]
    attributes:
      nginx:
        install_method: source
  - name: upstream_repo
    run_list:
      - recipe[nginx::repo]
      - recipe[nginx::default]
    attributes:
      nginx:
        repo_source: nginx
  - name: modules
    run_list:
      - recipe[nginx::source]
    attributes:
      nginx:
        source:
          modules:
            - nginx::headers_more_module
            - nginx::http_auth_request_module
            - nginx::http_echo_module
            - nginx::http_geoip_module
            - nginx::http_gzip_static_module
            - nginx::http_realip_module
            - nginx::http_spdy_module
            - nginx::http_ssl_module
            - nginx::http_stub_status_module
            - nginx::naxsi_module
            - nginx::ngx_devel_module
            - nginx::ngx_lua_module
            - nginx::openssl_source
            - nginx::upload_progress_module
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/libraries/matchers.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/.kitchen.cloud.yml to tempfile /tmp/chef-rest20160913-19215-1aj4dcl
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/Berksfile.lock in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/.kitchen.cloud.yml in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e97e58
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/recipes/disabled.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e97f48>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "recipes",
   "disabled.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Tim Smith <tsmith84@gmail.com>
# Cookbook Name:: iptables
# Resource:: rule
#
# Copyright 2015, Tim Smith
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

property :name, kind_of: String, name_attribute: true
property :source, kind_of: String, default: nil
property :cookbook, kind_of: String, default: nil
property :variables, kind_of: Hash, default: {}
property :lines, kind_of: String, default: nil

default_action :enable

action :enable do
  execute 'rebuild-iptables' do
    command '/usr/sbin/rebuild-iptables'
    action :nothing
  end

  if lines.nil?
    template "/etc/iptables.d/#{new_resource.name}" do
      source new_resource.source ? new_resource.source : "#{new_resource.name}.erb"
      mode '0644'
      cookbook new_resource.cookbook if new_resource.cookbook
      variables new_resource.variables
      backup false
      notifies :run, 'execute[rebuild-iptables]', :delayed
    end
  else
    file "/etc/iptables.d/#{new_resource.name}" do
      content new_resource.lines
      mode '0644'
      backup false
      notifies :run, 'execute[rebuild-iptables]', :delayed
    end
  end
end

action :disable do
  execute 'rebuild-iptables' do
    command '/usr/sbin/rebuild-iptables'
    action :nothing
  end

  file "/etc/iptables.d/#{new_resource.name}" do
    action :delete
    backup false
    notifies :run, 'execute[rebuild-iptables]', :delayed
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
nginx Cookbook CHANGELOG
========================
This file is used to list changes made in each version of the nginx cookbook.

v2.7.6 / 2015-03-17
==================

  * Bugfix sites do not need a .conf suffix anymore, [#338][] [@runningman84][]

v2.7.5 (2015-03-17)
-------------------
**NOTE** As of this release, this cookbook in its current format is deprecated,
and only critical bugs and fixes will be added.
A complete rewrite is in progress, so we appreciate your patience while we sort things out.
The amount of change included here

* Fix nginx 1.4.4 archive checksum to prevent redownload, [#305][] [@irontoby][]
* Allow setting an empty string to prevent additional repos, [#243][] [@miketheman][]
* Use correct `mime.types` for javascript, [#259][] [@dwradcliffe][]
* Fix `headers_more` module for source installs, [#279][], [@josh-padnick][] & [@miketheman][]
* Remove `libtool` from `geoip` and update download paths & checksums, [@miketheman][]
* Fix unquoted URL with params failing geoip module build (and tests!), [#294][] [@karsten-bruckmann][] & [@miketheman][]
* Fix typo in `source.rb`, [#205][] [@gregkare][]
* Test updates: ChefSpec, test-kitchen. Lots of help by [@jujugrrr][]
* Toolchain updates for testing
* Adds support for `tcp_nopush`, `tcp_nodelay` [@shtouff][]

After merging a ton of pull requests, here's a brief changelog. Click each to read more.

* Merge pull request [#335][] from [@stevenolen][]
* Merge pull request [#332][] from [@monsterstrike][]
* Merge pull request [#331][] from [@jalberto][]
* Merge pull request [#327][] from [@nkadel-skyhook][]
* Merge pull request [#326][] from [@bchrobot][]
* Merge pull request [#325][] from [@CanOfSpam3bug324][]
* Merge pull request [#321][] from [@jalberto][]
* Merge pull request [#318][] from [@evertrue][]
* Merge pull request [#314][] from [@bkw][]
* Merge pull request [#312][] from [@thomasmeeus][]
* Merge pull request [#310][] from [@morr][]
* Merge pull request [#305][] from [@irontoby][]
* Merge pull request [#302][] from [@auth0][]
* Merge pull request [#298][] from [@Mytho][]
* Merge pull request [#269][] from [@yveslaroche][]
* Merge pull request [#259][] from [@dwradcliffe][]
* Merge pull request [#254][] from [@evertrue][]
* Merge pull request [#252][] from [@gkra][]
* Merge pull request [#249][] from [@whatcould][]
* Merge pull request [#240][] from [@jcoleman][]
* Merge pull request [#236][] from [@adepue][]
* Merge pull request [#230][] from [@n1koo][]
* Merge pull request [#225][] from [@thommay][]
* Merge pull request [#223][] from [@firmhouse][]
* Merge pull request [#220][] from [@evertrue][]
* Merge pull request [#219][] from [@evertrue][]
* Merge pull request [#204][] from [@usertesting][]
* Merge pull request [#200][] from [@ffuenf][]
* Merge pull request [#188][] from [@larkin][]
* Merge pull request [#184][] from [@tvdinner][]
* Merge pull request [#183][] from [@jenssegers][]
* Merge pull request [#174][] from [@9minutesnooze][]

https://github.com/miketheman/nginx/compare/v2.7.4...v2.7.5

v2.7.4 (2014-06-06)
-------------------
* [COOK-4703] Default openssl version to 1.0.1h to address CVE-2014-0224


v2.7.2 (2014-05-27)
-------------------

- [COOK-4658] - Nginx::socketproxy if the context is blank or nonexistent, the location in the config file has a double slash at the beginning
- [COOK-4644] - add support to nginx::repo for Amazon Linux
- Allow .kitchen.cloud.yml to use an environment variable for the EC2 Availability Zone


v2.7.0 (2014-05-15)
-------------------
- [COOK-4643] - Update metadata lock on ohai
- [COOK-4588] - Give more love to FreeBSD
- [COOK-4601] - Add proxy type: Socket


v2.6.2 (2014-04-09)
-------------------
[COOK-4527] - set default openssl source version to 1.0.1g to address CVE-2014-0160 aka Heartbleed


v2.6.0 (2014-04-08)
-------------------
- Reverting COOK-4323


v2.5.0 (2014-03-27)
-------------------
- [COOK-4323] - Need a resource to easily configure available sites (vhosts)


v2.4.4 (2014-03-13)
-------------------
- Updating for build-essential 2.0


v2.4.2 (2014-02-28)
-------------------
Fixing bad commit from COOK-4330


v2.4.1 (2014-02-27)
-------------------
- [COOK-4345] - nginx default recipe include install type recipe directly


v2.4.0 (2014-02-27)
-------------------
- [COOK-4380] - kitchen.yml platform listings for ubuntu-10.04 and ubuntu-12.04 are missing the dot
- [COOK-4330] - Bump nginx version for security issues (CVE-2013-0337, CVE-2013-4547)


v2.3.0 (2014-02-25)
-------------------
- **[COOK-4293](https://tickets.chef.io/browse/COOK-4293)** - Update testing Gems in nginx and fix a rubocop warnings
- **[COOK-4237] - Nginx version incorrectly parsed on Ubuntu 13
- **[COOK-3866] - Nginx default site folder


v2.2.2 (2014-01-23)
-------------------
[COOK-3672] - Add gzip_static option


v2.2.0
------
No changes. Version bump for toolchain


v2.1.0
------
[COOK-3923] - Enable the list of packages installed by nginx::passenger to be configurable
[COOK-3672] - Nginx should support the gzip_static option
Updating for yum ~> 3.0
Fixing up style for rubocop
Updating test-kitchen harness


v2.0.8
------
fixing metadata version error. locking to 3.0


v2.0.6
------
Locking yum dependency to '< 3'


v2.0.4
------
### Bug
- **[COOK-3808](https://tickets.chef.io/browse/COOK-3808)** - nginx::passenger run fails because of broken installation of package dependencies
- **[COOK-3779](https://tickets.chef.io/browse/COOK-3779)** - Build in master fails due to rubocop error


v2.0.2
------
### Bug
- **[COOK-3808](https://tickets.chef.io/browse/COOK-3808)** - nginx::passenger run fails because of broken installation of package dependencies
- **[COOK-3779](https://tickets.chef.io/browse/COOK-3779)** - Build in master fails due to rubocop error


v2.0.0
------
### Improvement
- **[COOK-3733](https://tickets.chef.io/browse/COOK-3733)** - Add RPM key names and GPG checking
- **[COOK-3687](https://tickets.chef.io/browse/COOK-3687)** - Add support for `http_perl`
- **[COOK-3603](https://tickets.chef.io/browse/COOK-3603)** - Add a recipe for using custom openssl
- **[COOK-3602](https://tickets.chef.io/browse/COOK-3602)** - Use an attribute for the status module port
- **[COOK-3549](https://tickets.chef.io/browse/COOK-3549)** - Refactor custom modules support
- **[COOK-3521](https://tickets.chef.io/browse/COOK-3521)** - Add support for `http_auth_request`
- **[COOK-3520](https://tickets.chef.io/browse/COOK-3520)** - Add support for `spdy`
- **[COOK-3185](https://tickets.chef.io/browse/COOK-3185)** - Add `gzip_*` attributes
- **[COOK-2712](https://tickets.chef.io/browse/COOK-2712)** - Update `upload_progress` version to 0.9.0

### Bug
- **[COOK-3686](https://tickets.chef.io/browse/COOK-3686)** - Remove deprecated 'passenger_use_global_queue' directive
- **[COOK-3626](https://tickets.chef.io/browse/COOK-3626)** - Parameterize hardcoded path to helper scripts
- **[COOK-3571](https://tickets.chef.io/browse/COOK-3571)** - Reloda ohai plugin after installation
- **[COOK-3428](https://tickets.chef.io/browse/COOK-3428)** - Fix an issue where access logs are not disabled when the `disable_access_log` attribute is set to `true`
- **[COOK-3322](https://tickets.chef.io/browse/COOK-3322)** - Fix an issue where `nginx::ohai_plugin` fails when using source recipe
- **[COOK-3241](https://tickets.chef.io/browse/COOK-3241)** - Fix an issue where`nginx::ohai_plugin` fails unless using source recipe

### New Feature
- **[COOK-3605](https://tickets.chef.io/browse/COOK-3605)** - Add Lua module


v1.8.0
------
### Bug
- **[COOK-3397](https://tickets.chef.io/browse/COOK-3397)** - Fix user from nginx package on Gentoo
- **[COOK-2968](https://tickets.chef.io/browse/COOK-2968)** - Fix foodcritic failure
- **[COOK-2723](https://tickets.chef.io/browse/COOK-2723)** - Remove duplicate  passenger `max_pool_size`

### Improvement
- **[COOK-3186](https://tickets.chef.io/browse/COOK-3186)** - Add `client_body_buffer_size` and `server_tokens attributes`
- **[COOK-3080](https://tickets.chef.io/browse/COOK-3080)** - Add rate-limiting support
- **[COOK-2927](https://tickets.chef.io/browse/COOK-2927)** - Add support for `real_ip_recursive` directive
- **[COOK-2925](https://tickets.chef.io/browse/COOK-2925)** - Fix ChefSpec converge
- **[COOK-2724](https://tickets.chef.io/browse/COOK-2724)** - Automatically create directory for PID file
- **[COOK-2472](https://tickets.chef.io/browse/COOK-2472)** - Bump nginx version to 1.2.9
- **[COOK-2312](https://tickets.chef.io/browse/COOK-2312)** - Add additional `mine_types` to the `gzip_types` value

### New Feature
- **[COOK-3183](https://tickets.chef.io/browse/COOK-3183)** - Allow inclusion in extra-cookbook modules

v1.7.0
------
### Improvement
- [COOK-3030]: The repo_source attribute should allow you to not add any additional repositories to your node

### Sub-task
- [COOK-2738]: move nginx::passenger attributes to `nginx/attributes/passenger.rb`

v1.6.0
------
### Task
- [COOK-2409]: update nginx::source recipe for new `runit_service` resource
- [COOK-2877]: update nginx cookbook test-kitchen support to 1.0 (alpha)

### Improvement
- [COOK-1976]: nginx source should be able to configure binary path
- [COOK-2622]: nginx: add upstart support
- [COOK-2725]: add "configtest" subcommand in initscript

### Bug
- [COOK-2398]: nginx_site definition cannot be used to manage the default site
- [COOK-2493]: Resources in nginx::source recipe always use 1.2.6 version, even overriding version attribute
- [COOK-2531]: Remove usage of non-existant attribute "description" for `apt_repository`
- [COOK-2665]: nginx::source install with custom sbin_path breaks ohai data

v1.4.0
------
- [COOK-2183] - Install nginx package from nginxyum repo
- [COOK-2311] - headers-more should be updated to the latest version
- [COOK-2455] - Support sendfile option (nginx.conf)

v1.3.0
------
- [COOK-1979] - Passenger module requires curl-dev(el)
- [COOK-2219] - Support `proxy_read_timeout` (in nginx.conf)
- [COOK-2220] - Support `client_max_body_size` (in nginx.conf)
- [COOK-2280] - Allow custom timing of nginx_site's reload notification
- [COOK-2304] - nginx cookbook should install 1.2.6 not 1.2.3 for source installs
- [COOK-2309] - checksums for geoip files need to be updated in nginx
- [COOK-2310] - Checksum in the `nginx::upload_progress` recipe is not correct
- [COOK-2314] - nginx::passenger: Install the latest version of passenger
- [COOK-2327] - nginx: passenger recipe should find ruby via Ohai
- [COOK-2328] - nginx: Update mime.types file to the latest
- [COOK-2329] - nginx: Update naxsi rules to the current

v1.2.0
------
- [COOK-1752] - Add headers more module to the nginx cookbook
- [COOK-2209] - nginx source recipe should create web user before creating directories
- [COOK-2221] - make nginx::source compatible with gentoo
- [COOK-2267] - add version for runit recommends

v1.1.4
------
- [COOK-2168] - specify package name as an attribute

v1.1.2
------
- [COOK-1766] - Nginx Source Recipe Rebuilding Source at Every Run
- [COOK-1910] - Add IPv6 module
- [COOK-1966] - nginx cookbook should let you set `gzip_vary` and `gzip_buffers` in  nginx.conf
- [COOK-1969]- - nginx::passenger module not included due to use of symbolized `:nginx_configure_flags`
- [COOK-1971] - Template passenger.conf.erb configures key `passenger_max_pool_size` 2 times
- [COOK-1972] - nginx::source compile_nginx_source reports success in spite of failed compilation
- [COOK-1975] - nginx::passenger requires rake gem
- [COOK-1979] - Passenger module requires curl-dev(el)
- [COOK-2080] - Restart nginx on source compilation

v1.1.0
------
- [COOK-1263] - Nginx log (and possibly other) directory creations should be recursive
- [COOK-1515] - move creation of `node['nginx']['dir']` out of commons.rb
- [COOK-1523] - nginx `http_geoip_module` requires libtoolize
- [COOK-1524] - nginx checksums are md5
- [COOK-1641] - add "use", "`multi_accept`" and "`worker_rlimit_nofile`" to nginx cookbook
- [COOK-1683] - Nginx fails Windows nodes just by being required in metadata
- [COOK-1735] - Support Amazon Linux in nginx::source recipe
- [COOK-1753] - Add ability for nginx::passenger recipe to configure more Passenger global settings
- [COOK-1754] - Allow group to be set in nginx.conf file
- [COOK-1770] - nginx cookbook fails on servers that don't have a "cpu" attribute
- [COOK-1781] - Use 'sv' to reload nginx when using runit
- [COOK-1789] - stop depending on bluepill, runit and yum. they are not required by nginx cookbook
- [COOK-1791] - add name attribute to metadata
- [COOK-1837] - nginx::passenger doesn't work on debian family
- [COOK-1956] - update naxsi version due to incompatibility with newer nginx

v1.0.2
------
- [COOK-1636] - relax the version constraint on ohai

v1.0.0
------
- [COOK-913] - defaults for gzip cause warning on service restart
- [COOK-1020] - duplicate MIME type
- [COOK-1269] - add passenger module support through new recipe
- [COOK-1306] - increment nginx version to 1.2 (now 1.2.3)
- [COOK-1316] - default site should not always be enabled
- [COOK-1417] - resolve errors preventing build from source
- [COOK-1483] - source prefix attribute has no effect
- [COOK-1484] - source relies on /etc/sysconfig
- [COOK-1511] - add support for naxsi module
- [COOK-1525] - nginx source is downloaded every time
- [COOK-1526] - nginx_site does not remove sites
- [COOK-1527] - add `http_echo_module` recipe

v0.101.6
--------
Erroneous cookbook upload due to timeout.

Version #'s are cheap.

v0.101.4
--------
- [COOK-1280] - Improve RHEL family support and fix ohai_plugins recipe bug
- [COOK-1194] - allow installation method via attribute
- [COOK-458] - fix duplicate nginx processes

v0.101.2
--------
* [COOK-1211] - include the default attributes explicitly so version is available.

v0.101.0
--------
**Attribute Change**: `node['nginx']['url']` -> `node['nginx']['source']['url']`; see the README.md.

- [COOK-1115] - daemonize when using init script
- [COOK-477] - module compilation support in nginx::source

v0.100.4
--------
- [COOK-1126] - source version bump to 1.0.14

v0.100.2
--------
- [COOK-1053] - Add :url attribute to nginx cookbook

v0.100.0
--------
- [COOK-818] - add "application/json" per RFC.
- [COOK-870] - bluepill init style support
- [COOK-957] - Compress application/javascript.
- [COOK-981] - Add reload support to NGINX service

v0.99.2
-------
- [COOK-809] - attribute to disable access logging
- [COOK-772] - update nginx download source location

<!--- The following link definition list is generated by PimpMyChangelog --->
[#174]: https://github.com/miketheman/nginx/issues/174
[#183]: https://github.com/miketheman/nginx/issues/183
[#184]: https://github.com/miketheman/nginx/issues/184
[#188]: https://github.com/miketheman/nginx/issues/188
[#200]: https://github.com/miketheman/nginx/issues/200
[#204]: https://github.com/miketheman/nginx/issues/204
[#205]: https://github.com/miketheman/nginx/issues/205
[#219]: https://github.com/miketheman/nginx/issues/219
[#220]: https://github.com/miketheman/nginx/issues/220
[#223]: https://github.com/miketheman/nginx/issues/223
[#225]: https://github.com/miketheman/nginx/issues/225
[#230]: https://github.com/miketheman/nginx/issues/230
[#236]: https://github.com/miketheman/nginx/issues/236
[#240]: https://github.com/miketheman/nginx/issues/240
[#243]: https://github.com/miketheman/nginx/issues/243
[#249]: https://github.com/miketheman/nginx/issues/249
[#252]: https://github.com/miketheman/nginx/issues/252
[#254]: https://github.com/miketheman/nginx/issues/254
[#259]: https://github.com/miketheman/nginx/issues/259
[#269]: https://github.com/miketheman/nginx/issues/269
[#279]: https://github.com/miketheman/nginx/issues/279
[#294]: https://github.com/miketheman/nginx/issues/294
[#298]: https://github.com/miketheman/nginx/issues/298
[#302]: https://github.com/miketheman/nginx/issues/302
[#305]: https://github.com/miketheman/nginx/issues/305
[#310]: https://github.com/miketheman/nginx/issues/310
[#312]: https://github.com/miketheman/nginx/issues/312
[#314]: https://github.com/miketheman/nginx/issues/314
[#318]: https://github.com/miketheman/nginx/issues/318
[#321]: https://github.com/miketheman/nginx/issues/321
[#325]: https://github.com/miketheman/nginx/issues/325
[#326]: https://github.com/miketheman/nginx/issues/326
[#327]: https://github.com/miketheman/nginx/issues/327
[#331]: https://github.com/miketheman/nginx/issues/331
[#332]: https://github.com/miketheman/nginx/issues/332
[#335]: https://github.com/miketheman/nginx/issues/335
[#338]: https://github.com/miketheman/nginx/issues/338
[@9minutesnooze]: https://github.com/9minutesnooze
[@CanOfSpam3bug324]: https://github.com/CanOfSpam3bug324
[@Mytho]: https://github.com/Mytho
[@adepue]: https://github.com/adepue
[@auth0]: https://github.com/auth0
[@bchrobot]: https://github.com/bchrobot
[@bkw]: https://github.com/bkw
[@dwradcliffe]: https://github.com/dwradcliffe
[@evertrue]: https://github.com/evertrue
[@ffuenf]: https://github.com/ffuenf
[@firmhouse]: https://github.com/firmhouse
[@gkra]: https://github.com/gkra
[@gregkare]: https://github.com/gregkare
[@irontoby]: https://github.com/irontoby
[@jalberto]: https://github.com/jalberto
[@jcoleman]: https://github.com/jcoleman
[@jenssegers]: https://github.com/jenssegers
[@josh-padnick]: https://github.com/josh-padnick
[@jujugrrr]: https://github.com/jujugrrr
[@karsten-bruckmann]: https://github.com/karsten-bruckmann
[@larkin]: https://github.com/larkin
[@miketheman]: https://github.com/miketheman
[@monsterstrike]: https://github.com/monsterstrike
[@morr]: https://github.com/morr
[@n1koo]: https://github.com/n1koo
[@nkadel-skyhook]: https://github.com/nkadel-skyhook
[@runningman84]: https://github.com/runningman84
[@shtouff]: https://github.com/shtouff
[@stevenolen]: https://github.com/stevenolen
[@thomasmeeus]: https://github.com/thomasmeeus
[@thommay]: https://github.com/thommay
[@tvdinner]: https://github.com/tvdinner
[@usertesting]: https://github.com/usertesting
[@whatcould]: https://github.com/whatcould
[@yveslaroche]: https://github.com/yveslaroche
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-1jjsncv
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/resources/rule.rb to tempfile /tmp/chef-rest20160913-19215-1i5paxg
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/recipes/default.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/resources/rule.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/resources
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
source 'https://rubygems.org'

group :lint do
  gem 'foodcritic', '~> 4.0'
  gem 'rubocop',    '~> 0.27.0'
end

group :unit do
  gem 'berkshelf', '~> 3.2.0'
  gem 'chefspec',  '~> 4.1.0'
end

group :kitchen_common do
  gem 'test-kitchen', '~> 1.2'
end

group :kitchen_docker do
  gem 'kitchen-docker', '~> 1.5.0'
end

group :kitchen_vagrant do
  gem 'kitchen-vagrant', '~> 0.11'
end

group :kitchen_cloud do
  gem 'kitchen-digitalocean'
  gem 'kitchen-ec2'
end

group :development do
  gem 'rb-fsevent'
  gem 'guard', '~> 2.4'
  gem 'guard-kitchen'
  gem 'guard-foodcritic'
  gem 'guard-rspec'
  gem 'guard-rubocop'
  gem 'rake'
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/CHANGELOG.md in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/nginx/Gemfile to tempfile /tmp/chef-rest20160913-19215-7wh40g
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/nginx/Gemfile in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/recipes/_package.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ae8050
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/recipes/_package.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ae8280>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "recipes",
   "_package.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/attributes/default.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ae0198
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ae0288>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003deda98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003dedd18>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: iptables
# Recipe:: default
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'iptables::_package'

execute 'rebuild-iptables' do
  command '/usr/sbin/rebuild-iptables'
  action :nothing
end

directory '/etc/iptables.d' do
  action :create
end

template '/usr/sbin/rebuild-iptables' do
  source 'rebuild-iptables.erb'
  mode '0755'
  variables(
    hashbang: ::File.exist?('/usr/bin/ruby') ? '/usr/bin/ruby' : '/opt/chef/embedded/bin/ruby'
  )
end

# debian based systems load iptables during the interface activation
template '/etc/network/if-pre-up.d/iptables_load' do
  source 'iptables_load.erb'
  mode '0755'
  variables iptables_save_file: '/etc/iptables/general'
  only_if { platform_family?('debian') }
end

# iptables service exists only on RHEL based systems
if platform_family?('rhel') || platform_family?('fedora')
  file '/etc/sysconfig/iptables' do
    content '# Chef managed placeholder to allow iptables service to start'
    action :create_if_missing
  end

  template '/etc/sysconfig/iptables-config' do
    source 'iptables-config.erb'
    mode '600'
    variables config: node['iptables']['iptables_sysconfig']
  end

  template '/etc/sysconfig/ip6tables-config' do
    source 'iptables-config.erb'
    mode '600'
    variables config: node['iptables']['ip6tables_sysconfig']
  end

  service 'iptables' do
    action [:enable, :start]
    supports status: true, start: true, stop: true, restart: true
    not_if { platform_family?('fedora') }
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-r7vhm2
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: iptables
# Recipe:: default
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'iptables::_package'

service 'iptables' do
  action [:disable, :stop]
  supports status: true, start: true, stop: true, restart: true
  only_if { node['platform_family'] == 'rhel' }
end

# Necessary so that if iptables::disable is used and then later
# it is re-enabled without any rules changes, the templates will run the rebuilt script
directory '/etc/iptables.d' do
  action :delete
  recursive true
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/disabled.rb to tempfile /tmp/chef-rest20160913-19215-kl6up9
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/recipes/disabled.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/recipes
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/metadata.json
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ae1598
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ae1660>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "templates",
   "default",
   "rebuild-iptables.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/recipes/default.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: iptables
# Attribute:: default
#
# Copyright 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['iptables']['iptables_sysconfig'] = {
  'IPTABLES_MODULES' => '',
  'IPTABLES_MODULES_UNLOAD' => 'yes',
  'IPTABLES_SAVE_ON_STOP' => 'no',
  'IPTABLES_SAVE_ON_RESTART' => 'no',
  'IPTABLES_SAVE_COUNTER' => 'no',
  'IPTABLES_STATUS_NUMERIC' => 'yes',
  'IPTABLES_STATUS_VERBOSE' => 'no',
  'IPTABLES_STATUS_LINENUMBERS' => 'yes'
}
default['iptables']['ip6tables_sysconfig'] = {
  'IP6TABLES_MODULES' => '',
  'IP6TABLES_MODULES_UNLOAD' => 'yes',
  'IP6TABLES_SAVE_ON_STOP' => 'no',
  'IP6TABLES_SAVE_ON_RESTART' => 'no',
  'IP6TABLES_SAVE_COUNTER' => 'no',
  'IP6TABLES_STATUS_NUMERIC' => 'yes',
  'IP6TABLES_STATUS_VERBOSE' => 'no',
  'IP6TABLES_STATUS_LINENUMBERS' => 'yes'
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-hwz0a
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003cacaf8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003cacf58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)
  def enable_iptables_rule(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:iptables_rule, :enable, resource_name)
  end

  def disable_iptables_rule(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:iptables_rule, :disable, resource_name)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/attributes/default.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/attributes
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/README.md
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000399b940
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000399ba08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "README.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/MAINTAINERS.md
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003868a28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003868bb8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "metadata.json"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-1h1xawn
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/Gemfile
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/libraries/matchers.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/libraries
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!<%= @hashbang %> -w

#
# rebuild-iptables.rb -- Construct an iptables rules file from fragments.
#
# Written by Phil Cohen <github@phlippers.net>
# Copyright 2011, Phil Cohen
#
# Constructs an iptables rules file from the prefix, standard, and suffix
# files in the iptables configuration area, adding any additional modules
# specified in the command line, and prints the resulting iptables rules to
# standard output (suitable for saving into /var/lib/iptables or some other
# appropriate location on the system).

##############################################################################
# Modules and declarations
##############################################################################

# Path to the iptables template area.
TEMPLATE_PATH = "/etc/iptables.d"

##############################################################################
# Installation
##############################################################################

# Read in a file, processing includes as required.
def read_iptables(file, table = :filter)
  file = File.join(TEMPLATE_PATH, file) unless File.dirname(file) =~ /iptables\.d/
  rule = File.readlines(file).map{ |line| line.chomp }
  rule.each do |line|
    if line =~ /^\s*include\s+(\S+)$/
      read_iptables($1, table)
    elsif line =~ /^\s*\*([a-z]+)\s*$/
      table = $1.to_sym
    elsif line =~ /^\s*:([-a-zA-Z0-9_]+)(?:\s+([A-Z]+(?:\s*\[.*?\])))?$/
      @data[table][:chains][$1] = $2 || '-'
    elsif line !~ /^\s*COMMIT\s*$/
      #detect new chains
      if chain = line.match(/\-[ADRILFZN]\s+([-a-zA-Z0-9_]+)\s/)
        @data[table][:chains][chain[1]] ||= '-'
      end
      @data[table][:rules].push line
    end
  end
end

# Write a file carefully.
def write_iptables(file, data)
  File.open("#{file}.new", "w") { |f| f.write(data) }
  File.rename("#{file}.new", file)
end

# Install iptables on a Red Hat or Debian system. Takes the new iptables data.
def install_rules(data)
  Dir.mkdir("/etc/iptables") unless File.directory?("/etc/iptables")
  write_iptables("/etc/iptables/general", data)
  system("/sbin/iptables-restore < /etc/iptables/general")
  system("cp /etc/iptables/general /etc/sysconfig/iptables")
end

##############################################################################
# Main routine
##############################################################################

@data = {
    :filter => {
        :chains => {
            'INPUT'   => 'ACCEPT [0,0]',
            'FORWARD' => 'ACCEPT [0,0]',
            'OUTPUT'  => 'ACCEPT [0,0]'
        },
        :rules => []
    },
    :mangle => {
        :chains => {
            'PREROUTING'  => 'ACCEPT [0,0]',
            'INPUT'       => 'ACCEPT [0,0]',
            'FORWARD'     => 'ACCEPT [0,0]',
            'OUTPUT'      => 'ACCEPT [0,0]',
            'POSTROUTING' => 'ACCEPT [0,0]'
        },
        :rules => []
    },
    :nat => {
        :chains => {
            'PREROUTING'  => 'ACCEPT [0,0]',
            'POSTROUTING' => 'ACCEPT [0,0]',
            'OUTPUT'      => 'ACCEPT [0,0]'
        },
        :rules => [],
    },
    :raw => {
        :chains => {
            'PREROUTING'  => 'ACCEPT [0,0]',
            'OUTPUT'      => 'ACCEPT [0,0]'
        },
        :rules => [],
    },
    :security => {
        :chains => {
            'INPUT'   => 'ACCEPT [0,0]',
            'FORWARD' => 'ACCEPT [0,0]',
            'OUTPUT'  => 'ACCEPT [0,0]'
        },
        :rules => []
    }
}

templates = Dir["#{TEMPLATE_PATH}/*"].sort.delete_if do |template|
  %w[prefix suffix postfix].include?(File.basename(template))
end

templates.unshift 'prefix' if File.exist? "#{TEMPLATE_PATH}/prefix"
templates.push 'suffix' if File.exist? "#{TEMPLATE_PATH}/suffix"
templates.push 'postfix' if File.exist? "#{TEMPLATE_PATH}/postfix"

templates.each { |template| read_iptables(template) }

iptables_rules = ""
@data.each do |table, table_data|
  if table_data[:rules].any?
    iptables_rules << "*#{table.to_s}\n"
    table_data[:chains].each do |chain, rule|
      iptables_rules << ":#{chain} #{rule}\n"
    end
    iptables_rules << table_data[:rules].join("\n")
    iptables_rules << "\nCOMMIT\n"
  end
end

system_files = %w(/etc/debian_version /etc/redhat-release /etc/system-release)
if system_files.any? { |file| File.exist?(file) }
  install_rules(iptables_rules)
else
  raise "#{$0}: cannot figure out whether this is Red Hat or Debian\n";
end

exit 0
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039c5fd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039c60c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "templates",
   "default",
   "iptables-config.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb to tempfile /tmp/chef-rest20160913-19215-1c09akm
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/templates/default/rebuild-iptables.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/templates
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/templates/default
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000399a770
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000399a888>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# iptables Cookbook
[![Build Status](https://travis-ci.org/chef-cookbooks/iptables.svg?branch=master)](https://travis-ci.org/chef-cookbooks/iptables) [![Cookbook Version](https://img.shields.io/cookbook/v/iptables.svg)](https://supermarket.chef.io/cookbooks/iptables)

Installs iptables and provides a custom resource for adding and removing iptables rules

## Requirements
### Platforms
- Ubuntu/Debian
- RHEL/CentOS and derivatives

### Chef
- Chef 12.5+

### Cookbooks
- none

## Recipes
### default
The default recipe will install iptables and provides a ruby script (installed in `/usr/sbin/rebuild-iptables`) to manage rebuilding firewall rules from files dropped off in `/etc/iptables.d`.

### disabled
The disabled recipe will install iptables, disable the `iptables` service (on RHEL platforms), and delete the rules directory `/etc/iptables.d`.

## Attributes
 `default['iptables']['iptables_sysconfig']` and `default['iptables']['ip6tables_sysconfig']` are hashes that are used to template /etc/sysconfig/iptables-config and /etc/sysconfig/ip6tables-config. The keys must be upper case and any key / value pair included will be added to the config file.

## Custom Resource
### rule
The custom resource drops off a template in `/etc/iptables.d` after the `name` parameter. The rule will get added to the local system firewall through notifying the `rebuild-iptables` script. See **Examples** below.

NOTE: In the 1.0 release of this cookbook the iptables_rule definition was converted to a custom resource.  This changes the behavior of disabling iptables rules. Previously a rule could be disabled by specifying `enable false`. You must now specify `action :disable`

## Usage
Add `recipe[iptables]` to your runlist to ensure iptables is installed / running and to ensure that the `rebuild-iptables` script is on the system. Then create use iptables_rule to add individual rules. See **Examples**.

Since certain chains can be used with multiple tables (e.g., _PREROUTING_), you might have to include the name of the table explicitly (i.e., _*nat_, _*mangle_, etc.), so that the `/usr/sbin/rebuild-iptables` script can infer how to assemble final ruleset file that is going to be loaded. Please note, that unless specified otherwise, rules will be added under the **filter** table by default.

### Examples
To enable port 80, e.g. in an `my_httpd` cookbook, create the following template:

```text
# Port 80 for http
-A FWR -p tcp -m tcp --dport 80 -j ACCEPT
```

This template would be located at: `my_httpd/templates/default/http.erb`. Then within your recipe call:

```ruby
iptables_rule 'http' do
  action :enable
end
```

To redirect port 80 to local port 8080, e.g., in the aforementioned `my_httpd` cookbook, create the following template:

```text
*nat
# Redirect anything on eth0 coming to port 80 to local port 8080
-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080
```

Please note, that we explicitly add name of the table (being _*nat_ in this example above) where the rules should be added.

This would most likely go in the cookbook, `my_httpd/templates/default/http_8080.erb`. Then to use it in `recipe[httpd]`:

```ruby
iptables_rule 'http_8080' do
  action :enable
end
```

To create a rule without using a template resource use the `lines` property:

```ruby
iptables_rule 'http_8080' do
  lines '-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080'
end
```

To get attribute-driven rules you can (for example) feed a hash of attributes into named iptables.d files like this:

```ruby
node.default['iptables']['http_80'] = '-A FWR -p tcp -m tcp --dport 80 -j ACCEPT'
node.default['iptables']['http_443'] = [
  '# an example with multiple lines',
  '-A FWR -p tcp -m tcp --dport 443 -j ACCEPT',
]

node['iptables'].map do |rule_name, rule_body|
  iptables_rule rule_name do
    lines [ rule_body ].flatten.join("\n")
  end
end
```

## Chefspec Matchers
- enable_iptables_rule(resource_name)
- disable_iptables_rule(resource_name)

## License & Authors
**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2008-2015, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/README.md to tempfile /tmp/chef-rest20160913-19215-1u7dvcm
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/README.md in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "iptables",
  "description": "Installs the iptables daemon and provides a LWRP for managing rules",
  "long_description": "# iptables Cookbook\n[![Build Status](https://travis-ci.org/chef-cookbooks/iptables.svg?branch=master)](https://travis-ci.org/chef-cookbooks/iptables) [![Cookbook Version](https://img.shields.io/cookbook/v/iptables.svg)](https://supermarket.chef.io/cookbooks/iptables)\n\nInstalls iptables and provides a custom resource for adding and removing iptables rules\n\n## Requirements\n### Platforms\n- Ubuntu/Debian\n- RHEL/CentOS and derivatives\n\n### Chef\n- Chef 12.5+\n\n### Cookbooks\n- none\n\n## Recipes\n### default\nThe default recipe will install iptables and provides a ruby script (installed in `/usr/sbin/rebuild-iptables`) to manage rebuilding firewall rules from files dropped off in `/etc/iptables.d`.\n\n### disabled\nThe disabled recipe will install iptables, disable the `iptables` service (on RHEL platforms), and delete the rules directory `/etc/iptables.d`.\n\n## Attributes\n `default['iptables']['iptables_sysconfig']` and `default['iptables']['ip6tables_sysconfig']` are hashes that are used to template /etc/sysconfig/iptables-config and /etc/sysconfig/ip6tables-config. The keys must be upper case and any key / value pair included will be added to the config file.\n\n## Custom Resource\n### rule\nThe custom resource drops off a template in `/etc/iptables.d` after the `name` parameter. The rule will get added to the local system firewall through notifying the `rebuild-iptables` script. See **Examples** below.\n\nNOTE: In the 1.0 release of this cookbook the iptables_rule definition was converted to a custom resource.  This changes the behavior of disabling iptables rules. Previously a rule could be disabled by specifying `enable false`. You must now specify `action :disable`\n\n## Usage\nAdd `recipe[iptables]` to your runlist to ensure iptables is installed / running and to ensure that the `rebuild-iptables` script is on the system. Then create use iptables_rule to add individual rules. See **Examples**.\n\nSince certain chains can be used with multiple tables (e.g., _PREROUTING_), you might have to include the name of the table explicitly (i.e., _*nat_, _*mangle_, etc.), so that the `/usr/sbin/rebuild-iptables` script can infer how to assemble final ruleset file that is going to be loaded. Please note, that unless specified otherwise, rules will be added under the **filter** table by default.\n\n### Examples\nTo enable port 80, e.g. in an `my_httpd` cookbook, create the following template:\n\n```text\n# Port 80 for http\n-A FWR -p tcp -m tcp --dport 80 -j ACCEPT\n```\n\nThis template would be located at: `my_httpd/templates/default/http.erb`. Then within your recipe call:\n\n```ruby\niptables_rule 'http' do\n  action :enable\nend\n```\n\nTo redirect port 80 to local port 8080, e.g., in the aforementioned `my_httpd` cookbook, create the following template:\n\n```text\n*nat\n# Redirect anything on eth0 coming to port 80 to local port 8080\n-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\n```\n\nPlease note, that we explicitly add name of the table (being _*nat_ in this example above) where the rules should be added.\n\nThis would most likely go in the cookbook, `my_httpd/templates/default/http_8080.erb`. Then to use it in `recipe[httpd]`:\n\n```ruby\niptables_rule 'http_8080' do\n  action :enable\nend\n```\n\nTo create a rule without using a template resource use the `lines` property:\n\n```ruby\niptables_rule 'http_8080' do\n  lines '-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080'\nend\n```\n\nTo get attribute-driven rules you can (for example) feed a hash of attributes into named iptables.d files like this:\n\n```ruby\nnode.default['iptables']['http_80'] = '-A FWR -p tcp -m tcp --dport 80 -j ACCEPT'\nnode.default['iptables']['http_443'] = [\n  '# an example with multiple lines',\n  '-A FWR -p tcp -m tcp --dport 443 -j ACCEPT',\n]\n\nnode['iptables'].map do |rule_name, rule_body|\n  iptables_rule rule_name do\n    lines [ rule_body ].flatten.join(\"\\n\")\n  end\nend\n```\n\n## Chefspec Matchers\n- enable_iptables_rule(resource_name)\n- disable_iptables_rule(resource_name)\n\n## License & Authors\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2008-2015, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Chef Software, Inc.",
  "maintainer_email": "cookbooks@chef.io",
  "license": "Apache 2.0",
  "platforms": {
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "amazon": ">= 0.0.0",
    "scientific": ">= 0.0.0",
    "oracle": ">= 0.0.0",
    "zlinux": ">= 0.0.0"
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "default": "Installs iptables and sets up .d style config directory of iptables rules",
    "disabled": "Disables iptables"
  },
  "version": "2.2.0",
  "source_url": "https://github.com/chef-cookbooks/iptables",
  "issues_url": "https://github.com/chef-cookbooks/iptables/issues",
  "privacy": false,
  "chef_versions": [

  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/metadata.json to tempfile /tmp/chef-rest20160913-19215-1vy7m69
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: iptables
# Recipe:: _package
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if platform_family?('rhel') && node['platform_version'].to_i == 7
  package 'iptables-services'
else
  package 'iptables'
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/_package.rb to tempfile /tmp/chef-rest20160913-19215-1zye5m
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/metadata.json in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/chefignore
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000370c058
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/chefignore",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000370c1e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "chefignore"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037bc2c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/Gemfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037bc458>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "Gemfile"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# This file managed by Chef. Do not hand edit
<% @config.each do |k,v| -%>
<%= k %>="<%= v %>"
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb to tempfile /tmp/chef-rest20160913-19215-1d2cald
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/recipes/_package.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003950c88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003950e18>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "templates",
   "default",
   "iptables_load.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Sean OMeara](https://github.com/someara)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-1fk3gjm
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/MAINTAINERS.md in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/providers/repository.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/templates/default/iptables-config.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/LICENSE
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# Put files/directories that should be ignored in this file when uploading
# to a chef-server or supermarket.
# Lines that start with '# ' are comments.

# OS generated files #
######################
.DS_Store
Icon?
nohup.out
ehthumbs.db
Thumbs.db

# SASS #
########
.sass-cache

# EDITORS #
###########
\#*
.#*
*~
*.sw[a-z]
*.bak
REVISION
TAGS*
tmtags
*_flymake.*
*_flymake
*.tmproj
.project
.settings
mkmf.log

## COMPILED ##
##############
a.out
*.o
*.pyc
*.so
*.com
*.class
*.dll
*.exe
*/rdoc/

# Testing #
###########
.watchr
.rspec
spec/*
spec/fixtures/*
test/*
features/*
examples/*
Guardfile
Procfile
.kitchen*
.rubocop.yml
spec/*
Rakefile
.travis.yml
.foodcritic
.codeclimate.yml

# SCM #
#######
.git
*/.git
.gitignore
.gitmodules
.gitconfig
.gitattributes
.svn
*/.bzr/*
*/.hg/*
*/.svn/*

# Berkshelf #
#############
Berksfile
Berksfile.lock
cookbooks/*
tmp

# Cookbooks #
#############
CONTRIBUTING*
CHANGELOG*
TESTING*
MAINTAINERS.toml

# Strainer #
############
Colanderfile
Strainerfile
.colander
.strainer

# Vagrant #
###########
.vagrant
Vagrantfile
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/chefignore to tempfile /tmp/chef-rest20160913-19215-1i8ibba
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/resources/preference.rb
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/chefignore in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
/sbin/iptables-restore < <%= @iptables_save_file %>
exit 0
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb to tempfile /tmp/chef-rest20160913-19215-15kmype
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/templates/default/iptables_load.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000035f72f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/providers/repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000035f73e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "providers",
   "repository.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# This gemfile provides additional gems for testing and releasing this cookbook
# It is meant to be installed on top of ChefDK which provides the majority
# of the necessary gems for testing this cookbook
#
# Run 'chef exec bundle install' to install these dependencies

source 'https://rubygems.org'

gem 'tomlrb'
gem 'rake'
gem 'stove'
gem 'community_cookbook_releaser'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Gemfile to tempfile /tmp/chef-rest20160913-19215-1sp0cop
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/Gemfile in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036e4710
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/LICENSE",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036e47d8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "LICENSE"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/recipes/default.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/resources/repository.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020ae900
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/resources/repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000020aea68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "resources",
   "repository.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/recipes/cacher-ng.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000209ad88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/recipes/cacher-ng.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000209b170>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "recipes",
   "cacher-ng.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/providers/preference.rb
[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/recipes/unattended-upgrades.rb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Provider:: repository
#
# Copyright 2010-2011, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources if defined?(use_inline_resources)

def whyrun_supported?
  true
end

# install apt key from keyserver
def install_key_from_keyserver(key, keyserver, key_proxy)
  execute "install-key #{key}" do
    if keyserver.start_with?('hkp://')
      command "apt-key adv --keyserver #{keyserver} --recv #{key}"
    elsif key_proxy.empty?
      command "apt-key adv --keyserver hkp://#{keyserver}:80 --recv #{key}"
    else
      command "apt-key adv --keyserver-options http-proxy=#{key_proxy} --keyserver hkp://#{keyserver}:80 --recv #{key}"
    end
    sensitive new_resource.sensitive if respond_to?(:sensitive)
    action :run
    not_if do
      key_present = extract_fingerprints_from_cmd('apt-key finger').any? do |fingerprint|
        fingerprint.end_with?(key.upcase)
      end

      key_present && key_is_valid('apt-key list', key.upcase)
    end
  end

  ruby_block "validate-key #{key}" do
    block do
      fail "The key #{key} is no longer valid and cannot be used for an apt repository."
    end
    not_if { key_is_valid('apt-key list', key.upcase) }
  end
end

# run command and extract gpg ids
def extract_fingerprints_from_cmd(cmd)
  so = Mixlib::ShellOut.new(cmd, env: { 'LANG' => 'en_US', 'LANGUAGE' => 'en_US' })
  so.run_command
  so.stdout.split(/\n/).map do |t|
    if z = t.match(/^ +Key fingerprint = ([0-9A-F ]+)/)
      z[1].split.join
    end
  end.compact
end

# determine whether apt thinks the key is still valid
def key_is_valid(cmd, key)
  valid = true

  so = Mixlib::ShellOut.new(cmd, env: { 'LANG' => 'en_US', 'LANGUAGE' => 'en_US' })
  so.run_command
  # rubocop:disable Style/Next
  so.stdout.split(/\n/).map do |t|
    if t.match(%r{^\/#{key}.*\[expired: .*\]$})
      Chef::Log.debug "Found expired key: #{t}"
      valid = false
      break
    end
  end

  Chef::Log.debug "key #{key} validity: #{valid}"
  valid
end

# install apt key from URI
def install_key_from_uri(uri)
  key_name = uri.split(%r{\/}).last
  cached_keyfile = "#{Chef::Config[:file_cache_path]}/#{key_name}"
  if new_resource.key =~ /http/
    remote_file cached_keyfile do
      source new_resource.key
      mode 00644
      sensitive new_resource.sensitive if respond_to?(:sensitive)
      action :create
    end
  else
    cookbook_file cached_keyfile do
      source new_resource.key
      cookbook new_resource.cookbook
      mode 00644
      sensitive new_resource.sensitive if respond_to?(:sensitive)
      action :create
    end

    ruby_block "validate-key #{cached_keyfile}" do
      block do
        fail "The key #{cached_keyfile} is no longer valid and cannot be used for an apt repository." unless key_is_valid("gpg #{cached_keyfile}", '')
      end
    end
  end

  execute "install-key #{key_name}" do
    command "apt-key add #{cached_keyfile}"
    sensitive new_resource.sensitive if respond_to?(:sensitive)
    action :run
    not_if do
      installed_keys = extract_fingerprints_from_cmd('apt-key finger')
      proposed_keys = extract_fingerprints_from_cmd("gpg --with-fingerprint #{cached_keyfile}")
      (installed_keys & proposed_keys).sort == proposed_keys.sort
    end
  end
end

# build repo file contents
def build_repo(uri, distribution, components, trusted, arch, add_deb_src)
  uri = '"' + uri + '"' unless uri.start_with?("\"", "'")
  components = components.join(' ') if components.respond_to?(:join)
  repo_options = []
  repo_options << "arch=#{arch}" if arch
  repo_options << 'trusted=yes' if trusted
  repo_opts = '[' + repo_options.join(' ') + ']' unless repo_options.empty?
  repo_info = "#{repo_opts} #{uri} #{distribution} #{components}\n".lstrip
  repo =  "deb     #{repo_info}"
  repo << "deb-src #{repo_info}" if add_deb_src
  repo
end

def get_ppa_key(ppa_owner, ppa_repo, key_proxy)
  # Launchpad has currently only one stable API which is marked as EOL April 2015.
  # The new api in devel still uses the same api call for +archive, so I made the version
  # configurable to provide some sort of workaround if api 1.0 ceases to exist.
  # See https://launchpad.net/+apidoc/
  launchpad_ppa_api = "https://launchpad.net/api/#{node['apt']['launchpad_api_version']}/~%s/+archive/%s"
  default_keyserver = 'keyserver.ubuntu.com'

  require 'open-uri'
  api_query = format("#{launchpad_ppa_api}/signing_key_fingerprint", ppa_owner, ppa_repo)
  begin
    key_id = open(api_query).read.delete('"')
  rescue OpenURI::HTTPError => e
    error = 'Could not access launchpad ppa key api: HttpError: ' + e.message
    raise error
  rescue SocketError => e
    error = 'Could not access launchpad ppa key api: SocketError: ' + e.message
    raise error
  end

  install_key_from_keyserver(key_id, default_keyserver, key_proxy)
end

# fetch ppa key, return full repo url
def get_ppa_url(ppa, key_proxy)
  repo_schema = 'http://ppa.launchpad.net/%s/%s/ubuntu'

  # ppa:user/repo logic ported from
  # http://bazaar.launchpad.net/~ubuntu-core-dev/software-properties/main/view/head:/softwareproperties/ppa.py#L86
  return false unless ppa.start_with?('ppa:')

  ppa_name = ppa.split(':')[1]
  ppa_owner = ppa_name.split('/')[0]
  ppa_repo  = ppa_name.split('/')[1]
  ppa_repo  = 'ppa' if ppa_repo.nil?

  get_ppa_key(ppa_owner, ppa_repo, key_proxy)

  format(repo_schema, ppa_owner, ppa_repo)
end

action :add do
  # add key
  if new_resource.keyserver && new_resource.key
    install_key_from_keyserver(new_resource.key, new_resource.keyserver, new_resource.key_proxy)
  elsif new_resource.key
    install_key_from_uri(new_resource.key)
  end

  file '/var/lib/apt/periodic/update-success-stamp' do
    action :nothing
  end

  execute 'apt-cache gencaches' do
    ignore_failure true
    action :nothing
  end

  execute 'apt-get update' do
    command "apt-get update -o Dir::Etc::sourcelist='sources.list.d/#{new_resource.name}.list' -o Dir::Etc::sourceparts='-' -o APT::Get::List-Cleanup='0'"
    ignore_failure true
    sensitive new_resource.sensitive if respond_to?(:sensitive)
    action :nothing
    notifies :run, 'execute[apt-cache gencaches]', :immediately
  end

  if new_resource.uri.start_with?('ppa:')
    # build ppa repo file
    repository = build_repo(
      get_ppa_url(new_resource.uri, new_resource.key_proxy),
      new_resource.distribution,
      'main',
      new_resource.trusted,
      new_resource.arch,
      new_resource.deb_src
    )
  else
    # build repo file
    repository = build_repo(
      new_resource.uri,
      new_resource.distribution,
      new_resource.components,
      new_resource.trusted,
      new_resource.arch,
      new_resource.deb_src
    )
  end

  file "/etc/apt/sources.list.d/#{new_resource.name}.list" do
    owner 'root'
    group 'root'
    mode 00644
    content repository
    sensitive new_resource.sensitive if respond_to?(:sensitive)
    action :create
    notifies :delete, 'file[/var/lib/apt/periodic/update-success-stamp]', :immediately
    notifies :run, 'execute[apt-get update]', :immediately if new_resource.cache_rebuild
  end
end

action :remove do
  if ::File.exist?("/etc/apt/sources.list.d/#{new_resource.name}.list")
    Chef::Log.info "Removing #{new_resource.name} repository from /etc/apt/sources.list.d/"
    file "/etc/apt/sources.list.d/#{new_resource.name}.list" do
      sensitive new_resource.sensitive if respond_to?(:sensitive)
      action :delete
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/providers/repository.rb to tempfile /tmp/chef-rest20160913-19215-13j248t
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/providers/repository.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/providers
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "{}"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright {yyyy} {name of copyright owner}

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/LICENSE to tempfile /tmp/chef-rest20160913-19215-1eelzc3
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020be9e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000020beb70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/iptables/LICENSE in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/libraries/helpers.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000226e3d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/resources/preference.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000226e538>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "resources",
   "preference.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/recipes/cacher-client.rb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020252b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/providers/preference.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002025858>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "providers",
   "preference.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Provider:: preference
#
# Copyright 2010-2011, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources if defined?(use_inline_resources)

def whyrun_supported?
  true
end

# Build preferences.d file contents
def build_pref(package_name, pin, pin_priority)
  "Package: #{package_name}\nPin: #{pin}\nPin-Priority: #{pin_priority}\n"
end

def safe_name(name)
  name.tr('.', '_').gsub('*', 'wildcard')
end

action :add do
  preference = build_pref(
    new_resource.glob || new_resource.package_name,
    new_resource.pin,
    new_resource.pin_priority
  )

  directory '/etc/apt/preferences.d' do
    owner 'root'
    group 'root'
    mode 00755
    recursive true
    action :create
  end

  name = safe_name(new_resource.name)

  file "/etc/apt/preferences.d/#{new_resource.name}.pref" do
    action :delete
    if ::File.exist?("/etc/apt/preferences.d/#{new_resource.name}.pref")
      Chef::Log.warn "Replacing #{new_resource.name}.pref with #{name}.pref in /etc/apt/preferences.d/"
    end
    only_if { name != new_resource.name }
  end

  file "/etc/apt/preferences.d/#{new_resource.name}" do
    action :delete
    if ::File.exist?("/etc/apt/preferences.d/#{new_resource.name}")
      Chef::Log.warn "Replacing #{new_resource.name} with #{new_resource.name}.pref in /etc/apt/preferences.d/"
    end
  end

  file "/etc/apt/preferences.d/#{name}.pref" do
    owner 'root'
    group 'root'
    mode 00644
    content preference
    action :create
  end
end

action :remove do
  name = safe_name(new_resource.name)
  if ::File.exist?("/etc/apt/preferences.d/#{name}.pref")
    Chef::Log.info "Un-pinning #{name} from /etc/apt/preferences.d/"
    file "/etc/apt/preferences.d/#{name}.pref" do
      action :delete
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f81d70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/recipes/unattended-upgrades.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f81f00>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "recipes",
   "unattended-upgrades.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/providers/preference.rb to tempfile /tmp/chef-rest20160913-19215-45ds9o
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/providers/preference.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Resource:: repository
#
# Copyright 2010-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :add, :remove
default_action :add if defined?(default_action) # Chef > 10.8

# Needed for Chef versions < 0.10.10
def initialize(*args)
  super
  @action = :add
end

state_attrs :arch,
            :cache_rebuild,
            :components,
            :cookbook,
            :deb_src,
            :distribution,
            :key,
            :keyserver,
            :key_proxy,
            :repo_name,
            :trusted,
            :uri,
            :sensitive

# name of the repo, used for source.list filename
attribute :repo_name, kind_of: String, name_attribute: true, regex: [/^([a-z]|[A-Z]|[0-9]|_|-|\.)+$/]
attribute :uri, kind_of: String
attribute :distribution, kind_of: String
attribute :components, kind_of: Array, default: []
attribute :arch, kind_of: String, default: nil
attribute :trusted, kind_of: [TrueClass, FalseClass], default: false
# whether or not to add the repository as a source repo as well
attribute :deb_src, default: false
attribute :keyserver, kind_of: String, default: nil
attribute :key, kind_of: String, default: nil
attribute :key_proxy, kind_of: String, default: node['apt']['key_proxy']
attribute :cookbook, kind_of: String, default: nil
# trigger cache rebuild
# If not you can trigger in the recipe itself after checking the status of resource.updated{_by_last_action}?
attribute :cache_rebuild, kind_of: [TrueClass, FalseClass], default: true
# Hide content of the source file, don't show output for commands being run, etc.
attribute :sensitive, kind_of: [TrueClass, FalseClass], default: false
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/resources/repository.rb to tempfile /tmp/chef-rest20160913-19215-19ty20e
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Recipe:: default
#
# Copyright 2008-2013, Chef Software, Inc.
# Copyright 2009, Bryan McLellan <btm@loftninjas.org>
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# On systems where apt is not installed, the resources in this recipe are not
# executed. However, they _must_ still be present in the resource collection
# or other cookbooks which notify these resources will fail on non-apt-enabled
# systems.

Chef::Log.debug 'apt is not installed. Apt-specific resources will not be executed.' unless apt_installed?

first_run_file = File.join(Chef::Config[:file_cache_path], 'apt_compile_time_update_first_run')

file '/var/lib/apt/periodic/update-success-stamp' do
  owner 'root'
  group 'root'
  only_if { apt_installed? }
  action :nothing
end

# If compile_time_update run apt-get update at compile time
if node['apt']['compile_time_update'] && (!apt_up_to_date? || !::File.exist?(first_run_file))
  e = bash 'apt-get-update at compile time' do
    code <<-EOH
      apt-get update
      touch #{first_run_file}
    EOH
    ignore_failure true
    only_if { apt_installed? }
    action :nothing
    notifies :touch, 'file[/var/lib/apt/periodic/update-success-stamp]', :immediately
  end
  e.run_action(:run)
end

# Updates 'apt-get update' timestamp after each update success
directory '/etc/apt/apt.conf.d' do
  recursive true
end

cookbook_file '/etc/apt/apt.conf.d/15update-stamp' do
  source '15update-stamp'
end

# For other recipes to call to force an update
execute 'apt-get update' do
  command 'apt-get update'
  ignore_failure true
  only_if { apt_installed? }
  action :nothing
  notifies :touch, 'file[/var/lib/apt/periodic/update-success-stamp]', :immediately
end

# Automatically remove packages that are no longer needed for dependencies
execute 'apt-get autoremove' do
  command 'apt-get -y autoremove'
  only_if { apt_installed? }
  action :nothing
end

# Automatically remove .deb files for packages no longer on your system
execute 'apt-get autoclean' do
  command 'apt-get -y autoclean'
  only_if { apt_installed? }
  action :nothing
end

execute 'apt-get-update-periodic' do
  command 'apt-get update'
  ignore_failure true
  only_if { apt_installed? }
  not_if { apt_up_to_date? }
  notifies :touch, 'file[/var/lib/apt/periodic/update-success-stamp]', :immediately
end

%w(/var/cache/local /var/cache/local/preseeding).each do |dirname|
  directory dirname do
    owner 'root'
    group 'root'
    mode 00755
    action :create
    only_if { apt_installed? }
  end
end

template '/etc/apt/apt.conf.d/10recommends' do
  owner 'root'
  group 'root'
  mode '644'
  source '10recommends.erb'
end

package 'apt-transport-https' do
  only_if { apt_installed? }
  action :install
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-1r6ohzf
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/libraries/apt_update.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b45528
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/libraries/apt_update.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b45b90>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "libraries",
   "apt_update.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/libraries/network.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/resources/repository.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/resources
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e3f1b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/libraries/helpers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e3f2a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "libraries",
   "helpers.rb"]>

[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/recipes/default.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/recipes
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020346a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/recipes/cacher-client.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002034790>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "recipes",
   "cacher-client.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Recipe:: cacher-ng
#
# Copyright 2008-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.set['apt']['caching_server'] = true

package 'apt-cacher-ng' do
  action :install
end

directory node['apt']['cacher_dir'] do
  owner 'apt-cacher-ng'
  group 'apt-cacher-ng'
  mode 0755
end

template '/etc/apt-cacher-ng/acng.conf' do
  source 'acng.conf.erb'
  owner 'root'
  group 'root'
  mode 00644
  notifies :restart, 'service[apt-cacher-ng]', :immediately
end

service 'apt-cacher-ng' do
  supports restart: true, status: false
  action [:enable, :start]
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/cacher-ng.rb to tempfile /tmp/chef-rest20160913-19215-16ympcj
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/recipes/cacher-ng.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/files/default/apt-proxy-v2.conf
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/libraries/matchers.rb
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Resource:: preference
#
# Copyright 2010-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :add, :remove
default_action :add if defined?(default_action) # Chef > 10.8

# Needed for Chef versions < 0.10.10
def initialize(*args)
  super
  @action = :add
end

state_attrs :glob,
            :package_name,
            :pin,
            :pin_priority

attribute :package_name, kind_of: String, name_attribute: true, regex: [/^([a-z]|[A-Z]|[0-9]|_|-|\.|\*)+$/]
attribute :glob, kind_of: String
attribute :pin, kind_of: String
attribute :pin_priority, kind_of: String
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/resources/preference.rb to tempfile /tmp/chef-rest20160913-19215-h0vq9o
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
unless defined? Chef::Resource::AptUpdate
  require 'chef_compat/copied_from_chef/chef/dsl/declare_resource'
  require 'chef/mixin/shell_out'

  class AptUpdate < ChefCompat::Resource
    include ChefCompat::CopiedFromChef::Chef::DSL::DeclareResource
    include Chef::Mixin::ShellOut

    resource_name :apt_update

    provides :apt_update, os: 'linux'
    property :frequency, Integer, default: 86_400

    default_action :periodic
    allowed_actions :update, :periodic

    APT_CONF_DIR = '/etc/apt/apt.conf.d'.freeze
    STAMP_DIR = '/var/lib/apt/periodic'.freeze

    action :periodic do
      unless apt_up_to_date? # ~FC023
        converge_by 'update new lists of packages' do
          do_update
        end
      end
    end

    action :update do
      converge_by 'force update new lists of packages' do
        do_update
      end
    end

    # Determines whether we need to run `apt-get update`
    #
    # @return [Boolean]
    def apt_up_to_date?
      ::File.exist?("#{STAMP_DIR}/update-success-stamp") &&
        ::File.mtime("#{STAMP_DIR}/update-success-stamp") > Time.now - new_resource.frequency
    end

    def do_update
      [STAMP_DIR, APT_CONF_DIR].each do |d|
        build_resource(:directory, d, caller[0]) do
          recursive true
        end.run_action(:create)
      end

      build_resource(:file, "#{APT_CONF_DIR}/15update-stamp", caller[0]) do
        content "APT::Update::Post-Invoke-Success {\"touch #{STAMP_DIR}/update-success-stamp 2>/dev/null || true\";};"
      end.run_action(:create_if_missing)

      shell_out!('apt-get -q update')
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/resources/preference.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/apt_update.rb to tempfile /tmp/chef-rest20160913-19215-17vcktd
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/libraries/apt_update.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/libraries
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000400f088
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/libraries/network.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000400f1a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "libraries",
   "network.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Library:: helpers
#
# Copyright 2013 Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

module Apt
  # Helpers for apt
  module Helpers
    # Determines if apt is installed on a system.
    #
    # @return [Boolean]
    def apt_installed?
      !which('apt-get').nil?
    end

    # Determines whether we need to run `apt-get update`
    #
    # @return [Boolean]
    def apt_up_to_date?
      if ::File.exist?('/var/lib/apt/periodic/update-success-stamp') &&
         ::File.mtime('/var/lib/apt/periodic/update-success-stamp') > Time.now - node['apt']['periodic_update_min_delay']
        true
      else
        false
      end
    end

    # Finds a command in $PATH
    #
    # @return [String, nil]
    def which(cmd)
      ENV['PATH'] = '' if ENV['PATH'].nil?
      paths = (ENV['PATH'].split(::File::PATH_SEPARATOR) + %w(/bin /usr/bin /sbin /usr/sbin))

      paths.each do |path|
        possible = File.join(path, cmd)
        return possible if File.executable?(possible)
      end

      nil
    end
  end
end

Chef::Recipe.send(:include, ::Apt::Helpers)
Chef::Resource.send(:include, ::Apt::Helpers)
Chef::Provider.send(:include, ::Apt::Helpers)
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/helpers.rb to tempfile /tmp/chef-rest20160913-19215-1yt62mi
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Recipe:: unattended-upgrades
#
# Copyright 2014, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# On systems where apt is not installed, the resources in this recipe are not
# executed. However, they _must_ still be present in the resource collection
# or other cookbooks which notify these resources will fail on non-apt-enabled
# systems.
#

package 'unattended-upgrades' do
  response_file 'unattended-upgrades.seed.erb'
  action :install
end

package 'bsd-mailx' do
  only_if { node['apt']['unattended_upgrades']['mail'] }
end

template '/etc/apt/apt.conf.d/20auto-upgrades' do
  owner 'root'
  group 'root'
  mode '644'
  source '20auto-upgrades.erb'
end

template '/etc/apt/apt.conf.d/50unattended-upgrades' do
  owner 'root'
  group 'root'
  mode '644'
  source '50unattended-upgrades.erb'
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/unattended-upgrades.rb to tempfile /tmp/chef-rest20160913-19215-6oy1wd
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/recipes/unattended-upgrades.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/templates/default/20auto-upgrades.erb
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/libraries/helpers.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e98380
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/files/default/apt-proxy-v2.conf",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e984c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "files",
   "default",
   "apt-proxy-v2.conf"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/files/default/15update-stamp
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/templates/debian-6.0/acng.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Recipe:: cacher-client
#
# Copyright 2011-2013 Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class ::Chef::Recipe
  include ::Apt
end

# remove Acquire::http::Proxy lines from /etc/apt/apt.conf since we use 01proxy
# these are leftover from preseed installs
execute 'Remove proxy from /etc/apt/apt.conf' do
  command "sed --in-place '/^Acquire::http::Proxy/d' /etc/apt/apt.conf"
  only_if 'grep Acquire::http::Proxy /etc/apt/apt.conf'
end

servers = []
if node['apt']
  if node['apt']['cacher_ipaddress']
    cacher = Chef::Node.new
    cacher.default.name = node['apt']['cacher_ipaddress']
    cacher.default.ipaddress = node['apt']['cacher_ipaddress']
    cacher.default.apt.cacher_port = node['apt']['cacher_port']
    cacher.default.apt.cacher_interface = node['apt']['cacher_interface']
    cacher.default.apt.cacher_ssl_support = node['apt']['cacher_ssl_support']
    servers << cacher
  elsif node['apt']['caching_server']
    node.override['apt']['compiletime'] = false
    servers << node
  end
end

unless Chef::Config[:solo] || servers.length > 0
  query = 'apt_caching_server:true'
  query += " AND chef_environment:#{node.chef_environment}" if node['apt']['cacher-client']['restrict_environment']
  Chef::Log.debug("apt::cacher-client searching for '#{query}'")
  servers += search(:node, query)
end

if servers.length > 0
  Chef::Log.info("apt-cacher-ng server found on #{servers[0]}.")
  if servers[0]['apt']['cacher_interface']
    cacher_ipaddress = interface_ipaddress(servers[0], servers[0]['apt']['cacher_interface'])
  else
    cacher_ipaddress = servers[0].ipaddress
  end
  t = template '/etc/apt/apt.conf.d/01proxy' do
    source '01proxy.erb'
    owner 'root'
    group 'root'
    mode 00644
    variables(
      proxy: cacher_ipaddress,
      port: servers[0]['apt']['cacher_port'],
      proxy_ssl: servers[0]['apt']['cacher_ssl_support'],
      bypass: node['apt']['cache_bypass']
    )
    action(node['apt']['compiletime'] ? :nothing : :create)
    notifies :run, 'execute[apt-get update]', :immediately
  end
  t.run_action(:create) if node['apt']['compiletime']
else
  Chef::Log.info('No apt-cacher-ng server found.')
  file '/etc/apt/apt.conf.d/01proxy' do
    action :delete
  end
end

include_recipe 'apt::default'
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# library:: network
#
# Copyright 2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

module ::Apt
  def interface_ipaddress(host, interface)
    if interface
      addresses = host['network']['interfaces'][interface]['addresses']
      addresses.select do |ip, data|
        return ip if data['family'].eql?('inet')
      end
    else
      return host.ipaddress
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/recipes/cacher-client.rb to tempfile /tmp/chef-rest20160913-19215-86ocse
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/network.rb to tempfile /tmp/chef-rest20160913-19215-hoatks
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/libraries/network.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/templates/default/01proxy.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003dc95f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/templates/default/01proxy.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003dc99b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "templates",
   "default",
   "01proxy.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f8d150
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f8d330>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d5ad10
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/templates/default/20auto-upgrades.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d5b0d0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "templates",
   "default",
   "20auto-upgrades.erb"]>

[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/recipes/cacher-client.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/templates/default/acng.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ce3be8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/templates/default/acng.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ce3d28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "templates",
   "default",
   "acng.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
[DEFAULT]
;; All times are in seconds, but you can add a suffix
;; for minutes(m), hours(h) or days(d)

;; commented out address so apt-proxy will listen on all IPs
;; address = 127.0.0.1
port = 9999
cache_dir = /var/cache/apt-proxy

;; Control files (Packages/Sources/Contents) refresh rate
min_refresh_delay = 1s
complete_clientless_downloads = 1

;; Debugging settings.
debug = all:4 db:0

time = 30
passive_ftp = on

;;--------------------------------------------------------------
;; Cache housekeeping

cleanup_freq = 1d
max_age = 120d
max_versions = 3

;;---------------------------------------------------------------
;; Backend servers
;;
;; Place each server in its own [section]

[ubuntu]
; Ubuntu archive
backends =
        http://us.archive.ubuntu.com/ubuntu

[ubuntu-security]
; Ubuntu security updates
backends = http://security.ubuntu.com/ubuntu

[debian]
;; Backend servers, in order of preference
backends =
        http://debian.osuosl.org/debian/

[security]
;; Debian security archive
backends =
        http://security.debian.org/debian-security
        http://ftp2.de.debian.org/debian-security
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/files/default/apt-proxy-v2.conf to tempfile /tmp/chef-rest20160913-19215-1o0f4af
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/files/default/apt-proxy-v2.conf in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/files
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/files/default
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/templates/default/10recommends.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e26758
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/templates/debian-6.0/acng.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e26870>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "templates",
   "debian-6.0",
   "acng.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/attributes/default.rb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)
  def add_apt_preference(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:apt_preference, :add, resource_name)
  end

  def remove_apt_preference(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:apt_preference, :remove, resource_name)
  end

  def add_apt_repository(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:apt_repository, :add, resource_name)
  end

  def remove_apt_repository(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:apt_repository, :remove, resource_name)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-1t47yhw
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/libraries/matchers.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
Acquire::http::Proxy "http://<%= @proxy %>:<%= @port %>";
<% if @proxy_ssl %>
Acquire::https::Proxy "http://<%= @proxy %>:<%= @port %>";
<% else %>
Acquire::https::Proxy "DIRECT";
<% end %>
<% @bypass.each do |bypass, type| %>
Acquire::<%= type %>::Proxy::<%= bypass %> "DIRECT";
<% end %>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/01proxy.erb to tempfile /tmp/chef-rest20160913-19215-1m93ori
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/templates/default/01proxy.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/templates
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/templates/default
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
APT::Periodic::Update-Package-Lists "<%= node['apt']['unattended_upgrades']['update_package_lists'] ? 1 : 0 %>";
APT::Periodic::Unattended-Upgrade "<%= node['apt']['unattended_upgrades']['enable'] ? 1 : 0 %>";
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/20auto-upgrades.erb to tempfile /tmp/chef-rest20160913-19215-5k89pc
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/templates/default/20auto-upgrades.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e569d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/files/default/15update-stamp",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e56ac0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "files",
   "default",
   "15update-stamp"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# Letter case in directive names does not matter. Must be separated with colons.
# Valid boolean values are a zero number for false, non-zero numbers for true.

CacheDir: <%= node['apt']['cacher_dir'] %>

# set empty to disable logging
LogDir: /var/log/apt-cacher-ng

# place to look for additional configuration and resource files if they are not
# found in the configuration directory
# SupportDir: /usr/lib/apt-cacher-ng

# TCP (http) port
# Set to 9999 to emulate apt-proxy
Port:<%= node['apt']['cacher_port'] %>

# Addresses or hostnames to listen on. Multiple addresses must be separated by
# spaces. Each entry must be an exact local address which is associated with a
# local interface. DNS resolution is performed using getaddrinfo(3) for all
# available protocols (IPv4, IPv6, ...). Using a protocol specific format will
# create binding(s) only on protocol specific socket(s) (e.g. 0.0.0.0 will listen
# only to IPv4).
#
# Default: not set, will listen on all interfaces and protocols
#
# BindAddress: localhost 192.168.7.254 publicNameOnMainInterface

# The specification of another proxy which shall be used for downloads.
# Username and password are, and see manual for limitations.
#
#Proxy: http://www-proxy.example.net:80
#proxy: username:proxypassword@proxy.example.net:3128

# Repository remapping. See manual for details.
# In this example, some backends files might be generated during package
# installation using information collected on the system.
Remap-debrep: file:deb_mirror*.gz /debian ; file:backends_debian # Debian Archives
Remap-uburep: file:ubuntu_mirrors /ubuntu ; file:backends_ubuntu # Ubuntu Archives
Remap-debvol: file:debvol_mirror*.gz /debian-volatile ; file:backends_debvol # Debian Volatile Archives
Remap-cygwin: file:cygwin_mirrors /cygwin # ; file:backends_cygwin # incomplete, please create this file or specify preferred mirrors here
Remap-sfnet:  file:sfnet_mirrors # ; file:backends_sfnet # incomplete, please create this file or specify preferred mirrors here
Remap-alxrep: file:archlx_mirrors /archlinux # ; file:backend_archlx # Arch Linux
Remap-fedora:  file:fedora_mirrors # Fedora Linux
Remap-epel:   file:epel_mirrors # Fedora EPEL
Remap-slrep:  file:sl_mirrors # Scientific Linux

# This is usually not needed for security.debian.org because it's always the
# same DNS hostname. However, it might be enabled in order to use hooks,
# ForceManaged mode or special flags in this context.
# Remap-secdeb: security.debian.org

# Virtual page accessible in a web browser to see statistics and status
# information, i.e. under http://localhost:3142/acng-report.html
ReportPage: acng-report.html

# Socket file for accessing through local UNIX socket instead of TCP/IP. Can be
# used with inetd bridge or cron client.
# SocketPath:/var/run/apt-cacher-ng/socket

# Forces log file to be written to disk after every line when set to 1. Default
# is 0, buffers are flushed when the client disconnects.
#
# (technically, alias to the Debug option, see its documentation for details)
#
# UnbufferLogs: 0

# Set to 0 to store only type, time and transfer sizes.
# 1 -> client IP and relative local path are logged too
# VerboseLog: 1

# Don't detach from the console
# ForeGround: 0

# Store the pid of the daemon process therein
# PidFile: /var/run/apt-cacher-ng/pid

# Forbid outgoing connections, work around them or respond with 503 error
# offlinemode:0

# Forbid all downloads that don't run through preconfigured backends (.where)
#ForceManaged: 0

# Days before considering an unreferenced file expired (to be deleted).
# Warning: if the value is set too low and particular index files are not
# available for some days (mirror downtime) there is a risk of deletion of
# still useful package files.
ExTreshold: 4

# Stop expiration when a critical problem appeared. Currently only failed
# refresh of an index file is considered as critical.
#
# WARNING: don't touch this option or set to zero.
# Anything else is DANGEROUS and may cause data loss.
#
# ExAbortOnProblems: 1

# Replace some Windows/DOS-FS incompatible chars when storing
# StupidFs: 0

# Experimental feature for apt-listbugs: pass-through SOAP requests and
# responses to/from bugs.debian.org. If not set, default is true if
# ForceManaged is enabled and false otherwise.
# ForwardBtsSoap: 1

# The daemon has a small cache for DNS data, to speed up resolution. The
# expiration time of the DNS entries can be configured in seconds.
# DnsCacheSeconds: 3600

# Don't touch the following values without good consideration!
#
# Max. count of connection threads kept ready (for faster response in the
# future). Should be a sane value between 0 and average number of connections,
# and depend on the amount of spare RAM.
# MaxStandbyConThreads: 8
#
# Hard limit of active thread count for incoming connections, i.e. operation
# is refused when this value is reached (below zero = unlimited).
# MaxConThreads: -1
#
# Pigeonholing files with regular expressions (static/volatile). Can be
# overriden here but not should not be done permanently because future update
# of default settings would not be applied later.
# VfilePattern = (^|.*?/)(Index|Packages(\.gz|\.bz2|\.lzma|\.xz)?|InRelease|Release|Release\.gpg|Sources(\.gz|\.bz2|\.lzma|\.xz)?|release|index\.db-.*\.gz|Contents-[^/]*(\.gz|\.bz2|\.lzma|\.xz)?|pkglist[^/]*\.bz2|rclist[^/]*\.bz2|/meta-release[^/]*|Translation[^/]*(\.gz|\.bz2|\.lzma|\.xz)?|MD5SUMS|SHA1SUMS|((setup|setup-legacy)(\.ini|\.bz2|\.hint)(\.sig)?)|mirrors\.lst|repo(index|md)\.xml(\.asc|\.key)?|directory\.yast|products|content(\.asc|\.key)?|media|filelists\.xml\.gz|filelists\.sqlite\.bz2|repomd\.xml|packages\.[a-zA-Z][a-zA-Z]\.gz|info\.txt|license\.tar\.gz|license\.zip|.*\.db(\.tar\.gz)?|.*\.files\.tar\.gz|.*\.abs\.tar\.gz|metalink\?repo|.*prestodelta\.xml\.gz)$|/dists/.*/installer-[^/]+/[^0-9][^/]+/images/.*
# PfilePattern = .*(\.d?deb|\.rpm|\.dsc|\.tar(\.gz|\.bz2|\.lzma|\.xz)(\.gpg)?|\.diff(\.gz|\.bz2|\.lzma|\.xz)|\.jigdo|\.template|changelog|copyright|\.udeb|\.debdelta|\.diff/.*\.gz|(Devel)?ReleaseAnnouncement(\?.*)?|[a-f0-9]+-(susedata|updateinfo|primary|deltainfo).xml.gz|fonts/(final/)?[a-z]+32.exe(\?download.*)?|/dists/.*/installer-[^/]+/[0-9][^/]+/images/.*)$
# Whitelist for expiration, file types not to be removed even when being
# unreferenced. Default: many parts from VfilePattern where no parent index
# exists or might be unknown.
# WfilePattern = (^|.*?/)(Release|InRelease|Release\.gpg|(Packages|Sources)(\.gz|\.bz2|\.lzma|\.xz)?|Translation[^/]*(\.gz|\.bz2|\.lzma|\.xz)?|MD5SUMS|SHA1SUMS|.*\.xml|.*\.db\.tar\.gz|.*\.files\.tar\.gz|.*\.abs\.tar\.gz|[a-z]+32.exe)$|/dists/.*/installer-.*/images/.*

# Higher modes only working with the debug version
# Warning, writes a lot into apt-cacher.err logfile
# Value overwrites UnbufferLogs setting (aliased)
# Debug:3

# Usually, general purpose proxies like Squid expose the IP address of the
# client user to the remote server using the X-Forwarded-For HTTP header. This
# behaviour can be optionally turned on with the Expose-Origin option.
# ExposeOrigin: 0

# When logging the originating IP address, trust the information supplied by
# the client in the X-Forwarded-For header.
# LogSubmittedOrigin: 0

# The version string reported to the peer, to be displayed as HTTP client (and
# version) in the logs of the mirror.
# WARNING: some archives use this header to detect/guess capabilities of the
# client (i.e. redirection support) and change the behaviour accordingly, while
# ACNG might not support the expected features. Expect side effects.
#
# UserAgent: Yet Another HTTP Client/1.2.3p4

# In some cases the Import and Expiration tasks might create fresh volatile
# data for internal use by reconstructing them using patch files. This
# by-product might be recompressed with bzip2 and with some luck the resulting
# file becomes identical to the *.bz2 file on the server, usable for APT
# clients trying to fetch the full .bz2 compressed version. Injection of the
# generated files into the cache has however a disadvantage on underpowered
# servers: bzip2 compression can create high load on the server system and the
# visible download of the busy .bz2 files also becomes slower.
#
# RecompBz2: 0

# Network timeout for outgoing connections.
# NetworkTimeout: 60

# Sometimes it makes sense to not store the data in cache and just return the
# package data to client as it comes in. DontCache parameters can enable this
# behaviour for certain URL types. The tokens are extended regular expressions
# that URLs are matched against.
#
# DontCacheRequested is applied to the URL as it comes in from the client.
# Example: exclude packages built with kernel-package for x86
# DontCacheRequested: linux-.*_10\...\.Custo._i386
# Example usecase: exclude popular private IP ranges from caching
# DontCacheRequested: 192.168.0 ^10\..* 172.30
#
# DontCacheResolved is applied to URLs after mapping to the target server. If
# multiple backend servers are specified then it's only matched against the
# download link for the FIRST possible source (due to implementation limits).
# Example usecase: all Ubuntu stuff comes from a local mirror (specified as
# backend), don't cache it again:
# DontCacheResolved: ubuntumirror.local.net
#
# DontCache directive sets (overrides) both, DontCacheResolved and
# DontCacheRequested.  Provided for convenience, see those directives for
# details.
#
# Default permission set of freshly created files and directories, as octal
# numbers (see chmod(1) for details).
# Can by limited by the umask value (see umask(2) for details) if it's set in
# the environment of the starting shell, e.g. in apt-cacher-ng init script or
# in its configuration file.
# DirPerms: 00755
# FilePerms: 00664
#
#
# It's possible to use use apt-cacher-ng as a regular web server with limited
# feature set, i.e.
# including directory browsing and download of any file;
# excluding sorting, mime types/encodings, CGI execution, index page
# redirection and other funny things.
# To get this behavior, mappings between virtual directories and real
# directories on the server must be defined with the LocalDirs directive.
# Virtual and real dirs are separated by spaces, multiple pairs are separated
# by semi-colons. Real directories must be absolute paths.
# NOTE: Since the names of that key directories share the same namespace as
# repository names (see Remap-...) it's administrators job to avoid such
# collisions on them (unless created deliberately).
#
# LocalDirs: woo /data/debarchive/woody ; hamm /data/debarchive/hamm

# Precache a set of files referenced by specified index files. This can be used
# to create a partial mirror usable for offline work. There are certain limits
# and restrictions on the path specification, see manual for details. A list of
# (maybe) relevant index files could be retrieved via
# "apt-get --print-uris update" on a client machine.
#
# PrecacheFor: debrep/dists/unstable/*/source/Sources* debrep/dists/unstable/*/binary-amd64/Packages*

# Arbitrary set of data to append to request headers sent over the wire. Should
# be a well formated HTTP headers part including newlines (DOS style) which
# can be entered as escape sequences (\r\n).
# RequestAppendix: X-Tracking-Choice: do-not-track\r\n

# Specifies the IP protocol families to use for remote connections. Order does
# matter, first specified are considered first. Possible combinations:
# v6 v4
# v4 v6
# v6
# v4
# (empty or not set: use system default)
#
# ConnectProto: v6 v4

# Regular expiration algorithm finds package files which are no longer listed
# in any index file and removes them of them after a safety period.
# This option allows to keep more versions of a package in the cache after
# safety period is over.
# KeepExtraVersions: 1

# Optionally uses TCP access control provided by libwrap, see hosts_access(5)
# for details. Daemon name is apt-cacher-ng. Default if not set: decided on
# startup by looking for explicit mentioning of apt-cacher-ng in
# /etc/hosts.allow or /etc/hosts.deny files.
# UseWrap: 0

# If many machines from the same local network attempt to update index files
# (apt-get update) at nearly the same time, the known state of these index file
# is temporarily frozen and multiple requests receive the cached response
# without contacting the server. This parameter (in seconds) specifies the
# length of this period before the files are considered outdated.
# Setting it too low transfers more data and increases remote server load,
# setting it too high (more than a couple of minutes) increases the risk of
# delivering inconsistent responses to the clients.
# FreshIndexMaxAge: 27

# Usually the users are not allowed to specify custom TCP ports of remote
# mirrors in the requests, only the default HTTP port can be used (instead,
# proxy administrator can create Remap- rules with custom ports). This
# restriction can be disabled by specifying a list of allowed ports or 0 for
# any port.
#
# AllowUserPorts: 80

# Normally the HTTP redirection responses are forwarded to the original caller
# (i.e. APT) which starts a new download attempt from the new URL. This
# solution is ok for client configurations with proxy mode but doesn't work
# well with configurations using URL prefixes. To work around this the server
# can restart its own download with another URL. However, this might be used to
# circumvent download source policies by malicious users.
# The RedirMax option specifies how many such redirects the server should
# follow per request, 0 disables the internal redirection. If not set,
# default value is 0 if ForceManaged is used and 5 otherwise.
#
# RedirMax: 5
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/acng.conf.erb to tempfile /tmp/chef-rest20160913-19215-pykzqh
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/templates/default/unattended-upgrades.seed.erb
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a47358
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/templates/default/10recommends.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a47448>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "templates",
   "default",
   "10recommends.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003db9090
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003db91f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/templates/ubuntu-10.04/acng.conf.erb
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
APT::Update::Post-Invoke-Success {"touch /var/lib/apt/periodic/update-success-stamp 2>/dev/null || true";};
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/files/default/15update-stamp to tempfile /tmp/chef-rest20160913-19215-17vte0s
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/files/default/15update-stamp in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# Letter case in directive names does not matter. Must be separated with colons.
# Valid boolean values are a zero number for false, non-zero numbers for true.

CacheDir: <%= node['apt']['cacher_dir'] %>

# set empty to disable logging
LogDir: /var/log/apt-cacher-ng

# TCP (http) port
# Set to 9999 to emulate apt-proxy
Port:<%= node['apt']['cacher_port'] %>

# Addresses or hostnames to listen on. Multiple addresses must be separated by
# spaces. Each entry must be associated with a local interface. DNS resolution
# is performed using getaddrinfo(3) for all available protocols (i.e. IPv4 and
# IPv6 if available).
#
# Default: not set, will listen on all interfaces.
#
# BindAddress: localhost 192.168.7.254 publicNameOnMainInterface

#Proxy: http://www-proxy.example.net:80
#proxy: http://username:proxypassword@proxy.example.net:3128

# Repository remapping. See manual for details.
# In this example, backends file is generated during package installation.
Remap-debrep: file:deb_mirror*.gz /debian ; file:backends_debian
Remap-uburep: file:ubuntu_mirrors /ubuntu ; file:backends_ubuntu
Remap-debvol: file:debvol_mirror*.gz /debian-volatile ; file:backends_debvol
Remap-cygwin: file:cygwin_mirrors /cygwin # ; file:backends_cygwin # incomplete, please create this file

# Virtual page accessible in a web browser to see statistics and status
# information, i.e. under http://localhost:3142/acng-report.html
ReportPage: acng-report.html

# Socket file for accessing through local UNIX socket instead of TCP/IP. Can be
# used with inetd bridge or cron client.
# SocketPath:/var/run/apt-cacher-ng/socket

# Forces log file to be written to disk after every line when set to 1. Default
# is 0, buffer flush happens after client disconnects.
#
# (technically, this is an alias to the Debug option provided for convenience)
#
# UnbufferLogs: 0

# Set to 0 to store only type, time and transfer sizes.
# 1 -> client IP and relative local path are logged too
# VerboseLog: 1

# Don't detach from the console
# ForeGround: 0

# Store the pid of the daemon process therein
# PidFile: /var/run/apt-cacher-ng/pid

# Forbid outgoing connections, work around them or respond with 503 error
# offlinemode:0

# Forbid all downloads that don't run through preconfigured backends (.where)
#ForceManaged: 0

# Days before considering an unreferenced file expired (to be deleted).
# Warning: if the value is set too low and particular index files are not
# available for some days (mirror downtime) there is a risk of deletion of
# still usefull package files.
ExTreshold: 4

# Stop expiration when a critical problem appeared. Currently only failed
# refresh of an index file is considered as critical.
#
# WARNING: don't touch this option or set to a non-zero number.
# Anything else is DANGEROUS and may cause data loss.
#
# ExAbortOnProblems: 1

# Replace some Windows/DOS-FS incompatible chars when storing
# StupidFs: 0

# Experimental feature for apt-listbugs: pass-through SOAP requests and
# responses to/from bugs.debian.org. If not set, default is true if
# ForceManaged is enabled and false otherwise.
# ForwardBtsSoap: 1

# The daemon has a small cache for DNS data, to speed up resolution. The
# expiration time of the DNS entries can be configured in seconds.
# DnsCacheSeconds: 3600

# Don't touch the following values without good consideration!
#
# Max. count of connection threads kept ready (for faster response in the
# future). Should be a sane value between 0 and average number of connections,
# and depend on the amount of spare RAM.
# MaxStandbyConThreads: 8
#
# Hard limit of active thread count for incomming connections, i.e. operation
# is refused when this value is reached (below zero = unlimited).
# MaxConThreads: -1
#
#VfilePattern = (^|.*?/)(Index|Packages\.bz2|Packages\.gz|Packages|Release|Release\.gpg|Sources\.bz2|Sources\.gz|Sources|release|index\.db-.*\.gz|Contents-[^/]*\.gz|pkglist[^/]*\.bz2|rclist[^/]*\.bz2|/meta-release[^/]*|Translation[^/]*\.bz2)$
#PfilePattern = .*(\.deb|\.rpm|\.dsc|\.tar\.gz\.gpg|\.tar\.gz|\.diff\.gz|\.diff\.bz2|\.jigdo|\.template|changelog|copyright|\.udeb|\.diff/.*\.gz|vmlinuz|initrd\.gz|(Devel)?ReleaseAnnouncement(\\?.*)?)$
# Whitelist for expiration, file types not to be removed even when being
# unreferenced. Default: same as VfilePattern which is a safe bed. When and
# only when the only used mirrors are official repositories (with working
# Release files) then it might be set to something more restrictive, like
# (^|.*?/)(Release|Release\.gpg|release|meta-release|Translation[^/]*\.bz2)$
#WfilePattern = (^|.*?/)(Index|Packages\.bz2|Packages\.gz|Packages|Release|Release\.gpg|Sources\.bz2|Sources\.gz|Sources|release|index\.db-.*\.gz|Contents-[^/]*\.gz|pkglist[^/]*\.bz2|rclist[^/]*\.bz2|/meta-release[^/]*|Translation[^/]*\.bz2)$

# Higher modes only working with the debug version
# Warning, writes a lot into apt-cacher.err logfile
# Value overwrites UnbufferLogs setting (aliased)
# Debug:3

# Usually, general purpose proxies like Squid expose the IP adress of the
# client user to the remote server using the X-Forwarded-For HTTP header. This
# behaviour can be optionally turned on with the Expose-Origin option.
# ExposeOrigin: 0

# When logging the originating IP address, trust the information supplied by
# the client in the X-Forwarded-For header.
# LogSubmittedOrigin: 0

# The version string reported to the peer, to be displayed as HTTP client (and
# version) in the logs of the mirror.
# WARNING: some archives use this header to detect/guess capabilities of the
# client (i.e. redirection support) and change the behaviour accordingly, while
# ACNG might not support the expected features. Expect side effects.
#
# UserAgent: Yet Another HTTP Client/1.2.3p4

# In some cases the Import and Expiration tasks might create fresh volatile
# data for internal use by reconstructing them using patch files. This
# by-product might be recompressed with bzip2 and with some luck the resulting
# file becomes identical to the *.bz2 file on the server, usable for APT
# clients trying to fetch the full .bz2 compressed version. Injection of the
# generated files into the cache has however a disadvantage on underpowered
# servers: bzip2 compession can create high load on the server system and the
# visible download of the busy .bz2 files also becomes slower.
#
# RecompBz2: 0

# Network timeout for outgoing connections.
# NetworkTimeout: 60

# Sometimes it makes sense to not store the data in cache and just return the
# package data to client as it comes in. DontCache parameters can enable this
# behaviour for certain URL types. The tokens are extended regular expressions
# that URLs are matched against.
#
# DontCacheRequested is applied to the URL as it comes in from the client.
# Example: exclude packages built with kernel-package for x86
# DontCacheRequested: linux-.*_10\...\.Custo._i386
# Example usecase: exclude popular private IP ranges from caching
# DontCacheRequested: 192.168.0 ^10\..* 172.30
#
# DontCacheResolved is applied to URLs after mapping to the target server. If
# multiple backend servers are specified then it's only matched against the
# download link for the FIRST possible source (due to implementation limits).
# Example usecase: all Ubuntu stuff comes from a local mirror (specified as
# backend), don't cache it again:
# DontCacheResolved: ubuntumirror.local.net
#
# DontCache directive sets (overrides) both, DontCacheResolved and
# DontCacheRequested.  Provided for convenience, see those directives for
# details.
#
# Default permission set of freshly created files and directories, as octal
# numbers (see chmod(1) for details).
# Can by limited by the umask value (see umask(2) for details) if it's set in
# the environment of the starting shell, e.g. in apt-cacher-ng init script or
# in its configuration file.
# DirPerms: 00755
# FilePerms: 00664
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/templates/default/50unattended-upgrades.erb
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/debian-6.0/acng.conf.erb to tempfile /tmp/chef-rest20160913-19215-1ghzy9m
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/templates/default/acng.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/MAINTAINERS.md
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000391b3a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000391b5b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003b8be80
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/templates/default/unattended-upgrades.seed.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003b940a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "templates",
   "default",
   "unattended-upgrades.seed.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: apt
# Attributes:: default
#
# Copyright 2009-2013, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['apt']['cacher-client']['restrict_environment'] = false
default['apt']['cacher_dir'] = '/var/cache/apt-cacher-ng'
default['apt']['cacher_interface'] = nil
default['apt']['cacher_port'] = 3142
default['apt']['cacher_ssl_support'] = false
default['apt']['caching_server'] = false
default['apt']['compiletime'] = false
default['apt']['compile_time_update'] = false
default['apt']['key_proxy'] = ''
default['apt']['cache_bypass'] = {}
default['apt']['periodic_update_min_delay'] = 86_400
default['apt']['launchpad_api_version'] = '1.0'
default['apt']['unattended_upgrades']['enable'] = false
default['apt']['unattended_upgrades']['update_package_lists'] = true
# this needs a good default
codename = node.attribute?('lsb') ? node['lsb']['codename'] : 'notlinux'
default['apt']['unattended_upgrades']['allowed_origins'] = [
  "#{node['platform'].capitalize} #{codename}"
]
default['apt']['unattended_upgrades']['package_blacklist'] = []
default['apt']['unattended_upgrades']['auto_fix_interrupted_dpkg'] = false
default['apt']['unattended_upgrades']['minimal_steps'] = false
default['apt']['unattended_upgrades']['install_on_shutdown'] = false
default['apt']['unattended_upgrades']['mail'] = nil
default['apt']['unattended_upgrades']['mail_only_on_error'] = true
default['apt']['unattended_upgrades']['remove_unused_dependencies'] = false
default['apt']['unattended_upgrades']['automatic_reboot'] = false
default['apt']['unattended_upgrades']['automatic_reboot_time'] = 'now'
default['apt']['unattended_upgrades']['dl_limit'] = nil

default['apt']['confd']['install_recommends'] = true
default['apt']['confd']['install_suggests'] = false
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# Managed by Chef
APT::Install-Recommends "<%= node['apt']['confd']['install_recommends'] ? 1 : 0 %>";
APT::Install-Suggests "<%= node['apt']['confd']['install_suggests'] ? 1 : 0 %>";
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-wayqsj
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/attributes/default.rb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/attributes
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/templates/debian-6.0/acng.conf.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/templates/debian-6.0
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/10recommends.erb to tempfile /tmp/chef-rest20160913-19215-t1b4os
[2016-09-13T12:59:44+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000399b058
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/templates/ubuntu-10.04/acng.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000399b120>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "templates",
   "ubuntu-10.04",
   "acng.conf.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:44+01:00] INFO: Storing updated cookbooks/apt/templates/default/10recommends.erb in the cache.
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/metadata.json
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003938f70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/apt/templates/default/50unattended-upgrades.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003939060>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "templates",
   "default",
   "50unattended-upgrades.erb"]>

[2016-09-13T12:59:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/README.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003918680
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003918770>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "README.md"]>

[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/CONTRIBUTING.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037afed8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037affa0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/apt/CHANGELOG.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003765c98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003765e00>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "CHANGELOG.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
# Letter case in directive names does not matter. Must be separated with colons.
# Valid boolean values are a zero number for false, non-zero numbers for true.

CacheDir: <%= node['apt']['cacher_dir'] %>

# set empty to disable logging
LogDir: /var/log/apt-cacher-ng

# place to look for additional configuration and resource files if they are not
# found in the configuration directory
# SupportDir: /usr/lib/apt-cacher-ng

# TCP (http) port
# Set to 9999 to emulate apt-proxy
Port:<%= node['apt']['cacher_port'] %>

# Addresses or hostnames to listen on. Multiple addresses must be separated by
# spaces. Each entry must be an exact local address which is associated with a
# local interface. DNS resolution is performed using getaddrinfo(3) for all
# available protocols (IPv4, IPv6, ...). Using a protocol specific format will
# create binding(s) only on protocol specific socket(s) (e.g. 0.0.0.0 will listen
# only to IPv4).
#
# Default: not set, will listen on all interfaces and protocols
#
# BindAddress: localhost 192.168.7.254 publicNameOnMainInterface

# The specification of another proxy which shall be used for downloads.
# Username and password are, and see manual for limitations.
#
#Proxy: http://www-proxy.example.net:80
#proxy: username:proxypassword@proxy.example.net:3128

# Repository remapping. See manual for details.
# In this example, some backends files might be generated during package
# installation using information collected on the system.
Remap-debrep: file:deb_mirror*.gz /debian ; file:backends_debian # Debian Archives
Remap-uburep: file:ubuntu_mirrors /ubuntu ; file:backends_ubuntu # Ubuntu Archives
Remap-debvol: file:debvol_mirror*.gz /debian-volatile ; file:backends_debvol # Debian Volatile Archives

# This is usually not needed for security.debian.org because it's always the
# same DNS hostname. However, it might be enabled in order to use hooks,
# ForceManaged mode or special flags in this context.
# Remap-secdeb: security.debian.org

# Virtual page accessible in a web browser to see statistics and status
# information, i.e. under http://localhost:3142/acng-report.html
ReportPage: acng-report.html

# Socket file for accessing through local UNIX socket instead of TCP/IP. Can be
# used with inetd bridge or cron client.
# SocketPath:/var/run/apt-cacher-ng/socket

# Forces log file to be written to disk after every line when set to 1. Default
# is 0, buffers are flushed when the client disconnects.
#
# (technically, alias to the Debug option, see its documentation for details)
#
# UnbufferLogs: 0

# Set to 0 to store only type, time and transfer sizes.
# 1 -> client IP and relative local path are logged too
# VerboseLog: 1

# Don't detach from the console
# ForeGround: 0

# Store the pid of the daemon process therein
# PidFile: /var/run/apt-cacher-ng/pid

# Forbid outgoing connections, work around them or respond with 503 error
# offlinemode:0

# Forbid all downloads that don't run through preconfigured backends (.where)
#ForceManaged: 0

# Days before considering an unreferenced file expired (to be deleted).
# Warning: if the value is set too low and particular index files are not
# available for some days (mirror downtime) there is a risk of deletion of
# still useful package files.
ExTreshold: 4

# Stop expiration when a critical problem appeared. Currently only failed
# refresh of an index file is considered as critical.
#
# WARNING: don't touch this option or set to zero.
# Anything else is DANGEROUS and may cause data loss.
#
# ExAbortOnProblems: 1

# Replace some Windows/DOS-FS incompatible chars when storing
# StupidFs: 0

# Experimental feature for apt-listbugs: pass-through SOAP requests and
# responses to/from bugs.debian.org. If not set, default is true if
# ForceManaged is enabled and false otherwise.
# ForwardBtsSoap: 1

# The daemon has a small cache for DNS data, to speed up resolution. The
# expiration time of the DNS entries can be configured in seconds.
# DnsCacheSeconds: 3600

# Don't touch the following values without good consideration!
#
# Max. count of connection threads kept ready (for faster response in the
# future). Should be a sane value between 0 and average number of connections,
# and depend on the amount of spare RAM.
# MaxStandbyConThreads: 8
#
# Hard limit of active thread count for incoming connections, i.e. operation
# is refused when this value is reached (below zero = unlimited).
# MaxConThreads: -1
#
# Pigeonholing files with regular expressions (static/volatile). Can be
# overriden here but not should not be done permanently because future update
# of default settings would not be applied later.
# VfilePattern = (^|.*?/)(Index|Packages(\.gz|\.bz2|\.lzma|\.xz)?|InRelease|Release|Release\.gpg|Sources(\.gz|\.bz2|\.lzma|\.xz)?|release|index\.db-.*\.gz|Contents-[^/]*(\.gz|\.bz2|\.lzma|\.xz)?|pkglist[^/]*\.bz2|rclist[^/]*\.bz2|/meta-release[^/]*|Translation[^/]*(\.gz|\.bz2|\.lzma|\.xz)?|MD5SUMS|SHA1SUMS|((setup|setup-legacy)(\.ini|\.bz2|\.hint)(\.sig)?)|mirrors\.lst|repo(index|md)\.xml(\.asc|\.key)?|directory\.yast|products|content(\.asc|\.key)?|media|filelists\.xml\.gz|filelists\.sqlite\.bz2|repomd\.xml|packages\.[a-zA-Z][a-zA-Z]\.gz|info\.txt|license\.tar\.gz|license\.zip|.*\.db(\.tar\.gz)?|.*\.files\.tar\.gz|.*\.abs\.tar\.gz|metalink\?repo|.*prestodelta\.xml\.gz)$|/dists/.*/installer-[^/]+/[^0-9][^/]+/images/.*
# PfilePattern = .*(\.d?deb|\.rpm|\.dsc|\.tar(\.gz|\.bz2|\.lzma|\.xz)(\.gpg)?|\.diff(\.gz|\.bz2|\.lzma|\.xz)|\.jigdo|\.template|changelog|copyright|\.udeb|\.debdelta|\.diff/.*\.gz|(Devel)?ReleaseAnnouncement(\?.*)?|[a-f0-9]+-(susedata|updateinfo|primary|deltainfo).xml.gz|fonts/(final/)?[a-z]+32.exe(\?download.*)?|/dists/.*/installer-[^/]+/[0-9][^/]+/images/.*)$
# Whitelist for expiration, file types not to be removed even when being
# unreferenced. Default: many parts from VfilePattern where no parent index
# exists or might be unknown.
# WfilePattern = (^|.*?/)(Release|InRelease|Release\.gpg|(Packages|Sources)(\.gz|\.bz2|\.lzma|\.xz)?|Translation[^/]*(\.gz|\.bz2|\.lzma|\.xz)?|MD5SUMS|SHA1SUMS|.*\.xml|.*\.db\.tar\.gz|.*\.files\.tar\.gz|.*\.abs\.tar\.gz|[a-z]+32.exe)$|/dists/.*/installer-.*/images/.*

# Higher modes only working with the debug version
# Warning, writes a lot into apt-cacher.err logfile
# Value overwrites UnbufferLogs setting (aliased)
# Debug:3

# Usually, general purpose proxies like Squid expose the IP address of the
# client user to the remote server using the X-Forwarded-For HTTP header. This
# behaviour can be optionally turned on with the Expose-Origin option.
# ExposeOrigin: 0

# When logging the originating IP address, trust the information supplied by
# the client in the X-Forwarded-For header.
# LogSubmittedOrigin: 0

# The version string reported to the peer, to be displayed as HTTP client (and
# version) in the logs of the mirror.
# WARNING: some archives use this header to detect/guess capabilities of the
# client (i.e. redirection support) and change the behaviour accordingly, while
# ACNG might not support the expected features. Expect side effects.
#
# UserAgent: Yet Another HTTP Client/1.2.3p4

# In some cases the Import and Expiration tasks might create fresh volatile
# data for internal use by reconstructing them using patch files. This
# by-product might be recompressed with bzip2 and with some luck the resulting
# file becomes identical to the *.bz2 file on the server, usable for APT
# clients trying to fetch the full .bz2 compressed version. Injection of the
# generated files into the cache has however a disadvantage on underpowered
# servers: bzip2 compression can create high load on the server system and the
# visible download of the busy .bz2 files also becomes slower.
#
# RecompBz2: 0

# Network timeout for outgoing connections.
# NetworkTimeout: 60

# Sometimes it makes sense to not store the data in cache and just return the
# package data to client as it comes in. DontCache parameters can enable this
# behaviour for certain URL types. The tokens are extended regular expressions
# that URLs are matched against.
#
# DontCacheRequested is applied to the URL as it comes in from the client.
# Example: exclude packages built with kernel-package for x86
# DontCacheRequested: linux-.*_10\...\.Custo._i386
# Example usecase: exclude popular private IP ranges from caching
# DontCacheRequested: 192.168.0 ^10\..* 172.30
#
# DontCacheResolved is applied to URLs after mapping to the target server. If
# multiple backend servers are specified then it's only matched against the
# download link for the FIRST possible source (due to implementation limits).
# Example usecase: all Ubuntu stuff comes from a local mirror (specified as
# backend), don't cache it again:
# DontCacheResolved: ubuntumirror.local.net
#
# DontCache directive sets (overrides) both, DontCacheResolved and
# DontCacheRequested.  Provided for convenience, see those directives for
# details.
#
# Default permission set of freshly created files and directories, as octal
# numbers (see chmod(1) for details).
# Can by limited by the umask value (see umask(2) for details) if it's set in
# the environment of the starting shell, e.g. in apt-cacher-ng init script or
# in its configuration file.
# DirPerms: 00755
# FilePerms: 00664
#
#
# It's possible to use use apt-cacher-ng as a regular web server with limited
# feature set, i.e.
# including directory browsing and download of any file;
# excluding sorting, mime types/encodings, CGI execution, index page
# redirection and other funny things.
# To get this behavior, mappings between virtual directories and real
# directories on the server must be defined with the LocalDirs directive.
# Virtual and real dirs are separated by spaces, multiple pairs are separated
# by semi-colons. Real directories must be absolute paths.
# NOTE: Since the names of that key directories share the same namespace as
# repository names (see Remap-...) it's administrators job to avoid such
# collisions on them (unless created deliberately).
#
# LocalDirs: woo /data/debarchive/woody ; hamm /data/debarchive/hamm

# Precache a set of files referenced by specified index files. This can be used
# to create a partial mirror usable for offline work. There are certain limits
# and restrictions on the path specification, see manual for details. A list of
# (maybe) relevant index files could be retrieved via
# "apt-get --print-uris update" on a client machine.
#
# PrecacheFor: debrep/dists/unstable/*/source/Sources* debrep/dists/unstable/*/binary-amd64/Packages*

# Arbitrary set of data to append to request headers sent over the wire. Should
# be a well formated HTTP headers part including newlines (DOS style) which
# can be entered as escape sequences (\r\n).
# RequestAppendix: X-Tracking-Choice: do-not-track\r\n

# Specifies the IP protocol families to use for remote connections. Order does
# matter, first specified are considered first. Possible combinations:
# v6 v4
# v4 v6
# v6
# v4
# (empty or not set: use system default)
#
# ConnectProto: v6 v4

# Regular expiration algorithm finds package files which are no longer listed
# in any index file and removes them of them after a safety period.
# This option allows to keep more versions of a package in the cache after
# safety period is over.
# KeepExtraVersions: 1

# Optionally uses TCP access control provided by libwrap, see hosts_access(5)
# for details. Daemon name is apt-cacher-ng. Default if not set: decided on
# startup by looking for explicit mentioning of apt-cacher-ng in
# /etc/hosts.allow or /etc/hosts.deny files.
# UseWrap: 0

# If many machines from the same local network attempt to update index files
# (apt-get update) at nearly the same time, the known state of these index file
# is temporarily frozen and multiple requests receive the cached response
# without contacting the server. This parameter (in seconds) specifies the
# length of this period before the files are considered outdated.
# Setting it too low transfers more data and increases remote server load,
# setting it too high (more than a couple of minutes) increases the risk of
# delivering inconsistent responses to the clients.
# FreshIndexMaxAge: 27

# Usually the users are not allowed to specify custom TCP ports of remote
# mirrors in the requests, only the default HTTP port can be used (instead,
# proxy administrator can create Remap- rules with custom ports). This
# restriction can be disabled by specifying a list of allowed ports or 0 for
# any port.
#
# AllowUserPorts: 80

# Normally the HTTP redirection responses are forwarded to the original caller
# (i.e. APT) which starts a new download attempt from the new URL. This
# solution is ok for client configurations with proxy mode but doesn't work
# well with configurations using URL prefixes. To work around this the server
# can restart its own download with another URL. However, this might be used to
# circumvent download source policies by malicious users.
# The RedirMax option specifies how many such redirects the server should
# follow per request, 0 disables the internal redirection. If not set,
# default value is 0 if ForceManaged is used and 5 otherwise.
#
# RedirMax: 5
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/ubuntu-10.04/acng.conf.erb to tempfile /tmp/chef-rest20160913-19215-kdbd7t
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/apt/templates/ubuntu-10.04/acng.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/apt/templates/ubuntu-10.04
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
unattended-upgrades unattended-upgrades/enable_auto_updates boolean <%= node['apt']['unattended_upgrades']['enable'] ? 'true' : 'false' %>
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/unattended-upgrades.seed.erb to tempfile /tmp/chef-rest20160913-19215-95kbje
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/providers/service.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
// Automatically upgrade packages from these (origin:archive) pairs
Unattended-Upgrade::Allowed-Origins {
<% unless node['apt']['unattended_upgrades']['allowed_origins'].empty? -%>
<% node['apt']['unattended_upgrades']['allowed_origins'].each do |origin| -%>
	"<%= origin %>";
<% end -%>
<% end -%>
};


// List of packages to not update
Unattended-Upgrade::Package-Blacklist {
<% unless node['apt']['unattended_upgrades']['package_blacklist'].empty? -%>
<% node['apt']['unattended_upgrades']['package_blacklist'].each do |package| -%>
	"<%= package %>";
<% end -%>
<% end -%>
};

// This option allows you to control if on a unclean dpkg exit
// unattended-upgrades will automatically run 
//   dpkg --force-confold --configure -a
// The default is true, to ensure updates keep getting installed
Unattended-Upgrade::AutoFixInterruptedDpkg "<%= node['apt']['unattended_upgrades']['auto_fix_interrupted_dpkg'] ? 'true' : 'false' %>";

// Split the upgrade into the smallest possible chunks so that
// they can be interrupted with SIGUSR1. This makes the upgrade
// a bit slower but it has the benefit that shutdown while a upgrade
// is running is possible (with a small delay)
Unattended-Upgrade::MinimalSteps "<%= node['apt']['unattended_upgrades']['minimal_steps'] ? 'true' : 'false' %>";

// Install all unattended-upgrades when the machine is shuting down
// instead of doing it in the background while the machine is running
// This will (obviously) make shutdown slower
Unattended-Upgrade::InstallOnShutdown "<%= node['apt']['unattended_upgrades']['install_on_shutdown'] ? 'true' : 'false' %>";

// Send email to this address for problems or packages upgrades
// If empty or unset then no email is sent, make sure that you
// have a working mail setup on your system. A package that provides
// 'mailx' must be installed.
<% if node['apt']['unattended_upgrades']['mail'] -%>
Unattended-Upgrade::Mail "<%= node['apt']['unattended_upgrades']['mail'] %>";
<% end -%>

// Set this value to "true" to get emails only on errors. Default
// is to always send a mail if Unattended-Upgrade::Mail is set
Unattended-Upgrade::MailOnlyOnError "<%= node['apt']['unattended_upgrades']['mail_only_on_error'] ? 'true' : 'false' %>";

// Do automatic removal of new unused dependencies after the upgrade
// (equivalent to apt-get autoremove)
Unattended-Upgrade::Remove-Unused-Dependencies "<%= node['apt']['unattended_upgrades']['remove_unused_dependencies'] ? 'true' : 'false' %>";

// Automatically reboot *WITHOUT CONFIRMATION* if a 
// the file /var/run/reboot-required is found after the upgrade 
Unattended-Upgrade::Automatic-Reboot "<%= node['apt']['unattended_upgrades']['automatic_reboot'] ? 'true' : 'false' %>";

// If automatic reboot is enabled and needed, reboot at the specific
// time instead of immediately
//  Default: "now"
<% if node['apt']['unattended_upgrades']['automatic_reboot'] -%>
Unattended-Upgrade::Automatic-Reboot-Time "<%= node['apt']['unattended_upgrades']['automatic_reboot_time'] %>";
<% end %>

// Use apt bandwidth limit feature, this example limits the download
// speed to 70kb/sec
<% if node['apt']['unattended_upgrades']['dl_limit'] -%>
Acquire::http::Dl-Limit "<%= node['apt']['unattended_upgrades']['dl_limit'] %>";
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:44+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/templates/default/50unattended-upgrades.erb to tempfile /tmp/chef-rest20160913-19215-xxamxg
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-729hz
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/apt/MAINTAINERS.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-w916v4
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000381d8c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/apt/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000381db40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "apt",
   "metadata.json"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"apt","version":"2.9.2","description":"Configures apt and apt services. Ships resources for managing apt repositories","long_description":"","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"apt::default":"Runs apt-get update during compile phase and sets up preseed directories","apt::cacher-ng":"Set up an apt-cacher-ng caching proxy","apt::cacher-client":"Client for the apt::cacher-ng caching proxy"}}
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/metadata.json to tempfile /tmp/chef-rest20160913-19215-vuxdch
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:44+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/resources/service.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/apt/templates/default/unattended-upgrades.seed.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000375ade8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/resources/service.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000375aeb0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "resources",
   "service.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/apt/templates/default/50unattended-upgrades.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/apt/metadata.json in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/apt/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/recipes/rsyslog.rb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
apt Cookbook
============
[![Build Status](https://img.shields.io/travis/chef-cookbooks/apt.svg)][travis]
[![Cookbook Version](https://img.shields.io/cookbook/v/apt.svg)][cookbook]

[cookbook]: https://community.chef.io/cookbooks/apt
[travis]: https://travis-ci.org/chef-cookbooks/apt

This cookbook includes recipes to execute apt-get update to ensure the local APT package cache is up to date. There are recipes for managing the apt-cacher-ng caching proxy and proxy clients. It also includes a LWRP for managing APT repositories in /etc/apt/sources.list.d as well as an LWRP for pinning packages via /etc/apt/preferences.d.


Requirements
------------
**Version 2.0.0+ of this cookbook requires Chef 11.0.0 or later**. If your Chef version is earlier than 11.0.0, use version 1.10.0 of this cookbook.

Version 1.8.2 to 1.10.0 of this cookbook requires **Chef 10.16.4** or later.

If your Chef version is earlier than 10.16.4, use version 1.7.0 of this cookbook.

### Platform
Please refer to the [TESTING file](TESTING.md) to see the currently (and passing) tested platforms. The release was tested on:

* Ubuntu 10.04
* Ubuntu 12.04
* Ubuntu 13.04
* Debian 7.1
* Debian 6.0 (have with manual testing)

May work with or without modification on other Debian derivatives.


-------
### default
This recipe manually updates the timestamp file used to only run `apt-get update` if the cache is more than one day old.

This recipe should appear first in the run list of Debian or Ubuntu nodes to ensure that the package cache is up to date before managing any `package` resources with Chef.

This recipe also sets up a local cache directory for preseeding packages.

**Including the default recipe on a node that does not support apt (such as Windows) results in a noop.**

### cacher-client
Configures the node to use the `apt-cacher-ng` server as a client.

#### Bypassing the cache
Occasionally you may come across repositories that do not play nicely when the node is using an `apt-cacher-ng` server. You can configure `cacher-client` to bypass the server and connect directly to the repository with the `cache_bypass` attribute.

To do this, you need to override the `cache_bypass` attribute with an array of repositories, with each array key as the repository URL and value as the protocol to use:

```json
{
    "apt": {
        "cache_bypass": {
            "URL": "PROTOCOL"
        }
    }
}
```

For example, to prevent caching and directly connect to the repository at `download.oracle.com` via http:

```json
{
    "apt": {
        "cache_bypass": {
            "download.oracle.com": "http"
        }
    }
}
```

### cacher-ng
Installs the `apt-cacher-ng` package and service so the system can provide APT caching. You can check the usage report at http://{hostname}:3142/acng-report.html.

If you wish to help the `cacher-ng` recipe seed itself, you must now explicitly include the `cacher-client` recipe in your run list **after** `cacher-ng` or you will block your ability to install any packages (ie. `apt-cacher-ng`).

### unattended-upgrades

Installs and configures the `unattended-upgrades` package to provide automatic package updates. This can be configured to upgrade all packages or to just install security updates by setting `['apt']['unattended_upgrades']['allowed_origins']`.

To pull just security updates, you'd set `allowed_origins` to something link `["Ubuntu trusty-security"]` (for Ubuntu trusty) or `["Debian wheezy-security"]` (for Debian wheezy). 


Attributes
----------

### General 
* `['apt']['compile_time_update']` - force the default recipe to run `apt-get update` at compile time.
* `['apt']['periodic_update_min_delay']` - minimum delay (in seconds) beetween two actual executions of `apt-get update` by the `execute[apt-get-update-periodic]` resource, default is '86400' (24 hours)

### Caching

* `['apt']['cacher_ipaddress']` - use a cacher server (or standard proxy server) not available via search
* `['apt']['cacher_interface']` - interface to connect to the cacher-ng service, no default.
* `['apt']['cacher_port']` - port for the cacher-ng service (either client or server), default is '3142'
* `['apt']['cacher_ssl_support']` - indicates whether the cacher supports upstream SSL servers, default is 'false'
* `['apt']['cacher_dir']` - directory used by cacher-ng service, default is '/var/cache/apt-cacher-ng'
* `['apt']['cacher-client']['restrict_environment']` - restrict your node to using the `apt-cacher-ng` server in your Environment, default is 'false'
* `['apt']['compiletime']` - force the `cacher-client` recipe to run before other recipes. It forces apt to use the proxy before other recipes run. Useful if your nodes have limited access to public apt repositories. This is overridden if the `cacher-ng` recipe is in your run list. Default is 'false'
* `['apt']['cache_bypass']` - array of URLs to bypass the cache. Accepts the URL and protocol to  fetch directly from the remote repository and not attempt to cache

### Unattended Upgrades

* `['apt']['unattended_upgrades']['enable']` - enables unattended upgrades, default is false
* `['apt']['unattended_upgrades']['update_package_lists']` - automatically update package list (`apt-get update`) daily, default is true
* `['apt']['unattended_upgrades']['allowed_origins']` - array of allowed apt origins from which to pull automatic upgrades, defaults to a guess at the system's main origin and should almost always be overridden
* `['apt']['unattended_upgrades']['package_blacklist']` - an array of package which should never be automatically upgraded, defaults to none
* `['apt']['unattended_upgrades']['auto_fix_interrupted_dpkg']` - attempts to repair dpkg state with `dpkg --force-confold --configure -a` if it exits uncleanly, defaults to false (contrary to the unattended-upgrades default)
* `['apt']['unattended_upgrades']['minimal_steps']` - Split the upgrade into the smallest possible chunks. This makes the upgrade a bit slower but it has the benefit that shutdown while a upgrade is running is possible (with a small delay). Defaults to false.
* `['apt']['unattended_upgrades']['install_on_shutdown']` - Install upgrades when the machine is shuting down instead of doing it in the background while the machine is running. This will (obviously) make shutdown slower. Defaults to false.
* `['apt']['unattended_upgrades']['mail']` - Send email to this address for problems or packages upgrades. Defaults to no email.
* `['apt']['unattended_upgrades']['mail_only_on_error']` - If set, email will only be set on upgrade errors. Otherwise, an email will be sent after each upgrade. Defaults to true.
* `['apt']['unattended_upgrades']['remove_unused_dependencies']` Do automatic removal of new unused dependencies after the upgrade. Defaults to false.
* `['apt']['unattended_upgrades']['automatic_reboot']` - Automatically reboots *without confirmation* if a restart is required after the upgrade. Defaults to false.
* `['apt']['unattended_upgrades']['dl_limit']` - Limits the bandwidth used by apt to download packages. Value given as an integer in kb/sec. Defaults to nil (no limit).

### Configuration for APT

* `['apt']['confd']['install_recommends']` - Consider recommended packages as a dependency for installing. (default: true)
* `['apt']['confd']['install_suggests']` - Consider suggested packages as a dependency for installing. (default: false)

Libraries
---------
There is an `interface_ipaddress` method that returns the IP address for a particular host and interface, used by the `cacher-client` recipe. To enable it on the server use the `['apt']['cacher_interface']` attribute.

Resources/Providers
-------------------
### `apt_repository`
This LWRP provides an easy way to manage additional APT repositories. Adding a new repository will notify running the `execute[apt-get-update]` resource immediately.

#### Actions
- :add: creates a repository file and builds the repository listing (default)
- :remove: removes the repository file

#### Attribute Parameters
- repo_name: name attribute. The name of the channel to discover
- uri: the base of the Debian distribution
- distribution: this is usually your release's codename...ie something like `karmic`, `lucid` or `maverick`
- components: package groupings... when in doubt use `main`
- arch: constrain package to a particular arch like `i386`, `amd64` or even `armhf` or `powerpc`. Defaults to nil.
- trusted: treat all packages from this repository as authenticated regardless of signature
- deb_src: whether or not to add the repository as a source repo as well - value can be `true` or `false`, default `false`.
- keyserver: the GPG keyserver where the key for the repo should be retrieved
- key: if a `keyserver` is provided, this is assumed to be the fingerprint, otherwise it can be either the URI to the GPG key for the repo, or a cookbook_file.
- key_proxy: if set, pass the specified proxy via `http-proxy=` to GPG.
- cookbook: if key should be a cookbook_file, specify a cookbook where the key is located for files/default. Defaults to nil, so it will use the cookbook where the resource is used.

#### Examples

Add the Zenoss repo:

```ruby
apt_repository 'zenoss' do
  uri        'http://dev.zenoss.org/deb'
  components ['main', 'stable']
end
```

Enable Ubuntu [multiverse](https://help.ubuntu.com/community/Repositories/Ubuntu) repositories:

```ruby
apt_repository 'security-ubuntu-multiverse' do
  uri        'http://security.ubuntu.com/ubuntu'
  distribution 'trusty-security'
  components ['multiverse']
  deb_src 'true'
end
```

Add the Nginx PPA, autodetect the key and repository url:

```ruby
apt_repository 'nginx-php' do
  uri          'ppa:nginx/stable'
  distribution node['lsb']['codename']
end
```

Add the JuJu PPA, grab the key from the keyserver, and add source repo:

```ruby
apt_repository 'juju' do
  uri 'http://ppa.launchpad.net/juju/stable/ubuntu'
  components ['main']
  distribution 'trusty'
  key 'C8068B11'
  keyserver 'keyserver.ubuntu.com'
  action :add
  deb_src true
end
```

Add the Cloudera Repo of CDH4 packages for Ubuntu 12.04 on AMD64:

```ruby
apt_repository 'cloudera' do
  uri          'http://archive.cloudera.com/cdh4/ubuntu/precise/amd64/cdh'
  arch         'amd64'
  distribution 'precise-cdh4'
  components   ['contrib']
  key          'http://archive.cloudera.com/debian/archive.key'
end
```

Remove Zenoss repo:

```ruby
apt_repository 'zenoss' do
  action :remove
end
```

### `apt_preference`
This LWRP provides an easy way to pin packages in /etc/apt/preferences.d. Although apt-pinning is quite helpful from time to time please note that Debian does not encourage its use without thorough consideration.

Further information regarding apt-pinning is available via http://wiki.debian.org/AptPreferences.

#### Actions
- :add: creates a preferences file under /etc/apt/preferences.d
- :remove: Removes the file, therefore unpin the package

#### Attribute Parameters
- package_name: name attribute. The name of the package
- glob: Pin by glob() expression or regexp surrounded by /.
- pin: The package version/repository to pin
- pin_priority: The pinning priority aka "the highest package version wins"

#### Examples
Pin libmysqlclient16 to version 5.1.49-3:

```ruby
apt_preference 'libmysqlclient16' do
  pin          'version 5.1.49-3'
  pin_priority '700'
end
```

Unpin libmysqlclient16:

```ruby
apt_preference 'libmysqlclient16' do
  action :remove
end
```

Pin all packages from dotdeb.org:

```ruby
apt_preference 'dotdeb' do
  glob         '*'
  pin          'origin packages.dotdeb.org'
  pin_priority '700'
end
```


Usage
-----
Put `recipe[apt]` first in the run list. If you have other recipes that you want to use to configure how apt behaves, like new sources, notify the execute resource to run, e.g.:

```ruby
template '/etc/apt/sources.list.d/my_apt_sources.list' do
  notifies :run, 'execute[apt-get update]', :immediately
end
```

The above will run during execution phase since it is a normal template resource, and should appear before other package resources that need the sources in the template.

Put `recipe[apt::cacher-ng]` in the run_list for a server to provide APT caching and add `recipe[apt::cacher-client]` on the rest of the Debian-based nodes to take advantage of the caching server.

If you want to cleanup unused packages, there is also the `apt-get autoclean` and `apt-get autoremove` resources provided for automated cleanup.


License & Authors
-----------------
- Author:: Joshua Timberman (joshua@chef.io)
- Author:: Matt Ray (matt@chef.io)
- Author:: Seth Chisamore (schisamo@chef.io)

```text
Copyright:: 2009-2015, Chef Software, Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036c9a28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/providers/service.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036c9b40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "providers",
   "service.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/README.md to tempfile /tmp/chef-rest20160913-19215-1wkcu7w
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/apt/README.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/libraries/matchers.rb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
apt Cookbook CHANGELOG
======================

v2.9.2
-------------------
- #168 Adding guard to package resource.

v2.9.1
-------------------
- Adding package apt-transport-https to default.rb

v2.9.0
-------------------
- Add `sensitive` flag for apt\_repositories
- Enable installation of recommended or suggested packages
- Tidy up `apt-get update` logic
- Fixing not_if guard on ruby_block[validate-key #{key}]

v2.8.2 (2015-08-24)
-------------------
- Fix removal of apt\_preferences

v2.8.1 (2015-08-18)
-------------------
- Handle keyservers as URLs and bare hostnames

v2.8.0 (2015-08-18)
-------------------
- Access keyservers on port 80
- Adds key\_proxy as LWRP attribute for apt\_repository
- Fix wildcard glob preferences files
- Fix text output verification for non en\_US locales
- Quote repo URLs to deal with spaces

v2.7.0 (2015-03-23)
-------------------
- Support Debian 8.0
- Filename verification for LWRPs
- Support SSL enabled apt repositories

v2.6.1 (2014-12-29)
-------------------
- Remove old preference files without .pref extension from previous versions

v2.6.0 (2014-09-09)
-------------------
- Always update on first run - check
- Adding ppa support for apt_repository

v2.5.3 (2014-08-14)
-------------------
- #87 - Improve default settings, account for non-linux platforms

v2.5.2 (2014-08-14)
-------------------
- Fully restore 2.3.10 behaviour

v2.5.1 (2014-08-14)
-------------------
- fix breakage introduced in apt 2.5.0

v2.5.0 (2014-08-12)
-------------------
- Add unattended-upgrades recipe
- Only update the cache for the created repository
- Added ChefSpec matchers and default_action for resources
- Avoid cloning resource attributes
- Minor documentation updates

v2.4.0 (2014-05-15)
-------------------
- [COOK-4534]: Add option to update apt cache at compile time


v2.3.10 (2014-04-23)
--------------------
- [COOK-4512] Bugfix: Use empty PATH if PATH is nil


v2.3.8 (2014-02-14)
-------------------
### Bug
- **[COOK-4287](https://tickets.chef.io/browse/COOK-4287)** - Cleanup the Kitchen


v2.3.6
------
* [COOK-4154] - Add chefspec matchers.rb file to apt cookbook
* [COOK-4102] - Only index created repository


v2.3.6
------
* [COOK-4154] - Add chefspec matchers.rb file to apt cookbook
* [COOK-4102] - Only index created repository


v2.3.4
------
No change. Version bump for toolchain sanity


v2.3.2
------
- [COOK-3905] apt-get-update-periodic: configuration for the update period
- Updating style for rubocops
- Updating test-kitchen harness


v2.3.0
------
### Bug
- **[COOK-3812](https://tickets.chef.io/browse/COOK-3812)** - Add a way to bypass the apt existence check

### Improvement
- **[COOK-3567](https://tickets.chef.io/browse/COOK-3567)** - Allow users to bypass apt-cache via attributes


v2.2.1
------
### Improvement
- **[COOK-664](https://tickets.chef.io/browse/COOK-664)** - Check platform before running apt-specific commands


v2.2.0
------
### Bug
- **[COOK-3707](https://tickets.chef.io/browse/COOK-3707)** - multiple nics confuse apt::cacher-client

v2.1.2
------
### Improvement
- **[COOK-3551](https://tickets.chef.io/browse/COOK-3551)** - Allow user to set up a trusted APT repository

v2.1.1
------
### Bug
- **[COOK-1856](https://tickets.chef.io/browse/COOK-1856)** - Match GPG keys without case sensitivity

v2.1.0
------
- [COOK-3426]: cacher-ng fails with restrict_environment set to true
- [COOK-2859]: cacher-client executes out of order
- [COOK-3052]: Long GPG keys are downloaded on every run
- [COOK-1856]: apt cookbook should match keys without case sensitivity
- [COOK-3255]: Attribute name incorrect in README
- [COOK-3225]: Call use_inline_resources only if defined
- [COOK-3386]: Cache dir for apt-cacher-ng
- [COOK-3291]: apt_repository: enable usage of a keyserver on port 80
- Greatly expanded test coverage with ChefSpec and Test-Kitchen

v2.0.0
------
### Bug

- [COOK-2258]: apt: LWRP results in error under why-run mode in apt 1.9.0 cookbook

v1.10.0
-------
### Improvement

- [COOK-2885]: Improvements for apt cache server search

### Bug

- [COOK-2441]: Apt recipe broken in new chef version
- [COOK-2660]: Create Debian 6.0 "squeeze" specific template for
  apt-cacher-ng

v1.9.2
------
- [COOK-2631] - Create Ubuntu 10.04 specific template for apt-cacher-ng

v1.9.0
------
- [COOK-2185] - Proxy for apt-key
- [COOK-2338] - Support pinning by glob() or regexp

v1.8.4
------
- [COOK-2171] - Update README to clarify required Chef version: 10.18.0
  or higher.

v1.8.2
------
- [COOK-2112] - need [] around "arch" in sources.list entries
- [COOK-2171] - fixes a regression in the notification

v1.8.0
------
- [COOK-2143] - Allow for a custom cacher-ng port
- [COOK-2171] - On `apt_repository.run_action(:add)` the source file
  is not created.
- [COOK-2184] - apt::cacher-ng, use `cacher_port` attribute in
  acng.conf

v1.7.0
------
- [COOK-2082] - add "arch" parameter to apt_repository LWRP

v1.6.0
------
- [COOK-1893] - `apt_preference` use "`package_name`" resource instead of "name"
- [COOK-1894] - change filename for sources.list.d files
- [COOK-1914] - Wrong dir permissions for /etc/apt/preferences.d/
- [COOK-1942] - README.md has wrong name for the keyserver attribute
- [COOK-2019] - create 01proxy before any other apt-get updates get executed

v1.5.2
------
- [COOK-1682] - use template instead of file resource in apt::cacher-client
- [COOK-1875] - cacher-client should be Environment-aware

V1.5.0
------
- [COOK-1500] - Avoid triggering apt-get update
- [COOK-1548] - Add execute commands for autoclean and autoremove
- [COOK-1591] - Setting up the apt proxy should leave https
  connections direct
- [COOK-1596] - execute[apt-get-update-periodic] never runs
- [COOK-1762] - create /etc/apt/preferences.d directory
- [COOK-1776] - apt key check isn't idempotent

v1.4.8
------
* Adds test-kitchen support
- [COOK-1435] - repository lwrp is not idempotent with http key

v1.4.6
------
- [COOK-1530] - apt_repository isn't aware of update-success-stamp
  file (also reverts COOK-1382 patch).

v1.4.4
------
- [COOK-1229] - Allow cacher IP to be set manually in non-Chef Solo
  environments
- [COOK-1530] - Immediately update apt-cache when sources.list file is dropped off

v1.4.2
------
- [COOK-1155] - LWRP for apt pinning

v1.4.0
------
- [COOK-889] - overwrite existing repo source files
- [COOK-921] - optionally use cookbook\_file or remote\_file for key
- [COOK-1032] - fixes problem with apt repository key installation
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/apt/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-1quivdp
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: bluepill
# Resource:: service
#
# Copyright 2010-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :start, :stop, :enable, :disable, :load, :restart, :reload
default_action :start

attribute :service_name, name_attribute: true
attribute :enabled, default: false
attribute :running, default: false
attribute :variables, kind_of: Hash
attribute :supports, default: { restart: true, status: true }
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/resources/service.rb to tempfile /tmp/chef-rest20160913-19215-1q0nln0
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.freebsd.erb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/resources/service.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/bluepill
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/bluepill/resources
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.lsb.erb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002130bf8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.lsb.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002130d88>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "templates",
   "default",
   "bluepill_init.lsb.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/attributes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/recipes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: bluepill
# Provider:: service
#
# Copyright 2010-2015, Chef Software, Inc.
# Copyright 2012, Heavy Water Operations, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'chef/mixin/shell_out'
require 'chef/mixin/language'

include Chef::Mixin::ShellOut

def whyrun_supported?
  true
end

action :enable do
  config_file = ::File.join(node['bluepill']['conf_dir'],
                            "#{new_resource.service_name}.pill")
  unless @current_resource.enabled
    converge_by("enable #{@new_resource}") do
      link "#{node['bluepill']['init_dir']}/#{new_resource.service_name}" do
        to node['bluepill']['bin']
        only_if { ::File.exist?(config_file) }
      end
      template_suffix = case node['platform_family']
                        when 'rhel', 'fedora', 'freebsd' then node['platform_family']
                        when 'debian' then 'lsb'
                        end

      template "#{node['bluepill']['init_dir']}/bluepill-#{new_resource.service_name}" do
        source "bluepill_init.#{template_suffix}.erb"
        cookbook 'bluepill'
        owner 'root'
        group node['bluepill']['group']
        mode '0755'
        variables(
          service_name: new_resource.service_name,
          config_file: config_file
        )
      end if template_suffix

      service "bluepill-#{new_resource.service_name}" do
        action [:enable]
      end
    end
  end
end

action :load do
  unless @current_resource.running
    converge_by("load #{@new_resource}") do
      shell_out!(load_command)
    end
  end
end

action :reload do
  converge_by("reload #{@new_resource}") do
    shell_out!(stop_command) if @current_resource.running
    shell_out!(load_command)
  end
end

action :start do
  unless @current_resource.running
    converge_by("start #{@new_resource}") do
      shell_out!(start_command)
    end
  end
end

action :disable do
  if @current_resource.enabled
    converge_by("disable #{@new_resource}") do
      file "#{node['bluepill']['conf_dir']}/#{new_resource.service_name}.pill" do
        action :delete
      end
      link "#{node['bluepill']['init_dir']}/#{new_resource.service_name}" do
        action :delete
      end
    end
  end
end

action :stop do
  if @current_resource.running
    converge_by("stop #{@new_resource}") do
      shell_out!(stop_command)
    end
  end
end

action :restart do
  if @current_resource.running
    converge_by("restart #{@new_resource}") do
      Chef::Log.debug "Restarting #{new_resource.service_name}"
      shell_out!(restart_command)
      Chef::Log.debug "Restarted #{new_resource.service_name}"
    end
  end
end

def load_current_resource
  @current_resource = Chef::Resource::BluepillService.new(new_resource.name)
  @current_resource.service_name(new_resource.service_name)

  Chef::Log.debug("Checking status of service #{new_resource.service_name}")

  determine_current_status!

  @current_resource
end

protected

def status_command
  "#{node['bluepill']['bin']} #{new_resource.service_name} status"
end

def load_command
  "#{node['bluepill']['bin']} load #{node['bluepill']['conf_dir']}/#{new_resource.service_name}.pill"
end

def start_command
  "#{node['bluepill']['bin']} #{new_resource.service_name} start"
end

def stop_command
  "#{node['bluepill']['bin']} #{new_resource.service_name} stop"
end

def restart_command
  "#{node['bluepill']['bin']} #{new_resource.service_name} restart"
end

def determine_current_status!
  service_running?
  service_enabled?
end

def service_running?
  if shell_out(status_command).exitstatus == 0
    @current_resource.running true
    Chef::Log.debug("#{new_resource} is running")
  end
rescue Mixlib::ShellOut::ShellCommandFailed, SystemCallError
  @current_resource.running false
  nil
end

def service_enabled?
  if ::File.exist?("#{node['bluepill']['conf_dir']}/#{new_resource.service_name}.pill") &&
     ::File.symlink?("#{node['bluepill']['init_dir']}/#{new_resource.service_name}")
    @current_resource.enabled true
  else
    @current_resource.enabled false
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.rhel.erb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000201bdd0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.rhel.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002020100>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "templates",
   "default",
   "bluepill_init.rhel.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/providers/service.rb to tempfile /tmp/chef-rest20160913-19215-pzax4s
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002162860
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.freebsd.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002162950>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "templates",
   "default",
   "bluepill_init.freebsd.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/apt/CHANGELOG.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/templates/default/bluepill_rsyslog.conf.erb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f0d308
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/bluepill/templates/default/bluepill_rsyslog.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f0d3f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "templates",
   "default",
   "bluepill_rsyslog.conf.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000211af88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000211b050>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Cookbook Name:: bluepill
# Attributes:: default
#
# Copyright 2010-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

default['bluepill']['bin'] = "#{node['languages']['ruby']['bin_dir']}/bluepill"
default['bluepill']['logfile'] = '/var/log/bluepill.log'
default['bluepill']['pid_dir'] = '/var/run/bluepill'
default['bluepill']['state_dir'] = '/var/lib/bluepill'
default['bluepill']['group'] = 0
default['bluepill']['use_rsyslog'] = false

case node['platform_family']
when 'arch'
  default['bluepill']['init_dir'] = '/etc/rc.d'
  default['bluepill']['conf_dir'] = '/etc/bluepill'
  default['bluepill']['defaults_dir'] = '/etc/default'
when 'freebsd'
  default['bluepill']['init_dir'] = '/usr/local/etc/rc.d'
  default['bluepill']['conf_dir'] = '/usr/local/etc/bluepill'
  default['bluepill']['defaults_dir'] = '/etc/defaults'
else
  default['bluepill']['init_dir'] = '/etc/init.d'
  default['bluepill']['conf_dir'] = '/etc/bluepill'
end

case node['platform_family']
when 'fedora', 'rhel'
  default['bluepill']['defaults_dir'] = '/etc/sysconfig'
when 'debian'
  default['bluepill']['defaults_dir'] = '/etc/default'
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-1kk4xp2
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002076c08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002076d98>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/providers/service.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/bluepill/providers
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002263f98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002268160>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)

  ChefSpec.define_matcher(:bluepill_service)

  def enable_bluepill_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:bluepill_service, :enable, service)
  end

  def load_bluepill_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:bluepill_service, :load, service)
  end

  def reload_bluepill_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:bluepill_service, :reload, service)
  end

  def start_bluepill_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:bluepill_service, :start, service)
  end

  def disable_bluepill_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:bluepill_service, :disable, service)
  end

  def stop_bluepill_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:bluepill_service, :stop, service)
  end

  def restart_bluepill_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:bluepill_service, :restart, service)
  end

end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-1tkqouh
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.fedora.erb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003615aa0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/recipes/rsyslog.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003615b90>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "recipes",
   "rsyslog.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: bluepill
# Recipe:: rsyslog
#
# Copyright 2010-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'rsyslog::default'

template '/etc/rsyslog.d/bluepill.conf' do
  owner 'root'
  group 'root'
  mode '0644'
  source 'bluepill_rsyslog.conf.erb'
  notifies :restart, "service[#{node['rsyslog']['service_name']}]"
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
#
# Author: Jamie Winsor (<jamie@vialstudios.com>)
#
# chkconfig: 345 99 1
# Description: Bluepill loader for <%= @service_name %>
# Provides: <%= @service_name %>
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6

BLUEPILL_BIN=<%= node['bluepill']['bin'] %>
BLUEPILL_CONFIG=<%= @config_file %>
SERVICE_NAME=<%= @service_name %>

[ -r <%= node['bluepill']['defaults_dir'] %>/$SERVICE_NAME ] && . <%= node['bluepill']['defaults_dir'] %>/$SERVICE_NAME

case "$1" in
  start)
    echo "Loading bluepill configuration for $SERVICE_NAME "
    $BLUEPILL_BIN load $BLUEPILL_CONFIG
    ;;
  stop)
    $BLUEPILL_BIN $SERVICE_NAME stop
    $BLUEPILL_BIN $SERVICE_NAME quit
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.rhel.erb to tempfile /tmp/chef-rest20160913-19215-3kndi
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/attributes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/bluepill/attributes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/recipes/rsyslog.rb to tempfile /tmp/chef-rest20160913-19215-dydly5
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/recipes/rsyslog.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/bluepill/recipes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/MAINTAINERS.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/libraries/matchers.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/bluepill/libraries
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
local6.*  <%= node["bluepill"]["logfile"] %>
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_rsyslog.conf.erb to tempfile /tmp/chef-rest20160913-19215-e407bl
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: bluepill
# Recipe:: default
#
# Copyright 2010-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

gem_package 'i18n'

gem_package 'bluepill' do
  version node['bluepill']['version'] if node['bluepill']['version']
end

[
  node['bluepill']['conf_dir'],
  node['bluepill']['pid_dir'],
  node['bluepill']['state_dir']
].each do |dir|
  directory dir do
    recursive true
    owner 'root'
    group node['bluepill']['group']
  end
end

file node['bluepill']['logfile'] do
  owner 'root'
  group node['bluepill']['group']
  mode '0755'
  action :create_if_missing
end

include_recipe 'bluepill::rsyslog' if node['bluepill']['use_rsyslog']
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
##
# PROVIDE: named
# REQUIRE: SERVERS cleanvar
# KEYWORD: shutdown
#

. /etc/rc.subr

name="<%= @service_name %>"
rcvar=`set_rcvar`

# Set some defaults
<%= @service_name %>_enable=${<%= @service_name %>_enable:-"NO"}

pidfile="/var/run/<%= @service_name %>.pid"
command="/usr/local/bin/bluepill"

start_precmd="${command} load <%= node['bluepill']['conf_dir'] %>/<%= @service_name %>.pill"
start_cmd="${command} ${name} start"

status_cmd="${command} ${name} status"

stop_cmd="${command} ${name} stop"
stop_postcmd="${command} ${name} quit"

[ -r <%= node['bluepill']['defaults_dir'] %>/$name ] && . <%= node['bluepill']['defaults_dir'] %>/$name
load_rc_config ${name}

PATH="${PATH}:/usr/local/bin"

run_rc_command "$1"
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/templates/default/bluepill_rsyslog.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/bluepill/templates
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/bluepill/templates/default
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.freebsd.erb to tempfile /tmp/chef-rest20160913-19215-175cutf
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
#
### BEGIN INIT INFO
# Provides: <%= @service_name %>
# Required-Start:
# Required-Stop:
# Defalt-Start: 2 3 4 5
# Default-Stop: 0 1 2 6
# Description: Bluepill loader for <%= @service_name %>
### END INIT INFO

BLUEPILL_BIN=<%= node['bluepill']['bin'] %>
BLUEPILL_CONFIG=<%= @config_file %>
SERVICE_NAME=<%= @service_name %>

[ -r <%= node['bluepill']['defaults_dir'] %>/$SERVICE_NAME ] && . <%= node['bluepill']['defaults_dir'] %>/$SERVICE_NAME

case "$1" in
  start)
    echo "Loading bluepill configuration for $SERVICE_NAME "
    $BLUEPILL_BIN load $BLUEPILL_CONFIG
    ;;
  stop)
    $BLUEPILL_BIN $SERVICE_NAME stop
    $BLUEPILL_BIN $SERVICE_NAME quit
    ;;
  restart)
    $BLUEPILL_BIN $SERVICE_NAME restart
    ;;
  status)
    $BLUEPILL_BIN $SERVICE_NAME status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.lsb.erb to tempfile /tmp/chef-rest20160913-19215-162ncch
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000013821a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.fedora.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001382358>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "templates",
   "default",
   "bluepill_init.fedora.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-pv0gc8
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/templates/default/bluepill_init.freebsd.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/templates/default/bluepill_init.rhel.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/templates/default/bluepill_init.lsb.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/README.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003b01e60
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003b01ff0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "README.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/CONTRIBUTING.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004002450
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000040025b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/resources/msys_archive.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f69ac0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/resources/msys_archive.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f69b88>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "resources",
   "msys_archive.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
#
# Author: Jamie Winsor (<jamie@vialstudios.com>)
#
# chkconfig: 345 99 1
# Description: Bluepill loader for <%= @service_name %>
# Provides: <%= @service_name %>
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6

BLUEPILL_BIN=<%= node['bluepill']['bin'] %>
BLUEPILL_CONFIG=<%= @config_file %>
SERVICE_NAME=<%= @service_name %>

[ -r <%= node['bluepill']['defaults_dir'] %>/$SERVICE_NAME ] && . <%= node['bluepill']['defaults_dir'] %>/$SERVICE_NAME

case "$1" in
  start)
    echo "Loading bluepill configuration for $SERVICE_NAME "
    $BLUEPILL_BIN load $BLUEPILL_CONFIG
    ;;
  stop)
    $BLUEPILL_BIN $SERVICE_NAME stop
    $BLUEPILL_BIN $SERVICE_NAME quit
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/templates/default/bluepill_init.fedora.erb to tempfile /tmp/chef-rest20160913-19215-85l36s
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/providers/msys_archive.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f1fc68
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/providers/msys_archive.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f1fd30>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "providers",
   "msys_archive.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/.foodcritic
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/templates/default/bluepill_init.fedora.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-13py2y4
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/CHANGELOG.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e98da8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e98ee8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "CHANGELOG.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/bluepill/metadata.json
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f45530
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f45698>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "metadata.json"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000eb1158
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000eb1388>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/recipes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Provider:: msys_archive
#
# Copyright 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

action :unpack do
  directory msys_dir do
    action :create
  end

  directory "dir-#{mingw_dir}" do
    action :create
    path mingw_dir
    only_if do
      new_resource.mingw
    end
  end

  directory cache_dir do
    action :create
  end

  # Unpacking involves downloading the tar.whatever.
  # Then we unpack the tar.whatever with 7z, which
  # leaves us with a tar, which can finally be
  # untarred with 7z.

  remote_file cache_path do
    source new_resource.source
    checksum new_resource.checksum
    notifies :run, "execute[#{archive_name}]", :immediately
  end

  execute archive_name do
    command extract_cmd(cache_path, cache_dir)
    action :nothing
    notifies :run, "execute[#{tar_name}]", :immediately
  end

  execute tar_name do
    command extract_cmd(tar_path, unpack_root_dir)
    action :nothing
  end
end

# msys packages will be extracted into the root dir
# mingw packages will get extracted into the root/mingw dir
def unpack_root_dir
  if new_resource.mingw
    mingw_dir
  else
    msys_dir
  end
end

def msys_dir
  new_resource.root_dir
end

def mingw_dir
  ::File.join(new_resource.root_dir, 'mingw')
end

def archive_name
  ::File.basename(new_resource.source)
end

def cache_dir
  ::File.join(unpack_root_dir, '.cache')
end

def cache_path
  ::File.join(cache_dir, archive_name)
end

def tar_name
  ::File.basename(archive_name, ::File.extname(archive_name))
end

def tar_path
  ::File.join(cache_dir, tar_name)
end

def extract_cmd(source_file, dest_dir)
  "7z x #{source_file} -o#{dest_dir} -r -y"
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_debian.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
actions :unpack
default_action :unpack

attribute :source, kind_of: String, name_attribute: true
attribute :root_dir, kind_of: String, required: true
attribute :mingw, kind_of: [TrueClass, FalseClass], default: false
attribute :checksum, kind_of: String
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/msys_archive.rb to tempfile /tmp/chef-rest20160913-19215-1ygg0gz
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/providers/msys_archive.rb to tempfile /tmp/chef-rest20160913-19215-1tfwdj6
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/providers/msys_archive.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/providers
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fbaf88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/bluepill/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fbb0c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "bluepill",
   ".foodcritic"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# bluepill Cookbook
[![Build Status](https://travis-ci.org/chef-cookbooks/bluepill.svg?branch=master)](https://travis-ci.org/chef-cookbooks/bluepill) [![Cookbook Version](https://img.shields.io/cookbook/v/bluepill.svg)](https://supermarket.chef.io/cookbooks/bluepill)

Installs bluepill Ruby Gem and configures it to manage services. Also includes a LWRP.

## Requirements
### Platforms
Bluepill is a pure Ruby service management tool/library, so this cookbook should work on any system. The attributes do set up paths based on FHS locations, see below.

### Chef
- Chef 12+

### Cookbooks
- none

## Attributes
Default locations for bluepill are in "FHS compliant" locations.
- `node["bluepill"]["bin"]` - Path to bluepill program, default is 'bluepill' in the RubyGems binary directory.
- `node["bluepill"]["logfile"]` - Location of the bluepill log file, default "/var/log/bluepill.log".
- `node["bluepill"]["conf_dir"]` - Location of service config files (pills), default "/etc/bluepill".
- `node["bluepill"]["pid_dir"]` - Location of pidfiles, default "/var/run/bluepill"
- `node["bluepill"]["state_dir"]` - Location of state directory, default "/var/lib/bluepill"
- `node["bluepill"]["init_dir"]` - Location of init script directory, default selected by platform.
- `node["bluepill"]["version"]` - Version of bluepill to install, default is latest.
- `node["bluepill"]["use_rsyslog"]` - Enable configuration and use of rsyslog for bluepill.

# Custom Resources
This cookbook contains an LWRP, `bluepill_service`. This can be used with the normal Chef service resource, by using the `provider` parameter, or by specifying the `bluepill_service` shortcut. These two resources are equivalent.

```ruby
service 'my_app' do
  provider bluepill_service
  action [:enable, :load, :start]
end

bluepill_service 'my_app' do
  action [:enable, :load, :start]
end
```

The load action should probably always be specified, to ensure that if bluepill isn't running already it gets started. The

The recipe using the service must contain a template resource for the pill and it must be named `my_app.pill.erb`, where `my_app` is the service name passed to the bluepill service resource.

## Usage
Be sure to include the bluepill recipe in the run list to ensure that the gem and bluepill-related directories are created. This will also make the cookbook available on the system and other cookbooks won't need to explicitly depend on it in the metadata.

If the default directory locations in the attributes/default.rb aren't what you want, change them by setting them either in the attributes file itself, or create attributes in a role applied to any systems that will use bluepill.

Example pill template resource and .erb file:

```ruby
template '/etc/bluepill/my_app.pill' do
  source 'my_app.pill.erb'
end

Bluepill.application('my_app') do |app|
  app.process('my_app') do |process|
    process.pid_file = '/var/run/my_app.pid'
    process.start_command = '/usr/bin/my_app'
  end
end
```

See bluepill's documentation for more information on creating pill templates.

## Testing
This cookbook has the following [ChefSpec custom matchers](https://github.com/sethvargo/chefspec#packaging-custom-matchers) defined:

- enable_bluepill_service
- load_bluepill_service
- reload_bluepill_service
- start_bluepill_service
- disable_bluepill_service
- stop_bluepill_service
- restart_bluepill_service

### ChefSpec Examples:

```
it 'enables my_app bluepill service' do
  chef_run.converge('my_app::default', described_recipe)
  expect(chef_run).to enable_bluepill_service('my_app')
end

it 'reloads my_app bluepill service when pill file changes' do
  chef_run.converge('my_app::default', described_recipe)
  expect(chef_run).to create_template('/etc/bluepill/my_app.pill')
  my_app_pill = chef_run.template('/etc/bluepill/my_app.pill')
  expect(my_app_pill).to notify('bluepill_service[my_app]').to(:reload).delayed
end
```

## License & Authors
**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2010-2015, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/README.md to tempfile /tmp/chef-rest20160913-19215-1cwwc7d
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003dac3b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_debian.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003dac4f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_debian.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/README.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# bluepill Cookbook CHANGELOG
This file is used to list changes made in each version of the bluepill cookbook.

## 2.4.3 (04-18-2016)
- Added ChefSpec custom matchers and examples

## 2.4.2 (02-19-2016)
- Loosened the dependecy on rsyslog so the latest cookbook can be used
- Updated testing dependencies and configurations

WARNING: It was noted after the release of 2.4.2 that the loosened dependency on rsyslog increased the minimum required Chef release to 12.0 for this cookbook. Chef 11 users will need to use 2.4.1.

## 2.4.1 (11-10-2015)
- Require rsyslog ~> 2.0.0 to preserve Chef 11 compatibility
- Fix rsyslog restarting on RHEL
- Use platform_family when setting platform specific node attributes and fix bad syntax. This should improve RHEL support

## v2.4.0 (09-17-2015)
- Updated the LSB Required-Start and Required-Stop comments of the LSB init script template to be valid
- Added name to the bluepill_test cookbook metadata for Chef 12
- If a defaults file on RHEL or Debian based systems exist for the service source that within the init scripts.  Example if /etc/default/bar exists on debian for the bar service then source that
- Added .kitchen.yml file with vagrant based testing for local testing and moved the cloud based kitchen to .kitchen.cloud.yml
- Add Travis CI config
- Added rubocop config
- Updated Berksfile to 3.X format and removed yum cookbook that wasn't used
- Updated contributing.md and added testing.md documentation
- Updated development and testing dependencies in the Gemfile
- Added maintainers.md and .toml and added Rake task for generating the MD file
- Opscode -> Chef Software everywhere
- Added Travis and cookbook version badges to the readme
- Add rake file to easy testing
- Resolved all Rubocop warnings
- Added a chefignore file and added additional files to the gitignore
- Added source_url and issues_url metadata for Supermarket

## v2.3.2
- Never actually released

## v2.3.1
### New Feature
- **[COOK-3705](https://tickets.chef.io/browse/COOK-3705)** - Add init.d script with LSB style

## v2.3.0
### Improvement
- **[COOK-3503](https://tickets.chef.io/browse/COOK-3503)** - Add why-run support

## v2.2.2
- [COOK-2507] - stringify language attributes

## v2.2.0
- [COOK-547] - Add `load` action to provider to reload services when template changes.

## v2.1.0
- [COOK-1295] - The bluepill cookbook does not create the default log file
- [COOK-1840] - Enable bluepill to log to rsyslog

## v2.0.0
This version uses platform_family attribute (in the provider), making the cookbook incompatible with older versions of Chef/Ohai, hence the major version bump.
- [COOK-1644] - Bluepill cookbook fails on Redhat due to missing default or redhat template directory.
- [COOK-1920] - init script should have a template file named after platform_family instead of using file specificity

## v1.1.2
- [COOK-1730] - Add ability to specify which version of bluepill to install

## v1.1.0
- [COOK-1592] - use mixlib-shellout instead of execute, add test-kitchen

## v1.0.6
- [COOK-1304] - support amazon linux
- [COOK-1427] - resolve foodcritic warnings

## v1.0.4
- [COOK-1106] - fix chkconfig loader for CentOS 5
- [COOK-1107] - use integer for GID instead of string

## v1.0.2
- [COOK-1043] - Bluepill cookbook fails on OS X because it tries to use root group

## v1.0.0
- [COOK-943] - add init script for freebsd

## v0.3.0
- [COOK-867] - enable bluepill service on RHEL family
- [COOK-550] - add freebsd support

## v0.2.2
- Fixes COOK-524, COOK-632
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-dihnxu
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/CHANGELOG.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_omnios.rb
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"bluepill","version":"2.4.3","description":"Installs bluepill gem and configures to manage services, includes bluepill_service LWRP","long_description":"# bluepill Cookbook\n[![Build Status](https://travis-ci.org/chef-cookbooks/bluepill.svg?branch=master)](https://travis-ci.org/chef-cookbooks/bluepill) [![Cookbook Version](https://img.shields.io/cookbook/v/bluepill.svg)](https://supermarket.chef.io/cookbooks/bluepill)\n\nInstalls bluepill Ruby Gem and configures it to manage services. Also includes a LWRP.\n\n## Requirements\n### Platforms\nBluepill is a pure Ruby service management tool/library, so this cookbook should work on any system. The attributes do set up paths based on FHS locations, see below.\n\n### Chef\n- Chef 12+\n\n### Cookbooks\n- none\n\n## Attributes\nDefault locations for bluepill are in \"FHS compliant\" locations.\n- `node[\"bluepill\"][\"bin\"]` - Path to bluepill program, default is 'bluepill' in the RubyGems binary directory.\n- `node[\"bluepill\"][\"logfile\"]` - Location of the bluepill log file, default \"/var/log/bluepill.log\".\n- `node[\"bluepill\"][\"conf_dir\"]` - Location of service config files (pills), default \"/etc/bluepill\".\n- `node[\"bluepill\"][\"pid_dir\"]` - Location of pidfiles, default \"/var/run/bluepill\"\n- `node[\"bluepill\"][\"state_dir\"]` - Location of state directory, default \"/var/lib/bluepill\"\n- `node[\"bluepill\"][\"init_dir\"]` - Location of init script directory, default selected by platform.\n- `node[\"bluepill\"][\"version\"]` - Version of bluepill to install, default is latest.\n- `node[\"bluepill\"][\"use_rsyslog\"]` - Enable configuration and use of rsyslog for bluepill.\n\n# Custom Resources\nThis cookbook contains an LWRP, `bluepill_service`. This can be used with the normal Chef service resource, by using the `provider` parameter, or by specifying the `bluepill_service` shortcut. These two resources are equivalent.\n\n```ruby\nservice 'my_app' do\n  provider bluepill_service\n  action [:enable, :load, :start]\nend\n\nbluepill_service 'my_app' do\n  action [:enable, :load, :start]\nend\n```\n\nThe load action should probably always be specified, to ensure that if bluepill isn't running already it gets started. The\n\nThe recipe using the service must contain a template resource for the pill and it must be named `my_app.pill.erb`, where `my_app` is the service name passed to the bluepill service resource.\n\n## Usage\nBe sure to include the bluepill recipe in the run list to ensure that the gem and bluepill-related directories are created. This will also make the cookbook available on the system and other cookbooks won't need to explicitly depend on it in the metadata.\n\nIf the default directory locations in the attributes/default.rb aren't what you want, change them by setting them either in the attributes file itself, or create attributes in a role applied to any systems that will use bluepill.\n\nExample pill template resource and .erb file:\n\n```ruby\ntemplate '/etc/bluepill/my_app.pill' do\n  source 'my_app.pill.erb'\nend\n\nBluepill.application('my_app') do |app|\n  app.process('my_app') do |process|\n    process.pid_file = '/var/run/my_app.pid'\n    process.start_command = '/usr/bin/my_app'\n  end\nend\n```\n\nSee bluepill's documentation for more information on creating pill templates.\n\n## Testing\nThis cookbook has the following [ChefSpec custom matchers](https://github.com/sethvargo/chefspec#packaging-custom-matchers) defined:\n\n- enable_bluepill_service\n- load_bluepill_service\n- reload_bluepill_service\n- start_bluepill_service\n- disable_bluepill_service\n- stop_bluepill_service\n- restart_bluepill_service\n\n### ChefSpec Examples:\n\n```\nit 'enables my_app bluepill service' do\n  chef_run.converge('my_app::default', described_recipe)\n  expect(chef_run).to enable_bluepill_service('my_app')\nend\n\nit 'reloads my_app bluepill service when pill file changes' do\n  chef_run.converge('my_app::default', described_recipe)\n  expect(chef_run).to create_template('/etc/bluepill/my_app.pill')\n  my_app_pill = chef_run.template('/etc/bluepill/my_app.pill')\n  expect(my_app_pill).to notify('bluepill_service[my_app]').to(:reload).delayed\nend\n```\n\n## License & Authors\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2010-2015, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{},"dependencies":{"rsyslog":">= 2.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"bluepill::default":"Installs bluepill rubygem and sets up management directories"}}
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/metadata.json to tempfile /tmp/chef-rest20160913-19215-io3oj0
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-is5fnn
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_solaris2.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/MAINTAINERS.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_suse.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/resources/msys_archive.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/resources
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/metadata.json in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_mac_os_x.rb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC059
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/bluepill/.foodcritic to tempfile /tmp/chef-rest20160913-19215-1xu4xl5
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a82a98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_omnios.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a82d90>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_omnios.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003af8838
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_solaris2.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003af8900>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_solaris2.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/bluepill/.foodcritic in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ae8500
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/recipes/_suse.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ae85c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_suse.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_smartos.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039c4e80
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_smartos.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039c5038>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_smartos.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: debian
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

potentially_at_compile_time do
  package 'autoconf'
  package 'binutils-doc'
  package 'bison'
  package 'build-essential'
  package 'flex'
  package 'gettext'
  package 'ncurses-dev'
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_debian.rb to tempfile /tmp/chef-rest20160913-19215-x2d7di
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_fedora.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_debian.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/recipes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003aaac78
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_mac_os_x.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003aaade0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_mac_os_x.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ae2268
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ae2380>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: default
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

begin
  include_recipe "build-essential::_#{node['platform_family']}"
rescue Chef::Exceptions::RecipeNotFound
  Chef::Log.warn <<-EOH
A build-essential recipe does not exist for '#{node['platform_family']}'. This
means the build-essential cookbook does not have support for the
#{node['platform_family']} family. If you are not compiling gems with native
extensions or building packages from source, this will likely not affect you.
EOH
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-wmkin8
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_freebsd.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038d57b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_freebsd.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038d5880>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_freebsd.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_rhel.rb
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: smartos
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

potentially_at_compile_time do
  package 'autoconf'
  package 'binutils'
  package 'build-essential'
  package 'gcc47'
  package 'gmake'
  package 'pkg-config'
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_smartos.rb to tempfile /tmp/chef-rest20160913-19215-1bwbvrf
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_smartos.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/libraries/timing.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_windows.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037eefc0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_windows.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037ef150>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_windows.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: omnios
#
# Copyright 2013-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

potentially_at_compile_time do
  package 'developer/gcc47'
  package 'developer/object-file'
  package 'developer/linker'
  package 'developer/library/lint'
  package 'developer/build/gnu-make'
  package 'system/header'
  package 'system/library/math/header-math'
end

# Per OmniOS documentation, the gcc bin dir isn't in the default
# $PATH, so add it to the running process environment
# http://omnios.omniti.com/wiki.php/DevEnv
ENV['PATH'] = "#{ENV['PATH']}:/opt/gcc-4.7.2/bin"
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_omnios.rb to tempfile /tmp/chef-rest20160913-19215-5ybf9n
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_omnios.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: solaris2
#
# Copyright 2013-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

case node['platform_version'].to_f
when 5.10
  # You should install the following packages from the Solaris 10 DVD:
  #
  #   SUNWbison
  #   SUNWgcc
  #   SUNWggrp
  #   SUNWgmake
  #   SUNWgtar
  #
when 5.11
  potentially_at_compile_time do
    package 'autoconf'
    package 'automake'
    package 'bison'
    package 'gnu-coreutils'
    package 'flex'
    package 'gcc'
    package 'gcc-3'
    package 'gnu-grep'
    package 'gnu-make'
    package 'gnu-patch'
    package 'gnu-tar'
    package 'pkg-config'
    package 'ucb'
  end
else
  raise "Sorry, we don't support Solaris version #{node['platform_version']} at this juncture."
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_solaris2.rb to tempfile /tmp/chef-rest20160913-19215-131nwxl
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_solaris2.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039a95b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/recipes/_rhel.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039a99f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_rhel.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: rhel
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

potentially_at_compile_time do
  package 'autoconf'
  package 'bison'
  package 'flex'
  package 'gcc'
  package 'gcc-c++'
  package 'kernel-devel'
  package 'make'
  package 'm4'
  package 'patch'
  package 'gettext-devel'

  # Ensure GCC 4 is available on older pre-6 EL
  if node['platform_version'].to_i < 6
    package 'gcc44'
    package 'gcc44-c++'
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_rhel.rb to tempfile /tmp/chef-rest20160913-19215-1o7cb7y
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_rhel.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: suse
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

potentially_at_compile_time do
  package 'autoconf'
  package 'bison'
  package 'flex'
  package 'gcc'
  package 'gcc-c++'
  package 'kernel-default-devel'
  package 'make'
  package 'm4'
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000399bb48
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_fedora.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000399bc10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_fedora.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_suse.rb to tempfile /tmp/chef-rest20160913-19215-1blc583
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003746398
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/libraries/timing.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003746488>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "libraries",
   "timing.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Library:: timing
#
# Copyright 2014-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# This module is used to clean up the recipe DSL and "potentially" execute
# resources at compile time (depending on the value of an attribute).
#
# This library is only for use within the build-essential cookbook. Resources
# inside the potentially_at_compile_time block will not fire notifications in
# some situations. This is fixable, but since none of the resources in this
# cookbook actually use notifications, it is not worth the added technical debt.
#
# TL;DR Don't use this DSL method outside of this cookbook.
#
module BuildEssential
  module Timing
    #
    # Potentially evaluate the given block at compile time, depending on the
    # value of the +node['build-essential']['compile_time']+ attribute.
    #
    # @example
    #   potentially_at_compile_time do
    #     package 'apache2'
    #   end
    #
    # @param [Proc] block
    #   the thing to eval
    #
    def potentially_at_compile_time(&block)
      if compile_time?
        CompileTime.new(self).evaluate(&block)
      else
        instance_eval(&block)
      end
    end

    private

    #
    # Checks if the DSL should be evaluated at compile time.
    #
    # @return [true, false]
    #
    def compile_time?
      check_for_old_attributes!
      !!node['build-essential']['compile_time']
    end

    #
    # Checks for the presence of the "old" attributes.
    #
    # @todo Remove in 2.0.0
    #
    # @return [void]
    #
    def check_for_old_attributes!
      unless node['build_essential'].nil?
        Chef::Log.warn <<-EOH
node['build_essential'] has been changed to node['build-essential'] to match the
cookbook name and community standards. I have gracefully converted the attribute
for you, but this warning and conversion will be removed in the next major
release of the build-essential cookbook.
EOH
        node.default['build-essential'] = node['build_essential']
      end

      unless node['build-essential']['compiletime'].nil?
        Chef::Log.warn <<-EOH
node['build-essential']['compiletime'] has been deprecated. Please use
node['build-essential']['compile_time'] instead. I have gracefully converted the
attribute for you, but this warning and conversion will be removed in the next
major release of the build-essential cookbook.
EOH
        node.default['build-essential']['compile_time'] = node['build-essential']['compiletime']
      end
    end

    #
    # A class graciously borrowed from Chef Sugar for evaluating a resource at
    # compile time in a block.
    #
    class CompileTime
      def initialize(recipe)
        @recipe = recipe
      end

      def evaluate(&block)
        instance_eval(&block)
      end

      def method_missing(m, *args, &block)
        resource = @recipe.send(m, *args, &block)
        if resource.is_a?(Chef::Resource)
          actions = Array(resource.action)
          resource.action(:nothing)

          actions.each do |action|
            resource.run_action(action)
          end
        end
        resource
      end
    end
  end
end

# Include the timing module into the main recipe DSL
Chef::Recipe.send(:include, BuildEssential::Timing)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/timing.rb to tempfile /tmp/chef-rest20160913-19215-1rzm3ok
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/libraries/timing.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/libraries
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: mac_os_x
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

potentially_at_compile_time do
  xcode_command_line_tools 'install'
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_mac_os_x.rb to tempfile /tmp/chef-rest20160913-19215-6ag4mm
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/libraries/matchers.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: freebsd
#
# Copyright 2014-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

potentially_at_compile_time do
  package 'devel/gmake'
  package 'devel/autoconf'
  package 'devel/m4'
  package 'devel/gettext'
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_freebsd.rb to tempfile /tmp/chef-rest20160913-19215-5woh54
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_freebsd.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_mac_os_x.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003696a88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003696b78>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: fedora
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

potentially_at_compile_time do
  package 'autoconf'
  package 'bison'
  package 'flex'
  package 'gcc'
  package 'gcc-c++'
  package 'gettext'
  package 'kernel-devel'
  package 'make'
  package 'm4'
  package 'ncurses-devel'
  package 'patch'
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_fedora.rb to tempfile /tmp/chef-rest20160913-19215-vkvtf7
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/libraries/_msys_helper.rb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Recipe:: _mingw
#
# Copyright 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
require 'ostruct'

include_recipe '7-zip::default'

[
  msys_p('http://downloads.sourceforge.net/mingw/msysCORE-1.0.17-1-msys-1.0.17-bin.tar.lzma',
    '2d707ae394f5797a0718a1ffd886d4be1a83ed1f68a4ee4a5b19efd3208b037f'),
  msys_p('http://downloads.sourceforge.net/mingw/msysCORE-1.0.17-1-msys-1.0.17-ext.tar.lzma',
    '2c68f68cb2caa27aa014461133cf578433e62c823cdac3350be62b9c3e6460a0'),
  msys_p('http://downloads.sourceforge.net/mingw/coreutils-5.97-3-msys-1.0.13-bin.tar.lzma',
    'f8c7990416ea16a74ac336dcfe0f596bc46b8724b2d58cf8a3509414220b2366'),
  msys_p('http://downloads.sourceforge.net/mingw/coreutils-5.97-3-msys-1.0.13-ext.tar.lzma',
    '3f525aa6c94ff79ffd656ddf0a56d3244f982ea4a0d274674d9875afc1e04579'),
  msys_p('http://downloads.sourceforge.net/mingw/libiconv-1.14-1-msys-1.0.17-dll-2.tar.lzma',
    '196921e8c232259c8e6a6852b9ee8d9ab2d29a91419f0c8dc27ba6f034231683'),
  msys_p('http://downloads.sourceforge.net/mingw/libintl-0.18.1.1-1-msys-1.0.17-dll-8.tar.lzma',
    '29db8c969661c511fbe2a341ab25c993c5f9c555842a75d6ddbcfa70dec16910'),
  msys_p('http://downloads.sourceforge.net/mingw/libtermcap-0.20050421_1-2-msys-1.0.13-dll-0.tar.lzma',
    '62b58fe0880f0972fcc84a819265989b02439c1c5185870227bd25f870f7adb6'),
  msys_p('http://downloads.sourceforge.net/mingw/make-3.81-3-msys-1.0.13-bin.tar.lzma',
    '847f0cbbf07135801c8e67bf692d29b1821e816ad828753c997fa869a9b89988'),
  msys_p('http://downloads.sourceforge.net/mingw/perl-5.8.8-1-msys-1.0.17-bin.tar.lzma',
    '987b939ce00172dd034105d2a908cee5704f67027de98f4dcc69a1006a327a99'),
  msys_p('http://downloads.sourceforge.net/mingw/zlib-1.2.3-2-msys-1.0.13-dll.tar.lzma',
    '4178940828b928b2d5a33042cc83fbb992b4bfb9ffeaef6dc3e555f2a6a8c0d1'),
  msys_p('http://downloads.sourceforge.net/mingw/libgdbm-1.8.3-3-msys-1.0.13-dll-3.tar.lzma',
    '7412f874487652e70022ab8601655ee359ed537b017b7dba360b69237c9093c6'),
  msys_p('http://downloads.sourceforge.net/mingw/libcrypt-1.1_1-3-msys-1.0.13-dll-0.tar.lzma',
    '31f157b6993509849407672503b8b89e09e9e37e8833b6678b9cbbcbf597f918'),
  msys_p('http://downloads.sourceforge.net/mingw/bash-3.1.23-1-msys-1.0.18-bin.tar.xz',
    '38da5419969ab883058a96322bb0f51434dd4e9f71de09cd4f75b96750944533'),
  msys_p('http://downloads.sourceforge.net/mingw/mksh-40.0.0c-1-msys-1.0.17-bin.tar.lzma',
    '8311342acf0b9f0264fd0d8384a826537973d798ca5904349fea1e0c9d909e54'),
  msys_p('http://downloads.sourceforge.net/mingw/termcap-0.20050421_1-2-msys-1.0.13-bin.tar.lzma',
    '906e756332b5fd6c10eeb4b6362f5957dd8cafa5679f89d9adbae59dff7f2ff2'),
  msys_p('http://downloads.sourceforge.net/mingw/libregex-1.20090805-2-msys-1.0.13-dll-1.tar.lzma',
    '85dd8c1e27a90675c5f867be57ba7ae2bb55dde8cd2d19f284c896be134bd3d1'),
  msys_p('http://downloads.sourceforge.net/mingw/crypt-1.1_1-3-msys-1.0.13-bin.tar.lzma',
    '58369b42c38144d3aa5a337ebf1e182a66e88db30ccc42796f2074f251ee1fed'),
  msys_p('http://downloads.sourceforge.net/mingw/m4-1.4.14-1-msys-1.0.13-bin.tar.lzma',
    '41058bc9a691ad01fdd979f1a4ac4ee071bd5ce93f660db5c0b3cfad4487e33e'),
  msys_p('http://downloads.sourceforge.net/mingw/bison-2.4.2-1-msys-1.0.13-bin.tar.lzma',
    '349f3e312bf71f8a2ac68a7bd2f86b03dacc565b0fd27eef5d604e8be402390e'),
  msys_p('http://downloads.sourceforge.net/mingw/flex-2.5.35-2-msys-1.0.13-bin.tar.lzma',
    '9715511a2eafb7e2402029059d4b9db96bd40d8b72908db2571c009745c47a63'),
  msys_p('http://downloads.sourceforge.net/mingw/findutils-4.4.2-2-msys-1.0.13-bin.tar.lzma',
    '779e819b7942dc070c45f4cba633e6a9ae4bfe8b506a3541f4ce86ad0595726d'),
  msys_p('http://downloads.sourceforge.net/mingw/sed-4.2.1-2-msys-1.0.13-bin.tar.lzma',
    'f73059204cecb691e7840108b7c0cbbfcebf50c0e5c6e3a2326e0eedce5d1b94'),
  msys_p('http://downloads.sourceforge.net/mingw/gawk-3.1.7-2-msys-1.0.13-bin.tar.lzma',
    'eb15478ea76e75b666ad7fc7049de21b9f487e0e1ea0e96d40953a477e91c3dd'),
  msys_p('http://downloads.sourceforge.net/mingw/grep-2.5.4-2-msys-1.0.13-bin.tar.lzma',
    '4842a1754df98db994622e8ffab3bea7fbce77e05778cd5d3831e76ac90440ba'),
  msys_p('http://downloads.sourceforge.net/mingw/less-436-2-msys-1.0.13-bin.tar.lzma',
    '1bbd114846026f9ca4fcc4e18ba20f060384f623f1ef22b326df8c55419c0b84'),
  msys_p('http://downloads.sourceforge.net/mingw/diffutils-2.8.7.20071206cvs-3-msys-1.0.13-bin.tar.lzma',
    '522889b044492dd2337c4752ba6262995a11f352ca5fb8a8660349413ea9b864'),
  msys_p('http://downloads.sourceforge.net/mingw/texinfo-4.13a-2-msys-1.0.13-bin.tar.lzma',
    '241eb8e376bf69588d0e02aede35771503c5dcb15c440f97e15e30da79fea864'),
  msys_p('http://downloads.sourceforge.net/mingw/libmagic-5.04-1-msys-1.0.13-dll-1.tar.lzma',
    '65117008598675823b3fb25296d0d6c332ce56b72950e0f90f9063ac098afac3'),
  msys_p('http://downloads.sourceforge.net/mingw/file-5.04-1-msys-1.0.13-bin.tar.lzma',
    'e9ceffa49629524c84d07da77c1a5f37837f68a09e56cad30bea1df0a21e5fc2'),
  msys_p('http://downloads.sourceforge.net/mingw/mintty-1.0.3-1-msys-1.0.17-bin.tar.lzma',
    '0b3e7b57c81646eccaff3ca0310abe8367ace69992640be87199ecf5d9443085'),
  msys_p('http://downloads.sourceforge.net/mingw/patch-2.6.1-1-msys-1.0.13-bin.tar.lzma',
    'c8b7771304fb5e9fc33d8fca9045402f2e1bca055bf0b28127f3c3e85a254f67')
].each do |package|
  potentially_at_compile_time do
    build_essential_msys_archive package.url do
      checksum package.checksum
      root_dir node['build-essential']['msys']['path']
    end
  end
end

[
  msys_p('http://iweb.dl.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-core.tar.lzma',
    '29393aac890847089ad1e93f81a28f6744b1609c00b25afca818f3903e42e4bd'),
  msys_p('http://iweb.dl.sourceforge.net/project/tdm-gcc/MinGW-w64%20runtime/GCC%205%20series/mingw64runtime-v4-git20150618-gcc5-tdm64-1.tar.lzma',
    '29186e0bb36824b10026d78bdcf238d631d8fc1d90718d2ebbd9ec239b6f94dd'),
  msys_p('http://sourceforge.net/projects/tdm-gcc/files/GNU%20binutils/binutils-2.25-tdm64-1.tar.lzma',
    '4722bb7b4d46cef714234109e25e5d1cfd29f4e53365b6d615c8a00735f60e40'),
  msys_p('http://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-c++.tar.lzma',
    '17fd497318d1ac187a113e8665330d746ad9607a0406ab2374db0d8e6f4094d1')
].each do |package|
  potentially_at_compile_time do
    build_essential_msys_archive package.url do
      root_dir node['build-essential']['msys']['path']
      checksum package.checksum
      mingw true
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_fedora.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_windows.rb to tempfile /tmp/chef-rest20160913-19215-d8nveo
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_windows.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_suse.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/MAINTAINERS.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/attributes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000364bcb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000364bdd0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/libraries/xcode_command_line_tools.rb
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000370a050
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/libraries/_msys_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000370a1b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "libraries",
   "_msys_helper.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/.foodcritic
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/metadata.json
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000211a178
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000211aab0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "metadata.json"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000035da0e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000035da1a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/CHANGELOG.md
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000226d228
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000226d430>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)
  def install_xcode_command_line_tools(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:xcode_command_line_tools, :install, resource_name)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
module BuildEssential
  module MsysHelper
    #
    # This function returns a struct representing an
    # msys package. It has two fields: url and checksum
    #
    # @return [OpenStruct]
    #
    def msys_p(url, checksum)
      OpenStruct.new(url: url, checksum: checksum)
    end
  end
end

Chef::Recipe.send(:include, BuildEssential::MsysHelper)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-1c46kzv
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/_msys_helper.rb to tempfile /tmp/chef-rest20160913-19215-1wua1k3
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Attributes:: default
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['build-essential']['compile_time'] = false
default['build-essential']['msys']['path'] = "#{ENV['SYSTEMDRIVE']}\\msys"
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/libraries/_msys_helper.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000021637b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002163a08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   ".foodcritic"]>

[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-iqw951
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/libraries/matchers.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/attributes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/attributes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/README.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"build-essential","version":"2.4.0","description":"Installs C compiler / build tools","long_description":"# build-essential Cookbook\n[![Cookbook Version](http://img.shields.io/cookbook/v/build-essential.svg)][cookbook] [![Build Status](http://img.shields.io/travis/chef-cookbooks/build-essential.svg)][travis]\n\nInstalls packages required for compiling C software from source. Use this cookbook if you wish to compile C programs, or install RubyGems with native extensions.\n\n## Requirements\n### Platforms\n- Debian/Ubuntu\n- RHEL/CentOS/Scientific/Amazon/Oracle\n- openSUSE\n- SmartOS\n- Fedora\n- Mac OS X\n- FreeBSD\n\n### Chef\n- Chef 11+\n\n### Cookbooks\n- Suggests pkgutil for Solaris based platforms\n\n\n**Note for Debian platform family:** On Debian platform-family systems, it is recommended that `apt-get update` be run, to ensure that the package cache is updated. It's not in the scope of this cookbook to do that, as it can [create a duplicate resource](https://tickets.chef.io/browse/CHEF-3694). We recommend using the [apt](https://supermarket.chef.io/cookbooks/apt) cookbook to do this.\n\n**Note for OmniOS**: Currently, OmniOS's Ruby package is built with GCC 4.6.3, and the path is hardcoded, as the gcc binaries are not installed in the default $PATH. This means that in order to install RubyGems into the \"system\" Ruby, one must install `developer/gcc46`. [An issue](https://github.com/omniti-labs/omnios-build/issues/19) is open upstream w/ OmniOS to rebuild the Ruby package with GCC 4.7.2.\n\n## Attributes\n\nAttribute                                 | Default                      | Description\n----------------------------------------- | :--------------------------: | ---------------------------------\n`node['build-essential']['compile_time']` | `false`                      | Execute resources at compile time\n`node['build-essential']['msys']['path']` | `#{ENV['SYSTEMDRIVE']\\\\msys` | Destination for msys (Windows only)\n\n## Usage\nInclude the build-essential recipe in your run list:\n\n```sh\nknife node run_list add NODE \"recipe[build-essential::default]\"\n```\n\nor add the build-essential recipe as a dependency and include it from inside another cookbook:\n\n```ruby\ninclude_recipe 'build-essential::default'\n```\n\n### Gems with C extensions\nFor RubyGems that include native C extensions you wish to use with Chef, you should do the following.\n- Set the `compile_time` attribute to true in your wrapper cookbook or role:\n\n  ```ruby\n   # Wrapper attribute\n   default['build-essential']['compile_time'] = true\n  ```\n\n  ```ruby\n   # Role\n   default_attributes(\n     'build-essential' => {\n       'compile_time' => true\n     }\n   )\n  ```\n\n- Ensure that the C libraries, which include files and other assorted \"dev\"\n\n  type packages, are installed in the compile phase after the build-essential\n\n  recipe is executed. For example:\n\n  ```ruby\n   include_recipe 'build-essential::default'\n\n   package('mypackage-devel') { action :nothing }.run_action(:install)\n  ```\n\n- Use the `chef_gem` resource in your recipe to install the gem with the native\n\n  extension:\n\n  ```ruby\n   chef_gem 'gem-with-native-extension'\n  ```\n\n## License & Authors\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2009-2015, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n[cookbook]: https://supermarket.chef.io/cookbooks/build-essential\n[travis]: http://travis-ci.org/chef-cookbooks/build-essential\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","debian":">= 0.0.0","fedora":">= 0.0.0","freebsd":">= 0.0.0","mac_os_x":">= 10.7.0","mac_os_x_server":">= 10.7.0","oracle":">= 0.0.0","redhat":">= 0.0.0","scientific":">= 0.0.0","smartos":">= 0.0.0","suse":">= 0.0.0","ubuntu":">= 0.0.0","windows":">= 0.0.0"},"dependencies":{"7-zip":">= 0.0.0"},"recommendations":{},"suggestions":{"pkgutil":">= 0.0.0"},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"build-essential":"Installs packages required for compiling C software from source."}}
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/metadata.json to tempfile /tmp/chef-rest20160913-19215-1ai9lbm
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Jennifer Davis](https://github.com/sigje)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-1mrvoo
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/MAINTAINERS.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020774c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002077720>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "CHANGELOG.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000226b400
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/libraries/xcode_command_line_tools.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000226b540>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "libraries",
   "xcode_command_line_tools.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/metadata.json in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-m0irfu
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/providers/hint.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000013160e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/providers/hint.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000013164a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "providers",
   "hint.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002112748
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002112860>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "README.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# build-essential Cookbook
[![Cookbook Version](http://img.shields.io/cookbook/v/build-essential.svg)][cookbook] [![Build Status](http://img.shields.io/travis/chef-cookbooks/build-essential.svg)][travis]

Installs packages required for compiling C software from source. Use this cookbook if you wish to compile C programs, or install RubyGems with native extensions.

## Requirements
### Platforms
- Debian/Ubuntu
- RHEL/CentOS/Scientific/Amazon/Oracle
- openSUSE
- SmartOS
- Fedora
- Mac OS X
- FreeBSD

### Chef
- Chef 11+

### Cookbooks
- Suggests pkgutil for Solaris based platforms


**Note for Debian platform family:** On Debian platform-family systems, it is recommended that `apt-get update` be run, to ensure that the package cache is updated. It's not in the scope of this cookbook to do that, as it can [create a duplicate resource](https://tickets.chef.io/browse/CHEF-3694). We recommend using the [apt](https://supermarket.chef.io/cookbooks/apt) cookbook to do this.

**Note for OmniOS**: Currently, OmniOS's Ruby package is built with GCC 4.6.3, and the path is hardcoded, as the gcc binaries are not installed in the default $PATH. This means that in order to install RubyGems into the "system" Ruby, one must install `developer/gcc46`. [An issue](https://github.com/omniti-labs/omnios-build/issues/19) is open upstream w/ OmniOS to rebuild the Ruby package with GCC 4.7.2.

## Attributes

Attribute                                 | Default                      | Description
----------------------------------------- | :--------------------------: | ---------------------------------
`node['build-essential']['compile_time']` | `false`                      | Execute resources at compile time
`node['build-essential']['msys']['path']` | `#{ENV['SYSTEMDRIVE']\\msys` | Destination for msys (Windows only)

## Usage
Include the build-essential recipe in your run list:

```sh
knife node run_list add NODE "recipe[build-essential::default]"
```

or add the build-essential recipe as a dependency and include it from inside another cookbook:

```ruby
include_recipe 'build-essential::default'
```

### Gems with C extensions
For RubyGems that include native C extensions you wish to use with Chef, you should do the following.
- Set the `compile_time` attribute to true in your wrapper cookbook or role:

  ```ruby
   # Wrapper attribute
   default['build-essential']['compile_time'] = true
  ```

  ```ruby
   # Role
   default_attributes(
     'build-essential' => {
       'compile_time' => true
     }
   )
  ```

- Ensure that the C libraries, which include files and other assorted "dev"

  type packages, are installed in the compile phase after the build-essential

  recipe is executed. For example:

  ```ruby
   include_recipe 'build-essential::default'

   package('mypackage-devel') { action :nothing }.run_action(:install)
  ```

- Use the `chef_gem` resource in your recipe to install the gem with the native

  extension:

  ```ruby
   chef_gem 'gem-with-native-extension'
  ```

## License & Authors
**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2009-2015, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

[cookbook]: https://supermarket.chef.io/cookbooks/build-essential
[travis]: http://travis-ci.org/chef-cookbooks/build-essential
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/README.md to tempfile /tmp/chef-rest20160913-19215-1ci6n1n
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/resources/hint.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000f80bd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/resources/hint.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000f81330>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "resources",
   "hint.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# build-essential Cookbook CHANGELOG

This file is used to list changes made in each version of the build-essential cookbook.

## v2.4.0 (2016-03-21)

- Add gettext package to RHEL / FreeBSD to match other platforms
- Fix OS X version detection logic to properly detect OS X 10.10 and 10.11

## v2.3.1 (2016-02-18)

- Restore Chef 11 compatibility and add Travis / Test Kitchen testing for Chef 11

## v2.3.0 (2016-02-17)

- Add mingw/msys based build tools for Windows

## v2.2.4 (2015-10-06)

- Add patch package on Fedora systems
- Add additional platforms to Kitchen CI
- Use Chef standard Rubocop file and resolve several issues
- Update contributing and testing docs
- Update Gemfile with the latest testing and development deps
- Add maintainers.md and maintainers.toml files
- Add chefignore file to limit the files uploaded to the Chef server
- Add source_url and issues_url metadata for Supermarket

## v2.2.3 (2015-04-15)

- Don't install omnibus-build-essential on Solaris 10 - We decided it's easier to use the old GCC that ships with Solaris 10.
- Use ChefDK for all Travis testing.

## v2.2.2 (2015-03-27)

- Update Solar 10's omnibus-build-essential to 0.0.5

## v2.2.1 (2015-03-23)

- Install GNU Patch on Solaris 11

## v2.2.0 (2015-03-18)

- [solaris] Differentiate between Solaris 10 and 11
- [solaris] Add ucb compat package
- [solaris] Solaris 10 build essential setup
- Fix metadata to use a string instead of a bool (see #56, #57)

## v2.1.3 (2014-11-18)

- Update metadata for supported versions of OS X (10.7+) as noted from
- v2.0.0 previously (#38)
- Clarify requirement to have apt package cache updated in README. (#41)
- Fix Xcode CLI installation on OS X (#50)

## v2.1.2 (2014-10-14)

- Mac OS X 10.10 Yosemite support

## v2.1.0 (2014-10-14)

- Use fully-qualified names when installing FreeBSD package

## v2.0.6 (2014-08-11)

- Use the resource form of `remote_file` to prevent context issues

## v2.0.4 (2014-06-06)

- [COOK-4661] added patch package to _rhel recipe

## v2.0.2 (2014-05-02)

- Updated documentation about older Chef versions
- Added new SVG badges to the README
- Fix a bug where `potentially_at_compile_time` fails on non-resources

## v2.0.0 (2014-03-13)

- Updated tested harnesses to use latest ecosystem tools
- Added support for FreeBSD
- Added support for installing XCode Command Line Tools on OSX (10.7, 10.8, 10.9)
- Created a DSL method for wrapping compile_time vs runtime execution
- Install additional developement tools on some platforms
- Add nicer log and warning messages with helpful information

**Potentially Breaking Changes**

- Dropped support for OSX 10.6
- OSX no longer downloads OSX GCC and uses XCode CLI tools instead
- `build_essential` -> `build-essential` in node attributes
- `compiletime` -> `compile_time` in node attributes
- Cookbook version 2.x no longer supports Chef 10.x

## v1.4.4 (2014-02-27)

- [COOK-4245] Wrong package name used for developer tools on OS X 10.9

## v1.4.2

### Bug

- **[COOK-3318](https://tickets.chef.io/browse/COOK-3318)** - Use Mixlib::ShellOut instead of Chef::ShellOut

### New Feature

- **[COOK-3093](https://tickets.chef.io/browse/COOK-3093)** - Add OmniOS support

### Improvement

- **[COOK-3024](https://tickets.chef.io/browse/COOK-3024)** - Use newer package on SmartOS

## v1.4.0

This version splits up the default recipe into recipes included based on the node's platform_family.

- [COOK-2505] - backport omnibus builder improvements

## v1.3.4

- [COOK-2272] - Complete `platform_family` conversion in build-essential

## v1.3.2

- [COOK-2069] - build-essential will install osx-gcc-installer when XCode is present

## v1.3.0

- [COOK-1895] - support smartos

## v1.2.0

- Add test-kitchen support (source repo only)
- [COOK-1677] - build-essential cookbook support for OpenSuse and SLES
- [COOK-1718] - build-essential cookbook metadata should include scientific
- [COOK-1768] - The apt-get update in build-essentials needs to be renamed

## v1.1.2

- [COOK-1620] - support OS X 10.8

## v1.1.0

- [COOK-1098] - support amazon linux
- [COOK-1149] - support Mac OS X
- [COOK-1296] - allow for compile-time installation of packages through an attribute (see README)

## v1.0.2

- [COOK-1098] - Add Amazon Linux platform support
- [COOK-1149] - Add OS X platform support
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-esud8w
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/CHANGELOG.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC052
~FC057
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/.foodcritic to tempfile /tmp/chef-rest20160913-19215-1jn3p7s
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/.foodcritic in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/README.md
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
def why_run_supported?
  true
end

def ohai_hint_path
  ::File.join(node['ohai']['hints_path'], "#{new_resource.name}.json")
end

def build_content
  # passing nil to file produces deprecation warnings so pass an empty string
  return '' if new_resource.content.nil? || new_resource.content.empty?
  JSON.pretty_generate(new_resource.content)
end

use_inline_resources

action :create do
  # don't create the file if the existing file was empty and so is the new one
  # this avoids bogus content updates on every chef run
  unless (@current_resource.content && @current_resource.content.empty?) && new_resource.content.nil?
    directory node['ohai']['hints_path'] do
      action :create
      recursive true
    end

    file ohai_hint_path do
      action :create
      content build_content
    end
  end
end

def load_current_resource
  @current_resource = Chef::Resource::OhaiHint.new(new_resource.name)
  if ::File.exist?(ohai_hint_path)
    Chef::Log.debug("Existing ohai hint at #{ohai_hint_path} found. Attempting to parse JSON")
    begin
      @current_resource.content(JSON.parse(::File.read(ohai_hint_path)))
    rescue JSON::ParserError
      @current_resource.content({})
      Chef::Log.debug("Could not parse JSON in ohai hint at #{ohai_hint_path}. It's probably an empty hint file")
    end
  end

  @current_resource
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/providers/hint.rb to tempfile /tmp/chef-rest20160913-19215-1vtteaw
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: build-essential
# Library:: xcode_command_line_tools
#
# Copyright 2014-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class Chef
  class Resource::XcodeCommandLineTools < Resource::LWRPBase
    def self.resource_name
      :xcode_command_line_tools
    end

    actions :install
    default_action :install

    def initialize(name, run_context = nil)
      super

      # => Break down SemVer
      major, minor, _patch = node['platform_version'].split('.').map { |v| String(v) }
      @provider = case [major, minor].join('.')
                  when '10.7', '10.8'
                    Provider::XcodeCommandLineToolsFromDmg
                  when '10.9', '10.10', '10.11'
                    Provider::XcodeCommandLineToolsFromSoftwareUpdate
                  else
                    Chef::Log.warn <<-EOH
OSX #{node['platform_version']} is not an officially supported platform for the
build-essential cookbook. I am going to try and install the command line tools
from Software Update, but there is a high probability that it will fail...

If you have tested and verified OSX #{node['platform_version']} and you are sick
of seeing this warning in your Chef Client runs, please submit a Pull Request to
https://github.com/chef-cookbooks/build-essential and add this version of OSX
to provider list.
EOH
                    Provider::XcodeCommandLineToolsFromSoftwareUpdate
                  end
    end
  end
end

#
# This is a legacy provider for installing OSX from DMGs. It only supports OSX
# versions 10.7 and 10.8 and will (hopefully) be deprecated in the future. It
# downloads a remote .dmg file, mounts it, installs it, and unmounts it
# automatically. In later versions of OSX, the operating system handles this for
# the end user.
#
class Chef
  class Provider::XcodeCommandLineToolsFromDmg < Provider::LWRPBase
    action(:install) do
      if installed?
        Chef::Log.debug("#{new_resource} already installed - skipping")
      else
        converge_by("Install #{new_resource}") do
          download
          attach
          install
          detach
        end
      end
    end

    private

    #
    # Determine if the XCode Command Line Tools are installed
    #
    # @return [true, false]
    #
    def installed?
      cmd = Mixlib::ShellOut.new('pkgutil --pkgs=com.apple.pkg.DeveloperToolsCLI')
      cmd.run_command
      cmd.error!
      true
    rescue Mixlib::ShellOut::ShellCommandFailed
      false
    end

    #
    # The path where the dmg should be cached on disk.
    #
    # @return [String]
    #
    def dmg_cache_path
      ::File.join(Chef::Config[:file_cache_path], 'osx-command-line-tools.dmg')
    end

    #
    # The path where the dmg should be downloaded from. This is intentionally
    # not a configurable object by the end user. If you do not like where we
    # are downloading XCode from - too bad.
    #
    # @return [String]
    #
    def dmg_remote_source
      case node['platform_version'].to_f
      when 10.7
        'http://devimages.apple.com/downloads/xcode/command_line_tools_for_xcode_os_x_lion_april_2013.dmg'
      when 10.8
        'http://devimages.apple.com/downloads/xcode/command_line_tools_for_xcode_os_x_mountain_lion_march_2014.dmg'
      else
        raise "Unknown DMG download URL for OSX #{node['platform_version']}"
      end
    end

    #
    # The path where the volume should be mounted.
    #
    # @return [String]
    #
    def mount_path
      ::File.join(Chef::Config[:file_cache_path], 'osx-command-line-tools')
    end

    #
    # Action: download the remote dmg.
    #
    # @return [void]
    #
    def download
      remote_file = Resource::RemoteFile.new(dmg_cache_path, run_context)
      remote_file.source(dmg_remote_source)
      remote_file.backup(false)
      remote_file.run_action(:create)
    end

    #
    # Action: attach the dmg (basically, double-click on it)
    #
    # @return [void]
    #
    def attach
      execute %(hdiutil attach "#{dmg_cache_path}" -mountpoint "#{mount_path}")
    end

    #
    # Action: install the package inside the dmg
    #
    # @return [void]
    #
    def install
      execute %|installer -package "$(find '#{mount_path}' -name *.mpkg)" -target "/"|
    end

    #
    # Action: detach the dmg (basically, drag it to eject on the dock)
    #
    # @return [void]
    #
    def detach
      execute %(hdiutil detach "#{mount_path}")
    end
  end
end

class Chef
  class Provider::XcodeCommandLineToolsFromSoftwareUpdate < Provider::LWRPBase
    action(:install) do
      if installed?
        Chef::Log.debug("#{new_resource} already installed - skipping")
      else
        converge_by("Install #{new_resource}") do
          # This script was graciously borrowed and modified from Tim Sutton's
          # osx-vm-templates at https://github.com/timsutton/osx-vm-templates/blob/b001475df54a9808d3d56d06e71b8fa3001fff42/scripts/xcode-cli-tools.sh
          execute 'install XCode Command Line tools' do
            command <<-EOH.gsub(/^ {14}/, '')
              # create the placeholder file that's checked by CLI updates' .dist code
              # in Apple's SUS catalog
              touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
              # find the CLI Tools update
              PROD=$(softwareupdate -l | grep "\*.*Command Line" | head -n 1 | awk -F"*" '{print $2}' | sed -e 's/^ *//' | tr -d '\n')
              # install it
              softwareupdate -i "$PROD" -v
            EOH
            # rubocop:enable Metrics/LineLength
          end
        end
      end
    end

    private

    #
    # Determine if the XCode Command Line Tools are installed
    #
    # @return [true, false]
    #
    def installed?
      cmd = Mixlib::ShellOut.new('pkgutil --pkgs=com.apple.pkg.CLTools_Executables')
      cmd.run_command
      cmd.error!
      true
    rescue Mixlib::ShellOut::ShellCommandFailed
      false
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/xcode_command_line_tools.rb to tempfile /tmp/chef-rest20160913-19215-gg3fzg
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/recipes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/README.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/libraries/matchers.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/files/default/plugins/README
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/build-essential/libraries/xcode_command_line_tools.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/providers/hint.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/providers
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/MAINTAINERS.md
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/attributes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f62428
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f624f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "README.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# ohai Cookbook
[![Build Status](https://travis-ci.org/chef-cookbooks/ohai.svg?branch=master)](https://travis-ci.org/chef-cookbooks/ohai) [![Cookbook Version](https://img.shields.io/cookbook/v/ohai.svg)](https://supermarket.chef.io/cookbooks/ohai)

Creates a configured plugin path for distributing custom Ohai plugins, and reloads them via Ohai within the context of a Chef Client run during the compile phase (if needed).

## Requirements
### Platforms
- Debian/Ubuntu
- RHEL/CentOS/Scientific/Amazon/Oracle
- FreeBSD
- Windows

### Chef
- Chef 11+

### Cookbooks
- none

## Attributes
- `node['ohai']['plugin_path']` - location to drop off plugins directory, default is `/etc/chef/ohai_plugins`. This is not FHS-compliant, an FHS location would be something like `/var/lib/ohai/plugins`, or `/var/lib/chef/ohai_plugins` or similar.

    Neither an FHS location or the default value of this attribute are in the default Ohai plugin path. Set the Ohai plugin path with the config setting "`Ohai::Config[:plugin_path]`" in the Chef config file (the `chef-client::config` recipe does this automatically for you!). The attribute is not set to the default plugin path that Ohai ships with because we don't want to risk destroying existing essential plugins for Ohai.

- `node['ohai']['plugins']` - sources of plugins, defaults to the `files/default/plugins` directory of this cookbook. You can add additional cookbooks by adding the name of the cookbook as a key and the path of the files directory as the value. You have to make sure that you don't have any file conflicts between multiple cookbooks. The last one to write wins.
- `node['ohai']['hints_path']` - location to drop off hints directory, default is `/etc/chef/ohai/hints`.

## Usage
Put the recipe `ohai` at the start of the node's run list to make sure that custom plugins are loaded early on in the Chef run and data is available for later recipes.

The execution of the custom plugins occurs within the recipe during the compile phase, so you can write new plugins and use the data they return in your Chef recipes.

For information on how to write custom plugins for Ohai, please see the Chef wiki pages.

[http://wiki.chef.io/display/chef/Writing+Ohai+Plugins](http://wiki.chef.io/display/chef/Writing+Ohai+Plugins)

_PLEASE NOTE_ - This recipe reloads the Ohai plugins a 2nd time during the Chef run if:
- The "`Ohai::Config[:plugin_path]`" config setting has _NOT_ been properly set in the Chef config file
- The "`Ohai::Config[:plugin_path]`" config setting has been properly set in the Chef config file and there are updated plugins dropped off at "`node['ohai']['plugin_path']`".

## LWRP
### `ohai_hint`
Create hints file.  You can find usage examples at `test/cookbooks/ohai_test/recipes/*.rb`.

#### Resource Attributes
- `hint_name` - The name of hints file and key. Should be string, default is name of resource.
- `content` - Values of hints. It will be used as automatic attributes. Should be Hash, default is empty Hash class.

#### ChefSpec Matchers
You can check for the creation or deletion of ohai hints with chefspec using these custom matches:
- create_ohai_hint
- delete_ohai_hint

## Example
For an example implementation, inspect the ohai_plugin.rb recipe in the nginx community cookbook.

## License & Authors
**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2011-2016, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/README.md to tempfile /tmp/chef-rest20160913-19215-m2by3m
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
actions :create, :delete
default_action :create

attribute :hint_name, kind_of: String, name_attribute: true
attribute :content, kind_of: Hash
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/hint.rb to tempfile /tmp/chef-rest20160913-19215-11x7f3y
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/README.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/CONTRIBUTING.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/resources/hint.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/resources
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000e76f30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000e77390>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f9eb58
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/files/default/plugins/README",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f9ee78>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "files",
   "default",
   "plugins",
   "README"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
This directory contains custom plugins for Ohai.
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/files/default/plugins/README to tempfile /tmp/chef-rest20160913-19215-189wxgr
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f84370
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f84488>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b48778
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b48868>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000f5cee0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000f5d368>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/files/default/plugins/README in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/files
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/files/default
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/recipes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/files/default/plugins
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/libraries/resource_runit_service.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003edd930
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003edda20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# encoding: utf-8

if defined?(ChefSpec)
  if ChefSpec.respond_to?(:define_matcher)
    # ChefSpec >= 4.1
    ChefSpec.define_matcher(:ohai_hint)
  elsif defined?(ChefSpec::Runner) &&
        ChefSpec::Runner.respond_to?(:define_runner_method)
    # ChefSpec < 4.1
    ChefSpec::Runner.define_runner_method(:ohai_hint)
  end

  def create_ohai_hint(resource)
    ChefSpec::Matchers::ResourceMatcher.new(:ohai_hint, :create, resource)
  end

  def delete_ohai_hint(resource)
    ChefSpec::Matchers::ResourceMatcher.new(:ohai_hint, :delete, resource)
  end

end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-1p6k88g
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/libraries/matchers.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/libraries
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/metadata.json
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/CHANGELOG.md
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: ohai
# Attribute:: default
#
# Copyright 2010-2016, Chef Software, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# FHS location would be /var/lib/chef/ohai_plugins or similar.
case node['platform_family']
when 'windows'
  default['ohai']['plugin_path'] = "#{ENV['systemdrive']}/chef/ohai_plugins"
  default['ohai']['hints_path'] = "#{ENV['systemdrive']}/chef/ohai/hints"
else
  default['ohai']['plugin_path'] = '/etc/chef/ohai_plugins'
  default['ohai']['hints_path'] = '/etc/chef/ohai/hints'
end

# The list of plugins and their respective file locations
default['ohai']['plugins']['ohai'] = 'plugins'
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-1n9l8zg
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/attributes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/attributes
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003dc8838
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003dc8928>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Sean OMeara](https://github.com/someara)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-rezszy
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: ohai
# Recipe:: default
#
# Copyright 2011-2016, Chef Software, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

reload_ohai = false
# Add plugin_path from node attributes if missing, and ensure a reload of
# ohai in that case
unless Ohai::Config[:plugin_path].include?(node['ohai']['plugin_path'])
  Ohai::Config[:plugin_path] = [node['ohai']['plugin_path'], Ohai::Config[:plugin_path]].flatten.compact
  reload_ohai ||= true
end
Chef::Log.info("ohai plugins will be at: #{node['ohai']['plugin_path']}")

# This is done during the compile phase so new plugins can be used in
# resources later in the run.
node['ohai']['plugins'].each_pair do |source_cookbook, path|
  rd = remote_directory "#{node['ohai']['plugin_path']} for cookbook #{source_cookbook}" do
    path node['ohai']['plugin_path']
    cookbook source_cookbook
    source path
    mode '0755' unless platform_family?('windows')
    recursive true
    purge false
    action :nothing
  end

  rd.run_action(:create)
  reload_ohai ||= rd.updated?
end

resource = ohai 'custom_plugins' do
  action :nothing
end

# Reload ohai if the client's plugin_path did not contain
# node['ohai']['plugin_path'], or new plugins were loaded
resource.run_action(:reload) if reload_ohai
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-sc8mut
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/recipes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/recipes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/MAINTAINERS.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/libraries/helpers.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d877c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/runit/libraries/resource_runit_service.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d879c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "libraries",
   "resource_runit_service.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003cfaa28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003cfab68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "metadata.json"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/libraries/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e76780
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e76870>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "CHANGELOG.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: runit
# Recipe:: default
#
# Copyright 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

service 'runit' do
  action :nothing
end

execute 'start-runsvdir' do
  command '/etc/init.d/runit-start start'
  action :nothing
end

case node['platform_family']
when 'rhel', 'fedora'

  # add the necessary repos unless prefer_local_yum is set
  unless node['runit']['prefer_local_yum']
    include_recipe 'yum-epel' if node['platform_version'].to_i < 7

    packagecloud_repo 'imeyer/runit'
  end

  package 'runit'

  service 'runsvdir-start' do
    action [:start, :enable]
    only_if { node['platform_version'].to_i == 7 }
  end

when 'debian', 'gentoo'

  if platform?('gentoo')
    template '/etc/init.d/runit-start' do
      source 'runit-start.sh.erb'
      mode '0755'
    end

    service 'runit-start' do
      action :nothing
    end
  end

  package 'runit' do
    action :install
    response_file 'runit.seed' if platform?('ubuntu', 'debian')
    notifies :run, 'execute[start-runsvdir]', :immediately if platform?('gentoo')
    notifies :enable, 'service[runit-start]' if platform?('gentoo')
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-11p3lrq
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/libraries/provider_runit_service.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/recipes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/recipes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/libraries/matchers.rb
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-8el7s9
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/attributes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003b5a5d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/libraries/helpers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003b5a830>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "libraries",
   "helpers.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: runit
# Libraries:: helpers
#
# Author: Joshua Timberman <joshua@chef.io>
# Author: Sean OMeara <sean@chef.io>
# Copyright 2008-2015, Chef Software, Inc. <legal@chef.io>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

module RunitCookbook
  module Helpers
    # include Chef::Mixin::ShellOut if it is not already included in the calling class
    def self.included(klass)
      unless klass.ancestors.include?(Chef::Mixin::ShellOut)
        klass.class_eval { include Chef::Mixin::ShellOut }
      end
    end

    # Default settings for resource properties.
    def parsed_sv_bin
      return new_resource.sv_bin if new_resource.sv_bin
      '/usr/bin/sv'
    end

    def parsed_sv_dir
      return new_resource.sv_dir if new_resource.sv_dir
      '/etc/sv'
    end

    def parsed_service_dir
      return new_resource.service_dir if new_resource.service_dir
      '/etc/service'
    end

    def parsed_lsb_init_dir
      return new_resource.lsb_init_dir if new_resource.lsb_init_dir
      '/etc/init.d'
    end

    def down_file
      "#{sv_dir_name}/down"
    end

    def env_dir
      "#{sv_dir_name}/env"
    end

    def extra_env_files?
      files = []
      Dir.glob("#{sv_dir_name}/env/*").each do |f|
        files << File.basename(f)
      end
      return true if files.sort != new_resource.env.keys.sort
      false
    end

    def zap_extra_env_files
      Dir.glob("#{sv_dir_name}/env/*").each do |f|
        unless new_resource.env.key?(File.basename(f))
          File.unlink(f)
          Chef::Log.info("removing file #{f}")
        end
      end
    end

    def wait_for_service
      sleep 1 until ::FileTest.pipe?("#{service_dir_name}/supervise/ok")

      if new_resource.log
        sleep 1 until ::FileTest.pipe?("#{service_dir_name}/log/supervise/ok")
      end
    end

    def runit_sv_works?
      sv = shell_out("#{sv_bin} --help")
      sv.exitstatus == 100 && sv.stderr =~ /usage: sv .* command service/
    end

    def runit_send_signal(signal, friendly_name = nil)
      friendly_name ||= signal
      converge_by("send #{friendly_name} to #{new_resource}") do
        shell_out!("#{sv_bin} #{sv_args}#{signal} #{service_dir_name}")
        Chef::Log.info("#{new_resource} sent #{friendly_name}")
      end
    end

    def running?
      cmd = shell_out("#{sv_bin} #{sv_args}status #{service_dir_name}")
      (cmd.stdout =~ /^run:/ && cmd.exitstatus == 0)
    end

    def log_running?
      cmd = shell_out("#{sv_bin} #{sv_args}status #{service_dir_name}/log")
      (cmd.stdout =~ /^run:/ && cmd.exitstatus == 0)
    end

    def enabled?
      ::File.exist?("#{service_dir_name}/run")
    end

    def log_service_name
      "#{new_resource.service_name}/log"
    end

    def sv_dir_name
      "#{parsed_sv_dir}/#{new_resource.service_name}"
    end

    def sv_args
      sv_args = ''
      sv_args += "-w '#{new_resource.sv_timeout}' " unless new_resource.sv_timeout.nil?
      sv_args += '-v ' if new_resource.sv_verbose
      sv_args
    end

    def sv_bin
      parsed_sv_bin
    end

    def service_dir_name
      "#{new_resource.service_dir}/#{new_resource.service_name}"
    end

    def log_dir_name
      "#{new_resource.service_dir}/#{new_resource.service_name}/log"
    end

    def template_cookbook
      new_resource.cookbook.nil? ? new_resource.cookbook_name.to_s : new_resource.cookbook
    end

    def default_logger_content
      <<-EOS
#!/bin/sh
exec svlogd -tt #{new_resource.log_dir}
      EOS
    end

    def disable_service
      shell_out("#{new_resource.sv_bin} #{sv_args}down #{service_dir_name}")
      FileUtils.rm(service_dir_name)

      # per the documentation, a service should be removed from supervision
      # within 5 seconds of removing the service dir symlink, so we'll sleep for 6.
      # otherwise, runit recreates the 'ok' named pipe too quickly
      sleep(6)
      # runit will recreate the supervise directory and
      # pipes when the service is reenabled
      FileUtils.rm("#{sv_dir_name}/supervise/ok")
    end

    def start_service
      shell_out!("#{new_resource.sv_bin} #{sv_args}start #{service_dir_name}")
    end

    def stop_service
      shell_out!("#{new_resource.sv_bin} #{sv_args}stop #{service_dir_name}")
    end

    def restart_service
      shell_out!("#{new_resource.sv_bin} #{sv_args}restart #{service_dir_name}")
    end

    def restart_log_service
      shell_out!("#{new_resource.sv_bin} #{sv_args}restart #{service_dir_name}/log")
    end

    def reload_service
      shell_out!("#{new_resource.sv_bin} #{sv_args}force-reload #{service_dir_name}")
    end

    def reload_log_service
      if log_running?
        shell_out!("#{new_resource.sv_bin} #{sv_args}force-reload #{service_dir_name}/log")
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# ohai Cookbook CHANGELOG
This file is used to list changes made in each version of the ohai cookbook.

## v2.1.0 (2016-01-26)
- Properly handle creating ohai hints without specifying the content. Previously if the content wasn't specified a deprecation notice would be thrown and the file would not be created
- Simplified the test suite and added inspec tests to ensure hints are created, especially if the content is not specified
- Added FreeBSD and Windows as supported platform in the metadata and add them to the Test Kitchen config
- Add Test Kitchen integration tests to Travis CI
- Updated testing Gems to the latest releases in the Gemfile

## v2.0.4 (2015-10-30)
- Resolved deprecation warnings with the Chefspec matchers

## v2.0.3 (2015-10-21)
- Validate the hints before loading them to avoid failures
- Added supported platforms to the metadata
- Updated .gitignore file
- Updated Test Kitchen config for the latest platforms
- Added Chef standard Rubocop config
- Added Travis CI testing
- Added Berksfile
- Updated contributing and testing docs
- Added maintainers.md and maintainers.toml files
- Added Travis and cookbook version badges to the readme
- Expanded the requirements section in the readme and clarify the minimum supported Chef release is 11
- Updated Opscode -> Chef Software
- Added a Rakefile for simplified testing
- Added a Chefignore file
- Resolved Rubocop warnings
- Added source_url and issues_url to the metadata
- Added Chefspec matchers
- Added basic convergence Chefspec test

## v2.0.1 (2014-06-07)
- [COOK-4683] Remove warnings about reopening resource

Please note, this changes the name of a remote_directory resource. It is not expected that anyone would be explicitly notifying this resource but, please review [PR #16](https://github.com/chef-cookbooks/ohai/pull/16/files) for more info.

## v2.0.0 (2014-02-25)
'[COOK-3865] - create lwrp ohai_hint'

## v1.1.12
- Dummy release due to a Community Site upload failure

## v1.1.10
### Bug
- **[COOK-3091](https://tickets.chef.io/browse/COOK-3091)** - Fix checking `Chef::Config[:config_file]`

## v1.1.8
- [COOK-1918] - Ohai cookbook to distribute plugins fails on windows
- [COOK-2096] - Ohai cookbook sets unix-only default path attribute

## v1.1.6
- [COOK-2057] - distribution from another cookbok fails if ohai attributes are loaded after the other cookbook

## v1.1.4
- [COOK-1128] - readme update, Replace reference to deprecated chef cookbook with one to chef-client

## v1.1.2
- [COOK-1424] - prevent plugin_path growth to infinity

## v1.1.0
- [COOK-1174] - custom_plugins is only conditionally available
- [COOK-1383] - allow plugins from other cookbooks

## v1.0.2
- [COOK-463] ohai cookbook default recipe should only reload plugins if there were updates
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/helpers.rb to tempfile /tmp/chef-rest20160913-19215-1lt9qrm
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-xy1ijj
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ac4588
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/libraries/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ac4678>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "libraries",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/CHANGELOG.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: runit
# Provider:: service
#
# Copyright 2011, Joshua Timberman
# Copyright 2011, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'chef/resource'
require 'chef/resource/service'

class Chef
  class Resource
    # Missing top-level class documentation comment
    class RunitService < Chef::Resource::Service
      def initialize(name, run_context = nil)
        super
        runit_node = runit_attributes_from_node(run_context)
        @resource_name = :runit_service
        @provider = Chef::Provider::RunitService
        @supports = { restart: true, reload: true, status: true }
        @action = :enable
        @allowed_actions = [:nothing, :start, :stop, :enable, :disable, :restart, :reload, :status, :once, :hup, :cont, :term, :kill, :up, :down, :usr1, :usr2, :create]

        # sv_bin, sv_dir, service_dir and lsb_init_dir may have been set in the
        # node attributes
        @sv_bin = runit_node[:sv_bin] || '/usr/bin/sv'
        @sv_dir = runit_node[:sv_dir] || '/etc/sv'
        @service_dir = runit_node[:service_dir] || '/etc/service'
        @lsb_init_dir = runit_node[:lsb_init_dir] || '/etc/init.d'

        @control = []
        @options = {}
        @env = {}
        @log = true
        @cookbook = nil
        @check = false
        @start_down = false
        @delete_downfile = false
        @finish = false
        @supervisor_owner = nil
        @supervisor_group = nil
        @owner = nil
        @group = nil
        @enabled = false
        @running = false
        @default_logger = false
        @restart_on_update = true
        @run_template_name = @service_name
        @log_template_name = @service_name
        @check_script_template_name = @service_name
        @finish_script_template_name = @service_name
        @control_template_names = {}
        @status_command = "#{@sv_bin} status #{@service_dir}"
        @sv_templates = true
        @sv_timeout = nil
        @sv_verbose = false
        @log_dir = ::File.join('/var/log/', @service_name)
        @log_size = nil
        @log_num = nil
        @log_min = nil
        @log_timeout = nil
        @log_processor = nil
        @log_socket = nil
        @log_prefix = nil
        @log_config_append = nil

        #
        # Backward Compat Hack
        #
        # This ensures a 'service' resource exists for all 'runit_service' resources.
        # This should allow all recipes using the previous 'runit_service' definition to
        # continue operating.
        #
        unless run_context.nil?
          service_dir_name = ::File.join(@service_dir, @name)
          @service_mirror = Chef::Resource::Service.new(name, run_context)
          @service_mirror.provider(Chef::Provider::Service::Simple)
          @service_mirror.supports(@supports)
          @service_mirror.start_command("#{@sv_bin} start #{service_dir_name}")
          @service_mirror.stop_command("#{@sv_bin} stop #{service_dir_name}")
          @service_mirror.restart_command("#{@sv_bin} restart #{service_dir_name}")
          @service_mirror.status_command("#{@sv_bin} status #{service_dir_name}")
          @service_mirror.action(:nothing)
          run_context.resource_collection.insert(@service_mirror)
        end
      end

      def sv_bin(arg = nil)
        set_or_return(:sv_bin, arg, kind_of: [String])
      end

      def sv_dir(arg = nil)
        set_or_return(:sv_dir, arg, kind_of: [String, FalseClass])
      end

      def sv_timeout(arg = nil)
        set_or_return(:sv_timeout, arg, kind_of: [Fixnum])
      end

      def sv_verbose(arg = nil)
        set_or_return(:sv_verbose, arg, kind_of: [TrueClass, FalseClass])
      end

      def service_dir(arg = nil)
        set_or_return(:service_dir, arg, kind_of: [String])
      end

      def lsb_init_dir(arg = nil)
        set_or_return(:lsb_init_dir, arg, kind_of: [String])
      end

      def control(arg = nil)
        set_or_return(:control, arg, kind_of: [Array])
      end

      def options(arg = nil)
        default_opts = @env.empty? ? @options : @options.merge(env_dir: ::File.join(@sv_dir, @service_name, 'env'))

        merged_opts = arg.respond_to?(:merge) ? default_opts.merge(arg) : default_opts

        set_or_return(
          :options,
          merged_opts,
          kind_of: [Hash],
          default: default_opts
        )
      end

      def env(arg = nil)
        set_or_return(:env, arg, kind_of: [Hash])
      end

      ## set log to current instance value if nothing is passed.
      def log(arg = @log)
        set_or_return(:log, arg, kind_of: [TrueClass, FalseClass])
      end

      def cookbook(arg = nil)
        set_or_return(:cookbook, arg, kind_of: [String])
      end

      def finish(arg = nil)
        set_or_return(:finish, arg, kind_of: [TrueClass, FalseClass])
      end

      def check(arg = nil)
        set_or_return(:check, arg, kind_of: [TrueClass, FalseClass])
      end

      def start_down(arg = nil)
        set_or_return(:start_down, arg, kind_of: [TrueClass, FalseClass])
      end

      def delete_downfile(arg = nil)
        set_or_return(:delete_downfile, arg, kind_of: [TrueClass, FalseClass])
      end

      def supervisor_owner(arg = nil)
        set_or_return(:supervisor_owner, arg, regex: [Chef::Config[:user_valid_regex]])
      end

      def supervisor_group(arg = nil)
        set_or_return(:supervisor_group, arg, regex: [Chef::Config[:group_valid_regex]])
      end

      def owner(arg = nil)
        set_or_return(:owner, arg, regex: [Chef::Config[:user_valid_regex]])
      end

      def group(arg = nil)
        set_or_return(:group, arg, regex: [Chef::Config[:group_valid_regex]])
      end

      def default_logger(arg = nil)
        set_or_return(:default_logger, arg, kind_of: [TrueClass, FalseClass])
      end

      def restart_on_update(arg = nil)
        set_or_return(:restart_on_update, arg, kind_of: [TrueClass, FalseClass])
      end

      def run_template_name(arg = nil)
        set_or_return(:run_template_name, arg, kind_of: [String])
      end
      alias template_name run_template_name

      def log_template_name(arg = nil)
        set_or_return(:log_template_name, arg, kind_of: [String])
      end

      def check_script_template_name(arg = nil)
        set_or_return(:check_script_template_name, arg, kind_of: [String])
      end

      def finish_script_template_name(arg = nil)
        set_or_return(:finish_script_template_name, arg, kind_of: [String])
      end

      def control_template_names(arg = nil)
        set_or_return(
          :control_template_names,
          arg,
          kind_of: [Hash],
          default: set_control_template_names
        )
      end

      def set_control_template_names
        @control.each do |signal|
          @control_template_names[signal] ||= @service_name
        end
        @control_template_names
      end

      def sv_templates(arg = nil)
        set_or_return(:sv_templates, arg, kind_of: [TrueClass, FalseClass])
      end

      def log_dir(arg = nil)
        set_or_return(:log_dir, arg, kind_of: [String])
      end

      def log_size(arg = nil)
        set_or_return(:log_size, arg, kind_of: [Integer])
      end

      def log_num(arg = nil)
        set_or_return(:log_num, arg, kind_of: [Integer])
      end

      def log_min(arg = nil)
        set_or_return(:log_min, arg, kind_of: [Integer])
      end

      def log_timeout(arg = nil)
        set_or_return(:log_timeout, arg, kind_of: [Integer])
      end

      def log_processor(arg = nil)
        set_or_return(:log_processor, arg, kind_of: [String])
      end

      def log_socket(arg = nil)
        set_or_return(:log_socket, arg, kind_of: [String, Hash])
      end

      def log_prefix(arg = nil)
        set_or_return(:log_prefix, arg, kind_of: [String])
      end

      def log_config_append(arg = nil)
        set_or_return(:log_config_append, arg, kind_of: [String])
      end

      def runit_attributes_from_node(run_context)
        if run_context && run_context.node && run_context.node[:runit]
          run_context.node[:runit]
        else
          {}
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/resource_runit_service.rb to tempfile /tmp/chef-rest20160913-19215-129ynl
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/libraries/resource_runit_service.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/libraries
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a0b2b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/runit/libraries/provider_runit_service.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a0b380>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "libraries",
   "provider_runit_service.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/files/default/runit.seed
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038bc1a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/files/default/runit.seed",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038bc2b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "files",
   "default",
   "runit.seed"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039c5588
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039c5678>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/templates/default/log-config.erb
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"ohai","version":"2.1.0","description":"Distributes a directory of custom ohai plugins","long_description":"# ohai Cookbook\n[![Build Status](https://travis-ci.org/chef-cookbooks/ohai.svg?branch=master)](https://travis-ci.org/chef-cookbooks/ohai) [![Cookbook Version](https://img.shields.io/cookbook/v/ohai.svg)](https://supermarket.chef.io/cookbooks/ohai)\n\nCreates a configured plugin path for distributing custom Ohai plugins, and reloads them via Ohai within the context of a Chef Client run during the compile phase (if needed).\n\n## Requirements\n### Platforms\n- Debian/Ubuntu\n- RHEL/CentOS/Scientific/Amazon/Oracle\n- FreeBSD\n- Windows\n\n### Chef\n- Chef 11+\n\n### Cookbooks\n- none\n\n## Attributes\n- `node['ohai']['plugin_path']` - location to drop off plugins directory, default is `/etc/chef/ohai_plugins`. This is not FHS-compliant, an FHS location would be something like `/var/lib/ohai/plugins`, or `/var/lib/chef/ohai_plugins` or similar.\n\n    Neither an FHS location or the default value of this attribute are in the default Ohai plugin path. Set the Ohai plugin path with the config setting \"`Ohai::Config[:plugin_path]`\" in the Chef config file (the `chef-client::config` recipe does this automatically for you!). The attribute is not set to the default plugin path that Ohai ships with because we don't want to risk destroying existing essential plugins for Ohai.\n\n- `node['ohai']['plugins']` - sources of plugins, defaults to the `files/default/plugins` directory of this cookbook. You can add additional cookbooks by adding the name of the cookbook as a key and the path of the files directory as the value. You have to make sure that you don't have any file conflicts between multiple cookbooks. The last one to write wins.\n- `node['ohai']['hints_path']` - location to drop off hints directory, default is `/etc/chef/ohai/hints`.\n\n## Usage\nPut the recipe `ohai` at the start of the node's run list to make sure that custom plugins are loaded early on in the Chef run and data is available for later recipes.\n\nThe execution of the custom plugins occurs within the recipe during the compile phase, so you can write new plugins and use the data they return in your Chef recipes.\n\nFor information on how to write custom plugins for Ohai, please see the Chef wiki pages.\n\n[http://wiki.chef.io/display/chef/Writing+Ohai+Plugins](http://wiki.chef.io/display/chef/Writing+Ohai+Plugins)\n\n_PLEASE NOTE_ - This recipe reloads the Ohai plugins a 2nd time during the Chef run if:\n- The \"`Ohai::Config[:plugin_path]`\" config setting has _NOT_ been properly set in the Chef config file\n- The \"`Ohai::Config[:plugin_path]`\" config setting has been properly set in the Chef config file and there are updated plugins dropped off at \"`node['ohai']['plugin_path']`\".\n\n## LWRP\n### `ohai_hint`\nCreate hints file.  You can find usage examples at `test/cookbooks/ohai_test/recipes/*.rb`.\n\n#### Resource Attributes\n- `hint_name` - The name of hints file and key. Should be string, default is name of resource.\n- `content` - Values of hints. It will be used as automatic attributes. Should be Hash, default is empty Hash class.\n\n#### ChefSpec Matchers\nYou can check for the creation or deletion of ohai hints with chefspec using these custom matches:\n- create_ohai_hint\n- delete_ohai_hint\n\n## Example\nFor an example implementation, inspect the ohai_plugin.rb recipe in the nginx community cookbook.\n\n## License & Authors\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2011-2016, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0","centos":">= 0.0.0","redhat":">= 0.0.0","amazon":">= 0.0.0","scientific":">= 0.0.0","fedora":">= 0.0.0","oracle":">= 0.0.0","freebsd":">= 0.0.0","windows":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"ohai::default":"Distributes a directory of custom ohai plugins"}}
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/metadata.json to tempfile /tmp/chef-rest20160913-19215-1efnkxp
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/ohai/metadata.json in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/templates/gentoo/runit-start.sh.erb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---

--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/default.rb to tempfile /tmp/chef-rest20160913-19215-1wm9cdj
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039de628
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039de790>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/libraries/helpers.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
runit   runit/signalinit        boolean true
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: runit
# Provider:: service
#
# Author:: Joshua Timberman <jtimberman@chef.io>
# Author:: Sean OMeara <sean@chef.io>
# Copyright 2011-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class Chef
  class Provider
    class RunitService < Chef::Provider::LWRPBase
      unless defined?(VALID_SIGNALS)
        # Mapping of valid signals with optional friendly name
        VALID_SIGNALS = Mash.new(
          :down => nil,
          :hup => nil,
          :int => nil,
          :term => nil,
          :kill => nil,
          :quit => nil,
          :up => nil,
          :once => nil,
          :cont => nil,
          1 => :usr1,
          2 => :usr2
        )
      end

      use_inline_resources if defined?(use_inline_resources)

      def whyrun_supported?
        true
      end

      # Mix in helpers from libraries/helpers.rb
      include RunitCookbook::Helpers

      # actions
      action :create do
        ruby_block 'restart_service' do
          block do
            action_enable
            restart_service
          end
          action :nothing
          only_if { new_resource.restart_on_update && !new_resource.start_down }
        end

        ruby_block 'restart_log_service' do
          block do
            action_enable
            restart_log_service
          end
          action :nothing
          only_if { new_resource.restart_on_update && !new_resource.start_down }
        end

        # sv_templates
        if new_resource.sv_templates

          directory sv_dir_name do
            owner new_resource.owner unless new_resource.owner.nil?
            group new_resource.group unless new_resource.group.nil?
            mode '0755'
            recursive true
            action :create
          end

          template "#{sv_dir_name}/run" do
            owner new_resource.owner unless new_resource.owner.nil?
            group new_resource.group unless new_resource.group.nil?
            source "sv-#{new_resource.run_template_name}-run.erb"
            cookbook template_cookbook
            mode '0755'
            variables(options: new_resource.options)
            action :create
            notifies :run, 'ruby_block[restart_service]', :delayed
          end

          # log stuff
          if new_resource.log
            directory "#{sv_dir_name}/log" do
              owner new_resource.owner unless new_resource.owner.nil?
              group new_resource.group unless new_resource.group.nil?
              recursive true
              action :create
            end

            directory "#{sv_dir_name}/log/main" do
              owner new_resource.owner unless new_resource.owner.nil?
              group new_resource.group unless new_resource.group.nil?
              mode '0755'
              recursive true
              action :create
            end

            directory new_resource.log_dir do
              owner new_resource.owner unless new_resource.owner.nil?
              group new_resource.group unless new_resource.group.nil?
              mode '00755'
              recursive true
              action :create
            end

            template "#{sv_dir_name}/log/config" do
              owner new_resource.owner unless new_resource.owner.nil?
              group new_resource.group unless new_resource.group.nil?
              mode '00644'
              cookbook 'runit'
              source 'log-config.erb'
              variables(config: new_resource)
              notifies :run, 'ruby_block[restart_log_service]', :delayed
              action :create
            end

            link "#{new_resource.log_dir}/config" do
              to "#{sv_dir_name}/log/config"
            end

            if new_resource.default_logger
              file "#{sv_dir_name}/log/run" do
                content default_logger_content
                owner new_resource.owner unless new_resource.owner.nil?
                group new_resource.group unless new_resource.group.nil?
                mode '00755'
                action :create
                notifies :run, 'ruby_block[restart_log_service]', :delayed
              end
            else
              template "#{sv_dir_name}/log/run" do
                owner new_resource.owner unless new_resource.owner.nil?
                group new_resource.group unless new_resource.group.nil?
                mode '00755'
                source "sv-#{new_resource.log_template_name}-log-run.erb"
                cookbook template_cookbook
                variables(options: new_resource.options)
                action :create
                notifies :run, 'ruby_block[restart_log_service]', :delayed
              end
            end

          end

          # environment stuff
          directory "#{sv_dir_name}/env" do
            owner new_resource.owner unless new_resource.owner.nil?
            group new_resource.group unless new_resource.group.nil?
            mode '00755'
            action :create
          end

          new_resource.env.map do |var, value|
            file "#{sv_dir_name}/env/#{var}" do
              owner new_resource.owner unless new_resource.owner.nil?
              group new_resource.group unless new_resource.group.nil?
              content value
              sensitive true if Chef::Resource.instance_methods(false).include?(:sensitive)
              mode 00640
              action :create
            end
          end

          ruby_block "zap extra env files for #{new_resource.name} service" do
            block { zap_extra_env_files }
            only_if { extra_env_files? }
            not_if { new_resource.env.empty? }
            action :run
          end

          template "#{sv_dir_name}/check" do
            owner new_resource.owner unless new_resource.owner.nil?
            group new_resource.group unless new_resource.group.nil?
            mode '00755'
            cookbook template_cookbook
            source "sv-#{new_resource.check_script_template_name}-check.erb"
            variables(options: new_resource.options)
            action :create
            only_if { new_resource.check }
          end

          template "#{sv_dir_name}/finish" do
            owner new_resource.owner unless new_resource.owner.nil?
            group new_resource.group unless new_resource.group.nil?
            mode '00755'
            source "sv-#{new_resource.finish_script_template_name}-finish.erb"
            cookbook template_cookbook
            variables(options: new_resource.options) if new_resource.options.respond_to?(:has_key?)
            action :create
            only_if { new_resource.finish }
          end

          directory "#{sv_dir_name}/control" do
            owner new_resource.owner unless new_resource.owner.nil?
            group new_resource.group unless new_resource.group.nil?
            mode '00755'
            action :create
          end

          new_resource.control.map do |signal|
            template "#{sv_dir_name}/control/#{signal}" do
              owner new_resource.owner unless new_resource.owner.nil?
              group new_resource.group unless new_resource.group.nil?
              mode '0755'
              source "sv-#{new_resource.control_template_names[signal]}-#{signal}.erb"
              cookbook template_cookbook
              variables(options: new_resource.options)
              action :create
            end
          end

          # lsb_init
          if node['platform'] == 'debian'
            ruby_block "unlink #{parsed_lsb_init_dir}/#{new_resource.service_name}" do
              block { ::File.unlink("#{parsed_lsb_init_dir}/#{new_resource.service_name}") }
              only_if { ::File.symlink?("#{parsed_lsb_init_dir}/#{new_resource.service_name}") }
            end

            template "#{parsed_lsb_init_dir}/#{new_resource.service_name}" do
              owner 'root'
              group 'root'
              mode '00755'
              cookbook 'runit'
              source 'init.d.erb'
              variables(
                name: new_resource.service_name,
                sv_bin: new_resource.sv_bin,
                sv_args: sv_args,
                init_dir: ::File.join(parsed_lsb_init_dir, '')
              )
              action :create
            end
          else
            link "#{parsed_lsb_init_dir}/#{new_resource.service_name}" do
              to sv_bin
              action :create
            end
          end

          # Create/Delete service down file
          # To prevent unexpected behavior, require users to explicitly set
          # delete_downfile to remove any down file that may already exist
          df_action = :nothing
          if new_resource.start_down
            df_action = :create
          elsif new_resource.delete_downfile
            df_action = :delete
          end

          file down_file do
            mode 00644
            backup false
            content '# File created and managed by chef!'
            action df_action
          end
        end
      end

      action :disable do
        ruby_block "disable #{new_resource.service_name}" do
          block { disable_service }
          only_if { enabled? }
        end
      end

      action :enable do
        # FIXME: remove action_create in next major version
        action_create

        directory new_resource.service_dir

        link service_dir_name.to_s do
          to sv_dir_name
          action :create
        end

        ruby_block "wait for #{new_resource.service_name} service socket" do
          block do
            wait_for_service
          end
          action :run
        end

        # Support supervisor owner and groups http://smarden.org/runit/faq.html#user
        if new_resource.supervisor_owner || new_resource.supervisor_group
          directory "#{service_dir_name}/supervise" do
            mode '0755'
            action :create
          end
          %w(ok status control).each do |target|
            file "#{service_dir_name}/supervise/#{target}" do
              owner new_resource.supervisor_owner || 'root'
              group new_resource.supervisor_group || 'root'
              action :touch
            end
          end
        end
      end

      # signals
      VALID_SIGNALS.each do |signal, signal_name|
        action(signal_name || signal) do
          if running?
            Chef::Log.info "#{new_resource} signalled (#{(signal_name || signal).to_s.upcase})"
            runit_send_signal(signal, signal_name)
          else
            Chef::Log.debug "#{new_resource} not running - nothing to do"
          end
        end
      end

      action :nothing do
      end

      action :restart do
        restart_service
      end

      action :start do
        if running?
          Chef::Log.debug "#{new_resource} already running - nothing to do"
        else
          start_service
          Chef::Log.info "#{new_resource} started"
        end
      end

      action :stop do
        if running?
          stop_service
          Chef::Log.info "#{new_resource} stopped"
        else
          Chef::Log.debug "#{new_resource} already stopped - nothing to do"
        end
      end

      action :reload do
        if running?
          reload_service
          Chef::Log.info "#{new_resource} reloaded"
        else
          Chef::Log.debug "#{new_resource} not running - nothing to do"
        end
      end

      action :status do
        running?
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/files/default/runit.seed to tempfile /tmp/chef-rest20160913-19215-4yapy6
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: runit
# Attribute File:: sv_bin
#
# Copyright 2008-2009, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

case node['platform_family']
when 'debian'
  default['runit']['sv_bin'] = '/usr/bin/sv'
  default['runit']['chpst_bin'] = '/usr/bin/chpst'
  default['runit']['service_dir'] = '/etc/service'
  default['runit']['sv_dir'] = '/etc/sv'
  default['runit']['lsb_init_dir'] = '/etc/init.d'
  default['runit']['executable'] = '/sbin/runit'

  if node['platform'] == 'debian'
    default['runit']['start'] = 'runsvdir-start'
    default['runit']['stop'] = ''
    default['runit']['reload'] = ''
  elsif node['platform'] == 'ubuntu'
    default['runit']['start'] = 'start runsvdir'
    default['runit']['stop'] = 'stop runsvdir'
    default['runit']['reload'] = 'reload runsvdir'
  end

when 'rhel', 'fedora'
  default['runit']['sv_bin'] = '/sbin/sv'
  default['runit']['chpst_bin'] = '/sbin/chpst'
  default['runit']['service_dir'] = '/etc/service'
  default['runit']['sv_dir'] = '/etc/sv'
  default['runit']['lsb_init_dir'] = '/etc/init.d'
  default['runit']['executable'] = '/sbin/runit'
  default['runit']['prefer_local_yum'] = node['runit']['use_package_from_yum'] || false
  default['runit']['start'] = '/etc/init.d/runit-start start'
  default['runit']['stop'] = '/etc/init.d/runit-start stop'
  default['runit']['reload'] = '/etc/init.d/runit-start reload'

when 'gentoo'
  default['runit']['sv_bin'] = '/usr/bin/sv'
  default['runit']['chpst_bin'] = '/usr/bin/chpst'
  default['runit']['service_dir'] = '/var/service'
  default['runit']['sv_dir'] = '/etc/sv'
  default['runit']['lsb_init_dir'] = '/etc/init.d'
  default['runit']['executable'] = '/sbin/runit'
  default['runit']['start'] = '/etc/init.d/runit-start start'
  default['runit']['stop'] = '/etc/init.d/runit-start stop'
  default['runit']['reload'] = '/etc/init.d/runit-start reload'

end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/files/default/runit.seed in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/files
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/provider_runit_service.rb to tempfile /tmp/chef-rest20160913-19215-vwwhij
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/libraries/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-m01qtb
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000382e8f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/runit/templates/default/log-config.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000382eaa8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "templates",
   "default",
   "log-config.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/libraries/provider_runit_service.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/attributes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/attributes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/MAINTAINERS.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036e6998
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036e6b28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037ca670
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/runit/templates/gentoo/runit-start.sh.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037ca760>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "templates",
   "gentoo",
   "runit-start.sh.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)

  ChefSpec.define_matcher(:runit_service)

  def start_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :start, service)
  end

  def stop_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :stop, service)
  end

  def enable_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :enable, service)
  end

  def disable_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :disable, service)
  end

  def restart_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :restart, service)
  end

  def reload_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :reload, service)
  end

  def status_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :status, service)
  end

  def once_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :once, service)
  end

  def hup_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :hup, service)
  end

  def cont_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :cont, service)
  end

  def term_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :term, service)
  end

  def kill_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :kill, service)
  end

  def up_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :up, service)
  end

  def down_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :down, service)
  end

  def usr1_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :usr1, service)
  end

  def usr2_runit_service(service)
    ChefSpec::Matchers::ResourceMatcher.new(:runit_service, :usr2, service)
  end

end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/README.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000365e8e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000365eb88>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "README.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/templates/debian/init.d.erb
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-4u56t4
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/sbin/runscript
# Copyright 1999-2006 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $

depend() {
    after net
}

start() {
    ebegin "Starting runsvdir"
    start-stop-daemon --start --exec /usr/bin/runsvdir \
        --background --make-pidfile \
        --pidfile /var/run/runsvdir.pid -- <%= node.runit.sv_dir %>
    eend $?
}

stop() {
    local ret1 ret2
    ebegin "Stopping runsvdir"
    start-stop-daemon --stop --oknodo --pidfile /var/run/runsvdir.pid
    ret1=$?
    eend ${ret1}

    ebegin "Stopping services and logging"
    sv shutdown -w 10 <%= node.runit.sv_dir %>/*
    ret2=$?
    eend ${ret2}

    return $((ret1+ret2))
}

--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/gentoo/runit-start.sh.erb to tempfile /tmp/chef-rest20160913-19215-m15npw
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/templates/gentoo/runit-start.sh.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/templates
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/templates/gentoo
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/CHANGELOG.md
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/.foodcritic
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000363f918
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000363fa08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   ".foodcritic"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/libraries/matchers.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036e4120
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/templates/debian/init.d.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036e4210>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "templates",
   "debian",
   "init.d.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
### BEGIN INIT INFO
# Provides:          <%= @name %>
# Required-Start:
# Required-Stop:
# Default-Start:
# Default-Stop:
# Short-Description: initscript for runit-managed <%= @name %> service
### END INIT INFO

# Author: Chef Software, Inc. <cookbooks@chef.io>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="runit-managed <%= @name %>"
NAME=<%= @name %>
RUNIT=<%= @sv_bin %>
RUNIT_ARGS="<%= @sv_args %>"
SCRIPTNAME=<%= @init_dir %>$NAME

# Exit if runit is not installed
[ -x $RUNIT ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions


case "$1" in
  start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC " "$NAME"
        $RUNIT $RUNIT_ARGS start $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS stop $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  status)
        $RUNIT $RUNIT_ARGS status $NAME && exit 0 || exit $?
        ;;
  reload)
        [ "$VERBOSE" != no ] && log_daemon_msg "Reloading $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS reload $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  force-reload)
        [ "$VERBOSE" != no ] && log_daemon_msg "Force reloading $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS force-reload $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  force-stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Force stopping $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS force-stop $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  force-restart)
        [ "$VERBOSE" != no ] && log_daemon_msg "Force restarting $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS force-restart $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  force-shutdown)
        [ "$VERBOSE" != no ] && log_daemon_msg "Force shutdowning $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS force-shutdown $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  restart)
        [ "$VERBOSE" != no ] && log_daemon_msg "Restarting $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS restart $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  shutdown)
        [ "$VERBOSE" != no ] && log_daemon_msg "Shutdowning $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS shutdown $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  try-restart)
        [ "$VERBOSE" != no ] && log_daemon_msg "Try restarting $DESC" "$NAME"
        $RUNIT $RUNIT_ARGS try-restart $NAME
        [ "$VERBOSE" != no ] && log_end_msg $?
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|reload|force-reload|force-restart|force-shutdown|force-stop|restart|shutdown|try-restart}" >&2
        exit 3
        ;;
esac

:

--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/debian/init.d.erb to tempfile /tmp/chef-rest20160913-19215-1wz4jy2
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002188858
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002188970>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "CHANGELOG.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/recipes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/templates/debian/init.d.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/templates/debian
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<% if @config.log_size -%>
s<%= @config.log_size %>
<% end -%>
<% if @config.log_num -%>
n<%= @config.log_num %>
<% end -%>
<% if @config.log_min -%>
N<%= @config.log_min %>
<% end -%>
<% if @config.log_timeout -%>
t<%= @config.log_timeout %>
<% end -%>
<% if @config.log_processor -%>
!<%= @config.log_processor %>
<% end -%>
<% if @config.log_socket -%>
u<%= @config.log_socket %>
<% end -%>
<% if @config.log_prefix -%>
p<%= @config.log_prefix %>
<% end -%>
<% if @config.log_config_append -%>
<%= @config.log_config_append %>
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/templates/default/log-config.erb to tempfile /tmp/chef-rest20160913-19215-1qqw1iy
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/files/default
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# runit Cookbook

Installs runit and provides the `runit_service` service resource for managing processes (services) under runit.

This cookbook does not use runit to replace system init, nor are there plans to do so.

For more information about runit:

- <http://smarden.org/runit/>

## Requirements

### Platforms

- Debian/Ubuntu
- RHEL and derivatives

### Chef

- Chef 11+

### Cookbooks

- packagecloud (for RHEL)
- yum-epel (for RHEL)

## Attributes

See `attributes/default.rb` for defaults generated per platform.

- `node['runit']['sv_bin']` - Full path to the `sv` binary.
- `node['runit']['chpst_bin']` - Full path to the `chpst` binary.
- `node['runit']['service_dir']` - Full path to the default "services" directory where enabled services are linked.
- `node['runit']['sv_dir']` - Full path to the directory where service lives, which gets linked to `service_dir`.
- `node['runit']['lsb_init_dir']` - Full path to the directory where the LSB-compliant init script interface will be created.
- `node['runit']['start']` - Command to start the runsvdir service
- `node['runit']['stop]` - Command to stop the runsvdir service
- `node['runit']['reload']` - Command to reload the runsvdir service

### Optional Attributes for RHEL systems

- `node['runit']['prefer_local_yum']` - If `true`, assumes that a `runit` package is available on an already configured local yum repository. By default, the recipe installs the `runit` package from a Package Cloud repository (see below). This is set to the value of `node['runit']['use_package_from_yum']` for backwards compatibility, but otherwise defaults to `false`.

## Recipes

### default

The default recipe installs runit and starts `runsvdir` to supervise the services in runit's service directory (e.g., `/etc/service`).

On RHEL-family systems, it will install the runit RPM using [Ian Meyer's Package Cloud repository](https://packagecloud.io/imeyer/runit) for runit. This replaces the previous functionality where the RPM was build using his [runit RPM SPEC](https://github.com/imeyer/runit-rpm). However, if the attribute `node['runit']['prefer_local_yum']` is set to `true`, the packagecloud repository creation will be skipped and it is assumed that a `runit` package is available on an otherwise configured (outside this cookbook) local repository.

On Debian family systems, the runit packages are maintained by the runit author, Gerrit Pape, and the recipe will use that for installation.

On Gentoo, the runit ebuild package is installed.

## Resource/Provider

This cookbook has a resource, `runit_service`, for managing services under runit. This service subclasses the Chef `service` resource.

**This resource replaces the runit_service definition. See the CHANGELOG.md file in this cookbook for breaking change information and any actions you may need to take to update cookbooks using runit_service.**

### Actions

- **enable** - enables the service, creating the required run scripts and symlinks. This is the default action.
- **start** - starts the service with `sv start`
- **stop** - stops the service with `sv stop`
- **disable** - stops the service with `sv down` and removes the service symlink
- **create** - create the service directory, but don't enable the service with symlink
- **restart** - restarts the service with `sv restart`
- **reload** - reloads the service with `sv force-reload`
- **once** - starts the service with `sv once`.
- **hup** - sends the `HUP` signal to the service with `sv hup`
- **cont** - sends the `CONT` signal to the service
- **term** - sends the `TERM` signal to the service
- **kill** - sends the `KILL` signal to the service
- **up** - starts the service with `sv up`
- **down** - downs the service with `sv down`
- **usr1** - sends the `USR1` signal to the service with `sv 1`
- **usr2** - sends the `USR2` signal to the service with `sv 2`

Service management actions are taken with runit's "`sv`" program.

Read the `sv(8)` [man page](http://smarden.org/runit/sv.8.html) for more information on the `sv` program.

### Parameter Attributes

The first three parameters, `sv_dir`, `service_dir`, and `sv_bin` will attempt to use the corresponding node attributes, and fall back to hardcoded default values that match the settings used on Debian platform systems.

Many of these parameters are only used in the `:enable` action.

- **sv_dir** - The base "service directory" for the services managed by the resource. By default, this will attempt to use the `node['runit']['sv_dir']` attribute, and falls back to `/etc/sv`.
- **service_dir** - The directory where services are symlinked to be supervised by `runsvdir`. By default, this will attempt to use the `node['runit']['service_dir']` attribute, and falls back to `/etc/service`.
- **lsb_init_dir** - The directory where an LSB-compliant init script interface will be created. By default, this will attempt to use the `node['runit']['lsb_init_dir']` attribute, and falls back to `/etc/init.d`.
- **sv_bin** - The path to the `sv` program binary. This will attempt to use the `node['runit']['sv_bin']` attribute, and falls back to `/usr/bin/sv`.
- **service_name** - _Name attribute_. The name of the service. This will be used in the directory of the managed service in the `sv_dir` and `service_dir`.
- **sv_timeout** - Override the default `sv` timeout of 7 seconds.
- **sv_verbose** - Whether to enable `sv` verbose mode. Default is `false`.
- **sv_templates** - If true, the `:enable` action will create the service directory with the appropriate templates. Default is `true`. Set this to `false` if the service has a package that provides its own service directory. See **Usage** examples.
- **options** - Options passed as variables to templates, for compatibility with legacy runit service definition. Default is an empty hash.
- **env** - A hash of environment variables with their values as content used in the service's `env` directory. Default is an empty hash. When this hash is non-empty, the contents of the runit service's `env` directory will be managed by Chef in order to conform to the declared state.
- **log** - Whether to start the service's logger with svlogd, requires a template `sv-service_name-log-run.erb` to configure the log's run script. Default is true.
- **default_logger** - Whether a default `log/run` script should be set up. If true, the default content of the run script will use `svlogd` to write logs to `/var/log/service_name`. Default is false.
- **log_dir** - The directory where the `svlogd` log service will run. Used when `default_logger` is `true`. Default is `/var/log/service_name`
- **log_size** - The maximum size a log file can grow to before it is automatically rotated. See svlogd(8) for the default value.
- **log_num** - The maximum number of log files that will be retained after rotation. See svlogd(8) for the default value.
- **log_min** - The minimum number of log files that will be retained after rotation (if svlogd cannot create a new file and the minimum has not been reached, it will block). Default is no minimum.
- **log_timeout** - The maximum age a log file can get to before it is automatically rotated, whether it has reached `log_size` or not. Default is no timeout.
- **log_processor** - A string containing a path to a program that rotated log files will be fed through. See the **PROCESSOR** section of svlogd(8) for details. Default is no processor.
- **log_socket** - An string containing an IP:port pair identifying a UDP socket that log lines will be copied to. Default is none.
- **log_prefix** - A string that will be prepended to each line as it is logged. Default is no prefix.
- **log_config_append** - A string containing optional additional lines to add to the log service configuration. See svlogd(8) for more details.
- **cookbook** - A cookbook where templates are located instead of where the resource is used. Applies for all the templates in the `enable` action.
- **check** - whether the service has a check script, requires a template `sv-service_name-check.erb`
- **finish** - whether the service has a finish script, requires a template `sv-service_name-finish.erb`
- **control** - An array of signals to customize control of the service, see [runsv man page](http://smarden.org/runit/runsv.8.html) on how to use this. This requires that each template be created with the name `sv-service_name-signal.erb`.
- **supervisor_owner** - the user that should be allowed to control this service, see [runsv faq](http://smarden.org/runit/faq.html#user)
- **supervisor_group** - the group that should be allowed to control this service, see [runsv faq](http://smarden.org/runit/faq.html#user)
- **owner** - user that should own the templates created to enable the service
- **group** - group that should own the templates created to enable the service
- **run_template_name** - alternate filename of the run run script to use replacing `service_name`.
- **log_template_name** - alternate filename of the log run script to use replacing `service_name`.
- **check_script_template_name** - alternate filename of the check script to use, replacing `service_name`.
- **finish_script_template_name** - alternate filename of the finish script to use, replacing `service_name`.
- **control_template_names** - a hash of control signals (see _control_ above) and their alternate template name(s) replacing `service_name`.
- **status_command** - The command used to check the status of the service to see if it is enabled/running (if it's running, it's enabled). This hardcodes the location of the sv program to `/usr/bin/sv` due to the aforementioned cookbook load order.
- **restart_on_update** - Whether the service should be restarted when the run script is updated. Defaults to `true`. Set to `false` if the service shouldn't be restarted when the run script is updated.
- **start_down** - Set the default state of the runit service to 'down' by creating `<sv_dir>/down` file. Defaults to `false`. Services using `start_down` will not be notified to restart when their run script is updated.
- **delete_downfile** - Delete previously created `<sv_dir>/down` file

Unlike previous versions of the cookbook using the `runit_service` definition, the `runit_service` resource can be notified. See **Usage** examples below.

## Usage

To get runit installed on supported platforms, use `recipe[runit]`. Once it is installed, use the `runit_service` resource to set up services to be managed by runit.

In order to use the `runit_service` resource in your cookbook(s), each service managed will also need to have `sv-service_name-run.erb` and `sv-service_name-log-run.erb` templates created. If the `log` parameter is false, the log run script isn't created. If the `log` parameter is true, and `default_logger` is also true, the log run script will be created with the default content:

```bash
#!/bin/sh
exec svlogd -tt /var/log/service_name
```

### Examples

These are example use cases of the `runit_service` resource described above. There are others in the `runit_test` cookbook that is included in the [git repository](https://github.com/hw-cookbooks/runit).

**Default Example**

This example uses all the defaults in the `:enable` action to set up the service.

We'll set up `chef-client` to run as a service under runit, such as is done in the `chef-client` cookbook. This example will be more simple than in that cookbook. First, create the required run template, `chef-client/templates/default/sv-chef-client-run.erb`.

```bash
#!/bin/sh
exec 2>&1
exec /usr/bin/env chef-client -i 1800 -s 30
```

Then create the required log/run template, `chef-client/templates/default/sv-chef-client-log-run.erb`.

```bash
#!/bin/sh
exec svlogd -tt ./main
```

**Note** This will cause output of the running process to go to `/etc/sv/chef-client/log/main/current`. Some people may not like this, see the following example. This is preserved for compatibility reasons.

Finally, set up the service in the recipe with:

```ruby
runit_service "chef-client"
```

**Default Logger Example**

To use a default logger with svlogd which will log to `/var/log/chef-client/current`, instead, use the `default_logger` option.

```ruby
runit_service "chef-client" do
  default_logger true
end
```

**No Log Service**

If there isn't an appendant log service, set `log` to false, and the log/run script won't be created.

```ruby
runit_service "no-svlog" do
  log false
end
```

**Check Script**

To create a service that has a check script in its service directory, set the `check` parameter to `true`, and create a `sv-checker-check.erb` template.

```ruby
runit_service "checker" do
  check true
end
```

This will create `/etc/sv/checker/check`.

**Finish Script**

To create a service that has a finish script in its service directory, set the `finish` parameter to `true`, and create a `sv-finisher-finish.erb` template.

```ruby
runit_service "finisher" do
  finish true
end
```

This will create `/etc/sv/finisher/finish`.

**Alternate service directory**

If the service directory for the managed service isn't the `sv_dir` (`/etc/sv`), then specify it:

```ruby
runit_service "custom_service" do
  sv_dir "/etc/custom_service/runit"
end
```

**No Service Directory**

If the service to manage has a package that provides its service directory, such as `git-daemon` on Debian systems, set `sv_templates` to false.

```ruby
package "git-daemon-run"

runit_service "git-daemon" do
  sv_templates false
end
```

This will create the service symlink in `/etc/service`, but it will not manage any templates in the service directory.

**User Controlled Services**

To set up services controlled by a non-privileged user, we follow the recommended configuration in the [runit documentation](http://smarden.org/runit/faq.html#user) (Is it possible to allow a user other than root to control a service?).

Suppose the user's name is floyd, and floyd wants to run floyds-app. Assuming that the floyd user and group are already managed with Chef, create a `runsvdir-floyd` runit_service.

```ruby
runit_service "runsvdir-floyd"
```

Create the `sv-runsvdir-floyd-log-run.erb` template, or add `log false`. Also create the `sv-runsvdir-floyd-run.erb` with the following content:

```bash
#!/bin/sh
exec 2>&1
exec chpst -ufloyd runsvdir /home/floyd/service
```

Next, create the `runit_service` resource for floyd's app:

```ruby
runit_service "floyds-app" do
  sv_dir "/home/floyd/sv"
  service_dir "/home/floyd/service"
  owner "floyd"
  group "floyd"
end
```

And now floyd can manage the service with sv:

```text
$ id
uid=1000(floyd) gid=1001(floyd) groups=1001(floyd)
$ sv stop /home/floyd/service/floyds-app/
ok: down: /home/floyd/service/floyds-app/: 0s, normally up
$ sv start /home/floyd/service/floyds-app/
ok: run: /home/floyd/service/floyds-app/: (pid 5287) 0s
$ sv status /home/floyd/service/floyds-app/
run: /home/floyd/service/floyds-app/: (pid 5287) 13s; run: log: (pid 4691) 726s
```

**Options**

Next, let's set up memcached under runit with some additional options using the `options` parameter. First, the `memcached/templates/default/sv-memcached-run.erb` template:

```bash
#!/bin/sh
exec 2>&1
exec chpst -u <%= @options[:user] %> /usr/bin/memcached -v -m <%= @options[:memory] %> -p <%= @options[:port] %>
```

Note that the script uses `chpst` (which comes with runit) to set the user option, then starts memcached on the specified memory and port (see below).

The log/run template, `memcached/templates/default/sv-memcached-log-run.erb`:

```bash
#!/bin/sh
exec svlogd -tt ./main
```

Finally, the `runit_service` in our recipe:

```ruby
runit_service "memcached" do
  options({
    :memory => node[:memcached][:memory],
    :port => node[:memcached][:port],
    :user => node[:memcached][:user]
  }.merge(params))
end
```

This is where the user, port and memory options used in the run template are used.

**Notifying Runit Services**

In previous versions of this cookbook where the definition was used, it created a `service` resource that could be notified. With the `runit_service` resource, recipes need to use the full resource name.

For example:

```ruby
runit_service "my-service"

template "/etc/my-service.conf" do
  notifies :restart, "runit_service[my-service]"
end
```

Because the resource implements actions for various commands that `sv` can send to the service, any of those actions could be used for notification. For example, `chef-client` supports triggering a Chef run with a USR1 signal.

```ruby
template "/tmp/chef-notifier" do
  notifies :usr1, "runit_service[chef-client]"
end
```

For older implementations of services that used `runit_service` as a definition, but may support alternate service styles, use a conditional, such as based on an attribute:

```ruby
service_to_notify = case node['nginx']['init_style']
                    when "runit"
                      "runit_service[nginx]"
                    else
                      "service[nginx]"
                    end

template "/etc/nginx/nginx.conf" do
  notifies :restart, service_to_notify
end
```

**More Examples**

For more examples, see the `runit_test` cookbook's `service` recipe in the [git repository](https://github.com/hw-cookbooks/runit).

## Development

You may use test kitchen with either the vagrant or docker drivers to run integration tests.

**Note:** When using the docker driver please ensure that the container you are using has a working init system, as runit expects to be started by init. In some cases, systemd may need to be run in privileged mode.

For instance, for ubuntu with upstart:

```
    driver_config:
      image: ubuntu-upstart:14.04
      run_command: /sbin/init
```

For redhat derivatives:

```
    driver_config:
      image: dockerhub/image-with-systemd
      run_command: /usr/sbin/init
      privileged: true
```

## License & Authors

- Author:: Adam Jacob [adam@chef.io](mailto:adam@chef.io)
- Author:: Joshua Timberman [joshua@chef.io](mailto:joshua@chef.io)
- Author:: Sean OMeara [sean@chef.io](mailto:sean@chef.io)

```text
Copyright:: 2008-2016, Chef Software, Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/templates/default/log-config.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/runit/templates/default
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/README.md to tempfile /tmp/chef-rest20160913-19215-ewij83
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-mcl7y9
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/README.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/MAINTAINERS.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# runit Cookbook CHANGELOG

This file is used to list changes made in each version of the runit cookbook.

## 1.8.0

- Breaking change: Removed support for EOL Ubuntu platforms (i.e. versions 6.10, 7.04, 7.10, 8.04) (#194)
- Added a dependency on yum-epel for RHEL platforms
- Breaking change: Removed logic which skipped waiting for named pipe when running inside Docker (#193)
- This cookbook is now managed by the Chef Community team and is located at <http://www.github.com/chef-cookbooks/runit>
- Cookbook development is now occurring on the master branch with releases taking place after merging. The development branch will be removed
- Added a .foodcritic file to ignore FC004
- Updated platforms to test in the Test Kitchen file
- Replaced the Cheffile with a Berksfile
- Moved the specs to the specs directory and removed logic to detect the depsolver
- Replaced Rubocop with Cookstyle
- Added basic testing in Travis CI
- Silenced deprecation warnings in the Chefspecs and removed the Chef 12.5 pin that was used to do the same previously
- Added maintainers.md and maintainers.toml files
- Removed Gentoo as an officially supported platform as we're not testing this
- Added additional RHEL derivatives as supported platforms in metadata.rb
- Added chef_version, source_url, and issues_url metadata to metadata.rb

## v1.7.8

- Add missing goals to Debian init script template (#175)
- Enhancement: Mark `env` files as sensitive (#182)
- Reduce warning spam in Chef ~12.7 (#183)
- Enhancement: Add support for specifying supervising user and/or group for managing service (#187)

## v1.7.6

- Ensure `supervise/ok` named pipe is properly removed when disabling a service, so that it can be enabled again (#166, #167, #172)
- Restore `restart_on_update` functionality originally added in [#20](https://github.com/hw-cookbooks/runit/pull/20) and lost in the 1.7.0 refactor.
- Update test cookbooks to fix broken tests revealed by restoring `restart_on_update` functionality. Now using socat instead of netcat.

## v1.7.4 (2015-10-13)

- Ensure the service directory exists so that we will succeed when enabling services (#153)
- Fix regression where env directory contents were being deleted when the `env` attribute is empty. (#144, #158)
- Add `log_dir` attribute, used only when `default_logger` is true. (#135)
- Ensure svlogd configuration is linked into correct path (#83, #135)
- Update README and CHANGELOG for v1.7.0 to warn against known regressions (#144, #157)
- Avoid mutating resource options for Chef 12 compatability (#147, #150, #156)
- Fix regression regarding waiting for the service socket before running (#138, #142)
- Reimplement idempotence checks for `runit_service` resources (#137, #141)
- Enhance ChefSpec unit test coverage with specs that step into the LWRP (#139)
- Deduplicate ServerSpec integration test coverage using example groups (#140)

## v1.7.2 (2015-06-19)

- Re-add missing runit_service actions start, stop, reload and status

## v1.7.0 (2015-06-18)

**NOTE**: With the benefit of hindsight we can say that the changes contained in this release merit a major version number change. Please be sure to test this new version for compatibility with your systems before upgrading to version 1.7.

- Modernize runit_service provider by rewriting pure Ruby as LWRP (#107)
- Modernize integration tests by rewriting Minitest suites as ServerSpec (#107)
- Fix regression in support for alternate sv binary on debian platforms (#92, #123)
- Fix regression in default logger's config location (#117)
- Tighten permissions on environment variable config files from 0644 to 0640 (#125)
- Add `start_down` and `delete_downfile` attributes to support configuring services with default state of 'down' (#105)

## v1.6.0 (2015-04-06)

- Fedora 21 support
- Kitchen platform updates
- use imeyer's packagecloud repo for RHEL
- fix converge_by usage
- do_action helper to set updated_by_last_action
- style fixes to provider

## v1.5.18 (2015-03-13)

- Add helper methods to detect installation presence

## v1.5.16 (2015-02-11)

- Allow removal of env files(nhuff)

## v1.5.14 (2015-01-15)

- Provide create action(clako)

## v1.5.12 (2014-12-15)

- prevent infinite loop inside docker container
- runit service failing inside docker container
- move to librarian-chef for kitchen dependency resolution
- update tests
- updates to chefspec matchers

## v1.5.10 (2014-03-07)

PR #53- Fix runit RPM file location for Chef provisionless Centos 5.9 Box Image

## v1.5.9

Fix runit RPM file location for Chef provisionless Centos 5.9 Box Image

## v1.5.8

Fixing string interpolation bug

## v1.5.3

Fixing assignment/compare error

## v1.5.1

### Bug

- **[COOK-3950](https://tickets.chef.io/browse/COOK-3950)** - runit cookbook should use full service path when checking running status

## v1.5.0

### Improvement

- **[COOK-3267] - Improve testing suite in runit cookbook
- Updating test-kitchen harness
- Cleaning up style for rubocop

## v1.4.4

fixing metadata version error. locking to < 3.0

## v1.4.2

Locking yum dependency to '< 3'

## v1.4.0

[COOK-3560] Allow the user to configure runit's timeout (-w) and verbose (-v) settings

## v1.3.0

### Improvement

- **[COOK-3663](https://tickets.chef.io/browse/COOK-3663)** - Add ./check scripts support

### Bug

- **[COOK-3271](https://tickets.chef.io/browse/COOK-3271)** - Fix an issue where runit fails to install rpm package on rehl systems

## v1.2.0

### New Feature

- **[COOK-3243](https://tickets.chef.io/browse/COOK-3243)** - Expose LSB init directory as a configurable

### Bug

- **[COOK-3182](https://tickets.chef.io/browse/COOK-3182)** - Do not hardcode rpmbuild location

### Improvement

- **[COOK-3175](https://tickets.chef.io/browse/COOK-3175)** - Add svlogd config file support
- **[COOK-3115](https://tickets.chef.io/browse/COOK-3115)** - Add ability to install 'runit' package from Yum

## v1.1.6

### Bug

- [COOK-2353]: Runit does not update run template if the service is already enabled
- [COOK-3013]: Runit install fails on rhel if converge is only partially successful

## v1.1.4

### Bug

- [COOK-2549]: cannot enable_service (lwrp) on Gentoo
- [COOK-2567]: Runit doesn't start at boot in Gentoo
- [COOK-2629]: runit tests have ruby 1.9 method chaning syntax
- [COOK-2867]: On debian, runit recipe will follow symlinks from /etc/init.d, overwrite /usr/bin/sv

## v1.1.2

- [COOK-2477] - runit cookbook should enable EPEL repo for CentOS 5
- [COOK-2545] - Runit cookbook fails on Amazon Linux
- [COOK-2322] - runit init template is broken on debian

## v1.1.0

- [COOK-2353] - Runit does not update run template if the service is already enabled
- [COOK-2497] - add :nothing to allowed actions

## v1.0.6

- [COOK-2404] - allow sending sigquit
- [COOK-2431] - gentoo - it should create the runit-start template before calling it

## v1.0.4

- [COOK-2351] - add `run_template_name` to allow alternate run script template

## v1.0.2

- [COOK-2299] - runit_service resource does not properly start a non-running service

## v1.0.0

- [COOK-2254] - (formerly CHEF-154) Convert `runit_service` definition to a service resource named `runit_service`.

This version has some backwards incompatible changes (hence the major version bump). It is recommended that users pin the cookbook to the previous version where it is a dependency until this version has been tested in a non-production environment (use version 0.16.2):

```
depends "runit", "<= 0.16.2"
```

If you use Chef environments, pin the version in the appropriate environment(s).

**Changes of note**

1. The "runit" recipe must be included before the runit_service resource can be used.
2. The `runit_service` definition created a separate `service` resource for notification purposes. This is still available, but the only actions that can be notified are `:start`, `:stop`, and `:restart`.
3. The `:enable` action blocks waiting for supervise/ok after the service symlink is created.
4. User-controlled services should be created per the runit documentation; see README.md for an example.
5. Some parameters in the definition have changed names in the resource. See below.

The following parameters in the definition are renamed in the resource to clarify their intent.

- directory -> sv_dir
- active_directory -> service_dir
- template_name -> use service_name (name attribute)
- nolog -> set "log" to false
- start_command -> unused (was previously in the "service" resource)
- stop_command -> unused (was previously in the "service" resource)
- restart_command -> unused (was previously in the "service" resource)

## v0.16.2

- [COOK-1576] - Do not symlink /etc/init.d/servicename to /usr/bin/sv on debian
- [COOK-1960] - default_logger still looks for sv-service-log-run template
- [COOK-2035] - runit README change

## v0.16.0

- [COOK-794] default logger and `no_log` for `runit_service` definition
- [COOK-1165] - restart functionality does not work right on Gentoo due to the wrong directory in the attributes
- [COOK-1440] - Delegate service control to normal user

## v0.15.0

- [COOK-1008] - Added parameters for names of different templates in runit
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020686d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002068860>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Sean OMeara (<someara@chef.io>)
# Cookbook Name:: yum-epel
# Recipe:: default
#
# Copyright 2013-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

node['yum-epel']['repositories'].each do |repo|
  next unless node['yum'][repo]['managed']

  yum_repository repo do
    baseurl node['yum'][repo]['baseurl'] unless node['yum'][repo]['baseurl'].nil?
    cost node['yum'][repo]['cost'] unless node['yum'][repo]['cost'].nil?
    description node['yum'][repo]['description'] unless node['yum'][repo]['description'].nil?
    enabled node['yum'][repo]['enabled'] unless node['yum'][repo]['enabled'].nil?
    enablegroups node['yum'][repo]['enablegroups'] unless node['yum'][repo]['enablegroups'].nil?
    exclude node['yum'][repo]['exclude'] unless node['yum'][repo]['exclude'].nil?
    failovermethod node['yum'][repo]['failovermethod'] unless node['yum'][repo]['failovermethod'].nil?
    fastestmirror_enabled node['yum'][repo]['fastestmirror_enabled'] unless node['yum'][repo]['fastestmirror_enabled'].nil?
    gpgcheck node['yum'][repo]['gpgcheck'] unless node['yum'][repo]['gpgcheck'].nil?
    gpgkey node['yum'][repo]['gpgkey'] unless node['yum'][repo]['gpgkey'].nil?
    http_caching node['yum'][repo]['http_caching'] unless node['yum'][repo]['http_caching'].nil?
    include_config node['yum'][repo]['include_config'] unless node['yum'][repo]['include_config'].nil?
    includepkgs node['yum'][repo]['includepkgs'] unless node['yum'][repo]['includepkgs'].nil?
    keepalive node['yum'][repo]['keepalive'] unless node['yum'][repo]['keepalive'].nil?
    make_cache node['yum'][repo]['make_cache'] unless node['yum'][repo]['make_cache'].nil?
    max_retries node['yum'][repo]['max_retries'] unless node['yum'][repo]['max_retries'].nil?
    metadata_expire node['yum'][repo]['metadata_expire'] unless node['yum'][repo]['metadata_expire'].nil?
    mirror_expire node['yum'][repo]['mirror_expire'] unless node['yum'][repo]['mirror_expire'].nil?
    mirrorlist node['yum'][repo]['mirrorlist'] unless node['yum'][repo]['mirrorlist'].nil?
    mirrorlist_expire node['yum'][repo]['mirrorlist_expire'] unless node['yum'][repo]['mirrorlist_expire'].nil?
    password node['yum'][repo]['password'] unless node['yum'][repo]['password'].nil?
    priority node['yum'][repo]['priority'] unless node['yum'][repo]['priority'].nil?
    proxy node['yum'][repo]['proxy'] unless node['yum'][repo]['proxy'].nil?
    proxy_username node['yum'][repo]['proxy_username'] unless node['yum'][repo]['proxy_username'].nil?
    proxy_password node['yum'][repo]['proxy_password'] unless node['yum'][repo]['proxy_password'].nil?
    report_instanceid node['yum'][repo]['report_instanceid'] unless node['yum'][repo]['report_instanceid'].nil?
    repositoryid node['yum'][repo]['repositoryid'] unless node['yum'][repo]['repositoryid'].nil?
    skip_if_unavailable node['yum'][repo]['skip_if_unavailable'] unless node['yum'][repo]['skip_if_unavailable'].nil?
    source node['yum'][repo]['source'] unless node['yum'][repo]['source'].nil?
    sslcacert node['yum'][repo]['sslcacert'] unless node['yum'][repo]['sslcacert'].nil?
    sslclientcert node['yum'][repo]['sslclientcert'] unless node['yum'][repo]['sslclientcert'].nil?
    sslclientkey node['yum'][repo]['sslclientkey'] unless node['yum'][repo]['sslclientkey'].nil?
    sslverify node['yum'][repo]['sslverify'] unless node['yum'][repo]['sslverify'].nil?
    timeout node['yum'][repo]['timeout'] unless node['yum'][repo]['timeout'].nil?
    username node['yum'][repo]['username'] unless node['yum'][repo]['username'].nil?

    action :create
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-1p78xcz
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/CONTRIBUTING.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f4c5f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f4cb20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-1o8n26h
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-10a27oa
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/recipes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum-epel
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum-epel/recipes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/runit/metadata.json
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e81c68
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/runit/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e81d80>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "runit",
   "metadata.json"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC004
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/.foodcritic to tempfile /tmp/chef-rest20160913-19215-1hle3du
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/.foodcritic in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e83608
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e83978>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-testing-source.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/CHANGELOG.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e3a200
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/attributes/epel.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e3a3b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000da4878
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000da5610>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-testing.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001edd220
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001edd4c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-source.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-source']['repositoryid'] = 'epel-source'
default['yum']['epel-source']['description'] = 'Extra Packages for $releasever - $basearch - Source'
if node['platform'] == 'amazon'
  default['yum']['epel-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch'
  default['yum']['epel-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-source']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-source']['gpgkey'] = (node['platform_version'].to_i == 5 ? 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL' : "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}")
end

default['yum']['epel-source']['failovermethod'] = 'priority'
default['yum']['epel-source']['gpgcheck'] = true
default['yum']['epel-source']['enabled'] = false
default['yum']['epel-source']['managed'] = false
default['yum']['epel-source']['make_cache'] = true
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb to tempfile /tmp/chef-rest20160913-19215-hizz8x
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"runit","version":"1.8.0","description":"Installs runit and provides runit_service definition","long_description":"# runit Cookbook\n\nInstalls runit and provides the `runit_service` service resource for managing processes (services) under runit.\n\nThis cookbook does not use runit to replace system init, nor are there plans to do so.\n\nFor more information about runit:\n\n- <http://smarden.org/runit/>\n\n## Requirements\n\n### Platforms\n\n- Debian/Ubuntu\n- RHEL and derivatives\n\n### Chef\n\n- Chef 11+\n\n### Cookbooks\n\n- packagecloud (for RHEL)\n- yum-epel (for RHEL)\n\n## Attributes\n\nSee `attributes/default.rb` for defaults generated per platform.\n\n- `node['runit']['sv_bin']` - Full path to the `sv` binary.\n- `node['runit']['chpst_bin']` - Full path to the `chpst` binary.\n- `node['runit']['service_dir']` - Full path to the default \"services\" directory where enabled services are linked.\n- `node['runit']['sv_dir']` - Full path to the directory where service lives, which gets linked to `service_dir`.\n- `node['runit']['lsb_init_dir']` - Full path to the directory where the LSB-compliant init script interface will be created.\n- `node['runit']['start']` - Command to start the runsvdir service\n- `node['runit']['stop]` - Command to stop the runsvdir service\n- `node['runit']['reload']` - Command to reload the runsvdir service\n\n### Optional Attributes for RHEL systems\n\n- `node['runit']['prefer_local_yum']` - If `true`, assumes that a `runit` package is available on an already configured local yum repository. By default, the recipe installs the `runit` package from a Package Cloud repository (see below). This is set to the value of `node['runit']['use_package_from_yum']` for backwards compatibility, but otherwise defaults to `false`.\n\n## Recipes\n\n### default\n\nThe default recipe installs runit and starts `runsvdir` to supervise the services in runit's service directory (e.g., `/etc/service`).\n\nOn RHEL-family systems, it will install the runit RPM using [Ian Meyer's Package Cloud repository](https://packagecloud.io/imeyer/runit) for runit. This replaces the previous functionality where the RPM was build using his [runit RPM SPEC](https://github.com/imeyer/runit-rpm). However, if the attribute `node['runit']['prefer_local_yum']` is set to `true`, the packagecloud repository creation will be skipped and it is assumed that a `runit` package is available on an otherwise configured (outside this cookbook) local repository.\n\nOn Debian family systems, the runit packages are maintained by the runit author, Gerrit Pape, and the recipe will use that for installation.\n\nOn Gentoo, the runit ebuild package is installed.\n\n## Resource/Provider\n\nThis cookbook has a resource, `runit_service`, for managing services under runit. This service subclasses the Chef `service` resource.\n\n**This resource replaces the runit_service definition. See the CHANGELOG.md file in this cookbook for breaking change information and any actions you may need to take to update cookbooks using runit_service.**\n\n### Actions\n\n- **enable** - enables the service, creating the required run scripts and symlinks. This is the default action.\n- **start** - starts the service with `sv start`\n- **stop** - stops the service with `sv stop`\n- **disable** - stops the service with `sv down` and removes the service symlink\n- **create** - create the service directory, but don't enable the service with symlink\n- **restart** - restarts the service with `sv restart`\n- **reload** - reloads the service with `sv force-reload`\n- **once** - starts the service with `sv once`.\n- **hup** - sends the `HUP` signal to the service with `sv hup`\n- **cont** - sends the `CONT` signal to the service\n- **term** - sends the `TERM` signal to the service\n- **kill** - sends the `KILL` signal to the service\n- **up** - starts the service with `sv up`\n- **down** - downs the service with `sv down`\n- **usr1** - sends the `USR1` signal to the service with `sv 1`\n- **usr2** - sends the `USR2` signal to the service with `sv 2`\n\nService management actions are taken with runit's \"`sv`\" program.\n\nRead the `sv(8)` [man page](http://smarden.org/runit/sv.8.html) for more information on the `sv` program.\n\n### Parameter Attributes\n\nThe first three parameters, `sv_dir`, `service_dir`, and `sv_bin` will attempt to use the corresponding node attributes, and fall back to hardcoded default values that match the settings used on Debian platform systems.\n\nMany of these parameters are only used in the `:enable` action.\n\n- **sv_dir** - The base \"service directory\" for the services managed by the resource. By default, this will attempt to use the `node['runit']['sv_dir']` attribute, and falls back to `/etc/sv`.\n- **service_dir** - The directory where services are symlinked to be supervised by `runsvdir`. By default, this will attempt to use the `node['runit']['service_dir']` attribute, and falls back to `/etc/service`.\n- **lsb_init_dir** - The directory where an LSB-compliant init script interface will be created. By default, this will attempt to use the `node['runit']['lsb_init_dir']` attribute, and falls back to `/etc/init.d`.\n- **sv_bin** - The path to the `sv` program binary. This will attempt to use the `node['runit']['sv_bin']` attribute, and falls back to `/usr/bin/sv`.\n- **service_name** - _Name attribute_. The name of the service. This will be used in the directory of the managed service in the `sv_dir` and `service_dir`.\n- **sv_timeout** - Override the default `sv` timeout of 7 seconds.\n- **sv_verbose** - Whether to enable `sv` verbose mode. Default is `false`.\n- **sv_templates** - If true, the `:enable` action will create the service directory with the appropriate templates. Default is `true`. Set this to `false` if the service has a package that provides its own service directory. See **Usage** examples.\n- **options** - Options passed as variables to templates, for compatibility with legacy runit service definition. Default is an empty hash.\n- **env** - A hash of environment variables with their values as content used in the service's `env` directory. Default is an empty hash. When this hash is non-empty, the contents of the runit service's `env` directory will be managed by Chef in order to conform to the declared state.\n- **log** - Whether to start the service's logger with svlogd, requires a template `sv-service_name-log-run.erb` to configure the log's run script. Default is true.\n- **default_logger** - Whether a default `log/run` script should be set up. If true, the default content of the run script will use `svlogd` to write logs to `/var/log/service_name`. Default is false.\n- **log_dir** - The directory where the `svlogd` log service will run. Used when `default_logger` is `true`. Default is `/var/log/service_name`\n- **log_size** - The maximum size a log file can grow to before it is automatically rotated. See svlogd(8) for the default value.\n- **log_num** - The maximum number of log files that will be retained after rotation. See svlogd(8) for the default value.\n- **log_min** - The minimum number of log files that will be retained after rotation (if svlogd cannot create a new file and the minimum has not been reached, it will block). Default is no minimum.\n- **log_timeout** - The maximum age a log file can get to before it is automatically rotated, whether it has reached `log_size` or not. Default is no timeout.\n- **log_processor** - A string containing a path to a program that rotated log files will be fed through. See the **PROCESSOR** section of svlogd(8) for details. Default is no processor.\n- **log_socket** - An string containing an IP:port pair identifying a UDP socket that log lines will be copied to. Default is none.\n- **log_prefix** - A string that will be prepended to each line as it is logged. Default is no prefix.\n- **log_config_append** - A string containing optional additional lines to add to the log service configuration. See svlogd(8) for more details.\n- **cookbook** - A cookbook where templates are located instead of where the resource is used. Applies for all the templates in the `enable` action.\n- **check** - whether the service has a check script, requires a template `sv-service_name-check.erb`\n- **finish** - whether the service has a finish script, requires a template `sv-service_name-finish.erb`\n- **control** - An array of signals to customize control of the service, see [runsv man page](http://smarden.org/runit/runsv.8.html) on how to use this. This requires that each template be created with the name `sv-service_name-signal.erb`.\n- **supervisor_owner** - the user that should be allowed to control this service, see [runsv faq](http://smarden.org/runit/faq.html#user)\n- **supervisor_group** - the group that should be allowed to control this service, see [runsv faq](http://smarden.org/runit/faq.html#user)\n- **owner** - user that should own the templates created to enable the service\n- **group** - group that should own the templates created to enable the service\n- **run_template_name** - alternate filename of the run run script to use replacing `service_name`.\n- **log_template_name** - alternate filename of the log run script to use replacing `service_name`.\n- **check_script_template_name** - alternate filename of the check script to use, replacing `service_name`.\n- **finish_script_template_name** - alternate filename of the finish script to use, replacing `service_name`.\n- **control_template_names** - a hash of control signals (see _control_ above) and their alternate template name(s) replacing `service_name`.\n- **status_command** - The command used to check the status of the service to see if it is enabled/running (if it's running, it's enabled). This hardcodes the location of the sv program to `/usr/bin/sv` due to the aforementioned cookbook load order.\n- **restart_on_update** - Whether the service should be restarted when the run script is updated. Defaults to `true`. Set to `false` if the service shouldn't be restarted when the run script is updated.\n- **start_down** - Set the default state of the runit service to 'down' by creating `<sv_dir>/down` file. Defaults to `false`. Services using `start_down` will not be notified to restart when their run script is updated.\n- **delete_downfile** - Delete previously created `<sv_dir>/down` file\n\nUnlike previous versions of the cookbook using the `runit_service` definition, the `runit_service` resource can be notified. See **Usage** examples below.\n\n## Usage\n\nTo get runit installed on supported platforms, use `recipe[runit]`. Once it is installed, use the `runit_service` resource to set up services to be managed by runit.\n\nIn order to use the `runit_service` resource in your cookbook(s), each service managed will also need to have `sv-service_name-run.erb` and `sv-service_name-log-run.erb` templates created. If the `log` parameter is false, the log run script isn't created. If the `log` parameter is true, and `default_logger` is also true, the log run script will be created with the default content:\n\n```bash\n#!/bin/sh\nexec svlogd -tt /var/log/service_name\n```\n\n### Examples\n\nThese are example use cases of the `runit_service` resource described above. There are others in the `runit_test` cookbook that is included in the [git repository](https://github.com/hw-cookbooks/runit).\n\n**Default Example**\n\nThis example uses all the defaults in the `:enable` action to set up the service.\n\nWe'll set up `chef-client` to run as a service under runit, such as is done in the `chef-client` cookbook. This example will be more simple than in that cookbook. First, create the required run template, `chef-client/templates/default/sv-chef-client-run.erb`.\n\n```bash\n#!/bin/sh\nexec 2>&1\nexec /usr/bin/env chef-client -i 1800 -s 30\n```\n\nThen create the required log/run template, `chef-client/templates/default/sv-chef-client-log-run.erb`.\n\n```bash\n#!/bin/sh\nexec svlogd -tt ./main\n```\n\n**Note** This will cause output of the running process to go to `/etc/sv/chef-client/log/main/current`. Some people may not like this, see the following example. This is preserved for compatibility reasons.\n\nFinally, set up the service in the recipe with:\n\n```ruby\nrunit_service \"chef-client\"\n```\n\n**Default Logger Example**\n\nTo use a default logger with svlogd which will log to `/var/log/chef-client/current`, instead, use the `default_logger` option.\n\n```ruby\nrunit_service \"chef-client\" do\n  default_logger true\nend\n```\n\n**No Log Service**\n\nIf there isn't an appendant log service, set `log` to false, and the log/run script won't be created.\n\n```ruby\nrunit_service \"no-svlog\" do\n  log false\nend\n```\n\n**Check Script**\n\nTo create a service that has a check script in its service directory, set the `check` parameter to `true`, and create a `sv-checker-check.erb` template.\n\n```ruby\nrunit_service \"checker\" do\n  check true\nend\n```\n\nThis will create `/etc/sv/checker/check`.\n\n**Finish Script**\n\nTo create a service that has a finish script in its service directory, set the `finish` parameter to `true`, and create a `sv-finisher-finish.erb` template.\n\n```ruby\nrunit_service \"finisher\" do\n  finish true\nend\n```\n\nThis will create `/etc/sv/finisher/finish`.\n\n**Alternate service directory**\n\nIf the service directory for the managed service isn't the `sv_dir` (`/etc/sv`), then specify it:\n\n```ruby\nrunit_service \"custom_service\" do\n  sv_dir \"/etc/custom_service/runit\"\nend\n```\n\n**No Service Directory**\n\nIf the service to manage has a package that provides its service directory, such as `git-daemon` on Debian systems, set `sv_templates` to false.\n\n```ruby\npackage \"git-daemon-run\"\n\nrunit_service \"git-daemon\" do\n  sv_templates false\nend\n```\n\nThis will create the service symlink in `/etc/service`, but it will not manage any templates in the service directory.\n\n**User Controlled Services**\n\nTo set up services controlled by a non-privileged user, we follow the recommended configuration in the [runit documentation](http://smarden.org/runit/faq.html#user) (Is it possible to allow a user other than root to control a service?).\n\nSuppose the user's name is floyd, and floyd wants to run floyds-app. Assuming that the floyd user and group are already managed with Chef, create a `runsvdir-floyd` runit_service.\n\n```ruby\nrunit_service \"runsvdir-floyd\"\n```\n\nCreate the `sv-runsvdir-floyd-log-run.erb` template, or add `log false`. Also create the `sv-runsvdir-floyd-run.erb` with the following content:\n\n```bash\n#!/bin/sh\nexec 2>&1\nexec chpst -ufloyd runsvdir /home/floyd/service\n```\n\nNext, create the `runit_service` resource for floyd's app:\n\n```ruby\nrunit_service \"floyds-app\" do\n  sv_dir \"/home/floyd/sv\"\n  service_dir \"/home/floyd/service\"\n  owner \"floyd\"\n  group \"floyd\"\nend\n```\n\nAnd now floyd can manage the service with sv:\n\n```text\n$ id\nuid=1000(floyd) gid=1001(floyd) groups=1001(floyd)\n$ sv stop /home/floyd/service/floyds-app/\nok: down: /home/floyd/service/floyds-app/: 0s, normally up\n$ sv start /home/floyd/service/floyds-app/\nok: run: /home/floyd/service/floyds-app/: (pid 5287) 0s\n$ sv status /home/floyd/service/floyds-app/\nrun: /home/floyd/service/floyds-app/: (pid 5287) 13s; run: log: (pid 4691) 726s\n```\n\n**Options**\n\nNext, let's set up memcached under runit with some additional options using the `options` parameter. First, the `memcached/templates/default/sv-memcached-run.erb` template:\n\n```bash\n#!/bin/sh\nexec 2>&1\nexec chpst -u <%= @options[:user] %> /usr/bin/memcached -v -m <%= @options[:memory] %> -p <%= @options[:port] %>\n```\n\nNote that the script uses `chpst` (which comes with runit) to set the user option, then starts memcached on the specified memory and port (see below).\n\nThe log/run template, `memcached/templates/default/sv-memcached-log-run.erb`:\n\n```bash\n#!/bin/sh\nexec svlogd -tt ./main\n```\n\nFinally, the `runit_service` in our recipe:\n\n```ruby\nrunit_service \"memcached\" do\n  options({\n    :memory => node[:memcached][:memory],\n    :port => node[:memcached][:port],\n    :user => node[:memcached][:user]\n  }.merge(params))\nend\n```\n\nThis is where the user, port and memory options used in the run template are used.\n\n**Notifying Runit Services**\n\nIn previous versions of this cookbook where the definition was used, it created a `service` resource that could be notified. With the `runit_service` resource, recipes need to use the full resource name.\n\nFor example:\n\n```ruby\nrunit_service \"my-service\"\n\ntemplate \"/etc/my-service.conf\" do\n  notifies :restart, \"runit_service[my-service]\"\nend\n```\n\nBecause the resource implements actions for various commands that `sv` can send to the service, any of those actions could be used for notification. For example, `chef-client` supports triggering a Chef run with a USR1 signal.\n\n```ruby\ntemplate \"/tmp/chef-notifier\" do\n  notifies :usr1, \"runit_service[chef-client]\"\nend\n```\n\nFor older implementations of services that used `runit_service` as a definition, but may support alternate service styles, use a conditional, such as based on an attribute:\n\n```ruby\nservice_to_notify = case node['nginx']['init_style']\n                    when \"runit\"\n                      \"runit_service[nginx]\"\n                    else\n                      \"service[nginx]\"\n                    end\n\ntemplate \"/etc/nginx/nginx.conf\" do\n  notifies :restart, service_to_notify\nend\n```\n\n**More Examples**\n\nFor more examples, see the `runit_test` cookbook's `service` recipe in the [git repository](https://github.com/hw-cookbooks/runit).\n\n## Development\n\nYou may use test kitchen with either the vagrant or docker drivers to run integration tests.\n\n**Note:** When using the docker driver please ensure that the container you are using has a working init system, as runit expects to be started by init. In some cases, systemd may need to be run in privileged mode.\n\nFor instance, for ubuntu with upstart:\n\n```\n    driver_config:\n      image: ubuntu-upstart:14.04\n      run_command: /sbin/init\n```\n\nFor redhat derivatives:\n\n```\n    driver_config:\n      image: dockerhub/image-with-systemd\n      run_command: /usr/sbin/init\n      privileged: true\n```\n\n## License & Authors\n\n- Author:: Adam Jacob [adam@chef.io](mailto:adam@chef.io)\n- Author:: Joshua Timberman [joshua@chef.io](mailto:joshua@chef.io)\n- Author:: Sean OMeara [sean@chef.io](mailto:sean@chef.io)\n\n```text\nCopyright:: 2008-2016, Chef Software, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0","gentoo":">= 0.0.0","centos":">= 0.0.0","redhat":">= 0.0.0","amazon":">= 0.0.0","scientific":">= 0.0.0","oracle":">= 0.0.0","enterpriseenterprise":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{"packagecloud":">= 0.0.0","yum-epel":">= 0.0.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"runit":"Installs and configures runit"}}
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/runit/metadata.json to tempfile /tmp/chef-rest20160913-19215-cro9ga
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-testing-source']['repositoryid'] = 'epel-testing-source'
default['yum']['epel-testing-source']['description'] = 'Extra Packages for $releasever - $basearch - Testing Source'
if node['platform'] == 'amazon'
  default['yum']['epel-testing-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel6&arch=$basearch'
  default['yum']['epel-testing-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-testing-source']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-testing-source']['gpgkey'] = (node['platform_version'].to_i == 5 ? 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL' : "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}")
end
default['yum']['epel-testing-source']['failovermethod'] = 'priority'
default['yum']['epel-testing-source']['gpgcheck'] = true
default['yum']['epel-testing-source']['enabled'] = false
default['yum']['epel-testing-source']['managed'] = false
default['yum']['epel-testing-source']['make_cache'] = true
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb to tempfile /tmp/chef-rest20160913-19215-1mc9ze2
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/runit/metadata.json in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-testing-source.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum-epel/attributes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-source.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/README.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fdf400
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fdf4c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "README.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000f1d358
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000f1da10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-testing-debuginfo.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000137c0c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000137c700>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-debuginfo.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e3b420
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e3b880>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum-epel']['repositories'] = %w(epel epel-debuginfo epel-source epel-testing epel-testing-debuginfo epel-testing-source)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-1xhcdtm
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/metadata.json
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel']['repositoryid'] = 'epel'
default['yum']['epel']['description'] = 'Extra Packages for $releasever - $basearch'

case node['kernel']['machine']
when 's390x'
  default['yum']['epel']['baseurl'] = 'https://kojipkgs.fedoraproject.org/rhel/rc/7/Server/s390x/os/'
  default['yum']['epel']['gpgkey'] = 'https://kojipkgs.fedoraproject.org/rhel/rc/7/Server/s390x/os/RPM-GPG-KEY-redhat-release'
else
  if node['platform'] == 'amazon'
    default['yum']['epel']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch'
    default['yum']['epel']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
  else
    default['yum']['epel']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-#{node['platform_version'].to_i}&arch=$basearch"
    default['yum']['epel']['gpgkey'] = (node['platform_version'].to_i == 5 ? 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL' : "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}")
  end
end

default['yum']['epel']['failovermethod'] = 'priority'
default['yum']['epel']['gpgcheck'] = true
default['yum']['epel']['enabled'] = true
default['yum']['epel']['managed'] = true
default['yum']['epel']['make_cache'] = true
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel.rb to tempfile /tmp/chef-rest20160913-19215-c0r3jb
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/recipes/server.rb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-testing']['repositoryid'] = 'epel-testing'
default['yum']['epel-testing']['description'] = 'Extra Packages for $releasever - $basearch - Testing '
if node['platform'] == 'amazon'
  default['yum']['epel-testing-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=testing-epel6&arch=$basearch'
  default['yum']['epel-testing-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-testing-source']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-testing-source']['gpgkey'] = (node['platform_version'].to_i == 5 ? 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL' : "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}")
end

default['yum']['epel-testing']['failovermethod'] = 'priority'
default['yum']['epel-testing']['gpgcheck'] = true
default['yum']['epel-testing']['enabled'] = false
default['yum']['epel-testing']['managed'] = false
default['yum']['epel-testing']['make_cache'] = true
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb to tempfile /tmp/chef-rest20160913-19215-1lnat95
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-testing.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/recipes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-debuginfo']['repositoryid'] = 'epel-debuginfo'
default['yum']['epel-debuginfo']['description'] = 'Extra Packages for $releasever - $basearch - Debug'

if node['platform'] == 'amazon'
  default['yum']['epel-debuginfo']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-6&arch=$basearch'
  default['yum']['epel-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-debuginfo']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-debuginfo']['gpgkey'] = (node['platform_version'].to_i == 5 ? 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL' : "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}")
end
default['yum']['epel-debuginfo']['failovermethod'] = 'priority'
default['yum']['epel-debuginfo']['gpgcheck'] = true
default['yum']['epel-debuginfo']['enabled'] = false
default['yum']['epel-debuginfo']['managed'] = false
default['yum']['epel-debuginfo']['make_cache'] = true
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb to tempfile /tmp/chef-rest20160913-19215-1k65xhr
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-debuginfo.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# yum-epel Cookbook
[![Build Status](https://travis-ci.org/chef-cookbooks/yum-epel.svg?branch=master)](http://travis-ci.org/chef-cookbooks/yum-epel) [![Cookbook Version](https://img.shields.io/cookbook/v/yum-epel.svg)](https://supermarket.chef.io/cookbooks/yum-epel)

Extra Packages for Enterprise Linux (or EPEL) is a Fedora Special Interest Group that creates, maintains, and manages a high quality set of additional packages for Enterprise Linux, including, but not limited to, Red Hat Enterprise Linux (RHEL), CentOS and Scientific Linux (SL), Oracle Linux (OL).

The yum-epel cookbook takes over management of the default repositoryids shipped with epel-release. It allows attribute manipulation of `epel`, `epel-debuginfo`, `epel-source`, `epel-testing`, `epel-testing-debuginfo`, and `epel-testing-source`.

## Requirements
### Platforms
- RHEL/CentOS and derivatives

### Chef
- Chef 11+

### Cookbooks
- yum version 3.6.3 or higher

## Attributes
The following attributes are set by default

```ruby
default['yum-epel']['repositories'] = %w{epel epel-debuginfo epel-source epel-testing epel-testing-debuginfo epel-testing-source}
```

```ruby
default['yum']['epel']['repositoryid'] = 'epel'
default['yum']['epel']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch'
default['yum']['epel']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&arch=$basearch'
default['yum']['epel']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel']['failovermethod'] = 'priority'
default['yum']['epel']['gpgcheck'] = true
default['yum']['epel']['enabled'] = true
default['yum']['epel']['managed'] = true
```

```ruby
default['yum']['epel-debuginfo']['repositoryid'] = 'epel-debuginfo'
default['yum']['epel-debuginfo']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch - Debug'
default['yum']['epel-debuginfo']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&arch=$basearch'
default['yum']['epel-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel-debuginfo']['failovermethod'] = 'priority'
default['yum']['epel-debuginfo']['gpgcheck'] = true
default['yum']['epel-debuginfo']['enabled'] = false
default['yum']['epel-debuginfo']['managed'] = false
```

```ruby
default['yum']['epel-source']['repositoryid'] = 'epel-source'
default['yum']['epel-source']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch - Source'
default['yum']['epel-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch'
default['yum']['epel-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel-source']['failovermethod'] = 'priority'
default['yum']['epel-source']['gpgcheck'] = true
default['yum']['epel-source']['enabled'] = false
default['yum']['epel-source']['managed'] = false
```

```ruby
default['yum']['epel-testing']['repositoryid'] = 'epel-testing'
default['yum']['epel-testing']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch'
default['yum']['epel-testing']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-epel6&arch=$basearch'
default['yum']['epel-testing']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6r'
default['yum']['epel-testing']['failovermethod'] = 'priority'
default['yum']['epel-testing']['gpgcheck'] = true
default['yum']['epel-testing']['enabled'] = false
default['yum']['epel-testing']['managed'] = false
```

```ruby
default['yum']['epel-testing-debuginfo']['repositoryid'] = 'epel-testing-debuginfo'
default['yum']['epel-testing-debuginfo']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch Debug'
default['yum']['epel-testing-debuginfo']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-debug-epel6&arch=$basearch'
default['yum']['epel-testing-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel-testing-debuginfo']['failovermethod'] = 'priority'
default['yum']['epel-testing-debuginfo']['gpgcheck'] = true
default['yum']['epel-testing-debuginfo']['enabled'] = false
default['yum']['epel-testing-debuginfo']['managed'] = false
```

```ruby
default['yum']['epel-testing-source']['repositoryid'] = 'epel-testing-source'
default['yum']['epel-testing-source']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch Source'
default['yum']['epel-testing-source']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-source-epel6&arch=$basearch'
default['yum']['epel-testing-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel-testing-source']['failovermethod'] = 'priority'
default['yum']['epel-testing-source']['gpgcheck'] = true
default['yum']['epel-testing-source']['enabled'] = false
default['yum']['epel-testing-source']['managed'] = false
```

## Recipes
- default - Walks through node attributes and feeds a yum_resource
- parameters. The following is an example a resource generated by the
- recipe during compilation.

```ruby
  yum_repository 'epel' do
    mirrorlist 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&arch=$basearch'
    description 'Extra Packages for Enterprise Linux 5 - $basearch'
    enabled true
    gpgcheck true
    gpgkey 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL'
  end
```

## Usage Example
To disable the epel repository through a Role or Environment definition

```
default_attributes(
  :yum => {
    :epel => {
      :enabled => {
        false
       }
     }
   }
 )
```

Uncommonly used repositoryids are not managed by default. This is speeds up integration testing pipelines by avoiding yum-cache builds that nobody cares about. To enable the epel-testing repository with a wrapper cookbook, place the following in a recipe:

```ruby
node.default['yum']['epel-testing']['enabled'] = true
node.default['yum']['epel-testing']['managed'] = true
include_recipe 'yum-epel'
```

## More Examples
Point the epel repositories at an internally hosted server.

```ruby
node.default['yum']['epel']['enabled'] = true
node.default['yum']['epel']['mirrorlist'] = nil
node.default['yum']['epel']['baseurl'] = 'https://internal.example.com/centos/6/os/x86_64'
node.default['yum']['epel']['sslverify'] = false

include_recipe 'yum-epel'
```

## License & Authors
**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2011-2016, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/CHANGELOG.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/README.md to tempfile /tmp/chef-rest20160913-19215-c4hccp
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/README.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003edd9a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003edda98>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "metadata.json"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"yum-epel","version":"0.7.1","description":"Installs and configures the EPEL Yum repository","long_description":"# yum-epel Cookbook\n[![Build Status](https://travis-ci.org/chef-cookbooks/yum-epel.svg?branch=master)](http://travis-ci.org/chef-cookbooks/yum-epel) [![Cookbook Version](https://img.shields.io/cookbook/v/yum-epel.svg)](https://supermarket.chef.io/cookbooks/yum-epel)\n\nExtra Packages for Enterprise Linux (or EPEL) is a Fedora Special Interest Group that creates, maintains, and manages a high quality set of additional packages for Enterprise Linux, including, but not limited to, Red Hat Enterprise Linux (RHEL), CentOS and Scientific Linux (SL), Oracle Linux (OL).\n\nThe yum-epel cookbook takes over management of the default repositoryids shipped with epel-release. It allows attribute manipulation of `epel`, `epel-debuginfo`, `epel-source`, `epel-testing`, `epel-testing-debuginfo`, and `epel-testing-source`.\n\n## Requirements\n### Platforms\n- RHEL/CentOS and derivatives\n\n### Chef\n- Chef 11+\n\n### Cookbooks\n- yum version 3.6.3 or higher\n\n## Attributes\nThe following attributes are set by default\n\n```ruby\ndefault['yum-epel']['repositories'] = %w{epel epel-debuginfo epel-source epel-testing epel-testing-debuginfo epel-testing-source}\n```\n\n```ruby\ndefault['yum']['epel']['repositoryid'] = 'epel'\ndefault['yum']['epel']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch'\ndefault['yum']['epel']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&arch=$basearch'\ndefault['yum']['epel']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel']['failovermethod'] = 'priority'\ndefault['yum']['epel']['gpgcheck'] = true\ndefault['yum']['epel']['enabled'] = true\ndefault['yum']['epel']['managed'] = true\n```\n\n```ruby\ndefault['yum']['epel-debuginfo']['repositoryid'] = 'epel-debuginfo'\ndefault['yum']['epel-debuginfo']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch - Debug'\ndefault['yum']['epel-debuginfo']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&arch=$basearch'\ndefault['yum']['epel-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel-debuginfo']['failovermethod'] = 'priority'\ndefault['yum']['epel-debuginfo']['gpgcheck'] = true\ndefault['yum']['epel-debuginfo']['enabled'] = false\ndefault['yum']['epel-debuginfo']['managed'] = false\n```\n\n```ruby\ndefault['yum']['epel-source']['repositoryid'] = 'epel-source'\ndefault['yum']['epel-source']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch - Source'\ndefault['yum']['epel-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch'\ndefault['yum']['epel-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel-source']['failovermethod'] = 'priority'\ndefault['yum']['epel-source']['gpgcheck'] = true\ndefault['yum']['epel-source']['enabled'] = false\ndefault['yum']['epel-source']['managed'] = false\n```\n\n```ruby\ndefault['yum']['epel-testing']['repositoryid'] = 'epel-testing'\ndefault['yum']['epel-testing']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch'\ndefault['yum']['epel-testing']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-epel6&arch=$basearch'\ndefault['yum']['epel-testing']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6r'\ndefault['yum']['epel-testing']['failovermethod'] = 'priority'\ndefault['yum']['epel-testing']['gpgcheck'] = true\ndefault['yum']['epel-testing']['enabled'] = false\ndefault['yum']['epel-testing']['managed'] = false\n```\n\n```ruby\ndefault['yum']['epel-testing-debuginfo']['repositoryid'] = 'epel-testing-debuginfo'\ndefault['yum']['epel-testing-debuginfo']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch Debug'\ndefault['yum']['epel-testing-debuginfo']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-debug-epel6&arch=$basearch'\ndefault['yum']['epel-testing-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel-testing-debuginfo']['failovermethod'] = 'priority'\ndefault['yum']['epel-testing-debuginfo']['gpgcheck'] = true\ndefault['yum']['epel-testing-debuginfo']['enabled'] = false\ndefault['yum']['epel-testing-debuginfo']['managed'] = false\n```\n\n```ruby\ndefault['yum']['epel-testing-source']['repositoryid'] = 'epel-testing-source'\ndefault['yum']['epel-testing-source']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch Source'\ndefault['yum']['epel-testing-source']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-source-epel6&arch=$basearch'\ndefault['yum']['epel-testing-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel-testing-source']['failovermethod'] = 'priority'\ndefault['yum']['epel-testing-source']['gpgcheck'] = true\ndefault['yum']['epel-testing-source']['enabled'] = false\ndefault['yum']['epel-testing-source']['managed'] = false\n```\n\n## Recipes\n- default - Walks through node attributes and feeds a yum_resource\n- parameters. The following is an example a resource generated by the\n- recipe during compilation.\n\n```ruby\n  yum_repository 'epel' do\n    mirrorlist 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&arch=$basearch'\n    description 'Extra Packages for Enterprise Linux 5 - $basearch'\n    enabled true\n    gpgcheck true\n    gpgkey 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL'\n  end\n```\n\n## Usage Example\nTo disable the epel repository through a Role or Environment definition\n\n```\ndefault_attributes(\n  :yum => {\n    :epel => {\n      :enabled => {\n        false\n       }\n     }\n   }\n )\n```\n\nUncommonly used repositoryids are not managed by default. This is speeds up integration testing pipelines by avoiding yum-cache builds that nobody cares about. To enable the epel-testing repository with a wrapper cookbook, place the following in a recipe:\n\n```ruby\nnode.default['yum']['epel-testing']['enabled'] = true\nnode.default['yum']['epel-testing']['managed'] = true\ninclude_recipe 'yum-epel'\n```\n\n## More Examples\nPoint the epel repositories at an internally hosted server.\n\n```ruby\nnode.default['yum']['epel']['enabled'] = true\nnode.default['yum']['epel']['mirrorlist'] = nil\nnode.default['yum']['epel']['baseurl'] = 'https://internal.example.com/centos/6/os/x86_64'\nnode.default['yum']['epel']['sslverify'] = false\n\ninclude_recipe 'yum-epel'\n```\n\n## License & Authors\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2011-2016, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","oracle":">= 0.0.0","redhat":">= 0.0.0","scientific":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{"yum":">= 3.6.3"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/yum-epel","issues_url":"https://github.com/chef-cookbooks/yum-epel/issues","chef_version":{},"ohai_version":{}}
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/metadata.json to tempfile /tmp/chef-rest20160913-19215-qtx035
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/metadata.json in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/resources/file_input.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ce3a30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/recipes/server.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ce3be8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "recipes",
   "server.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-testing-debuginfo']['repositoryid'] = 'epel-testing-debuginfo'
default['yum']['epel-testing-debuginfo']['description'] = 'Extra Packages for $releasever - $basearch - Testing Debug'
if node['platform'] == 'amazon'
  default['yum']['epel-testing-debuginfo']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel6&arch=$basearch'
  default['yum']['epel-testing-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-testing-debuginfo']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-testing-debuginfo']['gpgkey'] = (node['platform_version'].to_i == 5 ? 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL' : "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}")
end

default['yum']['epel-testing-debuginfo']['failovermethod'] = 'priority'
default['yum']['epel-testing-debuginfo']['gpgcheck'] = true
default['yum']['epel-testing-debuginfo']['enabled'] = false
default['yum']['epel-testing-debuginfo']['managed'] = false
default['yum']['epel-testing-debuginfo']['make_cache'] = true
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003efb8e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003efbae8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb to tempfile /tmp/chef-rest20160913-19215-m1aa41
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c537c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c53980>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ec5808
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ec5920>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "CHANGELOG.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# yum-epel Cookbook CHANGELOG

This file is used to list changes made in each version of the yum-epel cookbook.

## v0.7.1 (2016-08-19)
- Remove bats testing
- Fix attribute settings 
- Cleanup travis file

## v0.7.0 (2016-04-27)

- Added support for IBM zlinux platform
- Added back the Test Kitchen support for local vagrant testing
- Added long_description to the metadata
- Loosen the dependency on the yum cookbook

## v0.6.5

- updated to use `make_cache` option that yum cookbook allows for the yum resource to use.

## v0.6.5 (2015-11-23)

- Fix setting bool false properties

## v0.6.4 (2015-10-27)

- Updating default recipe for Chef 13 deprecation warnings. Not
- passing nil.

## v0.6.3 (2015-09-22)

- Added standard Chef gitignore and chefignore files
- Added the standard chef rubocop config
- Update contributing, maintainers, and testing docs
- Update Chefspec config to 4.X format
- Update distro versions in the Kitchen config
- Add Travis CI and cookbook version badges in the readme
- Expand the requirements section in the readme
- Add additional distros to the metadata
- Added source_url and issues_url metadata

## v0.6.2 (2015-06-21)

- Depending on yum ~> 3.2
- Support for the password attribute wasn't added to the
- yum_repository LWRP until yum 3.2.0.

## v0.6.1 (2015-06-21)

- Switching to https for URL links
- Using metalink URLs

## v0.6.0 (2015-01-03)

- Adding EL7 support

## v0.5.3 (2014-10-28)

- Revert Use HTTPS for GPG keys and mirror lists

## v0.5.2 (2014-10-28)

- Use HTTPS for GPG keys and mirror lists
- Use local key on Amazon Linux

## v0.5.0 (2014-09-02)

- Add all attribute available to LWRP to allow for tuning.

## v0.4.0 (2014-07-27)

- [#9] Allowing list of repositories to reference configurable.

## v0.3.6 (2014-04-09)

- [COOK-4509] add RHEL7 support to yum-epel cookbook

## v0.3.4 (2014-02-19)

COOK-4353 - Fixing typo in readme

## v0.3.2 (2014-02-13)

Updating README to explain the 'managed' parameter

## v0.3.0 (2014-02-12)

[COOK-4292] - Do not manage secondary repos by default

## v0.2.0

Adding Amazon Linux support

## v0.1.6

Fixing up attribute values for EL6

## v0.1.4

Adding CHANGELOG.md

## v0.1.0

initial release
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/libraries/matchers.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003aca988
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003acaaa0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-n7fjfh
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/attributes/default.rb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d24148
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/resources/file_input.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d24238>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "resources",
   "file_input.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: rsyslog
# Recipe:: server
#
# Copyright 2009-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Manually set this attribute
node.normal['rsyslog']['server'] = true

include_recipe 'rsyslog::default'

directory node['rsyslog']['log_dir'] do
  owner    node['rsyslog']['user']
  group    node['rsyslog']['group']
  mode     '0755'
  recursive true
end

template "#{node['rsyslog']['config_prefix']}/rsyslog.d/35-server-per-host.conf" do
  source   '35-server-per-host.conf.erb'
  owner    'root'
  group    'root'
  mode     '0644'
  notifies :run, 'execute[validate_config]'
  notifies :restart, "service[#{node['rsyslog']['service_name']}]"
end

# if we're a server we shouldn't be sending logs to a remote like a client
file "#{node['rsyslog']['config_prefix']}/rsyslog.d/49-remote.conf" do
  action   :delete
  notifies :run, 'execute[validate_config]'
  notifies :restart, "service[#{node['rsyslog']['service_name']}]"
  only_if  { ::File.exist?("#{node['rsyslog']['config_prefix']}/rsyslog.d/49-remote.conf") }
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/server.rb to tempfile /tmp/chef-rest20160913-19215-hubfpm
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-myz0z5
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/templates/default/49-remote.conf.erb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: rsyslog
# Recipe:: default
#
# Copyright 2009-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

package 'rsyslog'
package 'rsyslog-relp' if node['rsyslog']['use_relp']

if node['rsyslog']['enable_tls'] && node['rsyslog']['tls_ca_file']
  Chef::Log.fatal("Recipe rsyslog::default can not use 'enable_tls' with protocol '#{node['rsyslog']['protocol']}' (requires 'tcp')") unless node['rsyslog']['protocol'] == 'tcp'
  package 'rsyslog-gnutls'
end

directory "#{node['rsyslog']['config_prefix']}/rsyslog.d" do
  owner 'root'
  group 'root'
  mode  '0755'
end

log node['rsyslog']['group']

directory node['rsyslog']['working_dir'] do
  owner node['rsyslog']['user']
  group node['rsyslog']['group']
  mode  '0700'
end

execute 'validate_config' do
  command "rsyslogd -N 1 -f #{node['rsyslog']['config_prefix']}/rsyslog.conf"
  action  :nothing
end

# Our main stub which then does its own rsyslog-specific
# include of things in /etc/rsyslog.d/*
template "#{node['rsyslog']['config_prefix']}/rsyslog.conf" do
  source  'rsyslog.conf.erb'
  owner   'root'
  group   'root'
  mode    '0644'
  notifies :run, 'execute[validate_config]'
  notifies :restart, "service[#{node['rsyslog']['service_name']}]"
end

template "#{node['rsyslog']['config_prefix']}/rsyslog.d/50-default.conf" do
  source  '50-default.conf.erb'
  owner   'root'
  group   'root'
  mode    '0644'
  notifies :run, 'execute[validate_config]'
  notifies :restart, "service[#{node['rsyslog']['service_name']}]"
end

# syslog needs to be stopped before rsyslog can be started on RHEL versions before 6.0
if platform_family?('rhel') && node['platform_version'].to_i < 6
  service 'syslog' do
    action [:stop, :disable]
  end
elsif platform_family?('smartos', 'omnios')
  # syslog needs to be stopped before rsyslog can be started on SmartOS, OmniOS
  service 'system-log' do
    action :disable
  end
end

if platform_family?('omnios')
  # manage the SMF manifest on OmniOS
  template '/var/svc/manifest/system/rsyslogd.xml' do
    source 'omnios-manifest.xml.erb'
    owner 'root'
    group 'root'
    mode '0644'
    notifies :run, 'execute[import rsyslog manifest]', :immediately
  end

  execute 'import rsyslog manifest' do
    action :nothing
    command 'svccfg import /var/svc/manifest/system/rsyslogd.xml'
    notifies :restart, "service[#{node['rsyslog']['service_name']}]"
  end
end

service node['rsyslog']['service_name'] do
  supports restart: true, status: true
  action [:enable, :start]
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-jkqrd4
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/recipes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/rsyslog
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/rsyslog/recipes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/CHANGELOG.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/recipes/client.rb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fe1bd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fe1cc8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Jennifer Davis](https://github.com/sigje)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Sean OMeara](https://github.com/someara)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-eb9kha
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a833f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a836a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Cookbook Name:: rsyslog
# Resource:: file_input
#
# Copyright 2012-2015, Joseph Holsten
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :create

property :name, String, name_attribute: true, required: true
property :file, String, required: true
property :priority, Integer, default: 99
property :severity, String
property :facility, String
property :cookbook_source, String, default: 'rsyslog'
property :template_source, String, default: 'file-input.conf.erb'

action :create do
  log_name = name
  template "/etc/rsyslog.d/#{priority}-#{name}.conf" do
    mode '0664'
    owner node['rsyslog']['user']
    group node['rsyslog']['group']
    source template_source
    cookbook cookbook_source
    variables 'file_name' => file,
              'tag' => log_name,
              'state_file' => log_name,
              'severity' => severity,
              'facility' => facility
    notifies :restart, "service[#{node['rsyslog']['service_name']}]"
  end

  service node['rsyslog']['service_name'] do
    supports restart: true, status: true
    action [:enable, :start]
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/recipes/server.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/resources/file_input.rb to tempfile /tmp/chef-rest20160913-19215-waxgd
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/yum-epel/MAINTAINERS.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039fdc80
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/rsyslog/templates/default/49-remote.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039fdd70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "templates",
   "default",
   "49-remote.conf.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/templates/default/rsyslog.conf.erb
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/resources/file_input.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/rsyslog/resources
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/templates/default/50-default.conf.erb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000386ea40
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/rsyslog/templates/default/50-default.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000386ee50>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "templates",
   "default",
   "50-default.conf.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/templates/default/omnios-manifest.xml.erb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)
  def create_rsyslog_file_input(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:rsyslog_file_input, :create, resource_name)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-1h0rvui
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/libraries/matchers.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/rsyslog/libraries
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/templates/smartos/50-default.conf.erb
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: rsyslog
# Attributes:: default
#
# Copyright 2009-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['rsyslog']['local_host_name']           = nil
default['rsyslog']['default_log_dir']           = '/var/log'
default['rsyslog']['log_dir']                   = '/srv/rsyslog'
default['rsyslog']['working_dir']               = '/var/spool/rsyslog'
default['rsyslog']['server']                    = false
default['rsyslog']['use_relp']                  = false
default['rsyslog']['relp_port']                 = 20_514
default['rsyslog']['protocol']                  = 'tcp'
default['rsyslog']['bind']                      = '*'
default['rsyslog']['port']                      = 514
default['rsyslog']['server_ip']                 = nil
default['rsyslog']['server_search']             = 'role:loghost'
default['rsyslog']['remote_logs']               = true
default['rsyslog']['per_host_dir']              = '%$YEAR%/%$MONTH%/%$DAY%/%HOSTNAME%'
default['rsyslog']['max_message_size']          = '2k'
default['rsyslog']['preserve_fqdn']             = 'off'
default['rsyslog']['high_precision_timestamps'] = false
default['rsyslog']['repeated_msg_reduction']    = 'on'
default['rsyslog']['logs_to_forward']           = '*.*'
default['rsyslog']['enable_imklog']             = true
default['rsyslog']['config_prefix']             = '/etc'
default['rsyslog']['default_file_template']     = nil
default['rsyslog']['default_remote_template']   = nil
default['rsyslog']['rate_limit_interval']       = nil
default['rsyslog']['rate_limit_burst']          = nil
default['rsyslog']['enable_tls']                = false
default['rsyslog']['action_queue_max_disk_space'] = '1G'
default['rsyslog']['tls_ca_file']               = nil
default['rsyslog']['tls_certificate_file']      = nil
default['rsyslog']['tls_key_file']              = nil
default['rsyslog']['tls_auth_mode']             = 'anon'
default['rsyslog']['tls_permitted_peer']        = nil
default['rsyslog']['use_local_ipv4']            = false
default['rsyslog']['allow_non_local']           = false
default['rsyslog']['custom_remote']             = [{}]
default['rsyslog']['additional_directives'] = {}

# The most likely platform-specific attributes
default['rsyslog']['service_name']              = 'rsyslog'
default['rsyslog']['user']                      = 'root'
default['rsyslog']['group']                     = 'adm'
default['rsyslog']['priv_seperation']           = false
default['rsyslog']['priv_user']                 = nil
default['rsyslog']['priv_group']                = nil
default['rsyslog']['modules']                   = %w(imuxsock imklog)

# platform specific attributes
case node['platform']
when 'ubuntu'
  # syslog user introduced with natty package
  if node['platform_version'].to_f >= 11.04
    default['rsyslog']['user'] = 'syslog'
    default['rsyslog']['group'] = 'adm'
    default['rsyslog']['priv_seperation'] = true
    default['rsyslog']['priv_group'] = 'syslog'
  end
when 'arch'
  default['rsyslog']['service_name'] = 'rsyslogd'
when 'smartos'
  default['rsyslog']['config_prefix'] = '/opt/local/etc'
  default['rsyslog']['modules'] = %w(immark imsolaris imtcp imudp)
  default['rsyslog']['group'] = 'root'
when 'omnios'
  default['rsyslog']['service_name'] = 'system/rsyslogd'
  default['rsyslog']['modules'] = %w(immark imsolaris imtcp imudp)
  default['rsyslog']['group'] = 'root'
end

# platform family specific attributes
case node['platform_family']
when 'suse'
  default['rsyslog']['service_name'] = 'syslog'
  default['rsyslog']['group'] = 'root'
  default['rsyslog']['default_facility_logs'] = {
    '*.emerg' => ':omusrmsg:*',
    'mail.*' => "-#{node['rsyslog']['default_log_dir']}/mail.log",
    'mail.info' => "-#{node['rsyslog']['default_log_dir']}/mail.info",
    'mail.warning' => "-#{node['rsyslog']['default_log_dir']}/mail.warn",
    'mail.err' => "#{node['rsyslog']['default_log_dir']}/mail.err",
    'news.crit' => "#{node['rsyslog']['default_log_dir']}/news/news.crit",
    'news.err' => "#{node['rsyslog']['default_log_dir']}/news/news.err",
    'news.notice' => "-#{node['rsyslog']['default_log_dir']}/news/news.notice",
    '*.=warning;*.=err' => "-#{node['rsyslog']['default_log_dir']}/warn",
    '*.crit' => "#{node['rsyslog']['default_log_dir']}/warn",
    '*.*;mail.none;news.none' => "#{node['rsyslog']['default_log_dir']}/messages",
    'local0.*;local1.*' => "-#{node['rsyslog']['default_log_dir']}/localmessages",
    'local2.*;local3.*' => "-#{node['rsyslog']['default_log_dir']}/localmessages",
    'local4.*;local5.*' => "-#{node['rsyslog']['default_log_dir']}/localmessages",
    'local6.*;local7.*' => "-#{node['rsyslog']['default_log_dir']}/localmessages"
  }
when 'rhel', 'fedora'
  default['rsyslog']['working_dir'] = '/var/lib/rsyslog'
  # format { facility => destination }
  default['rsyslog']['default_facility_logs'] = {
    '*.info;mail.none;authpriv.none;cron.none' => "#{node['rsyslog']['default_log_dir']}/messages",
    'authpriv.*' => "#{node['rsyslog']['default_log_dir']}/secure",
    'mail.*' => "-#{node['rsyslog']['default_log_dir']}/maillog",
    'cron.*' => "#{node['rsyslog']['default_log_dir']}/cron",
    '*.emerg' => ':omusrmsg:*',
    'uucp,news.crit' => "#{node['rsyslog']['default_log_dir']}/spooler",
    'local7.*' => "#{node['rsyslog']['default_log_dir']}/boot.log"
  }
  # RHEL >= 7 and Fedora >= 19 use journald in systemd. Amazon Linux doesn't.
  if node['platform'] != 'amazon' && (node['platform_version'].to_i == 7 || node['platform_version'].to_i >= 19)
    default['rsyslog']['modules'] = %w(imuxsock imjournal)
    default['rsyslog']['additional_directives'] = { 'OmitLocalLogging' => 'on', 'IMJournalStateFile' => 'imjournal.state' }
  end
else
  # format { facility => destination }
  default['rsyslog']['default_facility_logs'] = {
    'auth,authpriv.*' => "#{node['rsyslog']['default_log_dir']}/auth.log",
    '*.*;auth,authpriv.none' => "-#{node['rsyslog']['default_log_dir']}/syslog",
    'daemon.*' => "-#{node['rsyslog']['default_log_dir']}/daemon.log",
    'kern.*' => "-#{node['rsyslog']['default_log_dir']}/kern.log",
    'mail.*' => "-#{node['rsyslog']['default_log_dir']}/mail.log",
    'user.*' => "-#{node['rsyslog']['default_log_dir']}/user.log",
    'mail.info' => "-#{node['rsyslog']['default_log_dir']}/mail.info",
    'mail.warn' => "-#{node['rsyslog']['default_log_dir']}/mail.warn",
    'mail.err' => "#{node['rsyslog']['default_log_dir']}/mail.err",
    'news.crit' => "#{node['rsyslog']['default_log_dir']}/news/news.crit",
    'news.err' => "#{node['rsyslog']['default_log_dir']}/news/news.err",
    'news.notice' => "-#{node['rsyslog']['default_log_dir']}/news/news.notice",
    '*.=debug;auth,authpriv.none;news.none;mail.none' => "-#{node['rsyslog']['default_log_dir']}/debug",
    '*.=info;*.=notice;*.=warn;auth,authpriv.none;cron,daemon.none;mail,news.none' => "-#{node['rsyslog']['default_log_dir']}/messages",
    '*.emerg' => ':omusrmsg:*'
  }
end

# rsyslog 3/4 do not support the new :omusrmsg:* format and need * instead
if (node['platform'] == 'ubuntu' && node['platform_version'].to_i < 12) || (node['platform_family'] == 'rhel' && node['platform_version'].to_i < 6)
  default['rsyslog']['default_facility_logs']['*.emerg'] = '*'
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-17grpar
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/attributes/default.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/rsyslog/attributes
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Generated by Chef
$ActionQueueType LinkedList # use asynchronous processing
$ActionQueueFileName srvrfwd # set file name, also enables disk mode
$ActionResumeRetryCount -1 # infinite retries on insert failure
$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down
$ActionQueueMaxDiskSpace <%= node['rsyslog']['action_queue_max_disk_space'] %> # Don't use more than this much space for the queue
<% if node['rsyslog']['enable_tls'] && node['rsyslog']['tls_ca_file'] -%>
$DefaultNetstreamDriverCAFile <%= node['rsyslog']['tls_ca_file'] %>
<%   if node['rsyslog']['tls_certificate_file'] -%>
$DefaultNetstreamDriverCertFile <%= node['rsyslog']['tls_certificate_file'] %>
<%   end -%>
<%   if node['rsyslog']['tls_key_file'] -%>
$DefaultNetstreamDriverKeyFile <%= node['rsyslog']['tls_key_file'] %>
<%   end -%>

$DefaultNetstreamDriver gtls
$ActionSendStreamDriverMode 1
$ActionSendStreamDriverAuthMode <%= node['rsyslog']['tls_auth_mode'] %>
<% if node['rsyslog']['tls_permitted_peer'] -%>
$ActionSendStreamDriverPermittedPeer <%= node['rsyslog']['tls_permitted_peer'] %>
<% end -%>
<% end -%>

<% @servers.each do |server| -%>
<%   case server['protocol'] -%>
<%     when "tcp" -%>
<%=      server['logs'] ? server['logs'] : node['rsyslog']['logs_to_forward'] %> @@<%= server['server']  %>:<%= server['port'] ? server['port'] : node['rsyslog']['port'] %><%= server['remote_template'] ? ';' + server['remote_template'] : nil %>
<%     when "udp" -%>
<%=      server['logs'] ? server['logs'] : node['rsyslog']['logs_to_forward'] %> @<%= server['server']  %>:<%= server['port'] ? server['port'] : node['rsyslog']['port'] %><%= server['remote_template'] ? ';' + server['remote_template'] : nil %>
<%     else -%>
<%=      server['logs'] ? server['logs'] : node['rsyslog']['logs_to_forward'] %><%= node['rsyslog']['protocol'] == "tcp" ? " @@" : " @" %><%= server['server']  %>:<%= server['port'] ? server['port'] : node['rsyslog']['port'] %><%= server['remote_template'] ? ';' + server['remote_template'] : nil %>
<%   end -%>
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/49-remote.conf.erb to tempfile /tmp/chef-rest20160913-19215-13r4vfq
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000389e448
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/rsyslog/templates/default/rsyslog.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000389e740>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "templates",
   "default",
   "rsyslog.conf.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/templates/default/49-relp.conf.erb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000375af00
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/rsyslog/templates/default/49-relp.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000375aff0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "templates",
   "default",
   "49-relp.conf.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/templates/default/file-input.conf.erb
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/templates/default/49-remote.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/rsyslog/templates
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/rsyslog/templates/default
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000375a280
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/rsyslog/templates/default/file-input.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000375a3c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "templates",
   "default",
   "file-input.conf.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/templates/default/35-server-per-host.conf.erb
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036bf550
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/rsyslog/templates/smartos/50-default.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036bf618>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "templates",
   "smartos",
   "50-default.conf.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#  Dropped of by Chef.  Modifications will be lost.
#
#  Default rules for rsyslog.
#
#			For more information see rsyslog.conf(5) and <%= node['rsyslog']['config_prefix'] %>/rsyslog.conf

*.err;kern.notice;auth.notice                   /dev/sysmsg
*.err;kern.debug;daemon.notice;mail.crit        /var/adm/messages

*.alert;kern.err;daemon.err                     operator
*.alert                                         root

*.emerg                                         *

mail.debug                                      /var/log/syslog

auth.info                                       /var/log/auth.log
mail.info                                       /var/log/postfix.log
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Generated by Chef
# For more information see rsyslog.conf(5) and /etc/rsyslog.conf

<% node['rsyslog']['default_facility_logs'].each do |key, value| %>
<%= key %>    <%= value %>
<% end %>
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/50-default.conf.erb to tempfile /tmp/chef-rest20160913-19215-1kfd458
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/templates/default/50-default.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Config generated by Chef - manual edits will be overwritten
#
#  /etc/rsyslog.conf  Configuration file for rsyslog.
#
#     For more information see
#     /usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
#
#  Default logging rules can be found in /etc/rsyslog.d/50-default.conf
#
# Set hostname
#
<% if node['rsyslog']['local_host_name'] -%>
$LocalHostName <%= node['rsyslog']['local_host_name'] %>
<% end %>
#
# Set max message size
#
$MaxMessageSize <%= node['rsyslog']['max_message_size'] %>

#
# Preserve FQDN
#
$PreserveFQDN <%= node['rsyslog']['preserve_fqdn'] %>

#################
#### MODULES ####
#################

<% if node['rsyslog']['modules'] && !node['rsyslog']['modules'].empty? %>
  <% [*node['rsyslog']['modules']].each do |mod| %>
$ModLoad <%= mod %>
  <% end %>
<% end %>

<% if node['rsyslog']['server'] -%>
  <% if node['rsyslog']['enable_tls'] && node['rsyslog']['tls_ca_file'] &&
        node['rsyslog']['tls_key_file'] && node['rsyslog']['tls_certificate_file'] -%>
$DefaultNetstreamDriver gtls
$DefaultNetstreamDriverCAFile <%= node['rsyslog']['tls_ca_file'] %>
$DefaultNetstreamDriverCertFile <%= node['rsyslog']['tls_certificate_file'] %>
$DefaultNetstreamDriverKeyFile <%= node['rsyslog']['tls_key_file'] %>

$ModLoad imtcp

$InputTCPServerStreamDriverMode 1 # run driver in TLS-only mode
$InputTCPServerStreamDriverAuthMode <%= node['rsyslog']['tls_auth_mode'] || 'anon' %>
$InputTCPServerRun <%= node['rsyslog']['port'] %>
# Provide <%= node['rsyslog']['protocol'].upcase %> log reception
  <% else -%>
<% if node['rsyslog']['protocol'] =~ /tcp/ %>
  $ModLoad imtcp
  $InputTCPServerRun <%= node['rsyslog']['port'] %>
<% end -%>
<% if node['rsyslog']['protocol'] =~ /udp/ %>
  $ModLoad imudp
  $UDPServerAddress <%= node['rsyslog']['bind'] %>
  $UDPServerRun <%= node['rsyslog']['port'] %>
<% end -%>
  <% end -%>
<% end -%>

###########################
#### GLOBAL DIRECTIVES ####
###########################

<% if node["rsyslog"]["default_file_template"] -%>
#
# Default log format template
#
$ActionFileDefaultTemplate <%= node["rsyslog"]["default_file_template"] %>
<% elsif !node["rsyslog"]["high_precision_timestamps"] -%>
#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
<% end -%>

# Filter duplicated messages
$RepeatedMsgReduction <%= node['rsyslog']['repeated_msg_reduction'] %>

#
# Set temporary directory to buffer syslog queue
#
$WorkDirectory <%= node['rsyslog']['working_dir'] %>

#
# Set the default permissions for all log files.
#
$FileOwner <%= node['rsyslog']['user'] %>
$FileGroup <%= node['rsyslog']['group'] %>
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022
<% if node['rsyslog']['priv_seperation'] %>
$PrivDropToUser <%= node['rsyslog']['priv_user'] || node['rsyslog']['user'] %>
$PrivDropToGroup <%= node['rsyslog']['priv_group'] || node['rsyslog']['group'] %>
<% end %>
<% unless node['rsyslog']['rate_limit_interval'].nil? %>
#
# Set the amount of time that is being measured for rate limiting
#
$SystemLogRateLimitInterval <%= node['rsyslog']['rate_limit_interval'] %>
<% end %>
<% unless node['rsyslog']['rate_limit_burst'].nil? %>
#
# Set the amount of messages, that have to occur in the time limit of
#   SystemLogRateLimitInterval, to trigger rate limiting
#
$SystemLogRateLimitBurst <%= node['rsyslog']['rate_limit_burst'] %>
<% end %>

#
# Set other directives
#
<% node['rsyslog']['additional_directives'].each_pair do |k,v| %>
$<%= k %> <%= v %>
<% end %>

#
# Include all config files in <%= node['rsyslog']['config_prefix'] %>/rsyslog.d/
#
$IncludeConfig <%= node['rsyslog']['config_prefix'] %>/rsyslog.d/*.conf
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/rsyslog.conf.erb to tempfile /tmp/chef-rest20160913-19215-73s8ln
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/templates/default/rsyslog.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ae3ca8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/recipes/client.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ae3d70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "recipes",
   "client.rb"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: rsyslog
# Recipe:: client
#
# Copyright 2009-2015, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Do not run this recipe if the server attribute is set
return if node['rsyslog']['server']
include_recipe 'rsyslog::default'

results = search(:node, node['rsyslog']['server_search']).map do |server|
  ipaddress = server['ipaddress']
  # If both server and client are on the same cloud and local network, they may be
  # instructed to communicate via the internal interface by enabling `use_local_ipv4`
  if node['rsyslog']['use_local_ipv4'] && server.attribute?('cloud') && server['cloud']['local_ipv4']
    ipaddress = server['cloud']['local_ipv4']
  end
  ipaddress
end
server_ips = Array(node['rsyslog']['server_ip']) + Array(results)

rsyslog_servers = []

server_ips.each do |ip|
  rsyslog_servers << { 'server' => ip, 'port' => node['rsyslog']['port'], 'logs' => node['rsyslog']['logs_to_forward'], 'protocol' => node['rsyslog']['protocol'], 'remote_template' => node['rsyslog']['default_remote_template'] }
end

unless node['rsyslog']['custom_remote'].first.empty?
  node['rsyslog']['custom_remote'].each do |server|
    if server['server'].nil?
      Chef::Application.fatal!('Found a custom_remote server with no IP. Check your custom_remote attribute definition!')
    end
  end
  rsyslog_servers += node['rsyslog']['custom_remote']
end

if rsyslog_servers.empty?
  Chef::Log.warn('The rsyslog::client recipe was unable to determine the remote syslog server. Checked both the server_ip attribute and search! Not forwarding logs.')
else
  remote_type = node['rsyslog']['use_relp'] ? 'relp' : 'remote'
  template "#{node['rsyslog']['config_prefix']}/rsyslog.d/49-remote.conf" do
    source    "49-#{remote_type}.conf.erb"
    owner     'root'
    group     'root'
    mode      '0644'
    variables(servers: rsyslog_servers)
    notifies  :run, 'execute[validate_config]'
    notifies  :restart, "service[#{node['rsyslog']['service_name']}]"
    only_if   { node['rsyslog']['remote_logs'] }
  end

  file "#{node['rsyslog']['config_prefix']}/rsyslog.d/server.conf" do
    action   :delete
    notifies :run, 'execute[validate_config]'
    notifies :restart, "service[#{node['rsyslog']['service_name']}]"
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037b45c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/rsyslog/templates/default/35-server-per-host.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037b4708>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "templates",
   "default",
   "35-server-per-host.conf.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Generated by Chef
# Local modifications will be overwritten

<% if node['rsyslog']['use_relp'] -%>
$ModLoad imrelp
$InputRELPServerRun <%= node['rsyslog']['relp_port'] %>
<% end -%>
$DirGroup <%= node['rsyslog']['group'] %>
$DirCreateMode 0755
$FileGroup <%= node['rsyslog']['group'] %>

$template PerHostAuth,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/auth.log"
$template PerHostCron,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/cron.log"
$template PerHostSyslog,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/syslog"
$template PerHostDaemon,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/daemon.log"
$template PerHostKern,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/kern.log"
$template PerHostLpr,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/lpr.log"
$template PerHostUser,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/user.log"
$template PerHostMail,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/mail.log"
$template PerHostMailInfo,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/mail.info"
$template PerHostMailWarn,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/mail.warn"
$template PerHostMailErr,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/mail.err"
$template PerHostNewsCrit,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/news.crit"
$template PerHostNewsErr,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/news.err"
$template PerHostNewsNotice,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/news.notice"
$template PerHostDebug,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/debug"
$template PerHostMessages,"<%= node['rsyslog']['log_dir'] %>/<%= node['rsyslog']['per_host_dir'] %>/messages"

auth,authpriv.*         ?PerHostAuth
*.*;auth,authpriv.none  -?PerHostSyslog
cron.*                  ?PerHostCron
daemon.*                -?PerHostDaemon
kern.*                  -?PerHostKern
lpr.*                   -?PerHostLpr
mail.*                  -?PerHostMail
user.*                  -?PerHostUser

mail.info               -?PerHostMailInfo
mail.warn               ?PerHostMailWarn
mail.err                ?PerHostMailErr

news.crit               ?PerHostNewsCrit
news.err                ?PerHostNewsErr
news.notice             -?PerHostNewsNotice

*.=debug;\
  auth,authpriv.none;\
  news.none;mail.none   -?PerHostDebug

*.=info;*.=notice;*.=warn;\
  auth,authpriv.none;\
  cron,daemon.none;\
  mail,news.none        -?PerHostMessages


<% unless node['rsyslog']['allow_non_local'] -%>
#
# Stop processing of all non-local messages. You can process remote messages
# on levels less than 35.
#
:fromhost-ip,!isequal,"127.0.0.1" stop
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/smartos/50-default.conf.erb to tempfile /tmp/chef-rest20160913-19215-gqzzc1
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/35-server-per-host.conf.erb to tempfile /tmp/chef-rest20160913-19215-1em762k
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/recipes/client.rb to tempfile /tmp/chef-rest20160913-19215-1atr6m7
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/MAINTAINERS.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038301f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/rsyslog/templates/default/omnios-manifest.xml.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003830308>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "templates",
   "default",
   "omnios-manifest.xml.erb"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/README.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/templates/default/35-server-per-host.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/templates/smartos/50-default.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/rsyslog/templates/smartos
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036960d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036961c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/recipes/client.rb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/CONTRIBUTING.md
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<?xml version='1.0'?>
<!DOCTYPE service_bundle SYSTEM '/usr/share/lib/xml/dtd/service_bundle.dtd.1'>
<service_bundle type='manifest' name='export'>
  <service name='<%= node['rsyslog']['service_name'] %>' type='service' version='0'>
    <create_default_instance enabled='true'/>
    <single_instance/>
    <dependency name='network' grouping='require_all' restart_on='error' type='service'>
      <service_fmri value='svc:/milestone/network:default'/>
    </dependency>
    <dependency name='filesystem' grouping='require_all' restart_on='error' type='service'>
      <service_fmri value='svc:/system/filesystem/local'/>
    </dependency>
    <method_context/>
    <exec_method name='start' type='method' exec='/opt/omni/sbin/rsyslogd -f %{config_file}' timeout_seconds='60'/>
    <exec_method name='stop' type='method' exec=':kill' timeout_seconds='60'/>
    <property_group name='startd' type='framework'>
      <propval name='duration' type='astring' value='contract'/>
      <propval name='ignore_error' type='astring' value='core,signal'/>
    </property_group>
    <property_group name='application' type='application'>
      <propval name='config_file' type='astring' value='<%= node["rsyslog"]["config_prefix"] %>/rsyslog.conf'/>
    </property_group>
    <stability value='Evolving'/>
    <template>
      <common_name>
        <loctext xml:lang='C'>rsyslog daemon</loctext>
      </common_name>
    </template>
  </service>
</service_bundle>
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/omnios-manifest.xml.erb to tempfile /tmp/chef-rest20160913-19215-19d3occ
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/templates/default/omnios-manifest.xml.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/.foodcritic
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Generated by Chef
$ModLoad omrelp
$ActionQueueType LinkedList # use asynchronous processing
$ActionQueueFileName srvrfwd # set file name, also enables disk mode
$ActionResumeRetryCount -1 # infinite retries on insert failure
$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down

<% @servers.each do |server| -%>
<%= node['rsyslog']['logs_to_forward'] %> :omrelp:<%= "#{server['server']}:#{node['rsyslog']['relp_port']}" %><% if server['remote_template'] -%>;<%= server['remote_template'] %> <% elsif node['rsyslog']['default_remote_template'] -%>;<%= node['rsyslog']['default_remote_template'] %><% end -%>
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/49-relp.conf.erb to tempfile /tmp/chef-rest20160913-19215-1vmuq8v
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000232c9c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000232ce20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "README.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# <%= @tag %>.conf - Syslog file inputs for <%= @tag %>
#
# Auto-generated by Chef.
# Local modifications will be overwritten.
#
$ModLoad imfile
$InputFileName <%= @file_name %>
$InputFileTag <%= @tag %>:
$InputFileStateFile <%= @state_file %>
<% if @severity %>
$InputFileSeverity <%= @severity %>
<% end %>
<% if @facility %>
$InputFileFacility <%= @facility %>
<% end %>
$InputRunFileMonitor
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/templates/default/file-input.conf.erb to tempfile /tmp/chef-rest20160913-19215-1l6mimr
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-14w0zd5
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/MAINTAINERS.md in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020af3c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000020af558>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/templates/default/file-input.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000204e1e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000204e500>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   ".foodcritic"]>

[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC016
~FC003
--- END RESPONSE ---
[2016-09-13T12:59:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/.foodcritic to tempfile /tmp/chef-rest20160913-19215-1t6w8z
[2016-09-13T12:59:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:45+01:00] INFO: Storing updated cookbooks/rsyslog/templates/default/49-relp.conf.erb in the cache.
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/CHANGELOG.md
[2016-09-13T12:59:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e3d018
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e3d180>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "CHANGELOG.md"]>

[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/rsyslog/metadata.json
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# rsyslog Cookbook
[![Build Status](https://travis-ci.org/chef-cookbooks/rsyslog.svg?branch=master)](http://travis-ci.org/chef-cookbooks/rsyslog) [![Cookbook Version](https://img.shields.io/cookbook/v/rsyslog.svg)](https://supermarket.chef.io/cookbooks/rsyslog)

Installs and configures rsyslog to replace sysklogd for client and/or server use. By default, the service will be configured to log to files on local disk. See the Recipes and Examples sections for other uses.

## Requirements
### Platforms
- Debian/Ubuntu
- RHEL/CentOS/Scientific/Amazon/Oracle
- Fedora 21+
- OmniOS r151006c
- OpenSUSE

### Chef
- Chef 12+

### Cookbooks
- compat_resource

### Other
To use the `recipe[rsyslog::client]` recipe, you'll need to set up the `rsyslog.server_search` or `rsyslog.server_ip` attributes.  See the **Recipes** and **Examples** sections below.

## Attributes
See `attributes/default.rb` for default values.
- `node['rsyslog']['log_dir']` - If the node is an rsyslog server, this specifies the directory where the logs should be stored.
- `node['rsyslog']['working_dir']` - The temporary working directory where messages are buffered
- `node['rsyslog']['server']` - Determined automatically and set to true on the server.
- `node['rsyslog']['server_ip']` - If not defined then search will be used to determine rsyslog server. Default is `nil`.  This can be a string or an array.
- `node['rsyslog']['server_search']` - Specify the criteria for the server search operation. Default is `role:loghost`.
- `node['rsyslog']['protocol']` - Specify whether to use `udp` or `tcp` for remote loghost. Default is `tcp`. To use both specify both in a string e.g. 'udptcp'.
- `node['rsyslog']['bind']` - Specify the address to which the server should be listening; only use with `node['rsyslog']['protocol'] = 'udp'` because the feature does not work with the `tcp` protocol ([more info](http://www.rsyslog.com/doc/master/configuration/modules/imtcp.html#caveats-known-bugs)).
- `node['rsyslog']['port']` - Specify the port which rsyslog should connect to a remote loghost.
- `node['rsyslog']['remote_logs']` - Specify whether to send all logs to a remote server (client option). Default is `true`.
- `node['rsyslog']['per_host_dir']` - "PerHost" directories for template statements in `35-server-per-host.conf`. Default value is the previous cookbook version's value, to preserve compatibility. See **server** recipe below.
- `node['rsyslog']['priv_seperation']` - Whether to use privilege separation or not.
- `node['rsyslog']['priv_user']` - User to run as when using privilege separation. Defult is  `node['rsyslog']['user']`
- `node['rsyslog']['priv_group']` - Group to run as when using privilege separation. Defult is  `node['rsyslog']['group']`
- `node['rsyslog']['max_message_size']` - Specify the maximum allowed message size. Default is 2k.
- `node['rsyslog']['user']` - Who should own the configuration files and directories
- `node['rsyslog']['group']` - Who should group-own the configuration files and directories
- `node['rsyslog']['defaults_file']` - The full path to the defaults/sysconfig file for the service.
- `node['rsyslog']['service_name']` - The platform-specific name of the service
- `node['rsyslog']['preserve_fqdn']` - Value of the `$PreserveFQDN` configuration directive in `/etc/rsyslog.conf`. Default is 'off' for compatibility purposes.
- `node['rsyslog']['high_precision_timestamps']` -  Enable high precision timestamps, instead of the "old style" format.  Default is 'false'.
- `node['rsyslog']['repeated_msg_reduction']` -  Value of `$RepeatedMsgReduction` configuration directive in `/etc/rsyslog.conf`. Default is 'on'
- `node['rsyslog']['logs_to_forward']` -  Specifies what logs should be sent to the remote rsyslog server. Default is all ( *.* ).
- `node['rsyslog']['default_log_dir']` - log directory used in `50-default.conf` template, defaults to `/var/log`
- `node['rsyslog']['default_facility_logs']` - Hash containing log facilities and destinations used in `50-default.conf` template.
- `node['rsyslog']['default_file_template']` - The name of a pre-defined log format template (ie - RSYSLOG_FileFormat), used for local log files.
- `node['rsyslog']['default_remote_template']` - The name of a pre-defined log format template (ie - RSYSLOG_FileFormat), used for sending to remote servers.
- `node['rsyslog']['rate_limit_interval']` - Value of the $SystemLogRateLimitInterval configuration directive in `/etc/rsyslog.conf`. Default is nil, leaving it to the platform default.
- `node['rsyslog']['rate_limit_burst']` - Value of the $SystemLogRateLimitBurst configuration directive in `/etc/rsyslog.conf`. Default is nil, leaving it to the platform default.
- `node['rsyslog']['action_queue_max_disk_space']` - Max amount of disk space the disk-assisted queue is allowed to use ([more info](http://www.rsyslog.com/doc/queues.html)).
- `node['rsyslog']['enable_tls']` - Whether or not to enable TLS encryption.  When enabled, forces protocol to `tcp`. Default is `false`.
- `node['rsyslog']['tls_ca_file']` - Path to TLS CA file. Required for both server and clients.
- `node['rsyslog']['tls_certificate_file']` - Path to TLS certificate file. Required for server, optional for clients.
- `node['rsyslog']['tls_key_file']` - Path to TLS key file. Required for server, optional for clients.
- `node['rsyslog']['tls_auth_mode']` - Value for `$InputTCPServerStreamDriverAuthMode`/`$ActionSendStreamDriverAuthMode`, determines whether client certs are validated. Defaults to `anon` (no validation).
- `node['rsyslog']['tls_permitted_peer']` - Value for `ActionSendStreamDriverPermittedPeer`, it narrows the list of the allowed hosts. Works with TLS only. Defaults to `nil`.
- `node['rsyslog']['use_local_ipv4']` - Whether or not to make use the remote local IPv4 address on cloud systems when searching for servers (where available).  Default is 'false'.
- `node['rsyslog']['allow_non_local']` - Whether or not to allow non-local messages. If 'false', incoming messages are only allowed from 127.0.0.1. Default is 'false'.
- `node['rsyslog']['custom_remote']` - Array of hashes for configuring custom remote server targets
- `node['rsyslog']['additional_directives']` - Hash of additional directives and their values to place in the main rsyslog config file
- `node['rsyslog']['local_host_name']` -  permits to overwrite the system hostname with the one specified in the directive

## Recipes
### default
Installs the rsyslog package, manages the rsyslog service and sets up basic configuration for a standalone machine.

### client
Includes `recipe[rsyslog]`.

Uses `node['rsyslog']['server_ip']` or Chef search (in that precedence order) to determine the remote syslog server's IP address. If search is used, the search query will look for the first `ipaddress` returned from the criteria specified in `node['rsyslog']['server_search']`.

You can use `node['rsyslog']['custom_config']` to define custom entries for sending logs to remote servers. Available attributes:

```
    'server': Ip/hostname of remote syslog server (Required)
    'port': Port to send logs to
    'logs': Syslog log facilities to send (auth, authpriv, daemon, etc)
    'protocol': Can be tcp or udp
    'remote_template': Rsyslog template used for the messages
```

Example:

```ruby
node['rsyslog']['custom_remote'] = [{ 'server' => '10.10.4.4', 'port' => '567', 'logs' => 'auth.*,mail.*', 'protocol' => 'udp', 'remote_template' => 'RSYSLOG_SyslogProtocol23Format'},
                                    { 'server' => '10.0.0.3', 'port' => '555', 'logs' => 'authpriv,daemon.*' } ]
```

The server key is required; if other keys are left out, the default global values will be used (eg `node['rsyslog']['port']` will be used if 'port' is omitted)

If the node itself is a rsyslog server ie it has `rsyslog.server` set to true then the configuration is skipped.

If the node had an `/etc/rsyslog.d/35-server-per-host.conf` file previously configured, this file gets removed to prevent duplicate logging.

Any previous logs are not cleaned up from the `log_dir`.

### server
Configures the node to be a rsyslog server. The chosen rsyslog server node should be defined in the `server_ip` attribute or resolvable by the specified search criteria specified in `node['rsyslog']['server_search]` (so that nodes making use of the `client` recipe can find the server to log to).

The `server` recipe will create the logs in attribute `node['rsyslog']['log_dir']`, and the configuration in `/etc/rsyslog.d/server.conf`. This recipe also removes any previous configuration to a remote server by removing the file `/etc/rsyslog.d/49-remote.conf`.

The cron job used in the previous version of this cookbook is removed, but it does not remove any existing cron job from your system (so it doesn't break anything unexpectedly). We recommend setting up logrotate for the logfiles instead.

The `log_dir` will be concatenated with `per_host_dir` to store the logs for each client. Modify the attribute to have a value that is allowed by rsyslogs template matching values, see the rsyslog documentation for this.

Directory structure:

```erb
<%= @log_dir %>/<%= @per_host_dir %>/"logfile"
```

For example for the system with hostname `www`:

```text
/srv/rsyslog/2011/11/19/www/messages
```

For example, to change this to just the hostname, set the attribute `node['rsyslog']['per_host_dir']` via a role:

```ruby
"rsyslog" => { "per_host_dir" => "%HOSTNAME%" }
```

At this time, the server can only listen on UDP _or_ TCP.

# Resources
## file_input
Configures a [text file input monitor](http://www.rsyslog.com/doc/imfile.html) to push a log file into rsyslog.  Rsyslog must be installed to use this custom resource either using your own wrapper cookbook or the rsyslog::default recipe

Properties:
- `name`: name of the resource, also used for the syslog tag. Required.
- `file`: file path for input file to monitor. Required.
- `priority`: config order priority. Defaults to `99`.
- `severity`: syslog severity. Must be one of `emergency`, `alert`,
- `critical`, `error`, `warning`, `notice`, `info` or `debug`. If
- undefined, rsyslog interprets this as `notice`.
- `facility`: syslog facility. Must be one of `auth`, `authpriv`,
- `daemon`, `cron`, `ftp`, `lpr`, `kern`, `mail`, `news`, `syslog`,
- `user`, `uucp`, `local0`, ... , `local7`. If undefined, rsyslog
- interprets this as `local0`.
- `cookbook_source`: cookbook containing the template. Defaults to `rsyslog`.
- `template_source`: template file source. Defaults to `file-input.conf.erb`

# Usage
Use `recipe[rsyslog]` to install and start rsyslog as a basic configured service for standalone systems.

Use `recipe[rsyslog::client]` to have nodes log to a remote server (which is found via the `server_ip` attribute or by the recipe's search call -- see **client**)

Use `recipe[rsyslog::server]` to set up a rsyslog server. It will listen on `node['rsyslog']['port']` protocol `node['rsyslog']['protocol']`.

If you set up a different kind of centralized loghost (syslog-ng, graylog2, logstash, etc), you can still send log messages to it as long as the port and protocol match up with the server software. See **Examples**

Use `rsyslog_file_input` within your recipes to forward log files to your remote syslog server.

## Examples
A `base` role (e.g., roles/base.rb), applied to all nodes so they are syslog clients:

```ruby
name "base"
description "Base role applied to all nodes
run_list("recipe[rsyslog::client]")
```

Then, a role for the loghost (should only be one):

```ruby
name "loghost"
description "Central syslog server"
run_list("recipe[rsyslog::server]")
```

By default this will set up the clients search for a node with the `loghost` role to talk to the server on TCP port 514. Change the `protocol` and `port` rsyslog attributes to modify this.

If you want to specify another syslog compatible server with a role other than loghost, simply fill free to use the `server_ip` attribute or the `server_search` attribute.

Example role that sets the per host directory:

```ruby
name "loghost"
description "Central syslog server"
run_list("recipe[rsyslog::server]")
default_attributes(
  "rsyslog" => { "per_host_dir" => "%HOSTNAME%" }
)
```

Default rsyslog options are rendered for RHEL family platforms, in `/etc/rsyslog.d/50-default.conf` with other platforms using a configuration like Debian family defaults.  You can override these log facilities and destinations using the `rsyslog['default_facility_logs']` hash.

```ruby
name "facility_log_example"
run_list("recipe[rsyslog::default]")
default_attributes(
  "rsyslog" => {
    "default_facility_logs" => {
      '*.info;mail.none;authpriv.none;cron.none' => "/var/log/messages",
      'authpriv' => '/var/log/secure',
      'mail.*' => '-/var/log/maillog',
      '*.emerg' => '*'
    }
  }
)
```

## License & Authors
- Author:: Joshua Timberman ([joshua@chef.io](mailto:joshua@chef.io))
- Author:: Denis Barishev ([denz@twiket.com](mailto:denz@twiket.com))
- Author:: Tim Smith ([tsmith@chef.io](mailto:tsmith@chef.io))

```text
Copyright:: 2009-2015, Chef Software, Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/README.md to tempfile /tmp/chef-rest20160913-19215-rw6kuz
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/rsyslog/README.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-dxpms7
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/7-zip/recipes/default.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/rsyslog/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/7-zip/README.md
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# rsyslog Cookbook CHANGELOG
This file is used to list changes made in each version of the rsyslog cookbook.

## v.4.0.1 (2016-07-20)
- PR #76 Validate the config file using `rsyslogd -N 1` via eherot
- PR #105 Use correct file name for remote.conf via mfenner
- PR #105 Add $LocalHostName directive via mfenner
- PR #105 Change directive `:fromhost-ip,!isequal,"127.0.0.1"` from using ~ to stop via mfenner
- PR #110 Add support for permitted peer via dastergon
- Add SUSE support
- Clean up travis configuration

## v.4.0.0 (2015-12-09)
- Removed support for Chef Solo. Since this cookbook now supports Chef 12+ only it makes far more sense to use Chef Zero (local mode) if a Chef server is not available.
- Removed yum from the Berksfile as it wasn't being used
- Fixed bad variables being passed in the file_input custom resource
- Added Chefspec matchers

## v.3.0.0 (2015-11-09)
- Breaking change: The file_input LWRP has been updated to be a Chef 12.5 custom_resource, with backwards compatibility to all Chef 12.x released provided by compat_resource. Additionally the 'source' and 'cookbook' attributes in the file_input resource have been renamed to 'template_source' and 'cookbook_source' to prevent failures.
- Helpers for determining the service provider on Ubuntu have been removed since Chef 12 does the right thing with Init, Upstart, and systemd.
- rsyslog::client no longer fails if there are no servers to forward logs to. Instead forwarding isn't configuring and a warning is written to the chef client log
- Fix broken templating of /etc/rsyslog.d/49-remote.conf when relp was enabled.  Added testing to prevent future regressions here.
- Test Kitchen integration tests are now run via Travis so all PRs will be fully tested

## v.2.2.0 (2015-10-05)
- Add why-run support to the file_input LWRP
- Added support for rsyslog under systemd on Ubuntu 15.04+
- Added new attribute node['rsyslog']['custom_remote'].  See readme for additional information
- Added source_url and issues_url metadata for Supermarket
- Fixed 49-relp.conf to honor logs_to_forward so it didn't just forward everything
- Updated contributing and testing docs
- Set the minimum supported Chef release to 11.0
- Added maintainers.toml and maintainers.md files
- Added Amazon Linux, Oracle, and Scientific Linux to the metadata
- Removed all pre-Ruby 1.9 hash rockets
- Updated development dependencies in the
- Fix a bad example attribute in the readme
- Updated Travis CI config to test on all modern Ruby releases

## v.2.1.0 (2015-07-22)
- Fixed minor markdown errors in the readme
- Allow the server to listen on both TCP and UDP.  For both set node['rsyslog']['protocol'] to 'udptcp'
- Move the include for /etc/rsyslog.d/ to the very end of the rsyslog.conf config
- Added the ability to bind to a specific IP when running the server on UDP with node['rsyslog']['bind']
- Sync the comments in the rsyslog.conf file with the latest upstream rsyslog release
- Change emerg to log to :omusrmsg:_ vs. _ on modern rsyslog releases to avoid deprecation warnings

## v.2.0.0 (2015-05-18)
Note: This version includes several breaking changes for Ubuntu users. Be sure to take care when deploying these changes to production systems.
- 49-relp.conf now properly uses the list of servers discovered in the client recipe
- Fixed a typo that prevented file-input.conf from properly templating
- Added allow_non_local attribute to allow non-local messages. This defaults to false, which preserves the previous functionality
- The rsyslog directory permissions are now properly set using the user/group attributes instead of root/root
- Properly drop permissions on Ubuntu systems to syslog/syslog.  Introduces 2 new attributes to control the user/group: priv_user and priv_group
- Remove logging to /dev/xconsole in 50-default.conf on Ubuntu systems.  This is generally not something you'd want to do and produces error messages at startup.

## v.1.15.0 (2015-02-23)
- Change minimum supported Fedora release to 20 to align with the Fedora product lifecycle
- Add supports CentOS to metadata
- Update Rubocop and Test Kitchen dependencies to the latest versions
- Update Chefspec to 4.0
- Fix CentOS 5 support in the Kitchen config
- Fix rsyslog service notification in the file_input LWRP

## v.1.14.0 (2015-01-30)
- Don't attempt to use journald on Amazon Linux since Amazon Linux doesn't use systemd
- Fixed setting bad permissions on the working directory by using the rsyslog user/group variables.
- Fixed bad variable in the 49-relp.conf template that prevented Chef converges from completing.
- Removed the 'reload' action from the rsyslog service as newer rsyslog releases don't support reload.
- Updated Chefspecs to remove deprecation warnings and added additional tests.
- Removed node name from the comment block in the config files.
- Added a new file_input LWRP for defining configs.
- Added support for chef solo search cookbook.

## v1.13.0 (2014-11-25)
- Rsyslog's working directory is now an attribute and is set to the appropriate directory on RHEL based distros
- The working directory is now 0700 vs 0755 for additional security
- Add the ActionQueueMaxDiskSpace directive with a default of 1GB to prevent out of disk events during large buffering
- Updated RHEL / Fedora facilities to match those shipped by the distros
- Updated modules to match those used by journald (systemd) on Fedora 19+ and CentOS 7
- Added an attribute additional_directives to pass a hash of configs.  This is currently only being used to pass directives necessary for journald support on RHEL 7 / Fedora 19+
- Added basic SUSE support
- Fixed logic that prevented Ubuntu from properly dropping privileges in Ubuntu >= 11.04
- Removed references to rsyslog v3 in the config template
- Added a chefignore file
- Updated Gemfile with newer releases of Test Kitchen, Rubocop, and Berkshelf
- Added Fedora 20, Debian 6/7, CentOS 7, and Ubuntu 12.04/14.04 to the Test Kitchen config
- Removed an attribute that was in the Readme twice
- Updated Travis to Ruby 2.1.1 to better match Chef 12
- Updated the Berksfile to point to Supermarket
- Refactored the specs to be more dry

## v1.12.2 (2014-02-28)
Fixing bug fix in rsyslog.conf

## v1.12.0 (2014-02-27)
- [COOK-4021] Allow specifying default templates for local and remote
- [COOK-4126] rsyslog cookbook fails restarts due to not using upstart

## v1.11.0 (2014-02-19)
### Bug
- **[COOK-4256](https://tickets.opscode.com/browse/COOK-4256)** - Fix syntax errors in default.conf on rhel

### New Feature
- **[COOK-4022](https://tickets.opscode.com/browse/COOK-4022)** - Add use_local_ipv4 option to allow selecting internal interface on cloud systems
- **[COOK-4018](https://tickets.opscode.com/browse/COOK-4018)** - rsyslog TLS encryption support

## v1.10.2
No change. Version bump for toolchain.

## v1.10.0
### New Feature
- **[COOK-4021](https://tickets.opscode.com/browse/COOK-4021)** - Allow specifying default templates for local and remote

### Improvement
- **[COOK-3876](https://tickets.opscode.com/browse/COOK-3876)** - Cater for setting rate limits

## v1.9.0
### New Feature
- **[COOK-3736](https://tickets.opscode.com/browse/COOK-3736)** - Support OmniOS

### Improvement
- **[COOK-3609](https://tickets.opscode.com/browse/COOK-3609)** - Add actionqueue to remote rsyslog configurations

### Bug
- **[COOK-3608](https://tickets.opscode.com/browse/COOK-3608)** - Add 50-default template knobs
- **[COOK-3600](https://tickets.opscode.com/browse/COOK-3600)** - SmartOS support

## v1.8.0
### Improvement
- **[COOK-3573](https://tickets.opscode.com/browse/COOK-3573)** -  Add Test Kitchen, Specs, and Travis CI

### New Feature
- **[COOK-3435](https://tickets.opscode.com/browse/COOK-3435)** - Add support for relp

## v1.7.0
### Improvement
- **[COOK-3253](https://tickets.opscode.com/browse/COOK-3253)** - Enable repeated message reduction
- **[COOK-3190](https://tickets.opscode.com/browse/COOK-3190)** - Allow specifying which logs to send to remote server
- **[COOK-2355](https://tickets.opscode.com/browse/COOK-2355)** - Support forwarding events to more than one server

## v1.6.0
### New Feature
- [COOK-2831]: enable high precision timestamps

### Bug
- [COOK-2377]: calling node.save has adverse affects on nodes relying on a searched node's ohai attributes
- [COOK-2521]: rsyslog cookbook incorrectly sets directory ownership to rsyslog user
- [COOK-2540]: Syslogd needs to be disabled before starting rsyslogd on RHEL 5

### Improvement
- [COOK-2356]: rsyslog service supports status. Service should use it.
- [COOK-2357]: rsyslog cookbook copies in wrong defaults file on Ubuntu !9.10/10.04

## v1.5.0
- [COOK-2141] - Add `$PreserveFQDN` configuration directive

## v1.4.0
- [COOK-1877] - RHEL 6 support and refactoring

## v1.3.0
- [COOK-1189] - template change does not restart rsyslog on Ubuntu

This actually went into 1.2.0 with action `:reload`, but that change has been reverted and the action is back to `:restart`.

## v1.2.0
- [COOK-1678] - syslog user does not exist on debian 6.0 and ubuntu versions lower than 11.04
- [COOK-1650] - enable max message size configuration via attribute

## v1.1.0
Changes from COOK-1167:
- More versatile server discovery - use the IP as an attribute, or use search (see README)
- Removed cron dependency.
- Removed log archival; logrotate is recommended.
- Add an attribute to select the per-host directory in the log dir
- Works with Chef Solo now.
- Set debian/ubuntu default user and group. Drop privileges to `syslog.adm`.

## v1.0.0
- [COOK-836] - use an attribute to specify the role to search for instead of relying on the rsyslog['server'] attribute.
- Clean up attribute usage to use strings instead of symbols.
- Update this README.
- Better handling for chef-solo.
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-zpxx4r
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/rsyslog/CHANGELOG.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/libraries/matcher.rb
[2016-09-13T12:59:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/7-zip/CHANGELOG.md
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/rsyslog/.foodcritic in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/7-zip/metadata.json
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/7-zip/attributes/default.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/resources/repo.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e3adb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/7-zip/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e3aed0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "7-zip",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000013c3ce0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/7-zip/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000013c3e70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "7-zip",
   "README.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000013c2ef8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/rsyslog/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000013c3060>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "rsyslog",
   "metadata.json"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/providers/repo.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000ec28e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/7-zip/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000ec2fc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "7-zip",
   "CHANGELOG.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fd0180
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/libraries/matcher.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fd0338>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "libraries",
   "matcher.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b52520
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/7-zip/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b52ac0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "7-zip",
   "metadata.json"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "7-zip",
  "version": "1.0.2",
  "description": "Installs/Configures the 7-zip file archiver",
  "long_description": "7-zip Cookbook\n==============\n[7-Zip](http://www.7-zip.org/) is a file archiver with a high compression ratio. This cookbook installs the full 7-zip suite of tools (GUI and CLI).\n\n\nRequirements\n------------\n### Platform\n- Windows XP\n- Windows Vista\n- Windows Server 2003 R2\n- Windows 7\n- Windows Server 2008 (R1, R2)\n- Windows 8\n- Windows Server 2012\n\n### Cookbooks\n- windows\n\n\nAttributes\n----------\n- `node['7-zip']['home']` - location to install 7-zip files to.  default is `%SYSTEMDRIVE%\\7-zip`\n\n\nUsage\n-----\n### default\nDownloads and installs 7-zip to the location specified by `node['7-zip']['home']`.  Also ensures `node['7-zip']['home']` is in the system path.\n\n\nLicense & Authors\n-----------------\n- Author:: Seth Chisamore (<schisamo@opscode.com>)\n\n```text\nCopyright:: 2011, Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Opscode, Inc.",
  "maintainer_email": "cookbooks@opscode.com",
  "license": "Apache 2.0",
  "platforms": {
    "windows": ">= 0.0.0"
  },
  "dependencies": {
    "windows": ">= 1.2.2"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  }
}
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b4b680
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/resources/repo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b4b860>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "resources",
   "repo.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/metadata.json to tempfile /tmp/chef-rest20160913-19215-17xzt8p
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/7-zip/metadata.json in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/7-zip
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b4e1c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/7-zip/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b4e3a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "7-zip",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
7-zip Cookbook
==============
[7-Zip](http://www.7-zip.org/) is a file archiver with a high compression ratio. This cookbook installs the full 7-zip suite of tools (GUI and CLI).


Requirements
------------
### Platform
- Windows XP
- Windows Vista
- Windows Server 2003 R2
- Windows 7
- Windows Server 2008 (R1, R2)
- Windows 8
- Windows Server 2012

### Cookbooks
- windows


Attributes
----------
- `node['7-zip']['home']` - location to install 7-zip files to.  default is `%SYSTEMDRIVE%\7-zip`


Usage
-----
### default
Downloads and installs 7-zip to the location specified by `node['7-zip']['home']`.  Also ensures `node['7-zip']['home']` is in the system path.


License & Authors
-----------------
- Author:: Seth Chisamore (<schisamo@opscode.com>)

```text
Copyright:: 2011, Opscode, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/README.md to tempfile /tmp/chef-rest20160913-19215-82zsqm
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"rsyslog","version":"4.0.1","description":"Installs and configures rsyslog","long_description":"# rsyslog Cookbook\n[![Build Status](https://travis-ci.org/chef-cookbooks/rsyslog.svg?branch=master)](http://travis-ci.org/chef-cookbooks/rsyslog) [![Cookbook Version](https://img.shields.io/cookbook/v/rsyslog.svg)](https://supermarket.chef.io/cookbooks/rsyslog)\n\nInstalls and configures rsyslog to replace sysklogd for client and/or server use. By default, the service will be configured to log to files on local disk. See the Recipes and Examples sections for other uses.\n\n## Requirements\n### Platforms\n- Debian/Ubuntu\n- RHEL/CentOS/Scientific/Amazon/Oracle\n- Fedora 21+\n- OmniOS r151006c\n- OpenSUSE\n\n### Chef\n- Chef 12+\n\n### Cookbooks\n- compat_resource\n\n### Other\nTo use the `recipe[rsyslog::client]` recipe, you'll need to set up the `rsyslog.server_search` or `rsyslog.server_ip` attributes.  See the **Recipes** and **Examples** sections below.\n\n## Attributes\nSee `attributes/default.rb` for default values.\n- `node['rsyslog']['log_dir']` - If the node is an rsyslog server, this specifies the directory where the logs should be stored.\n- `node['rsyslog']['working_dir']` - The temporary working directory where messages are buffered\n- `node['rsyslog']['server']` - Determined automatically and set to true on the server.\n- `node['rsyslog']['server_ip']` - If not defined then search will be used to determine rsyslog server. Default is `nil`.  This can be a string or an array.\n- `node['rsyslog']['server_search']` - Specify the criteria for the server search operation. Default is `role:loghost`.\n- `node['rsyslog']['protocol']` - Specify whether to use `udp` or `tcp` for remote loghost. Default is `tcp`. To use both specify both in a string e.g. 'udptcp'.\n- `node['rsyslog']['bind']` - Specify the address to which the server should be listening; only use with `node['rsyslog']['protocol'] = 'udp'` because the feature does not work with the `tcp` protocol ([more info](http://www.rsyslog.com/doc/master/configuration/modules/imtcp.html#caveats-known-bugs)).\n- `node['rsyslog']['port']` - Specify the port which rsyslog should connect to a remote loghost.\n- `node['rsyslog']['remote_logs']` - Specify whether to send all logs to a remote server (client option). Default is `true`.\n- `node['rsyslog']['per_host_dir']` - \"PerHost\" directories for template statements in `35-server-per-host.conf`. Default value is the previous cookbook version's value, to preserve compatibility. See **server** recipe below.\n- `node['rsyslog']['priv_seperation']` - Whether to use privilege separation or not.\n- `node['rsyslog']['priv_user']` - User to run as when using privilege separation. Defult is  `node['rsyslog']['user']`\n- `node['rsyslog']['priv_group']` - Group to run as when using privilege separation. Defult is  `node['rsyslog']['group']`\n- `node['rsyslog']['max_message_size']` - Specify the maximum allowed message size. Default is 2k.\n- `node['rsyslog']['user']` - Who should own the configuration files and directories\n- `node['rsyslog']['group']` - Who should group-own the configuration files and directories\n- `node['rsyslog']['defaults_file']` - The full path to the defaults/sysconfig file for the service.\n- `node['rsyslog']['service_name']` - The platform-specific name of the service\n- `node['rsyslog']['preserve_fqdn']` - Value of the `$PreserveFQDN` configuration directive in `/etc/rsyslog.conf`. Default is 'off' for compatibility purposes.\n- `node['rsyslog']['high_precision_timestamps']` -  Enable high precision timestamps, instead of the \"old style\" format.  Default is 'false'.\n- `node['rsyslog']['repeated_msg_reduction']` -  Value of `$RepeatedMsgReduction` configuration directive in `/etc/rsyslog.conf`. Default is 'on'\n- `node['rsyslog']['logs_to_forward']` -  Specifies what logs should be sent to the remote rsyslog server. Default is all ( *.* ).\n- `node['rsyslog']['default_log_dir']` - log directory used in `50-default.conf` template, defaults to `/var/log`\n- `node['rsyslog']['default_facility_logs']` - Hash containing log facilities and destinations used in `50-default.conf` template.\n- `node['rsyslog']['default_file_template']` - The name of a pre-defined log format template (ie - RSYSLOG_FileFormat), used for local log files.\n- `node['rsyslog']['default_remote_template']` - The name of a pre-defined log format template (ie - RSYSLOG_FileFormat), used for sending to remote servers.\n- `node['rsyslog']['rate_limit_interval']` - Value of the $SystemLogRateLimitInterval configuration directive in `/etc/rsyslog.conf`. Default is nil, leaving it to the platform default.\n- `node['rsyslog']['rate_limit_burst']` - Value of the $SystemLogRateLimitBurst configuration directive in `/etc/rsyslog.conf`. Default is nil, leaving it to the platform default.\n- `node['rsyslog']['action_queue_max_disk_space']` - Max amount of disk space the disk-assisted queue is allowed to use ([more info](http://www.rsyslog.com/doc/queues.html)).\n- `node['rsyslog']['enable_tls']` - Whether or not to enable TLS encryption.  When enabled, forces protocol to `tcp`. Default is `false`.\n- `node['rsyslog']['tls_ca_file']` - Path to TLS CA file. Required for both server and clients.\n- `node['rsyslog']['tls_certificate_file']` - Path to TLS certificate file. Required for server, optional for clients.\n- `node['rsyslog']['tls_key_file']` - Path to TLS key file. Required for server, optional for clients.\n- `node['rsyslog']['tls_auth_mode']` - Value for `$InputTCPServerStreamDriverAuthMode`/`$ActionSendStreamDriverAuthMode`, determines whether client certs are validated. Defaults to `anon` (no validation).\n- `node['rsyslog']['tls_permitted_peer']` - Value for `ActionSendStreamDriverPermittedPeer`, it narrows the list of the allowed hosts. Works with TLS only. Defaults to `nil`.\n- `node['rsyslog']['use_local_ipv4']` - Whether or not to make use the remote local IPv4 address on cloud systems when searching for servers (where available).  Default is 'false'.\n- `node['rsyslog']['allow_non_local']` - Whether or not to allow non-local messages. If 'false', incoming messages are only allowed from 127.0.0.1. Default is 'false'.\n- `node['rsyslog']['custom_remote']` - Array of hashes for configuring custom remote server targets\n- `node['rsyslog']['additional_directives']` - Hash of additional directives and their values to place in the main rsyslog config file\n- `node['rsyslog']['local_host_name']` -  permits to overwrite the system hostname with the one specified in the directive\n\n## Recipes\n### default\nInstalls the rsyslog package, manages the rsyslog service and sets up basic configuration for a standalone machine.\n\n### client\nIncludes `recipe[rsyslog]`.\n\nUses `node['rsyslog']['server_ip']` or Chef search (in that precedence order) to determine the remote syslog server's IP address. If search is used, the search query will look for the first `ipaddress` returned from the criteria specified in `node['rsyslog']['server_search']`.\n\nYou can use `node['rsyslog']['custom_config']` to define custom entries for sending logs to remote servers. Available attributes:\n\n```\n    'server': Ip/hostname of remote syslog server (Required)\n    'port': Port to send logs to\n    'logs': Syslog log facilities to send (auth, authpriv, daemon, etc)\n    'protocol': Can be tcp or udp\n    'remote_template': Rsyslog template used for the messages\n```\n\nExample:\n\n```ruby\nnode['rsyslog']['custom_remote'] = [{ 'server' => '10.10.4.4', 'port' => '567', 'logs' => 'auth.*,mail.*', 'protocol' => 'udp', 'remote_template' => 'RSYSLOG_SyslogProtocol23Format'},\n                                    { 'server' => '10.0.0.3', 'port' => '555', 'logs' => 'authpriv,daemon.*' } ]\n```\n\nThe server key is required; if other keys are left out, the default global values will be used (eg `node['rsyslog']['port']` will be used if 'port' is omitted)\n\nIf the node itself is a rsyslog server ie it has `rsyslog.server` set to true then the configuration is skipped.\n\nIf the node had an `/etc/rsyslog.d/35-server-per-host.conf` file previously configured, this file gets removed to prevent duplicate logging.\n\nAny previous logs are not cleaned up from the `log_dir`.\n\n### server\nConfigures the node to be a rsyslog server. The chosen rsyslog server node should be defined in the `server_ip` attribute or resolvable by the specified search criteria specified in `node['rsyslog']['server_search]` (so that nodes making use of the `client` recipe can find the server to log to).\n\nThe `server` recipe will create the logs in attribute `node['rsyslog']['log_dir']`, and the configuration in `/etc/rsyslog.d/server.conf`. This recipe also removes any previous configuration to a remote server by removing the file `/etc/rsyslog.d/49-remote.conf`.\n\nThe cron job used in the previous version of this cookbook is removed, but it does not remove any existing cron job from your system (so it doesn't break anything unexpectedly). We recommend setting up logrotate for the logfiles instead.\n\nThe `log_dir` will be concatenated with `per_host_dir` to store the logs for each client. Modify the attribute to have a value that is allowed by rsyslogs template matching values, see the rsyslog documentation for this.\n\nDirectory structure:\n\n```erb\n<%= @log_dir %>/<%= @per_host_dir %>/\"logfile\"\n```\n\nFor example for the system with hostname `www`:\n\n```text\n/srv/rsyslog/2011/11/19/www/messages\n```\n\nFor example, to change this to just the hostname, set the attribute `node['rsyslog']['per_host_dir']` via a role:\n\n```ruby\n\"rsyslog\" => { \"per_host_dir\" => \"%HOSTNAME%\" }\n```\n\nAt this time, the server can only listen on UDP _or_ TCP.\n\n# Resources\n## file_input\nConfigures a [text file input monitor](http://www.rsyslog.com/doc/imfile.html) to push a log file into rsyslog.  Rsyslog must be installed to use this custom resource either using your own wrapper cookbook or the rsyslog::default recipe\n\nProperties:\n- `name`: name of the resource, also used for the syslog tag. Required.\n- `file`: file path for input file to monitor. Required.\n- `priority`: config order priority. Defaults to `99`.\n- `severity`: syslog severity. Must be one of `emergency`, `alert`,\n- `critical`, `error`, `warning`, `notice`, `info` or `debug`. If\n- undefined, rsyslog interprets this as `notice`.\n- `facility`: syslog facility. Must be one of `auth`, `authpriv`,\n- `daemon`, `cron`, `ftp`, `lpr`, `kern`, `mail`, `news`, `syslog`,\n- `user`, `uucp`, `local0`, ... , `local7`. If undefined, rsyslog\n- interprets this as `local0`.\n- `cookbook_source`: cookbook containing the template. Defaults to `rsyslog`.\n- `template_source`: template file source. Defaults to `file-input.conf.erb`\n\n# Usage\nUse `recipe[rsyslog]` to install and start rsyslog as a basic configured service for standalone systems.\n\nUse `recipe[rsyslog::client]` to have nodes log to a remote server (which is found via the `server_ip` attribute or by the recipe's search call -- see **client**)\n\nUse `recipe[rsyslog::server]` to set up a rsyslog server. It will listen on `node['rsyslog']['port']` protocol `node['rsyslog']['protocol']`.\n\nIf you set up a different kind of centralized loghost (syslog-ng, graylog2, logstash, etc), you can still send log messages to it as long as the port and protocol match up with the server software. See **Examples**\n\nUse `rsyslog_file_input` within your recipes to forward log files to your remote syslog server.\n\n## Examples\nA `base` role (e.g., roles/base.rb), applied to all nodes so they are syslog clients:\n\n```ruby\nname \"base\"\ndescription \"Base role applied to all nodes\nrun_list(\"recipe[rsyslog::client]\")\n```\n\nThen, a role for the loghost (should only be one):\n\n```ruby\nname \"loghost\"\ndescription \"Central syslog server\"\nrun_list(\"recipe[rsyslog::server]\")\n```\n\nBy default this will set up the clients search for a node with the `loghost` role to talk to the server on TCP port 514. Change the `protocol` and `port` rsyslog attributes to modify this.\n\nIf you want to specify another syslog compatible server with a role other than loghost, simply fill free to use the `server_ip` attribute or the `server_search` attribute.\n\nExample role that sets the per host directory:\n\n```ruby\nname \"loghost\"\ndescription \"Central syslog server\"\nrun_list(\"recipe[rsyslog::server]\")\ndefault_attributes(\n  \"rsyslog\" => { \"per_host_dir\" => \"%HOSTNAME%\" }\n)\n```\n\nDefault rsyslog options are rendered for RHEL family platforms, in `/etc/rsyslog.d/50-default.conf` with other platforms using a configuration like Debian family defaults.  You can override these log facilities and destinations using the `rsyslog['default_facility_logs']` hash.\n\n```ruby\nname \"facility_log_example\"\nrun_list(\"recipe[rsyslog::default]\")\ndefault_attributes(\n  \"rsyslog\" => {\n    \"default_facility_logs\" => {\n      '*.info;mail.none;authpriv.none;cron.none' => \"/var/log/messages\",\n      'authpriv' => '/var/log/secure',\n      'mail.*' => '-/var/log/maillog',\n      '*.emerg' => '*'\n    }\n  }\n)\n```\n\n## License & Authors\n- Author:: Joshua Timberman ([joshua@chef.io](mailto:joshua@chef.io))\n- Author:: Denis Barishev ([denz@twiket.com](mailto:denz@twiket.com))\n- Author:: Tim Smith ([tsmith@chef.io](mailto:tsmith@chef.io))\n\n```text\nCopyright:: 2009-2015, Chef Software, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"ubuntu":">= 10.04","debian":">= 5.0","redhat":">= 5.0","centos":">= 5.0","fedora":">= 20.0","scientific":">= 0.0.0","amazon":">= 0.0.0","oracle":">= 0.0.0"},"dependencies":{"compat_resource":">= 0.0.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"rsyslog":"Sets up rsyslog for local logging","rsyslog::client":"Sets up a client to log to a remote rsyslog server","rsyslog::server":"Sets up an rsyslog server"},"source_url":"https://github.com/chef-cookbooks/rsyslog","issues_url":"https://github.com/chef-cookbooks/rsyslog/issues","chef_version":{},"ohai_version":{}}
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/rsyslog/metadata.json to tempfile /tmp/chef-rest20160913-19215-f5qbls
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ff1358
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/providers/repo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ff1420>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "providers",
   "repo.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/7-zip/README.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@opscode.com>)
# Cookbook Name:: 7-zip
# Recipe:: default
#
# Copyright 2011, Opscode, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

windows_package node['7-zip']['package_name'] do
  source node['7-zip']['url']
  checksum node['7-zip']['checksum']
  options "INSTALLDIR=\"#{node['7-zip']['home']}\""
  action :install
end

# update path
windows_path node['7-zip']['home'] do
  action :add
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-1ymvnqa
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/7-zip/recipes/default.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/7-zip/recipes
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
7-zip Cookbook CHANGELOG
========================
This file is used to list changes made in each version of the 7-zip cookbook.


v1.0.2
------
### Improvement
- **[COOK-3476](https://tickets.opscode.com/browse/COOK-3476)** - Upgrade to 7-zip 9.22

1.0.0
-----
- initial release
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)

  def create_packagecloud_repo(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:packagecloud_repo, :add, resource_name)
  end

end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/rsyslog/metadata.json in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/libraries/matcher.rb to tempfile /tmp/chef-rest20160913-19215-1shpx92
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-up2i0x
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/libraries/helper.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
actions :add
default_action :add

attribute :repository,      :kind_of => String, :name_attribute => true
attribute :master_token,    :kind_of => String
attribute :force_os,        :kind_of => String
attribute :force_dist,      :kind_of => String
attribute :type,            :kind_of => String, :equal_to => ['deb', 'rpm', 'gem'], :default => node['packagecloud']['default_type']
attribute :base_url,        :kind_of => String, :default => "https://packagecloud.io"
attribute :priority,        :kind_of => [Fixnum, TrueClass, FalseClass], :default => false
attribute :metadata_expire, :kind_of => String, :regex => [/^\d+[d|h|m]?$/], :default => "300"
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/resources/repo.rb to tempfile /tmp/chef-rest20160913-19215-1pv104a
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/resources/repo.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/packagecloud
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/packagecloud/resources
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/attributes/default.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@opscode.com>)
# Cookbook Name:: 7-zip
# Attribute:: default
#
# Copyright:: Copyright (c) 2011 Opscode, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if kernel['machine'] =~ /x86_64/
  default['7-zip']['url']          = "http://downloads.sourceforge.net/sevenzip/7z922-x64.msi"
  default['7-zip']['checksum']     = "f09bf515289eea45185a4cc673e3bbc18ce608c55b4cf96e77833435c9cdf3dc"
  default['7-zip']['package_name'] = "7-Zip 9.22 (x64 edition)"
else
  default['7-zip']['url']          = "http://downloads.sourceforge.net/sevenzip/7z922.msi"
  default['7-zip']['checksum']     = "86df264d22c3dd3ab80cb55a118da2d41bdd95c2db2cd09a6bbdf48f069e3d7a"
  default['7-zip']['package_name'] = "7-Zip 9.22"
end

default['7-zip']['home']    = "#{ENV['SYSTEMDRIVE']}\\7-zip"
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/7-zip/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-7za3lu
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
include ::PackageCloud::Helper

require 'uri'

use_inline_resources if defined?(use_inline_resources)

action :add do
  case new_resource.type
  when 'deb'
    install_deb
  when 'rpm'
    install_rpm
  when 'gem'
    install_gem
  else
    raise "#{new_resource.type} is an unknown package type."
  end
end

def gpg_url(base_url, repo, format, master_token)
  base_install_url = ::File.join(base_url, node['packagecloud']['base_repo_path'])
  ext = (format == :deb) ? 'list' : 'repo'
  gpg_key_url_endpoint = construct_uri_with_options({base_url: base_install_url, repo: repo, endpoint: "gpg_key_url.#{ext}"})
  if !master_token.nil?
    gpg_key_url_endpoint.user = master_token
    gpg_key_url_endpoint.password = ''
  end

  URI(get(gpg_key_url_endpoint, install_endpoint_params).body.chomp)
end

def install_deb
  base_url = new_resource.base_url
  repo_url = construct_uri_with_options({base_url: base_url, repo: new_resource.repository, endpoint: node['platform']})

  Chef::Log.debug("#{new_resource.name} deb repo url = #{repo_url}")

  package 'wget'
  package 'apt-transport-https'

  repo_url = read_token(repo_url)

  template "/etc/apt/sources.list.d/#{filename}.list" do
    source 'apt.erb'
    cookbook 'packagecloud'
    mode '0644'
    variables :base_url     => repo_url.to_s,
              :distribution => node['lsb']['codename'],
              :component    => 'main'

    notifies :run, "execute[apt-key-add-#{filename}]", :immediately
    notifies :run, "execute[apt-get-update-#{filename}]", :immediately
  end

  gpg_url = gpg_url(new_resource.base_url, new_resource.repository, :deb, new_resource.master_token)

  execute "apt-key-add-#{filename}" do
    command "wget --auth-no-challenge -qO - #{gpg_url.to_s} | apt-key add -"
    action :nothing
  end

  execute "apt-get-update-#{filename}" do
    command "apt-get update -o Dir::Etc::sourcelist=\"sources.list.d/#{filename}.list\"" \
            " -o Dir::Etc::sourceparts=\"-\"" \
            " -o APT::Get::List-Cleanup=\"0\""
    action :nothing
  end
end

def install_rpm
  given_base_url = new_resource.base_url
  base_repo_url = ::File.join(given_base_url, node['packagecloud']['base_repo_path'])
  base_url_endpoint = construct_uri_with_options({base_url: base_repo_url, repo: new_resource.repository, endpoint: 'rpm_base_url'})

  if new_resource.master_token
    base_url_endpoint.user     = new_resource.master_token
    base_url_endpoint.password = ''
  end

  base_url = URI(get(base_url_endpoint, install_endpoint_params).body.chomp)

  Chef::Log.debug("#{new_resource.name} rpm base url = #{base_url}")

  package 'pygpgme' do
    ignore_failure true
  end

  log 'pygpgme_warning' do
    message 'The pygpgme package could not be installed. This means GPG verification is not possible for any RPM installed on your system. ' \
            'To fix this, add a repository with pygpgme. Usualy, the EPEL repository for your system will have this. ' \
            'More information: https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F and https://github.com/opscode-cookbooks/yum-epel'

    level :warn
    not_if 'rpm -qa | grep -qw pygpgme'
  end

  ruby_block 'disable repo_gpgcheck if no pygpgme' do
    block do
      template = run_context.resource_collection.find(:template => "/etc/yum.repos.d/#{filename}.repo")
      template.variables[:repo_gpgcheck] = 0
    end
    not_if 'rpm -qa | grep -qw pygpgme'
  end

  gpg_url = gpg_url(new_resource.base_url, new_resource.repository, :rpm, new_resource.master_token)

  template "/etc/yum.repos.d/#{filename}.repo" do
    source 'yum.erb'
    cookbook 'packagecloud'
    mode '0644'
    variables :base_url        => base_url.to_s,
              :name            => filename,
              :gpg_url         => gpg_url.to_s,
              :repo_gpgcheck   => 1,
              :description     => filename,
              :priority        => new_resource.priority,
              :metadata_expire => new_resource.metadata_expire

    notifies :run, "execute[yum-makecache-#{filename}]", :immediately
    notifies :create, "ruby_block[yum-cache-reload-#{filename}]", :immediately
  end

  # get the metadata for this repo only
  execute "yum-makecache-#{filename}" do
    command "yum -q makecache -y --disablerepo=* --enablerepo=#{filename}"
    action :nothing
  end

  # reload internal Chef yum cache
  ruby_block "yum-cache-reload-#{filename}" do
    block { Chef::Provider::Package::Yum::YumCache.instance.reload }
    action :nothing
  end
end

def install_gem
  base_url = new_resource.base_url

  repo_url = construct_uri_with_options({base_url: base_url, repo: new_resource.repository})
  repo_url = read_token(repo_url, true).to_s


  execute "install packagecloud #{new_resource.name} repo as gem source" do
    command "gem source --add #{repo_url}"
    not_if "gem source --list | grep #{repo_url}"
  end
end


def read_token(repo_url, gems=false)
  return repo_url unless new_resource.master_token

  base_url = new_resource.base_url

  base_repo_url = ::File.join(base_url, node['packagecloud']['base_repo_path'])

  uri = construct_uri_with_options({base_url: base_repo_url, repo: new_resource.repository, endpoint: 'tokens.text'})
  uri.user     = new_resource.master_token
  uri.password = ''

  resp = post(uri, install_endpoint_params)

  Chef::Log.debug("#{new_resource.name} TOKEN = #{resp.body.chomp}")

  if is_rhel5? && !gems
    repo_url
  else
    repo_url.user     = resp.body.chomp
    repo_url.password = ''
    repo_url
  end
end

def install_endpoint_params
  dist = new_resource.force_dist || value_for_platform_family(
    'debian' => node['lsb']['codename'],
    ['rhel', 'fedora'] => node['platform_version'],
  )

  hostname = node['packagecloud']['hostname_override'] ||
             node['fqdn'] ||
             node['hostname']

  if !hostname || hostname.empty?
    raise("Can't determine hostname!  Set node['packagecloud']['hostname_override'] " \
          "if it cannot be automatically determined by Ohai.")
  end

  { :os   => os_platform,
    :dist => dist,
    :name => hostname }
end

def os_platform
  new_resource.force_os || node['platform']
end

def filename
  new_resource.name.gsub(/[^0-9A-z.\-]/, '_')
end

def is_rhel5?
  platform_family?('rhel') && node['platform_version'].to_i == 5
end

def construct_uri_with_options(options)
  required_options = [:base_url, :repo]

  required_options.each do |opt|
    if !options[opt]
      raise ArgumentError,
            "A required option :#{opt} was not specified"
    end
  end

  options[:base_url] = append_trailing_slash(options[:base_url])
  options[:repo]     = append_trailing_slash(options[:repo])

  URI.join(options.delete(:base_url), options.inject([]) {|mem, opt| mem << opt[1]}.join)
end

def append_trailing_slash(str)
  str.end_with?("/") ? str : str + "/"
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/providers/repo.rb to tempfile /tmp/chef-rest20160913-19215-pgl3cr
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/libraries/matcher.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/packagecloud/libraries
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/providers/repo.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/packagecloud/providers
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/templates/default/yum.erb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/.rubocop.yml
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/7-zip/CHANGELOG.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003eede20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/libraries/helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003eedf10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "libraries",
   "helper.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/7-zip/attributes/default.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/7-zip/attributes
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003dcfe30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/packagecloud/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003de00c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
default['packagecloud']['base_repo_path'] = "/install/repositories/"
default['packagecloud']['gpg_key_path'] = "/gpgkey"
default['packagecloud']['hostname_override'] = nil
default['packagecloud']['proxy_host'] = nil
default['packagecloud']['proxy_port'] = nil

default['packagecloud']['default_type'] = value_for_platform_family(
  'debian' => 'deb',
  ['rhel', 'fedora'] => 'rpm'
)
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-14dmu61
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/THANKS
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ae1458
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/THANKS",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ae1570>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "THANKS"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c8a4d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/.rubocop.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c8a6d8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   ".rubocop.yml"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/Rakefile
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'net/https'

module PackageCloud
  module Helper
    def get(uri, params)
      uri.query     = URI.encode_www_form(params)
      req           = Net::HTTP::Get.new(uri.request_uri)

      req.basic_auth uri.user, uri.password if uri.user

      http = Net::HTTP.new(uri.hostname, uri.port, node['packagecloud']['proxy_host'], node['packagecloud']['proxy_port'])
      http.use_ssl = true

      resp = http.start { |h| h.request(req) }

      case resp
      when Net::HTTPSuccess
        resp
      else
        raise resp.inspect
      end
    end

    def post(uri, params)
      req           = Net::HTTP::Post.new(uri.request_uri)
      req.form_data = params

      req.basic_auth uri.user, uri.password if uri.user

      http = Net::HTTP.new(uri.hostname, uri.port, node['packagecloud']['proxy_host'], node['packagecloud']['proxy_port'])
      http.use_ssl = true

      resp = http.start { |h|  h.request(req) }

      case resp
      when Net::HTTPSuccess
        resp
      else
        raise resp.inspect
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/libraries/helper.rb to tempfile /tmp/chef-rest20160913-19215-dlx7js
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/libraries/helper.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/.kitchen.yml
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/Berksfile
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/templates/default/apt.erb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/README.md
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003aab358
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003aab498>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "README.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d0af18
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/packagecloud/templates/default/yum.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d0b0a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "templates",
   "default",
   "yum.erb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
AllCops:
  Include:
    - Berksfile
    - Gemfile
    - Rakefile
    - Thorfile
    - Guardfile
  Exclude:
    - vendor/**

ClassLength:
  Enabled: false
Documentation:
  Enabled: false
Encoding:
  Enabled: false
HashSyntax:
  Enabled: false
LineLength:
  Enabled: false
MethodLength:
  Enabled: false
SignalException:
  Enabled: false
TrailingComma:
  Enabled: false
WordArray:
  Enabled: false
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/.rubocop.yml to tempfile /tmp/chef-rest20160913-19215-15g8b1g
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a7c0a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/Rakefile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a7c170>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "Rakefile"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/attributes/default.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/packagecloud/attributes
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/.rubocop.yml in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/Thorfile
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039fcd58
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/packagecloud/templates/default/apt.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039fce20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "templates",
   "default",
   "apt.erb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
deb <%= @base_url %> <%= @distribution %> <%= @component %>
deb-src <%= @base_url %> <%= @distribution %> <%= @component %>
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
The following people have contributed to packagecloud chef cookbook (If you're not listed here and you should be, please let us know!):

THANKS
------
Guilhem Lettron (@guilhem)
Michael S. Fischer (@mfischer-zd)
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/THANKS to tempfile /tmp/chef-rest20160913-19215-9d45lx
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
[<%= @name %>]
name=<%= @description %>
baseurl=<%= @base_url %>
repo_gpgcheck=<%= @repo_gpgcheck %>
<% if @priority -%>
priority=<%=@priority %>
<% end -%>
gpgcheck=0
enabled=1
gpgkey=<%= @gpg_url %>
sslverify=1
sslcacert=/etc/pki/tls/certs/ca-bundle.crt
<% if @metadata_expire %>
metadata_expire=<%= @metadata_expire %>
<% end %>
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/templates/default/yum.erb to tempfile /tmp/chef-rest20160913-19215-13z8jtn
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a56d58
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/.kitchen.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a56e48>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   ".kitchen.yml"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/THANKS in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/Berksfile.lock
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# packagecloud cookbook

This cookbook provides an LWRP for installing https://packagecloud.io repositories.

NOTE: Please see the Changelog below for important changes if upgrading from 0.0.19 to 0.1.0.

## Usage

Be sure to depend on `packagecloud` in `metadata.rb` so that the packagecloud
resource will be loaded.

For public repos:

```ruby
packagecloud_repo "computology/packagecloud-cookbook-test-public" do
  type "deb"
end
```

For private repos, you need to supply a `master_token`:

```ruby
packagecloud_repo "computology/packagecloud-cookbook-test-private" do
  type "deb"
  master_token "762748f7ae0bfdb086dd539575bdc8cffdca78c6a9af0db9"
end
```

For packagecloud:enterprise users, add `base_url` to your resource:

```
packagecloud_repo "computology/packagecloud-cookbook-test-private" do
  base_url "https://packages.example.com"
  type "deb"
  master_token "762748f7ae0bfdb086dd539575bdc8cffdca78c6a9af0db9"
end
```

For forcing the os and dist for repository install:

```
packagecloud_repo 'computology/packagecloud-cookbook-test-public' do
  type 'rpm'
  force_os 'rhel'
  force_dist '6.5'
end
```

Valid options for `type` include `deb`, `rpm`, and `gem`.

This cookbook performs checks to determine if a package exists before attempting
to install it. To enable proxy support *for these checks* (not to be confused
with proxy support for your package manager of choice), add the following
attributes to your cookbook:

```
default['packagecloud']['proxy_host'] = 'myproxy.organization.com'
default['packagecloud']['proxy_port'] = '80'
```

## Interactions with other cookbooks

On CentOS 5, the official chef yum cookbook overwrites the file
`/etc/yum.conf` setting some default values. When it does this, the `cachedir`
value is changed from the CentOS5 default to the default value in the
cookbook. The result of this change is that any packagecloud repository
installed *before* a repository installed with the yum cookbook will appear as
though it's gpg keys were not imported.

There are a few potential workarounds for this:

- Pass the "-y" flag to package resource using the `options` attribute. This
  should cause yum to import the GPG key automatically if it was not imported
  already.
- Move your packagecloud repos so that they are installed last, after any/all
  repos installed via the yum cookbook.
- Set the cachedir option in the chef yum cookbook to the system default value
  of `/var/cache/yum` using the `yum_globalconfig` resource.

CentOS 6 and 7 are not affected as the default `cachedir` value provided by
the yum chef cookbook is set to the system default, unless you use the
`yum_globalconfig` resource to set a custom cachedir. If you do set a custom
`cachedir`, you should make sure to setup packagecloud repos after that
resource is set so that the GPG keys end up in the right place.

## Changelog

See CHANGELOG.md for more recent changes.

## Credits
Computology, LLC.
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/README.md to tempfile /tmp/chef-rest20160913-19215-1lp2jb1
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/templates/default/apt.erb to tempfile /tmp/chef-rest20160913-19215-6ufir4
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/metadata.json
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/templates/default/yum.erb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/packagecloud/templates
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/packagecloud/templates/default
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003911970
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/Thorfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003911a60>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "Thorfile"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a36918
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/Berksfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a36be8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "Berksfile"]>

[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/README.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/templates/default/apt.erb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/usr/bin/env rake

# Style tests. Rubocop and Foodcritic
namespace :style do
  begin
    require 'rubocop/rake_task'
    desc 'Run Ruby style checks'
    RuboCop::RakeTask.new(:ruby)
  rescue LoadError
    puts '>>>>> Rubocop gem not loaded, omitting tasks' unless ENV['CI']
  end

  begin
    require 'foodcritic'

    desc 'Run Chef style checks'
    FoodCritic::Rake::LintTask.new(:chef) do |t|
      t.options = {
        fail_tags: ['any'],
        tags: ['~FC003']
      }
    end
  rescue LoadError
    puts '>>>>> foodcritic gem not loaded, omitting tasks' unless ENV['CI']
  end
end

desc 'Run all style checks'
task style: ['style:chef', 'style:ruby']

# Integration tests. Kitchen.ci
namespace :integration do
  begin
    require 'kitchen/rake_tasks'

    desc 'Run kitchen integration tests'
    Kitchen::RakeTasks.new
  rescue LoadError
    puts '>>>>> Kitchen gem not loaded, omitting tasks' unless ENV['CI']
  end
end

desc 'Run all tests on Travis'
task travis: ['style']

# Default
task default: ['style', 'integration:kitchen:all']
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
---
driver_plugin: vagrant
driver_config:
  require_chef_omnibus: true

platforms:
- name: ubuntu-10.04
  driver_config:
    box: opscode-ubuntu-10.04
    box_url: https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_ubuntu-10.04_provisionerless.box
  run_list:
    - recipe[packagecloud_test::lucid_deps]
    - recipe[packagecloud_test::deb]
    - recipe[packagecloud_test::rubygems_private]

- name: ubuntu-12.04
  driver_config:
    box: opscode-ubuntu-12.04
    box_url: https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_ubuntu-12.04_provisionerless.box
  run_list:
    - recipe[packagecloud_test::precise_deps]
    - recipe[packagecloud_test::deb]
    - recipe[packagecloud_test::rubygems_private]

- name: ubuntu-14.04
  driver_config:
    box: opscode-ubuntu-14.04
    box_url: http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-14.04_chef-provisionerless.box
  run_list:
    - recipe[packagecloud_test::trusty_deps]
    - recipe[packagecloud_test::deb]
    - recipe[packagecloud_test::rubygems]

- name: centos-without-epel-5.10
  driver_config:
    box_url: http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-5.10_chef-provisionerless.box
  run_list:
    - recipe[packagecloud_test::rpm]
    - recipe[packagecloud_test::rubygems]

- name: centos-with-epel-5.10
  driver_config:
    box_url: http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-5.10_chef-provisionerless.box
  run_list:
    - recipe[packagecloud_test::epel5]
    - recipe[packagecloud_test::rpm]
    - recipe[packagecloud_test::rubygems_private]

- name: centos-6.5
  run_list:
    - recipe[packagecloud_test::rpm]
    - recipe[packagecloud_test::rubygems]

- name: centos-7.0
  run_list:
    - recipe[packagecloud_test::rpm]
    - recipe[packagecloud_test::rubygems_private]

- name: amazon-2014.09
  driver_plugin: ec2
  driver_config:
    image_id: ami-b5a7ea85
    username: ec2-user
    aws_access_key_id: <%= ENV['AWS_ACCESS_KEY_ID'] %>
    aws_secret_access_key: <%= ENV['AWS_SECRET_ACCESS_KEY'] %>
    aws_ssh_key_id: <%= ENV['AWS_KEYPAIR_NAME'] %>
    ssh_key: <%= ENV['AWS_SSH_KEY_PATH'] %>
    availability_zone: us-west-2a
    region: us-west-2
    flavor_id: t2.micro
    security_group_ids: sg-598e583c
  run_list:
    - recipe[packagecloud_test::rpm]
    - recipe[packagecloud_test::rubygems]

suites:
- name: default
  run_list:
  attributes: {}
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/.kitchen.yml to tempfile /tmp/chef-rest20160913-19215-rkv6a2
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000380dd80
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/Berksfile.lock",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000380dfd8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "Berksfile.lock"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Rakefile to tempfile /tmp/chef-rest20160913-19215-10gx6nv
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/.kitchen.yml in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/Gemfile
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037c94c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037c9680>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "metadata.json"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "packagecloud",
  "description": "Installs/Configures packagecloud.io repositories.",
  "long_description": "Installs/Configures packagecloud.io repositories.",
  "maintainer": "Joe Damato",
  "maintainer_email": "joe@packagecloud.io",
  "license": "Apache 2.0",
  "platforms": {

  },
  "dependencies": {

  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "0.2.5",
  "source_url": "https://github.com/computology/packagecloud-cookbook",
  "issues_url": "https://github.com/computology/packagecloud-cookbook/issues",
  "privacy": false
}
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/metadata.json to tempfile /tmp/chef-rest20160913-19215-f1lgsx
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/metadata.json in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# encoding: utf-8

require 'bundler'
require 'bundler/setup'
require 'berkshelf/thor'
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
source 'https://api.berkshelf.com'

metadata

cookbook 'packagecloud_test', :path => 'test/fixtures/cookbooks/packagecloud_test'
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Thorfile to tempfile /tmp/chef-rest20160913-19215-1b8xu45
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Berksfile to tempfile /tmp/chef-rest20160913-19215-1jq3eeg
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/Rakefile in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/LICENSE
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/Thorfile in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/resources/globalconfig.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037450b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/Gemfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003745600>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "Gemfile"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/chefignore
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/packagecloud/Gemfile.lock
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000035f77f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/Gemfile.lock",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000035f78c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "Gemfile.lock"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
DEPENDENCIES
  packagecloud
    path: .
    metadata: true
  packagecloud_test
    path: test/fixtures/cookbooks/packagecloud_test

GRAPH
  packagecloud (0.2.5)
  packagecloud_test (0.0.0)
    packagecloud (>= 0.0.0)
    yum (>= 0.0.0)
  yum (3.5.2)
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/Berksfile in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Berksfile.lock to tempfile /tmp/chef-rest20160913-19215-ofzmm
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/providers/globalconfig.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/Berksfile.lock in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002397c70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/providers/globalconfig.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002397db0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "providers",
   "globalconfig.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000365af88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/resources/globalconfig.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000365b078>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "resources",
   "globalconfig.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036a8148
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/LICENSE",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036a8238>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "LICENSE"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
Copyright (C) 2014 Computology, LLC.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/resources/repository.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000035d9ca8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/resources/repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000035d9e10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "resources",
   "repository.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/recipes/default.rb
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/LICENSE to tempfile /tmp/chef-rest20160913-19215-112d1bv
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/recipes/dnf_yum_compat.rb
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/providers/repository.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000232c150
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/providers/repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000232c588>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "providers",
   "repository.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
GEM
  remote: https://rubygems.org/
  specs:
    CFPropertyList (2.3.2)
    addressable (2.3.8)
    ast (2.3.0)
    berkshelf (3.1.5)
      addressable (~> 2.3.4)
      berkshelf-api-client (~> 1.2)
      buff-config (~> 1.0)
      buff-extensions (~> 1.0)
      buff-shell_out (~> 0.1)
      celluloid (~> 0.16.0.pre)
      celluloid-io (~> 0.16.0.pre)
      faraday (~> 0.9.0)
      minitar (~> 0.5.4)
      octokit (~> 3.0)
      retryable (~> 1.3.3)
      ridley (~> 4.0)
      solve (~> 1.1)
      thor (~> 0.18)
    berkshelf-api-client (1.3.1)
      faraday (~> 0.9.1)
      httpclient (~> 2.6.0)
    buff-config (1.0.1)
      buff-extensions (~> 1.0)
      varia_model (~> 0.4)
    buff-extensions (1.0.0)
    buff-ignore (1.2.0)
    buff-ruby_engine (0.1.0)
    buff-shell_out (0.2.0)
      buff-ruby_engine (~> 0.1.0)
    builder (3.2.2)
    celluloid (0.16.0)
      timers (~> 4.0.0)
    celluloid-io (0.16.2)
      celluloid (>= 0.16.0)
      nio4r (>= 1.1.0)
    chef-api (0.7.0)
      logify (~> 0.1)
      mime-types
    dep-selector-libgecode (1.3.1)
    dep_selector (1.0.4)
      dep-selector-libgecode (~> 1.0)
      ffi (~> 1.9)
    erubis (2.7.0)
    excon (0.51.0)
    faraday (0.9.2)
      multipart-post (>= 1.2, < 3)
    ffi (1.9.14)
    fission (0.5.0)
      CFPropertyList (~> 2.2)
    fog (1.38.0)
      fog-aliyun (>= 0.1.0)
      fog-atmos
      fog-aws (>= 0.6.0)
      fog-brightbox (~> 0.4)
      fog-cloudatcost (~> 0.1.0)
      fog-core (~> 1.32)
      fog-dynect (~> 0.0.2)
      fog-ecloud (~> 0.1)
      fog-google (<= 0.1.0)
      fog-json
      fog-local
      fog-openstack
      fog-powerdns (>= 0.1.1)
      fog-profitbricks
      fog-rackspace
      fog-radosgw (>= 0.0.2)
      fog-riakcs
      fog-sakuracloud (>= 0.0.4)
      fog-serverlove
      fog-softlayer
      fog-storm_on_demand
      fog-terremark
      fog-vmfusion
      fog-voxel
      fog-vsphere (>= 0.4.0)
      fog-xenserver
      fog-xml (~> 0.1.1)
      ipaddress (~> 0.5)
    fog-aliyun (0.1.0)
      fog-core (~> 1.27)
      fog-json (~> 1.0)
      ipaddress (~> 0.8)
      xml-simple (~> 1.1)
    fog-atmos (0.1.0)
      fog-core
      fog-xml
    fog-aws (0.11.0)
      fog-core (~> 1.38)
      fog-json (~> 1.0)
      fog-xml (~> 0.1)
      ipaddress (~> 0.8)
    fog-brightbox (0.11.0)
      fog-core (~> 1.22)
      fog-json
      inflecto (~> 0.0.2)
    fog-cloudatcost (0.1.2)
      fog-core (~> 1.36)
      fog-json (~> 1.0)
      fog-xml (~> 0.1)
      ipaddress (~> 0.8)
    fog-core (1.42.0)
      builder
      excon (~> 0.49)
      formatador (~> 0.2)
    fog-dynect (0.0.3)
      fog-core
      fog-json
      fog-xml
    fog-ecloud (0.3.0)
      fog-core
      fog-xml
    fog-google (0.1.0)
      fog-core
      fog-json
      fog-xml
    fog-json (1.0.2)
      fog-core (~> 1.0)
      multi_json (~> 1.10)
    fog-local (0.3.0)
      fog-core (~> 1.27)
    fog-openstack (0.1.11)
      fog-core (>= 1.40)
      fog-json (>= 1.0)
      ipaddress (>= 0.8)
    fog-powerdns (0.1.1)
      fog-core (~> 1.27)
      fog-json (~> 1.0)
      fog-xml (~> 0.1)
    fog-profitbricks (0.0.5)
      fog-core
      fog-xml
      nokogiri
    fog-rackspace (0.1.1)
      fog-core (>= 1.35)
      fog-json (>= 1.0)
      fog-xml (>= 0.1)
      ipaddress (>= 0.8)
    fog-radosgw (0.0.5)
      fog-core (>= 1.21.0)
      fog-json
      fog-xml (>= 0.0.1)
    fog-riakcs (0.1.0)
      fog-core
      fog-json
      fog-xml
    fog-sakuracloud (1.7.5)
      fog-core
      fog-json
    fog-serverlove (0.1.2)
      fog-core
      fog-json
    fog-softlayer (1.1.3)
      fog-core
      fog-json
    fog-storm_on_demand (0.1.1)
      fog-core
      fog-json
    fog-terremark (0.1.0)
      fog-core
      fog-xml
    fog-vmfusion (0.1.0)
      fission
      fog-core
    fog-voxel (0.1.0)
      fog-core
      fog-xml
    fog-vsphere (1.0.0)
      fog-core
      rbvmomi (~> 1.8)
    fog-xenserver (0.2.3)
      fog-core
      fog-xml
    fog-xml (0.1.2)
      fog-core
      nokogiri (~> 1.5, >= 1.5.11)
    foodcritic (4.0.0)
      erubis
      gherkin (~> 2.11)
      nokogiri (~> 1.5)
      rake
      rufus-lru (~> 1.0)
      treetop (~> 1.4)
      yajl-ruby (~> 1.1)
    formatador (0.2.5)
    gherkin (2.12.2)
      multi_json (~> 1.3)
    hashie (2.1.2)
    hitimes (1.2.4)
    httpclient (2.6.0.1)
    inflecto (0.0.2)
    ipaddress (0.8.3)
    json (1.8.3)
    kitchen-ec2 (0.8.0)
      fog
      test-kitchen (~> 1.0)
    kitchen-vagrant (0.15.0)
      test-kitchen (~> 1.0)
    logify (0.2.0)
    mime-types (3.1)
      mime-types-data (~> 3.2015)
    mime-types-data (3.2016.0521)
    mini_portile2 (2.1.0)
    minitar (0.5.4)
    mixlib-authentication (1.4.1)
      mixlib-log
    mixlib-log (1.7.0)
    mixlib-shellout (1.6.1)
    multi_json (1.12.1)
    multipart-post (2.0.0)
    net-http-persistent (2.9.4)
    net-scp (1.2.1)
      net-ssh (>= 2.6.5)
    net-ssh (2.9.4)
    nio4r (1.2.1)
    nokogiri (1.6.8)
      mini_portile2 (~> 2.1.0)
      pkg-config (~> 1.1.7)
    octokit (3.8.0)
      sawyer (~> 0.6.0, >= 0.5.3)
    parser (2.3.1.2)
      ast (~> 2.2)
    pkg-config (1.1.7)
    polyglot (0.3.5)
    powerpack (0.0.9)
    rainbow (2.1.0)
    rake (11.2.2)
    rbvmomi (1.8.2)
      builder
      nokogiri (>= 1.4.1)
      trollop
    retryable (1.3.6)
    ridley (4.1.1)
      addressable
      buff-config (~> 1.0)
      buff-extensions (~> 1.0)
      buff-ignore (~> 1.1)
      buff-shell_out (~> 0.1)
      celluloid (~> 0.16.0)
      celluloid-io (~> 0.16.1)
      erubis
      faraday (~> 0.9.0)
      hashie (>= 2.0.2, < 3.0.0)
      json (>= 1.7.7)
      mixlib-authentication (>= 1.3.0)
      net-http-persistent (>= 2.8)
      retryable
      semverse (~> 1.1)
      varia_model (~> 0.4)
    rubocop (0.24.1)
      json (>= 1.7.7, < 2)
      parser (>= 2.2.0.pre.3, < 3.0)
      powerpack (~> 0.0.6)
      rainbow (>= 1.99.1, < 3.0)
      ruby-progressbar (~> 1.4)
    ruby-progressbar (1.8.1)
    rufus-lru (1.1.0)
    safe_yaml (1.0.4)
    sawyer (0.6.0)
      addressable (~> 2.3.5)
      faraday (~> 0.8, < 0.10)
    semverse (1.2.1)
    solve (1.2.1)
      dep_selector (~> 1.0)
      semverse (~> 1.1)
    stove (4.1.1)
      chef-api (~> 0.5)
      logify (~> 0.2)
    test-kitchen (1.2.1)
      mixlib-shellout (~> 1.2)
      net-scp (~> 1.1)
      net-ssh (~> 2.7)
      safe_yaml (~> 1.0)
      thor (~> 0.18)
    thor (0.19.1)
    timers (4.0.4)
      hitimes
    treetop (1.6.8)
      polyglot (~> 0.3)
    trollop (2.1.2)
    varia_model (0.5.0)
      buff-extensions (~> 1.0)
      hashie (>= 2.0.2, < 4.0.0)
    xml-simple (1.1.5)
    yajl-ruby (1.2.1)

PLATFORMS
  ruby

DEPENDENCIES
  berkshelf (~> 3.1.4)
  foodcritic (~> 4.0.0)
  kitchen-ec2
  kitchen-vagrant (~> 0.15.0)
  rake
  rubocop (~> 0.24.1)
  stove
  test-kitchen (~> 1.2.1)
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Gemfile.lock to tempfile /tmp/chef-rest20160913-19215-42ek11
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: yum
# Resource:: repository
#
# Author:: Sean OMeara <someara@chef.io>
# Copyright 2013-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :create, :delete

default_action :create

# http://linux.die.net/man/5/yum.conf
attribute :alwaysprompt, kind_of: [TrueClass, FalseClass], default: nil
attribute :assumeyes, kind_of: [TrueClass, FalseClass], default: nil
attribute :bandwidth, kind_of: String, regex: /^\d+/, default: nil
attribute :bugtracker_url, kind_of: String, regex: /.*/, default: nil
attribute :clean_requirements_on_remove, kind_of: [TrueClass, FalseClass], default: nil
attribute :cachedir, kind_of: String, regex: /.*/, default: '/var/cache/yum/$basearch/$releasever'
attribute :color, kind_of: String, equal_to: %w(always never), default: nil
attribute :color_list_available_downgrade, kind_of: String, regex: /.*/, default: nil
attribute :color_list_available_install, kind_of: String, regex: /.*/, default: nil
attribute :color_list_available_reinstall, kind_of: String, regex: /.*/, default: nil
attribute :color_list_available_upgrade, kind_of: String, regex: /.*/, default: nil
attribute :color_list_installed_extra, kind_of: String, regex: /.*/, default: nil
attribute :color_list_installed_newer, kind_of: String, regex: /.*/, default: nil
attribute :color_list_installed_older, kind_of: String, regex: /.*/, default: nil
attribute :color_list_installed_reinstall, kind_of: String, regex: /.*/, default: nil
attribute :color_search_match, kind_of: String, regex: /.*/, default: nil
attribute :color_update_installed, kind_of: String, regex: /.*/, default: nil
attribute :color_update_local, kind_of: String, regex: /.*/, default: nil
attribute :color_update_remote, kind_of: String, regex: /.*/, default: nil
attribute :commands, kind_of: String, regex: /.*/, default: nil
attribute :debuglevel, kind_of: String, regex: /^\d+$/, default: '2'
attribute :deltarpm, kind_of: [TrueClass, FalseClass], default: nil
attribute :diskspacecheck, kind_of: [TrueClass, FalseClass], default: nil
attribute :distroverpkg, kind_of: String, regex: /.*/, default: nil
attribute :enable_group_conditionals, kind_of: [TrueClass, FalseClass], default: nil
attribute :errorlevel, kind_of: String, regex: /^\d+$/, default: nil
attribute :exactarch, kind_of: [TrueClass, FalseClass], default: true
attribute :exclude, kind_of: String, regex: /.*/, default: nil
attribute :gpgcheck, kind_of: [TrueClass, FalseClass], default: true
attribute :group_package_types, kind_of: String, regex: /.*/, default: nil
attribute :groupremove_leaf_only, kind_of: [TrueClass, FalseClass], default: nil
attribute :history_list_view, kind_of: String, equal_to: %w(users commands single-user-commands), default: nil
attribute :history_record, kind_of: [TrueClass, FalseClass], default: nil
attribute :history_record_packages, kind_of: String, regex: /.*/, default: nil
attribute :http_caching, kind_of: String, equal_to: %w(packages all none), default: nil
attribute :installonly_limit, kind_of: String, regex: [/^\d+/, /keep/], default: '3'
attribute :installonlypkgs, kind_of: String, regex: /.*/, default: nil
attribute :installroot, kind_of: String, regex: /.*/, default: nil
attribute :keepalive, kind_of: [TrueClass, FalseClass], default: nil
attribute :keepcache, kind_of: [TrueClass, FalseClass], default: false
attribute :kernelpkgnames, kind_of: String, regex: /.*/, default: nil
attribute :localpkg_gpgcheck, kind_of: [TrueClass, FalseClass], default: nil
attribute :logfile, kind_of: String, regex: /.*/, default: '/var/log/yum.log'
attribute :max_retries, kind_of: String, regex: /^\d+$/, default: nil
attribute :mdpolicy, kind_of: String, equal_to: %w(instant group:primary group:small group:main group:all), default: nil
attribute :metadata_expire, kind_of: String, regex: [/^\d+$/, /^\d+[mhd]$/, /never/], default: nil
attribute :mirrorlist_expire, kind_of: String, regex: /^\d+$/, default: nil
attribute :multilib_policy, kind_of: String, equal_to: %w(all best), default: nil
attribute :obsoletes, kind_of: [TrueClass, FalseClass], default: nil
attribute :overwrite_groups, kind_of: [TrueClass, FalseClass], default: nil
attribute :password, kind_of: String, regex: /.*/, default: nil
attribute :path, kind_of: String, regex: /.*/, name_attribute: true
attribute :persistdir, kind_of: String, regex: /.*/, default: nil
attribute :pluginconfpath, kind_of: String, regex: /.*/, default: nil
attribute :pluginpath, kind_of: String, regex: /.*/, default: nil
attribute :plugins, kind_of: [TrueClass, FalseClass], default: true
attribute :protected_multilib, kind_of: [TrueClass, FalseClass], default: nil
attribute :protected_packages, kind_of: String, regex: /.*/, default: nil
attribute :proxy, kind_of: String, regex: /.*/, default: nil
attribute :proxy_password, kind_of: String, regex: /.*/, default: nil
attribute :proxy_username, kind_of: String, regex: /.*/, default: nil
attribute :recent, kind_of: String, regex: /^\d+$/, default: nil
attribute :releasever, kind_of: String, regex: /.*/, default: nil
attribute :repo_gpgcheck, kind_of: [TrueClass, FalseClass], default: nil
attribute :reposdir, kind_of: String, regex: /.*/, default: nil
attribute :reset_nice, kind_of: [TrueClass, FalseClass], default: nil
attribute :rpmverbosity, kind_of: String, equal_to: %w(info critical emergency error warn debug), default: nil
attribute :showdupesfromrepos, kind_of: [TrueClass, FalseClass], default: nil
attribute :skip_broken, kind_of: [TrueClass, FalseClass], default: nil
attribute :ssl_check_cert_permissions, kind_of: [TrueClass, FalseClass], default: nil
attribute :sslcacert, kind_of: String, regex: /.*/, default: nil
attribute :sslclientcert, kind_of: String, regex: /.*/, default: nil
attribute :sslclientkey, kind_of: String, regex: /.*/, default: nil
attribute :sslverify, kind_of: [TrueClass, FalseClass], default: nil
attribute :syslog_device, kind_of: String, regex: /.*/, default: nil
attribute :syslog_facility, kind_of: String, regex: /.*/, default: nil
attribute :syslog_ident, kind_of: String, regex: /.*/, default: nil
attribute :throttle, kind_of: String, regex: [/\d+k/, /\d+M/, /\d+G/], default: nil
attribute :timeout, kind_of: String, regex: /^\d+$/, default: nil
attribute :tolerant, kind_of: [TrueClass, FalseClass], default: nil
attribute :tsflags, kind_of: String, regex: /.*/, default: nil
attribute :username, kind_of: String, regex: /.*/, default: nil
attribute :options, kind_of: Hash
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/resources/globalconfig.rb to tempfile /tmp/chef-rest20160913-19215-rkgk2a
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
source 'https://rubygems.org'

gem 'rake'
gem 'berkshelf', '~> 3.1.4'
gem 'kitchen-ec2'
gem 'stove'

group :test do
  gem 'foodcritic', '~> 4.0.0'
  gem 'rubocop', '~> 0.24.1'
end

group :integration do
  gem 'test-kitchen', '~> 1.2.1'
  gem 'kitchen-vagrant', '~> 0.15.0'
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/resources/globalconfig.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum/resources
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/LICENSE in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/Gemfile to tempfile /tmp/chef-rest20160913-19215-1xuxm6s
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/Gemfile in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/templates/default/main.erb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036cbf08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/packagecloud/chefignore",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036e4008>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "packagecloud",
   "chefignore"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: yum
# Resource:: repository
#
# Author:: Sean OMeara <someara@chef.io>
# Copyright 2013-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :create, :delete, :add, :remove, :makecache

default_action :create

# http://linux.die.net/man/5/yum.conf
attribute :baseurl, kind_of: [String, Array], regex: /.*/, default: nil
attribute :cost, kind_of: String, regex: /^\d+$/, default: nil
attribute :clean_headers, kind_of: [TrueClass, FalseClass], default: false # deprecated
attribute :clean_metadata, kind_of: [TrueClass, FalseClass], default: true
attribute :description, kind_of: String, regex: /.*/, default: 'Ye Ole Rpm Repo'
attribute :enabled, kind_of: [TrueClass, FalseClass], default: true
attribute :enablegroups, kind_of: [TrueClass, FalseClass], default: nil
attribute :exclude, kind_of: String, regex: /.*/, default: nil
attribute :failovermethod, kind_of: String, equal_to: %w(priority roundrobin), default: nil
attribute :fastestmirror_enabled, kind_of: [TrueClass, FalseClass], default: nil
attribute :gpgcheck, kind_of: [TrueClass, FalseClass], default: true
attribute :gpgkey, kind_of: [String, Array], regex: /.*/, default: nil
attribute :http_caching, kind_of: String, equal_to: %w(packages all none), default: nil
attribute :include_config, kind_of: String, regex: /.*/, default: nil
attribute :includepkgs, kind_of: String, regex: /.*/, default: nil
attribute :keepalive, kind_of: [TrueClass, FalseClass], default: nil
attribute :make_cache, kind_of: [TrueClass, FalseClass], default: true
attribute :max_retries, kind_of: [String, Integer], default: nil
attribute :metadata_expire, kind_of: String, regex: [/^\d+$/, /^\d+[mhd]$/, /never/], default: nil
attribute :mirrorexpire, kind_of: String, regex: /.*/, default: nil
attribute :mirrorlist, kind_of: String, regex: /.*/, default: nil
attribute :mirror_expire, kind_of: String, regex: [/^\d+$/, /^\d+[mhd]$/], default: nil
attribute :mirrorlist_expire, kind_of: String, regex: [/^\d+$/, /^\d+[mhd]$/], default: nil
attribute :mode, default: '0644'
attribute :priority, kind_of: String, regex: /^(\d?[0-9]|[0-9][0-9])$/, default: nil
attribute :proxy, kind_of: String, regex: /.*/, default: nil
attribute :proxy_username, kind_of: String, regex: /.*/, default: nil
attribute :proxy_password, kind_of: String, regex: /.*/, default: nil
attribute :username, kind_of: String, regex: /.*/, default: nil
attribute :password, kind_of: String, regex: /.*/, default: nil
attribute :repo_gpgcheck, kind_of: [TrueClass, FalseClass], default: nil
attribute :report_instanceid, kind_of: [TrueClass, FalseClass], default: nil
attribute :repositoryid, kind_of: String, regex: /.*/, name_attribute: true
attribute :sensitive, kind_of: [TrueClass, FalseClass], default: false
attribute :skip_if_unavailable, kind_of: [TrueClass, FalseClass], default: nil
attribute :source, kind_of: String, regex: /.*/, default: nil
attribute :sslcacert, kind_of: String, regex: /.*/, default: nil
attribute :sslclientcert, kind_of: String, regex: /.*/, default: nil
attribute :sslclientkey, kind_of: String, regex: /.*/, default: nil
attribute :sslverify, kind_of: [TrueClass, FalseClass], default: nil
attribute :timeout, kind_of: String, regex: /^\d+$/, default: nil
attribute :options, kind_of: Hash

alias_method :url, :baseurl
alias_method :keyurl, :gpgkey
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/resources/repository.rb to tempfile /tmp/chef-rest20160913-19215-ie42bo
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/resources/repository.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/templates/default/repo.erb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/Gemfile.lock in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000205a7b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/recipes/dnf_yum_compat.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000205a9b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "recipes",
   "dnf_yum_compat.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Tim Smith (<tsmith@chef.io>)
# Recipe:: yum::fedora_yum_compat
#
# Copyright 2015-2016, Chef Software, Inc (<legal@chef.io>)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

execute 'install yum' do
  command 'dnf install yum -y'
  not_if { ::File.exist?('/var/lib/yum') }
  action :nothing
end.run_action(:run)
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/recipes/dnf_yum_compat.rb to tempfile /tmp/chef-rest20160913-19215-7ov71r
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/recipes/dnf_yum_compat.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum/recipes
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/libraries/matchers.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020ad0a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000020ad4b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Sean OMeara (<someara@chef.io>)
# Author:: Joshua Timberman (<joshua@chef.io>)
# Recipe:: yum::default
#
# Copyright 2013-2016, Chef Software, Inc (<legal@chef.io>)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

yum_globalconfig '/etc/yum.conf' do
  node['yum']['main'].each do |config, value|
    send(config.to_sym, value) unless value.nil?
  end

  action :create
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-1qldlru
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# Put files/directories that should be ignored in this file when uploading
# or sharing to the community site.
# Lines that start with '# ' are comments.

# OS generated files #
######################
.DS_Store
Icon?
nohup.out
ehthumbs.db
Thumbs.db

# SASS #
########
.sass-cache

# EDITORS #
###########
\#*
.#*
*~
*.sw[a-z]
*.bak
REVISION
TAGS*
tmtags
*_flymake.*
*_flymake
*.tmproj
.project
.settings
mkmf.log

## COMPILED ##
##############
a.out
*.o
*.pyc
*.so
*.com
*.class
*.dll
*.exe
*/rdoc/

# Testing #
###########
.watchr
.rspec
spec/*
spec/fixtures/*
test/*
features/*
Guardfile
Procfile

# SCM #
#######
.git
*/.git
.gitignore
.gitmodules
.gitconfig
.gitattributes
.svn
*/.bzr/*
*/.hg/*
*/.svn/*

# Berkshelf #
#############
cookbooks/*
tmp

# Cookbooks #
#############
CONTRIBUTING
CHANGELOG*

# Strainer #
############
Colanderfile
Strainerfile
.colander
.strainer

# Vagrant #
###########
.vagrant
Vagrantfile

# Travis #
##########
.travis.yml

# tmux #
##########
.tmux
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/packagecloud/chefignore to tempfile /tmp/chef-rest20160913-19215-yzntcc
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: yum
# Provider:: repository
#
# Author:: Sean OMeara <someara@chef.io>
# Copyright 2013-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

def whyrun_supported?
  true
end

action :create do
  template new_resource.path do
    source 'main.erb'
    cookbook 'yum'
    mode '0644'
    variables(config: new_resource)
  end
end

action :delete do
  file new_resource.path do
    action :delete
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/providers/globalconfig.rb to tempfile /tmp/chef-rest20160913-19215-1g5em8e
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b545f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/templates/default/repo.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b547a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "templates",
   "default",
   "repo.erb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/attributes/main.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000fbeb68
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/templates/default/main.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000fbf478>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "templates",
   "default",
   "main.erb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000136d138
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000136de58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: yum
# Provider:: repository
#
# Author:: Sean OMeara <someara@chef.io>
# Copyright 2013-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

def whyrun_supported?
  true
end

action :add do
  Chef::Log.warn('The :add method in yum_repository has been deprecated in favor of :create. Please update your cookbook to use the :create action')
  action_create
end

action :remove do
  Chef::Log.warn('The :remove method in yum_repository has been deprecated in favor of :delete. Repository deletion in Chef 12.14+ with :remove will fail')
  action_delete
end

action :create do
  if new_resource.clean_headers
    Chef::Log.warn <<-eos
      Use of `clean_headers` in resource yum[#{new_resource.repositoryid}] is now deprecated and will be removed in a future release.
      `clean_metadata` should be used instead
    eos
  end

  template "/etc/yum.repos.d/#{new_resource.repositoryid}.repo" do
    if new_resource.source.nil?
      source 'repo.erb'
      cookbook 'yum'
    else
      source new_resource.source
    end
    mode new_resource.mode
    sensitive new_resource.sensitive
    variables(config: new_resource)
    if new_resource.make_cache
      notifies :run, "execute[yum clean metadata #{new_resource.repositoryid}]", :immediately if new_resource.clean_metadata || new_resource.clean_headers
      notifies :run, "execute[yum-makecache-#{new_resource.repositoryid}]", :immediately
      notifies :create, "ruby_block[yum-cache-reload-#{new_resource.repositoryid}]", :immediately
    end
  end

  execute "yum clean metadata #{new_resource.repositoryid}" do
    command "yum clean metadata --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
    action :nothing
  end

  # get the metadata for this repo only
  execute "yum-makecache-#{new_resource.repositoryid}" do
    command "yum -q -y makecache --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
    action :nothing
    only_if { new_resource.enabled }
  end

  # reload internal Chef yum cache
  ruby_block "yum-cache-reload-#{new_resource.repositoryid}" do
    block { Chef::Provider::Package::Yum::YumCache.instance.reload }
    action :nothing
  end
end

action :delete do
  file "/etc/yum.repos.d/#{new_resource.repositoryid}.repo" do
    action :delete
    notifies :run, "execute[yum clean all #{new_resource.repositoryid}]", :immediately
    notifies :create, "ruby_block[yum-cache-reload-#{new_resource.repositoryid}]", :immediately
  end

  execute "yum clean all #{new_resource.repositoryid}" do
    command "yum clean all --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
    only_if "yum repolist | grep -P '^#{new_resource.repositoryid}([ \t]|$)'"
    action :nothing
  end

  ruby_block "yum-cache-reload-#{new_resource.repositoryid}" do
    block { Chef::Provider::Package::Yum::YumCache.instance.reload }
    action :nothing
  end
end

action :makecache do
  execute "yum-makecache-#{new_resource.repositoryid}" do
    command "yum -q makecache --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
    action :run
  end

  ruby_block "yum-cache-reload-#{new_resource.repositoryid}" do
    block { Chef::Provider::Package::Yum::YumCache.instance.reload }
    action :run
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/providers/repository.rb to tempfile /tmp/chef-rest20160913-19215-yuo3tv
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001317300
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/attributes/main.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001317508>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "attributes",
   "main.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/providers/globalconfig.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum/providers
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/recipes/default.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# http://linux.die.net/man/5/yum.conf
default['yum']['main']['cachedir'] = case node['platform_version'].to_i
                                     when 5
                                       '/var/cache/yum'
                                     else
                                       '/var/cache/yum/$basearch/$releasever'
                                     end

default['yum']['main']['distroverpkg'] = case node['platform']
                                         when 'amazon'
                                           'system-release'
                                         when 'scientific'
                                           'sl-release'
                                         when 'redhat'
                                           nil
                                         else
                                           "#{node['platform']}-release"
                                         end
# default["yum"]["main"]["releasever"] = nil #  /.*/
default['yum']['main']['releasever'] = case node['platform']
                                       when 'amazon'
                                         'latest'
                                       end
default['yum']['main']['alwaysprompt'] = nil # [TrueClass, FalseClass]
default['yum']['main']['assumeyes'] = nil # [TrueClass, FalseClass]
default['yum']['main']['bandwidth'] = nil # /^\d+$/
default['yum']['main']['bugtracker_url'] = nil # /.*/
default['yum']['main']['clean_requirements_on_remove'] = nil # [TrueClass, FalseClass]
default['yum']['main']['color'] = nil # %w{ always never }
default['yum']['main']['color_list_available_downgrade'] = nil #  /.*/
default['yum']['main']['color_list_available_install'] = nil #  /.*/
default['yum']['main']['color_list_available_reinstall'] = nil #  /.*/
default['yum']['main']['color_list_available_upgrade'] = nil #  /.*/
default['yum']['main']['color_list_installed_extra'] = nil #  /.*/
default['yum']['main']['color_list_installed_newer'] = nil #  /.*/
default['yum']['main']['color_list_installed_older'] = nil #  /.*/
default['yum']['main']['color_list_installed_reinstall'] = nil #  /.*/
default['yum']['main']['color_search_match'] = nil #  /.*/
default['yum']['main']['color_update_installed'] = nil #  /.*/
default['yum']['main']['color_update_local'] = nil #  /.*/
default['yum']['main']['color_update_remote'] = nil #  /.*/
default['yum']['main']['commands'] = nil #  /.*/
default['yum']['main']['deltarpm'] = nil # [TrueClass, FalseClass]
default['yum']['main']['debuglevel'] = nil # /^\d+$/
default['yum']['main']['diskspacecheck'] = nil # [TrueClass, FalseClass]
default['yum']['main']['enable_group_conditionals'] = nil # [TrueClass, FalseClass]
default['yum']['main']['errorlevel'] = nil # /^\d+$/
default['yum']['main']['exactarch'] = nil # [TrueClass, FalseClass]
default['yum']['main']['exclude'] = nil # /.*/
default['yum']['main']['gpgcheck'] = true # [TrueClass, FalseClass]
default['yum']['main']['group_package_types'] = nil # /.*/
default['yum']['main']['groupremove_leaf_only'] = nil # [TrueClass, FalseClass]
default['yum']['main']['history_list_view'] = nil #  /.*/
default['yum']['main']['history_record'] = nil # [TrueClass, FalseClass]
default['yum']['main']['history_record_packages'] = nil #  /.*/
default['yum']['main']['http_caching'] = nil # %w{ packages all none }
default['yum']['main']['installonly_limit'] = nil # /\d+/, /keep/
default['yum']['main']['installonlypkgs'] = nil # /.*/
default['yum']['main']['installroot'] = nil # /.*/
default['yum']['main']['keepalive'] = nil # [TrueClass, FalseClass]
default['yum']['main']['keepcache'] = false # [TrueClass, FalseClass]
default['yum']['main']['kernelpkgnames'] = nil # /.*/
default['yum']['main']['localpkg_gpgcheck'] = false # [TrueClass,# FalseClass]
default['yum']['main']['logfile'] = '/var/log/yum.log' # /.*/
default['yum']['main']['max_retries'] = nil # /^\d+$/
default['yum']['main']['mdpolicy'] = nil # %w{ packages all none }
default['yum']['main']['metadata_expire'] = nil # /^\d+$/
default['yum']['main']['mirrorlist_expire'] = nil # /^\d+$/
default['yum']['main']['multilib_policy'] = nil # %w{ all best }
default['yum']['main']['obsoletes'] = nil # [TrueClass, FalseClass]
default['yum']['main']['overwrite_groups'] = nil # [TrueClass, FalseClass]
default['yum']['main']['password'] = nil #  /.*/
default['yum']['main']['path'] = '/etc/yum.conf' #  /.*/
default['yum']['main']['persistdir'] = nil # /.*/
default['yum']['main']['pluginconfpath'] = nil #  /.*/
default['yum']['main']['pluginpath'] = nil #  /.*/
default['yum']['main']['plugins'] = nil # [TrueClass, FalseClass]
default['yum']['main']['protected_multilib'] = nil # /.*/
default['yum']['main']['protected_packages'] = nil # /.*/
default['yum']['main']['proxy'] = nil #  /.*/
default['yum']['main']['proxy_password'] = nil #  /.*/
default['yum']['main']['proxy_username'] = nil #  /.*/
default['yum']['main']['password'] = nil #  /.*/
default['yum']['main']['recent'] = nil # /^\d+$/
default['yum']['main']['repo_gpgcheck'] = nil # [TrueClass, FalseClass]
default['yum']['main']['reposdir'] = nil #  /.*/
default['yum']['main']['reset_nice'] = nil # [TrueClass, FalseClass]
default['yum']['main']['rpmverbosity'] = nil # %w{ info critical# emergency error warn debug }
default['yum']['main']['showdupesfromrepos'] = nil # [TrueClass, FalseClass]
default['yum']['main']['skip_broken'] = nil # [TrueClass, FalseClass]
default['yum']['main']['ssl_check_cert_permissions'] = nil # [TrueClass, FalseClass]
default['yum']['main']['sslcacert'] = nil # /.*/
default['yum']['main']['sslclientcert'] = nil # /.*/
default['yum']['main']['sslclientkey'] = nil #  /.*/
default['yum']['main']['sslverify'] = nil # [TrueClass, FalseClass]
default['yum']['main']['syslog_device'] = nil #  /.*/
default['yum']['main']['syslog_facility'] = nil #  /.*/
default['yum']['main']['syslog_ident'] = nil #  /.*/
default['yum']['main']['throttle'] = nil # [/\d+k/, /\d+M/, /\d+G/]
default['yum']['main']['timeout'] = nil # /\d+/
default['yum']['main']['tolerant'] = false
default['yum']['main']['tsflags'] = nil # /.*/
default['yum']['main']['username'] = nil #  /.*/
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/README.md
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/providers/repository.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# This file was generated by Chef
# Do NOT modify this file by hand.

[main]
<% if @config.alwaysprompt %>
alwaysprompt=<%= @config.alwaysprompt %>
<% end %>
<% if @config.assumeyes %>
assumeyes=<%= @config.assumeyes %>
<% end %>
<% if @config.bandwidth %>
bandwidth=<%= @config.bandwidth %>
<% end %>
<% if @config.bugtracker_url %>
bugtracker_url=<%= @config.bugtracker_url %>
<% end %>
<% if @config.cachedir %>
cachedir=<%= @config.cachedir %>
<% end %>
<% if @config.clean_requirements_on_remove %>
clean_requirements_on_remove=<%= @config.clean_requirements_on_remove %>
<% end %>
<% if @config.color %>
color=<%= @config.color %>
<% end %>
<% if @config.color_list_available_downgrade %>
color_list_available_downgrade=<%= @config.color_list_available_downgrade %>
<% end %>
<% if @config.color_list_available_install %>
color_list_available_install=<%= @config.color_list_available_install %>
<% end %>
<% if @config.color_list_available_reinstall %>
color_list_available_reinstall=<%= @config.color_list_available_reinstall %>
<% end %>
<% if @config.color_list_available_upgrade %>
color_list_available_upgrade=<%= @config.color_list_available_upgrade %>
<% end %>
<% if @config.color_list_installed_extra %>
color_list_installed_extra=<%= @config.color_list_installed_extra %>
<% end %>
<% if @config.color_list_installed_newer %>
color_list_installed_newer=<%= @config.color_list_installed_newer %>
<% end %>
<% if @config.color_list_installed_older %>
color_list_installed_older=<%= @config.color_list_installed_older %>
<% end %>
<% if @config.color_list_installed_reinstall %>
color_list_installed_reinstall=<%= @config.color_list_installed_reinstall %>
<% end %>
<% if @config.color_search_match %>
color_search_match=<%= @config.color_search_match %>
<% end %>
<% if @config.color_update_installed %>
color_update_installed=<%= @config.color_update_installed %>
<% end %>
<% if @config.color_update_local %>
color_update_local=<%= @config.color_update_local %>
<% end %>
<% if @config.color_update_remote %>
color_update_remote=<%= @config.color_update_remote %>
<% end %>
<% if @config.commands %>
commands=<%= @config.commands %>
<% end %>
<% if @config.debuglevel %>
debuglevel=<%= @config.debuglevel %>
<% end %>
<% if @config.deltarpm == true %>
deltarpm=1
<% elsif @config.deltarpm == false %>
deltarpm=0
<% end %>
<% if @config.diskspacecheck %>
diskspacecheck=<%= @config.diskspacecheck %>
<% end %>
<% if @config.distroverpkg %>
distroverpkg=<%= @config.distroverpkg %>
<% end %>
<% if @config.enable_group_conditionals %>
enable_group_conditionals=1
<% end %>
<% if @config.errorlevel %>
errorlevel=<%= @config.errorlevel %>
<% end %>
<% if @config.exactarch %>
exactarch=1
<% else %>
exactarch=0
<% end %>
<% if @config.exclude %>
exclude=<%= @config.exclude %>
<% end %>
<% if @config.gpgcheck %>
gpgcheck=1
<% else %>
gpgcheck=0
<% end %>
<% if @config.group_package_types %>
group_package_types=<%= @config.group_package_types %>
<% end %>
<% if @config.groupremove_leaf_only %>
groupremove_leaf_only=<%= @config.groupremove_leaf_only %>
<% end %>
<% if @config.history_list_view %>
history_list_view=<%= @config.history_list_view %>
<% end %>
<% if @config.history_record %>
history_record=<%= @config.history_record %>
<% end %>
<% if @config.history_record_packages %>
history_record_packages=<%= @config.history_record_packages %>
<% end %>
<% if @config.http_caching %>
http_caching=<%= @config.http_caching %>
<% end %>
<% if @config.installonly_limit %>
installonly_limit=<%= @config.installonly_limit %>
<% end %>
<% if @config.installonlypkgs %>
installonlypkgs=<%= @config.installonlypkgs %>
<% end %>
<% if @config.installroot %>
installroot=<%= @config.installroot %>
<% end %>
<% if @config.keepalive %>
keepalive=<%= @config.keepalive %>
<% end %>
<% if @config.keepcache %>
keepcache=1
<% else %>
keepcache=0
<% end %>
<% if @config.kernelpkgnames %>
kernelpkgnames=<%= @config.kernelpkgnames %>
<% end %>
<% if @config.localpkg_gpgcheck %>
localpkg_gpgcheck=1
<% else %>
localpkg_gpgcheck=0
<% end %>
<% if @config.logfile %>
logfile=<%= @config.logfile %>
<% end %>
<% if @config.max_retries %>
max_retries=<%= @config.max_retries %>
<% end %>
<% if @config.mdpolicy %>
mdpolicy=<%= @config.mdpolicy %>
<% end %>
<% if @config.metadata_expire %>
metadata_expire=<%= @config.metadata_expire %>
<% end %>
<% if @config.mirrorlist_expire %>
mirrorlist_expire=<%= @config.mirrorlist_expire %>
<% end %>
<% if @config.multilib_policy %>
multilib_policy=<%= @config.multilib_policy %>
<% end %>
<% if @config.obsoletes == false %>
obsoletes=0
<% else %>
obsoletes=1
<% end %>
<% if @config.overwrite_groups %>
overwrite_groups=<%= @config.overwrite_groups %>
<% end %>
<% if @config.password %>
password=<%= @config.password %>
<% end %>
<% if @config.persistdir %>
persistdir=<%= @config.persistdir %>
<% end %>
<% if @config.pluginconfpath %>
pluginconfpath=<%= @config.pluginconfpath %>
<% end %>
<% if @config.pluginpath %>
pluginpath=<%= @config.pluginpath %>
<% end %>
<% if @config.plugins %>
plugins=1
<% else %>
plugins=0
<% end %>
<% if @config.protected_multilib %>
protected_multilib=<%= @config.protected_multilib %>
<% end %>
<% if @config.protected_packages %>
protected_packages=<%= @config.protected_packages %>
<% end %>
<% if @config.proxy %>
proxy=<%= @config.proxy %>
<% end %>
<% if @config.proxy_password %>
proxy_password=<%= @config.proxy_password %>
<% end %>
<% if @config.proxy_username %>
proxy_username=<%= @config.proxy_username %>
<% end %>
<% if @config.recent %>
recent=<%= @config.recent %>
<% end %>
<% if @config.releasever %>
releasever=<%= @config.releasever %>
<% end %>
<% if @config.repo_gpgcheck %>
repo_gpgcheck=<%= @config.repo_gpgcheck %>
<% end %>
<% if @config.reposdir %>
reposdir=<%= @config.reposdir %>
<% end %>
<% if @config.reset_nice %>
reset_nice=<%= @config.reset_nice %>
<% end %>
<% if @config.rpmverbosity %>
rpmverbosity=<%= @config.rpmverbosity %>
<% end %>
<% if @config.showdupesfromrepos %>
showdupesfromrepos=<%= @config.showdupesfromrepos %>
<% end %>
<% if @config.skip_broken %>
skip_broken=<%= @config.skip_broken %>
<% end %>
<% if @config.ssl_check_cert_permissions %>
ssl_check_cert_permissions=<%= @config.ssl_check_cert_permissions %>
<% end %>
<% if @config.sslcacert %>
sslcacert=<%= @config.sslcacert %>
<% end %>
<% if @config.sslclientcert %>
sslclientcert=<%= @config.sslclientcert %>
<% end %>
<% if @config.sslclientkey %>
sslclientkey=<%= @config.sslclientkey %>
<% end %>
<% unless @config.sslverify.nil? %>
sslverify=<%= ( @config.sslverify ) ? 'true' : 'false' %>
<% end %>
<% if @config.syslog_device %>
syslog_device=<%= @config.syslog_device %>
<% end %>
<% if @config.syslog_facility %>
syslog_facility=<%= @config.syslog_facility %>
<% end %>
<% if @config.syslog_ident %>
syslog_ident=<%= @config.syslog_ident %>
<% end %>
<% if @config.throttle %>
throttle=<%= @config.throttle %>
<% end %>
<% if @config.timeout %>
timeout=<%= @config.timeout %>
<% end %>
<% if @config.tolerant %>
tolerant=<%= ( @config.tolerant ) ? '1' : '0' %>
<% end %>
<% if @config.tsflags %>
tsflags=<%= @config.tsflags %>
<% end %>
<% if @config.username %>
username=<%= @config.username %>
<% end %>
<% if @config.options -%>
<%   @config.options.each do |key, value| -%>
<%= key %>=<%=
       case value
       when Array
         value.join("\n       ")
       when TrueClass
         '1'
       when FalseClass
         '0'
       else
         value
       end %>
<%   end -%>
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/packagecloud/chefignore in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/templates/default/main.erb to tempfile /tmp/chef-rest20160913-19215-1779ldf
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/attributes/main.rb to tempfile /tmp/chef-rest20160913-19215-1utr790
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# This file was generated by Chef
# Do NOT modify this file by hand.

[<%= @config.repositoryid %>]
name=<%= @config.description %>
<% if @config.baseurl %>
baseurl=<%= case @config.baseurl
     when Array
       @config.baseurl.join("\n")
     else
       @config.baseurl
     end %>
<% end -%>
<% if @config.cost %>
cost=<%= @config.cost %>
<% end %>
<% if @config.enabled %>
enabled=1
<% else %>
enabled=0
<% end %>
<% if @config.enablegroups %>
enablegroups=1
<% end %>
<% if @config.exclude %>
exclude=<%= @config.exclude %>
<% end %>
<% if @config.failovermethod %>
failovermethod=<%= @config.failovermethod %>
<% end %>
<% if @config.fastestmirror_enabled %>
fastestmirror_enabled=<%= @config.fastestmirror_enabled %>
<% end %>
<% if @config.gpgcheck %>
gpgcheck=1
<% else %>
gpgcheck=0
<% end %>
<% if @config.gpgkey %>
gpgkey=<%= case @config.gpgkey
     when Array
       @config.gpgkey.join("\n       ")
     else
       @config.gpgkey
     end %>
<% end -%>
<% if @config.http_caching %>
http_caching=<%= @config.http_caching %>
<% end %>
<% if @config.include_config %>
include=<%= @config.include_config %>
<% end %>
<% if @config.includepkgs %>
includepkgs=<%= @config.includepkgs %>
<% end %>
<% if @config.keepalive %>
keepalive=1
<% end %>
<% if @config.metadata_expire %>
metadata_expire=<%= @config.metadata_expire %>
<% end %>
<% if @config.mirrorlist %>
mirrorlist=<%= @config.mirrorlist %>
<% end %>
<% if @config.mirror_expire %>
mirror_expire=<%= @config.mirror_expire %>
<% end %>
<% if @config.mirrorlist_expire %>
mirrorlist_expire=<%= @config.mirrorlist_expire %>
<% end %>
<% if @config.priority %>
priority=<%= @config.priority %>
<% end %>
<% if @config.proxy %>
proxy=<%= @config.proxy %>
<% end %>
<% if @config.proxy_username %>
proxy_username=<%= @config.proxy_username %>
<% end %>
<% if @config.proxy_password %>
proxy_password=<%= @config.proxy_password %>
<% end %>
<% if @config.username %>
username=<%= @config.username %>
<% end %>
<% if @config.password %>
password=<%= @config.password %>
<% end %>
<% if @config.repo_gpgcheck %>
repo_gpgcheck=1
<% end %>
<% if @config.max_retries %>
retries=<%= @config.max_retries %>
<% end %>
<% if @config.report_instanceid %>
report_instanceid=<%= @config.report_instanceid %>
<% end %>
<% if @config.skip_if_unavailable %>
skip_if_unavailable=1
<% end %>
<% if @config.sslcacert %>
sslcacert=<%= @config.sslcacert %>
<% end %>
<% if @config.sslclientcert %>
sslclientcert=<%= @config.sslclientcert %>
<% end %>
<% if @config.sslclientkey %>
sslclientkey=<%= @config.sslclientkey %>
<% end %>
<% unless @config.sslverify.nil? %>
sslverify=<%= ( @config.sslverify ) ? 'true' : 'false' %>
<% end %>
<% if @config.timeout %>
timeout=<%= @config.timeout %>
<% end %>
<% if @config.options -%>
<%   @config.options.each do |key, value| -%>
<%= key %>=<%=
       case value
       when Array
         value.join("\n       ")
       when TrueClass
         '1'
       when FalseClass
         '0'
       else
         value
       end %>
<%   end -%>
<% end -%>
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/templates/default/repo.erb to tempfile /tmp/chef-rest20160913-19215-1594t67
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)
  def create_yum_repository(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:yum_repository, :create, resource_name)
  end

  def add_yum_repository(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:yum_repository, :add, resource_name)
  end

  def delete_yum_repository(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:yum_repository, :delete, resource_name)
  end

  def remove_yum_repository(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:yum_repository, :remove, resource_name)
  end

  def create_yum_globalconfig(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:yum_globalconfig, :create, resource_name)
  end

  def delete_yum_globalconfig(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:yum_globalconfig, :delete, resource_name)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-14z7hxv
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/metadata.json
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/templates/default/repo.erb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum/templates
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum/templates/default
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/attributes/main.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum/attributes
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/templates/default/main.erb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/libraries/matchers.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/CHANGELOG.md
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum/libraries
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e5e428
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e5e590>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "CHANGELOG.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/MAINTAINERS.md
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e173c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e17488>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum/CONTRIBUTING.md
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d96ba8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d970d0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "resource",
   "lwrp_base.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003eeed98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003eef1f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "README.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# yum Cookbook

[![Build Status](https://travis-ci.org/chef-cookbooks/yum.svg?branch=master)](http://travis-ci.org/chef-cookbooks/yum) [![Cookbook Version](https://img.shields.io/cookbook/v/yum.svg)](https://supermarket.chef.io/cookbooks/yum)

The Yum cookbook exposes the `yum_globalconfig` and `yum_repository` resources that allows a user to both control global behavior and make individual Yum repositories available for use. These resources aim to allow the user to configure all options listed in the `yum.conf` man page, found at <http://linux.die.net/man/5/yum.conf>

## Requirements

### Platforms

- RHEL/CentOS and derivatives
- Fedora

### Chef

- Chef 12+

### Cookbooks

- none

## Resources/Providers

### yum_repository

This resource manages a yum repository configuration file at /etc/yum.repos.d/`repositoryid`.repo. When the file needs to be repaired, it calls yum-makecache so packages in the repo become available to the next resource.

#### Example

```ruby
# add the Zenoss repository
yum_repository 'zenoss' do
  description "Zenoss Stable repo"
  baseurl "http://dev.zenoss.com/yum/stable/"
  gpgkey 'http://dev.zenoss.com/yum/RPM-GPG-KEY-zenoss'
  action :create
end

# add some internal company repo
yum_repository 'OurCo' do
  description 'OurCo yum repository'
  mirrorlist 'http://artifacts.ourco.org/mirrorlist?repo=ourco-6&arch=$basearch'
  gpgkey 'http://artifacts.ourco.org/pub/yum/RPM-GPG-KEY-OURCO-6'
  action :create
end
```

```ruby
# delete CentOS-Media repo
yum_repository 'CentOS-Media' do
  action :delete
end
```

#### Actions

- `:create` - creates a repository file and builds the repository listing
- `:delete` - deletes the repository file
- `:makecache` - update yum cache

#### Parameters

- `baseurl` - Must be a URL to the directory where the yum repository's 'repodata' directory lives. Can be an http://, ftp:// or file:// URL. You can specify multiple URLs in one baseurl statement.
- `cost` - relative cost of accessing this repository. Useful for weighing one repo's packages as greater/less than any other. defaults to 1000
- `clean_metadata` - Run "yum clean metadata REPONAME" during repository creation. defaults to true.
- `description` - Maps to the 'name' parameter in a repository .conf. Descriptive name for the repository channel. This directive must be specified.
- `enabled` - Either `true` or `false`. This tells yum whether or not use this repository.
- `enablegroups` - Either `true` or `false`. Determines whether yum will allow the use of package groups for this repository. Default is `true` (package groups are allowed).
- `exclude` - List of packages to exclude from updates or installs. This should be a space separated list in a single string. Shell globs using wildcards (eg. * and ?) are allowed.
- `failovermethod` - Either 'roundrobin' or 'priority'.
- `fastestmirror_enabled` - Either `true` or `false`
- `gpgcheck` - Either `true` or `false`. This tells yum whether or not it should perform a GPG signature check on packages. When this is set in the [main] section it sets the default for all repositories. The default is `true`.
- `gpgkey` - A URL pointing to the ASCII-armored GPG key file for the repository. This option is used if yum needs a public key to verify a package and the required key hasn't been imported into the RPM database. If this option is set, yum will automatically import the key from the specified URL.
- `http_caching` - Either 'all', 'packages', or 'none'. Determines how upstream HTTP caches are instructed to handle any HTTP downloads that Yum does. Defaults to 'all'
- `includepkgs` - Inverse of exclude. This is a list of packages you want to use from a repository. If this option lists only one package then that is all yum will ever see from the repository. Defaults to an empty list.
- `keepalive` - Either `true` or `false`. This tells yum whether or not HTTP/1.1 keepalive should be used with this repository.
- `make_cache` - Optional, Default is `true`, if `false` then `yum -q makecache` will not be ran
- `max_retries` - Set the number of times any attempt to retrieve a file should retry before returning an error. Setting this to '0' makes yum try forever. Default is '10'.
- `metadata_expire` - Time (in seconds) after which the metadata will expire. So that if the current metadata downloaded is less than this many seconds old then yum will not update the metadata against the repository. If you find that yum is not downloading information on updates as often as you would like lower the value of this option. You can also change from the default of using seconds to using days, hours or minutes by appending a d, h or m respectively. The default is 6 hours, to compliment yum-updatesd running once an hour. It's also possible to use the word "never", meaning that the metadata will never expire. Note that when using a metalink file the metalink must always be newer than the metadata for the repository, due to the validation, so this timeout also applies to the metalink file.
- `mirrorlist` - Specifies a URL to a file containing a list of baseurls. This can be used instead of or with the baseurl option. Substitution variables, described below, can be used with this option. As a special hack is the mirrorlist URL contains the word "metalink" then the value of mirrorlist is copied to metalink (if metalink is not set)
- `mirror_expire` - Time (in seconds) after which the mirrorlist locally cached will expire. If the current mirrorlist is less than this many seconds old then yum will not download another copy of the mirrorlist, it has the same extra format as metadata_expire. If you find that yum is not downloading the mirrorlists as often as you would like lower the value of this option.
- `mirrorlist_expire` - alias for mirror_expire
- `mode` - Permissions mode of .repo file on disk. Useful for scenarios where secrets are in the repo file. If set to '600', normal users will not be able to use yum search, yum info, etc. Defaults to '0644'
- `priority` - When the yum-priorities plug-in is enabled, you set priorities on repository entries, where N is an integer from 1 to 99\. The default priority for repositories is 99.
- `proxy` - URL to the proxy server that yum should use.
- `proxy_username` - username to use for proxy
- `proxy_password` - password for this proxy
- `report_instanceid` - Report instance ID when using Amazon Linux AMIs and repositories
- `repositoryid` - Must be a unique name for each repository, one word. Defaults to name attribute.
- `sensitive` - Optional, Default is `false`, if `true` then content of repository file is hidden from chef run output.
- `source` - Use a custom template source instead of the default one in the yum cookbook
- `sslcacert` - Path to the directory containing the databases of the certificate authorities yum should use to verify SSL certificates. Defaults to none - uses system default
- `sslclientcert` - Path to the SSL client certificate yum should use to connect to repos/remote sites Defaults to none.
- `sslclientkey` - Path to the SSL client key yum should use to connect to repos/remote sites Defaults to none.
- `sslverify` - Either `true` or `false`. Determines if yum will verify SSL certificates/hosts. Defaults to `true`
- `timeout` - Number of seconds to wait for a connection before timing out. Defaults to 30 seconds. This may be too short of a time for extremely overloaded sites.

### yum_globalconfig

This renders a template with global yum configuration parameters. The default recipe uses it to render `/etc/yum.conf`. It is flexible enough to be used in other scenarios, such as building RPMs in isolation by modifying `installroot`.

#### Example

```ruby
yum_globalconfig '/my/chroot/etc/yum.conf' do
  cachedir '/my/chroot/etc/yum.conf'
  keepcache 'yes'
  debuglevel '2'
  installroot '/my/chroot'
  action :create
end
```

#### Parameters

`yum_globalconfig` can take most of the same parameters as a `yum_repository`, plus more, too numerous to describe here. Below are a few of the more commonly used ones. For a complete list, please consult the `yum.conf` man page, found here: <http://linux.die.net/man/5/yum.conf>

- `cachedir` - Directory where yum should store its cache and db files. The default is '/var/cache/yum'.
- `keepcache` - Either `true` or `false`. Determines whether or not yum keeps the cache of headers and packages after successful installation. Default is `false`
- `debuglevel` - Debug message output level. Practical range is 0-10\. Default is '2'.
- `exclude` - List of packages to exclude from updates or installs. This should be a space separated list. Shell globs using wildcards (eg. * and ?) are allowed.
- `installonlypkgs` = List of package provides that should only ever be installed, never updated. Kernels in particular fall into this category. Defaults to kernel, kernel-bigmem, kernel-enterprise, kernel-smp, kernel-debug, kernel-unsupported, kernel-source, kernel-devel, kernel-PAE, kernel-PAE-debug.
- `logfile` - Full directory and file name for where yum should write its log file.
- `exactarch` - Either `true` or `false`. Set to `true` to make 'yum update' only update the architectures of packages that you have installed. ie: with this enabled yum will not install an i686 package to update an x86_64 package. Default is `true`
- `gpgcheck` - Either `true` or `false`. This tells yum whether or not it should perform a GPG signature check on the packages gotten from this repository.

## Recipes

- `default` - Configures `yum_globalconfig[/etc/yum.conf]` with values found in node attributes at `node['yum']['main']`
- `dnf_yum_compat` - Installs the yum package using dnf on Fedora systems to provide support for the package resource in recipes. This is necessary as Chef does not yet (as of Q4 2015) have native support for DNF. This recipe should be 1st on a Fedora runlist

## Attributes

The following attributes are set by default

```ruby
default['yum']['main']['cachedir'] = '/var/cache/yum/$basearch/$releasever'
default['yum']['main']['keepcache'] = false
default['yum']['main']['debuglevel'] = nil
default['yum']['main']['exclude'] = nil
default['yum']['main']['logfile'] = '/var/log/yum.log'
default['yum']['main']['exactarch'] = nil
default['yum']['main']['obsoletes'] = nil
default['yum']['main']['installonly_limit'] = nil
default['yum']['main']['installonlypkgs'] = nil
default['yum']['main']['installroot'] = nil
```

For Amazon platform nodes,

```ruby
default['yum']['main']['releasever'] = 'latest'
```

## Related Cookbooks

Recipes from older versions of this cookbook have been moved individual cookbooks. Recipes for managing platform yum configurations and installing specific repositories can be found in one (or more!) of the following cookbook.

- yum-centos
- yum-fedora
- yum-amazon
- yum-epel
- yum-elrepo
- yum-repoforge
- yum-ius
- yum-percona
- yum-pgdg

## Usage

Put `depends 'yum'` in your metadata.rb to gain access to the yum_repository resource.

## License & Authors

- Author:: Eric G. Wolfe
- Author:: Matt Ray ([matt@chef.io](mailto:matt@chef.io))
- Author:: Joshua Timberman ([joshua@chef.io](mailto:joshua@chef.io))
- Author:: Sean OMeara ([someara@chef.io](mailto:someara@chef.io))

```text
Copyright:: 2011 Eric G. Wolfe
Copyright:: 2013-2016 Chef Software, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/README.md to tempfile /tmp/chef-rest20160913-19215-l4ucx0
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/README.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e25060
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e25128>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "libraries",
   "autoload.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
unless Gem::Requirement.new(">= 12.0").satisfied_by?(Gem::Version.new(Chef::VERSION))
  raise "This resource is written with Chef 12.5 custom resources, and requires at least Chef 12.0 used with the compat_resource cookbook, it will not work with Chef 11.x clients, and those users must pin their cookbooks to older versions or upgrade."
end

# If users are on old verisons of ChefDK which activates an (old) gem via cheffish before this cookbook loads, then
# we just try to monkeypatch over the top of a monkeypatch.  Its possible that we have checks in this cookbook which
# will defeat that purpose and fail to monkeypatch on top of monkeypatches -- in which case those checks should be
# removed -- this cookbook needs to win when it gets into a fight with the old gem versions.
if Gem.loaded_specs["compat_resource"]
  Chef.log_deprecation "using compat_resource as a gem is deprecated;  please update cheffish and chef-provisioning gems (or use the latest Chef/ChefDK packages) or else manually pin your compat_resource cookbook version to the same version as the gem you are using to remove this warning"
end

# we want to not pollute the libpath with our files until after we've done the version check
require_relative '../files/lib/chef_upstream_version'

# on any chef client later than the one we were based off of we just turn into a no-op
if Gem::Requirement.new("< #{ChefCompat::CHEF_UPSTREAM_VERSION}").satisfied_by?(Gem::Version.new(Chef::VERSION))
  Chef::Log.debug "loading compat_resource based on chef-version #{ChefCompat::CHEF_UPSTREAM_VERSION} over chef version #{Gem::Version.new(Chef::VERSION)}"
  $LOAD_PATH.unshift(File.expand_path("../files/lib", File.dirname(__FILE__)))
  require 'compat_resource'
else
  Chef::Log.debug "NOT LOADING compat_resource based on chef-version #{ChefCompat::CHEF_UPSTREAM_VERSION} over chef version #{Gem::Version.new(Chef::VERSION)}"
  module ChefCompat
    Resource = Chef::Resource
    module Mixin
      Properties = Chef::Mixin::Properties
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb to tempfile /tmp/chef-rest20160913-19215-1mljukz
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/libraries/autoload.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003dc8b80
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003dc8e28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/libraries
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e85d20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e85e88>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum",
   "metadata.json"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-q4dy93
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# yum Cookbook CHANGELOG

This file is used to list changes made in each version of the yum cookbook.

## 4.0.0 (2016-09-06)

- Remove support for Chef 11

## 3.13.0 (2016-09-06)

- Add deprecation warning for add/remove actions, which were replaced with create/delete in Yum 3.0
- Remove support for Chef 10

## v3.12.0 (2016-08-25)

- Fixing baseurl to support multiple urls
- Modify releasever attribute for Amazon to match Amazon's default policy for releasever

## v3.11.0 (2016-06-01)

- Install yum at compile time in the dnf compatibility recipe
- Add IBM zlinux as a supported platform in the metadata
- Use cookstyle instead of rubocop to provide a consistent linting experience

## v3.10.0 (2016-02-04)

- Add a new sensitive attribute to the repository resource so prevent writing the diff of the config to Chef output / logs
- Update testing dependencies and remove the Guardfile / Guard dependencies

## v3.9.0 (2016-01-14)

- Added dnf_yum_compat recipe to ensure yum is installed on Fedora systems for Chef package resource compatibility. This will no longer be necessary when native dnf package support ships in chef-client.

## v3.8.2 (2015-10-28)

- # 141 - Replace clean_headers with clean_metadata

## v3.8.1 (2015-10-28)

- Fixing up Chef13 deprecation warnings

## v3.8.0 (2015-10-13)

- adding clean_headers boolean property to yum_resource
- restoring Chef 10 backwards compat for the sake of ChefSpec
- (unique resource names needed to avoid cloning)
- Fixing localpkg_gpgcheck values

## v3.7.1 (2015-09-08)

- # 135 - reverting "yum clean headers" as it breaks dnf compat

## v3.7.0 (2015-09-05)

- Adding deltarpm toggle
- Cleaning 'headers' rather than 'all'

## v3.6.3 (2015-07-13)

- Normalizing sslverify option rendering behavior
- Setting default value on the resource to nil
- Explictly setting string to render in template if value is supplied
- Behavior should default to "True", per man page

## v3.6.2 (2015-07-13)

- Adding -y to makecache, to import key when repo_gpgcheck = true.
- Accepting Integer value for max_retries

## v3.6.1 (2015-06-04)

- Executing yum clean before makecache
- Adding repo_gpgcheck

## v3.6.0 (2015-04-23)

- Adding "yum clean" before "yum makecache" in yum_repository :create
- Adding why_run support to yum_globalconfig

## v3.5.4 (2015-04-07)

- Changing tolerant config line to stringified integer

## v3.5.3 (2015-01-16)

- Adding reposdir to globalconfig template

## v3.5.2 (2014-12-24)

- Fixing redhat-release detection for Redhat 7

## v3.5.1 (2014-11-24)

- Reverting management of ca-certificates because EL5 was broken

## v3.5.0 (2014-11-24)

- Adding management of ca-certificates package to yum_repository provider

## v3.4.1 (2014-10-29)

- Run yum-makecache only_if new_resource.enabled
- Allow setting of reposdir in global yum config and man page
- Change default 'obsoletes' behavior to match yum defaults

## v3.4.0 (2014-10-15)

- Dynamically generate the new_resource attributes

## v3.3.2 (2014-09-11)

- Fix globalconfig resource param for http_caching

## v3.3.1 (2014-09-04)

- Fix issue with sslverify if set to false
- Add fancy badges

## v3.3.0 (2014-09-03)

- Adding tuning attributes for all supported resource parameters
- Adding options hash parameter
- Adding (real) rhel-6.5 and centos-7.0 to test-kitchen coverage
- Updating regex for mirror_expire and mirrorlist_expire to include /^\d+[mhd]$/
- Updating README so keepcache reflects reality (defaults to false)
- Changing 'obsoletes' behavior in globalconfig resource to match
- default behavior. (now defaults to nil, yum defaults to false)
- Adding makecache action to repository resource
- Adding mode parameter to repository resource. Defaults to '0644'.

## v3.2.4 (2014-08-20)

- # 82 - Adding a makecache parameter

## v3.2.2 (2014-06-11)

- # 77 - Parameter default to be Trueclass instead of "1"

- # 78 - add releasever parameter

## v3.2.0 (2014-04-09)

- [COOK-4510] - Adding username and password parameters to node attributes
- [COOK-4518] - Fix Scientific Linux distroverpkg

## v3.1.6 (2014-03-27)

- [COOK-4463] - support multiple GPG keys
- [COOK-4364] - yum_repository delete action fails

## v3.1.4 (2014-03-12)

- [COOK-4417] Expand test harness to encompass 32-bit boxes

## v3.1.2 (2014-02-23)

Fixing bugs around :delete action and cache clean Fixing specs to cover :remove and :delete aliasing properly Adding Travis-ci build matrix bits

## v3.1.0 (2014-02-13)

- Updating testing harness for integration testing on Travis-ci
- Adding TESTING.md and Guardfile
- PR #67 - Add skip_if_unvailable repository option
- PR #64 - Fix validation of 'metadata_expire' option to match documentation
- [COOK-3591] - removing node.name from repo template rendering
- [COOK-4275] - Enhancements to yum cookbook
- Adding full spec coverage
- Adding support for custom source template to yum_repository

## v3.0.8 (2014-01-27)

Fixing typo in default.rb. yum_globalconfig now passes proxy attribute correctly.

## v3.0.6 (2014-01-27)

Updating default.rb to consume node['yum']['main']['proxy']

## v3.0.4 (2013-12-29)

### Bug

- **[COOK-4156](https://tickets.chef.io/browse/COOK-4156)** - yum cookbook creates a yum.conf with "cachefir" directive

## v3.0.2

Updating globalconfig provider for Chef 10 compatability

## v3.0.0

3.0.0 Major rewrite with breaking changes. Recipes broken out into individual cookbooks yum_key resource has been removed yum_repository resource now takes gpgkey as a URL directly yum_repository actions have been reduced to :create and :delete 'name' has been changed to repositoryid to avoid ambiguity chefspec test coverage gpgcheck is set to 'true' by default and must be explicitly disabled

## v2.4.4

Reverting to Ruby 1.8 hash syntax.

## v2.4.2

[COOK-3275] LWRP repository.rb :add method fails to create yum repo in some cases which causes :update to fail Amazon rhel

## v2.4.0

### Improvement

- [COOK-3025] - Allow per-repo proxy definitions

## v2.3.4

### Improvement

- **[COOK-3689](https://tickets.chef.io/browse/COOK-3689)** - Fix warnings about resource cloning
- **[COOK-3574](https://tickets.chef.io/browse/COOK-3574)** - Add missing "description" field in metadata

## v2.3.2

### Bug

- **[COOK-3145](https://tickets.chef.io/browse/COOK-3145)** - Use correct download URL for epel `key_url`

## v2.3.0

### New Feature

- [COOK-2924]: Yum should allow type setting in repo file

## v2.2.4

### Bug

- [COOK-2360]: last commit to `yum_repository` changes previous behaviour
- [COOK-3015]: Yum cookbook test minitest to fail

## v2.2.2

### Improvement

- [COOK-2741]: yum::elrepo
- [COOK-2946]: update tests, test kitchen support in yum cookbook

### Bug

- [COOK-2639]: Yum cookbook - epel - always assumes url is a mirror list
- [COOK-2663]: Yum should allow metadata_expire setting in repo file
- [COOK-2751]: Update yum.ius_release version to 1.0-11

## v2.2.0

- [COOK-2189] - yum::ius failed on install (caused from rpm dependency)
- [COOK-2196] - Make includepkgs and exclude configurable for each repos
- [COOK-2244] - Allow configuring caching using attributes
- [COOK-2399] - yum cookbook LWRPs fail FoodCritic
- [COOK-2519] - Add priority option to Yum repo files
- [COOK-2593] - allow integer or string for yum priority
- [COOK-2643] - don't use conditional attribute for `yum_key` `remote_file`

## v2.1.0

- [COOK-2045] - add remi repository recipe
- [COOK-2121] - add `:create` action to `yum_repository`

## v2.0.6

- [COOK-2037] - minor style fixes
- [COOK-2038] - updated README

## v2.0.4

- [COOK-1908] - unable to install repoforge on CentOS 6 32 bit

## v2.0.2

- [COOK-1758] - Add default action for repository resource

## v2.0.0

This version changes the behavior of the EPEL recipe (most commonly used in other Chef cookbooks) on Amazon, and removes an attribute, `node['yum']['epel_release']`. See the README for details.

- [COOK-1772] - Simplify management of EPEL with LWRP

## v1.0.0

`mirrorlist` in the `yum_repository` LWRP must be set to the mirror list URI to use rather than setting it to true. See README.md.

- [COOK-1088] - use dl.fedoraproject.org for EPEL to prevent redirects
- [COOK-1653] - fix mirrorlist
- [COOK-1710] - support http proxy
- [COOK-1722] - update IUS version

## v0.8.2

- [COOK-1521] - add :update action to `yum_repository`

## v0.8.0

- [COOK-1204] - Make 'add' default action for yum_repository
- [COOK-1351] - option to not make the yum cache (via attribute)
- [COOK-1353] - x86_64 centos path fixes
- [COOK-1414] - recipe for repoforge

## v0.6.2

- Updated README to remove git diff artifacts.

## v0.6.0

- Default action for the yum_repository LWRP is now add.
- [COOK-1227] - clear Chefs internal cache after adding new yum repo
- [COOK-1262] - yum::epel should enable existing repo on Amazon Linux
- [COOK-1272], [COOK-1302] - update RPM file for CentOS / RHEL 6
- [COOK-1330] - update cookbook documentation on excludes for yum
- [COOK-1346] - retry remote_file for EPEL in case we get an FTP mirror

## v0.5.2

- [COOK-825] - epel and ius `remote_file` should notify the `rpm_package` to install

## v0.5.0

- [COOK-675] - add recipe for handling EPEL repository
- [COOK-722] - add recipe for handling IUS repository

## v.0.1.2

- Remove yum update in default recipe, that doesn't update caches, it updates packages installed.
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d18c30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d18e38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "mixin",
   "properties.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003dcc0a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003dcc2d0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "property.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-c13ug3
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/CHANGELOG.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Sean OMeara](https://github.com/someara)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-10ybxe1
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"yum","version":"4.0.0","description":"Configures various yum components on Red Hat-like systems","long_description":"","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","fedora":">= 0.0.0","oracle":">= 0.0.0","redhat":">= 0.0.0","scientific":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/yum","issues_url":"https://github.com/chef-cookbooks/yum/issues","chef_version":">= 12","ohai_version":{}}
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum/metadata.json to tempfile /tmp/chef-rest20160913-19215-o7x1jj
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/metadata.json in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/resource'
require 'chef_compat/copied_from_chef/chef/resource'
require 'chef/mixin/convert_to_class_name'
require 'chef/mixin/from_file'

module ChefCompat
  class Resource < ChefCompat::CopiedFromChef::Chef::Resource
    class LWRPBase < ChefCompat::Resource
      class<<self

        include Chef::Mixin::ConvertToClassName
        include Chef::Mixin::FromFile

        alias :attribute :property

        # Adds +action_names+ to the list of valid actions for this resource.
        # Does not include superclass's action list when appending.
        def actions(*action_names)
          action_names = action_names.flatten
          if !action_names.empty? && !@allowed_actions
            self.allowed_actions = ([ :nothing ] + action_names).uniq
          else
            allowed_actions(*action_names)
          end
        end
        alias :actions= :allowed_actions=

        # @deprecated
        def valid_actions(*args)
          Chef::Log.warn("`valid_actions' is deprecated, please use allowed_actions `instead'!")
          allowed_actions(*args)
        end

        # Set the run context on the class. Used to provide access to the node
        # during class definition.
        attr_accessor :run_context

        def node
          run_context ? run_context.node : nil
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/monkeypatches'
require 'chef_compat/copied_from_chef/chef/mixin/properties'

module ChefCompat
  module Mixin
    Properties = ChefCompat::CopiedFromChef::Chef::Mixin::Properties
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb to tempfile /tmp/chef-rest20160913-19215-1pkw2b1
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/yum/MAINTAINERS.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003938070
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039382a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "constants.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb to tempfile /tmp/chef-rest20160913-19215-vgu60k
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000386e6d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000386e7c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "yum_repository.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/mixin
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a592d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a593a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003b58b98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003b58cb0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/resource
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038e4808
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038e4a60>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource_builder.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/constants'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: John Keiser <jkeiser@chef.io>
# Copyright:: Copyright 2015-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

class Chef < (defined?(::Chef) ? ::Chef : Object)
  NOT_PASSED = Object.new
  def NOT_PASSED.to_s
    "NOT_PASSED"
  end

  def NOT_PASSED.inspect
    to_s
  end
  NOT_PASSED.freeze
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb to tempfile /tmp/chef-rest20160913-19215-1hjhbyi
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038b22b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038b23d0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "property.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/copied_from_chef/chef/property'

module ChefCompat
  class Property < ChefCompat::CopiedFromChef::Chef::Property
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb to tempfile /tmp/chef-rest20160913-19215-29mw3m
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/property.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
require "chef_compat/copied_from_chef/chef/dsl/core"
class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    include Chef::DSL::Core
    attr_accessor :action
    def initialize(new_resource, run_context)
super if defined?(::Chef::Provider)
      @new_resource = new_resource
      @action = action
      @current_resource = nil
      @run_context = run_context
      @converge_actions = nil

      @recipe_name = nil
      @cookbook_name = nil
      self.class.include_resource_dsl_module(new_resource)
    end
    def converge_if_changed(*properties, &converge_block)
      if !converge_block
        raise ArgumentError, "converge_if_changed must be passed a block!"
      end

      properties = new_resource.class.state_properties.map { |p| p.name } if properties.empty?
      properties = properties.map { |p| p.to_sym }
      if current_resource
        # Collect the list of modified properties
        specified_properties = properties.select { |property| new_resource.property_is_set?(property) }
        modified = specified_properties.select { |p| new_resource.send(p) != current_resource.send(p) }
        if modified.empty?
          properties_str = if sensitive
                             specified_properties.join(", ")
                           else
                             specified_properties.map { |p| "#{p}=#{new_resource.send(p).inspect}" }.join(", ")
                           end
          Chef::Log.debug("Skipping update of #{new_resource}: has not changed any of the specified properties #{properties_str}.")
          return false
        end

        # Print the pretty green text and run the block
        property_size = modified.map { |p| p.size }.max
        modified.map! do |p|
          properties_str = if sensitive
                             "(suppressed sensitive property)"
                           else
                             "#{new_resource.send(p).inspect} (was #{current_resource.send(p).inspect})"
                           end
          "  set #{p.to_s.ljust(property_size)} to #{properties_str}"
        end
        converge_by([ "update #{current_resource.identity}" ] + modified, &converge_block)

      else
        # The resource doesn't exist. Mark that we are *creating* this, and
        # write down any properties we are setting.
        property_size = properties.map { |p| p.size }.max
        created = properties.map do |property|
          default = " (default value)" unless new_resource.property_is_set?(property)
          properties_str = if sensitive
                             "(suppressed sensitive property)"
                           else
                             new_resource.send(property).inspect
                           end
          "  set #{property.to_s.ljust(property_size)} to #{properties_str}#{default}"
        end

        converge_by([ "create #{new_resource.identity}" ] + created, &converge_block)
      end
      true
    end
    def self.include_resource_dsl(include_resource_dsl)
      @include_resource_dsl = include_resource_dsl
    end
    def self.include_resource_dsl_module(resource)
      if @include_resource_dsl && !defined?(@included_resource_dsl_module)
        provider_class = self
        @included_resource_dsl_module = Module.new do
          extend Forwardable
          define_singleton_method(:to_s) { "forwarder module for #{provider_class}" }
          define_singleton_method(:inspect) { to_s }
          # Add a delegator for each explicit property that will get the *current* value
          # of the property by default instead of the *actual* value.
          resource.class.properties.each do |name, property|
            class_eval(<<-EOM, __FILE__, __LINE__)
              def #{name}(*args, &block)
                # If no arguments were passed, we process "get" by defaulting
                # the value to current_resource, not new_resource. This helps
                # avoid issues where resources accidentally overwrite perfectly
                # valid stuff with default values.
                if args.empty? && !block
                  if !new_resource.property_is_set?(__method__) && current_resource
                    return current_resource.public_send(__method__)
                  end
                end
                new_resource.public_send(__method__, *args, &block)
              end
            EOM
          end
          dsl_methods =
            resource.class.public_instance_methods +
            resource.class.protected_instance_methods -
            provider_class.instance_methods -
            resource.class.properties.keys
          def_delegators(:new_resource, *dsl_methods)
        end
        include @included_resource_dsl_module
      end
    end
    def self.use_inline_resources
      extend InlineResources::ClassMethods
      include InlineResources
    end
    module InlineResources
      CopiedFromChef.extend_chef_module(::Chef::Provider::InlineResources, self) if defined?(::Chef::Provider::InlineResources)
      def compile_and_converge_action(&block)
        old_run_context = run_context
        @run_context = run_context.create_child
        return_value = instance_eval(&block)
        Chef::Runner.new(run_context).converge
        return_value
      ensure
        if run_context.resource_collection.any? { |r| r.updated? }
          new_resource.updated_by_last_action(true)
        end
        @run_context = old_run_context
      end
      module ClassMethods
        CopiedFromChef.extend_chef_module(::Chef::Provider::InlineResources::ClassMethods, self) if defined?(::Chef::Provider::InlineResources::ClassMethods)
        def action(name, &block)
          # We need the block directly in a method so that `super` works
          define_method("compile_action_#{name}", &block)
          # We try hard to use `def` because define_method doesn't show the method name in the stack.
          begin
            class_eval <<-EOM
              def action_#{name}
                compile_and_converge_action { compile_action_#{name} }
              end
            EOM
          rescue SyntaxError
            define_method("action_#{name}") { send("compile_action_#{name}") }
          end
        end
      end
    end
    protected
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb to tempfile /tmp/chef-rest20160913-19215-1si81je
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
class Chef
  class RunContext
    class ChildRunContext < RunContext
      # magic that lets us re-parse the ChildRunContext without erroring due to
      # cheffish and chef-provisioning hooks having been loaded (on old versions of
      # chef-client without the lazy hooks for those gems)
      @__skip_method_checking = true
    end
  end
end

# fix to quiet constant redefined warnings
if defined?(Chef::RunContext::ChildRunContext::CHILD_STATE)
  Chef::RunContext::ChildRunContext.send(:remove_const, :CHILD_STATE)
end

require 'chef_compat/monkeypatches/chef'
require 'chef_compat/monkeypatches/chef/exceptions'
require 'chef_compat/monkeypatches/chef/log'
require 'chef_compat/monkeypatches/chef/node'
require 'chef_compat/monkeypatches/chef/mixin/params_validate'
require 'chef_compat/monkeypatches/chef/property'
require 'chef_compat/monkeypatches/chef/provider'
require 'chef_compat/monkeypatches/chef/recipe'  # copied from chef
require 'chef_compat/monkeypatches/chef/recipe_hook'
require 'chef_compat/monkeypatches/chef/resource'
require 'chef_compat/monkeypatches/chef/resource_builder'
require 'chef_compat/monkeypatches/chef/resource/lwrp_base'
require 'chef_compat/monkeypatches/chef/resource_collection'
require 'chef_compat/monkeypatches/chef/resource_collection/resource_list'
require 'chef_compat/monkeypatches/chef/resource_collection/resource_set'
require 'chef_compat/monkeypatches/chef/run_context'  # copied from chef
require 'chef_compat/monkeypatches/chef/runner'  # copied from chef

# fix for Chef::RunContext instance that has already been created
ObjectSpace.each_object(Chef::RunContext) do |run_context|
  run_context.node.run_context = run_context
  run_context.instance_variable_set(:@loaded_recipes_hash, {})
  run_context.instance_variable_set(:@loaded_attributes_hash, {})
  run_context.initialize_child_state
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb to tempfile /tmp/chef-rest20160913-19215-cmx6se
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource_builder'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Lamont Granquist (<lamont@chef.io>)
# Copyright:: Copyright 2015-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# NOTE: this was extracted from the Recipe DSL mixin, relevant specs are in spec/unit/recipe_spec.rb

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class ResourceBuilder < (defined?(::Chef::ResourceBuilder) ? ::Chef::ResourceBuilder : Object)
    attr_reader :type
    attr_reader :name
    attr_reader :created_at
    attr_reader :params
    attr_reader :run_context
    attr_reader :cookbook_name
    attr_reader :recipe_name
    attr_reader :enclosing_provider
    attr_reader :resource

    # FIXME (ruby-2.1 syntax): most of these are mandatory
    def initialize(type: nil, name: nil, created_at: nil, params: nil, run_context: nil, cookbook_name: nil, recipe_name: nil, enclosing_provider: nil)
super if defined?(::Chef::ResourceBuilder)
      @type               = type
      @name               = name
      @created_at         = created_at
      @params             = params
      @run_context        = run_context
      @cookbook_name      = cookbook_name
      @recipe_name        = recipe_name
      @enclosing_provider = enclosing_provider
    end

    def build(&block)
      raise ArgumentError, "You must supply a name when declaring a #{type} resource" if name.nil?

      @resource = resource_class.new(name, run_context)
      if resource.resource_name.nil?
        raise Chef::Exceptions::InvalidResourceSpecification, "#{resource}.resource_name is `nil`!  Did you forget to put `provides :blah` or `resource_name :blah` in your resource class?"
      end
      resource.source_line = created_at
      resource.declared_type = type

      # If we have a resource like this one, we want to steal its state
      # This behavior is very counter-intuitive and should be removed.
      # See CHEF-3694, https://tickets.opscode.com/browse/CHEF-3694
      # Moved to this location to resolve CHEF-5052, https://tickets.opscode.com/browse/CHEF-5052
      if prior_resource
        resource.load_from(prior_resource)
      end

      resource.cookbook_name = cookbook_name
      resource.recipe_name = recipe_name
      # Determine whether this resource is being created in the context of an enclosing Provider
      resource.enclosing_provider = enclosing_provider

      # XXX: this is required for definition params inside of the scope of a
      # subresource to work correctly.
      resource.params = params

      # Evaluate resource attribute DSL
      if block_given?
        resource.resource_initializing = true
        begin
          resource.instance_eval(&block)
        ensure
          resource.resource_initializing = false
        end
      end

      # emit a cloned resource warning if it is warranted
      if prior_resource
        if is_trivial_resource?(prior_resource) && identicalish_resources?(prior_resource, resource)
          emit_harmless_cloning_debug
        else
          emit_cloned_resource_warning
        end
      end

      # Run optional resource hook
      resource.after_created

      resource
    end

    private

    def resource_class
      # Checks the new platform => short_name => resource mapping initially
      # then fall back to the older approach (Chef::Resource.const_get) for
      # backward compatibility
      @resource_class ||= Chef::Resource.resource_for_node(type, run_context.node)
    end

    def is_trivial_resource?(resource)
      trivial_resource = resource_class.new(name, run_context)
      # force un-lazy the name property on the created trivial resource
      name_property = resource_class.properties.find { |sym, p| p.name_property? }
      trivial_resource.send(name_property[0]) unless name_property.nil?
      identicalish_resources?(trivial_resource, resource)
    end

    # this is an equality test specific to checking for 3694 cloning warnings
    def identicalish_resources?(first, second)
      skipped_ivars = [ :@source_line, :@cookbook_name, :@recipe_name, :@params, :@elapsed_time, :@declared_type ]
      checked_ivars = ( first.instance_variables | second.instance_variables ) - skipped_ivars
      non_matching_ivars = checked_ivars.reject do |iv|
        if iv == :@action && ( [first.instance_variable_get(iv)].flatten == [:nothing] || [second.instance_variable_get(iv)].flatten == [:nothing] )
          # :nothing action on either side of the comparison always matches
          true
        else
          first.instance_variable_get(iv) == second.instance_variable_get(iv)
        end
      end
      Chef::Log.debug("ivars which did not match with the prior resource: #{non_matching_ivars}")
      non_matching_ivars.empty?
    end

    def emit_cloned_resource_warning
      message = "Cloning resource attributes for #{resource} from prior resource (CHEF-3694)"
      message << "\nPrevious #{prior_resource}: #{prior_resource.source_line}" if prior_resource.source_line
      message << "\nCurrent  #{resource}: #{resource.source_line}" if resource.source_line
      Chef.log_deprecation(message)
    end

    def emit_harmless_cloning_debug
      Chef::Log.debug("Harmless resource cloning from #{prior_resource}:#{prior_resource.source_line} to #{resource}:#{resource.source_line}")
    end

    def prior_resource
      @prior_resource ||=
        begin
          key = "#{type}[#{name}]"
          run_context.resource_collection.lookup_local(key)
        rescue Chef::Exceptions::ResourceNotFound
          nil
        end
    end

  end
end

require "chef_compat/copied_from_chef/chef/resource"
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb to tempfile /tmp/chef-rest20160913-19215-myo77e
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/yum_repository'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    class YumRepository < (defined?(::Chef::Resource::YumRepository) ? ::Chef::Resource::YumRepository : Chef::Resource)
      resource_name :yum_repository
      provides :yum_repository

      # http://linux.die.net/man/5/yum.conf
      property :baseurl, String, regex: /.*/
      property :cost, String, regex: /^\d+$/
      property :clean_headers, [TrueClass, FalseClass], default: false # deprecated
      property :clean_metadata, [TrueClass, FalseClass], default: true
      property :description, String, regex: /.*/, default: "Ye Ole Rpm Repo"
      property :enabled, [TrueClass, FalseClass], default: true
      property :enablegroups, [TrueClass, FalseClass]
      property :exclude, String, regex: /.*/
      property :failovermethod, String, equal_to: %w{priority roundrobin}
      property :fastestmirror_enabled, [TrueClass, FalseClass]
      property :gpgcheck, [TrueClass, FalseClass]
      property :gpgkey, [String, Array], regex: /.*/
      property :http_caching, String, equal_to: %w{packages all none}
      property :include_config, String, regex: /.*/
      property :includepkgs, String, regex: /.*/
      property :keepalive, [TrueClass, FalseClass]
      property :make_cache, [TrueClass, FalseClass], default: true
      property :max_retries, [String, Integer]
      property :metadata_expire, String, regex: [/^\d+$/, /^\d+[mhd]$/, /never/]
      property :mirrorexpire, String, regex: /.*/
      property :mirrorlist, String, regex: /.*/
      property :mirror_expire, String, regex: [/^\d+$/, /^\d+[mhd]$/]
      property :mirrorlist_expire, String, regex: [/^\d+$/, /^\d+[mhd]$/]
      property :mode, default: "0644"
      property :priority, String, regex: /^(\d?[0-9]|[0-9][0-9])$/
      property :proxy, String, regex: /.*/
      property :proxy_username, String, regex: /.*/
      property :proxy_password, String, regex: /.*/
      property :username, String, regex: /.*/
      property :password, String, regex: /.*/
      property :repo_gpgcheck, [TrueClass, FalseClass]
      property :report_instanceid, [TrueClass, FalseClass]
      property :repositoryid, String, regex: /.*/, name_attribute: true
      property :sensitive, [TrueClass, FalseClass], default: false
      property :skip_if_unavailable, [TrueClass, FalseClass]
      property :source, String, regex: /.*/
      property :sslcacert, String, regex: /.*/
      property :sslclientcert, String, regex: /.*/
      property :sslclientkey, String, regex: /.*/
      property :sslverify, [TrueClass, FalseClass]
      property :timeout, String, regex: /^\d+$/

      property :options, Hash

      default_action :create
      allowed_actions :create, :remove, :make_cache, :add
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037aef10
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037af028>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "action_class.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/action_class'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: John Keiser (<jkeiser@chef.io)
# Copyright:: Copyright 2015-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/dsl/recipe"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    module ActionClass
      CopiedFromChef.extend_chef_module(::Chef::Resource::ActionClass, self) if defined?(::Chef::Resource::ActionClass)
      include Chef::DSL::Recipe

      def to_s
        "#{new_resource || "<no resource>"} action #{action ? action.inspect : "<no action>"}"
      end

      #
      # If load_current_value! is defined on the resource, use that.
      #
      def load_current_resource
        if new_resource.respond_to?(:load_current_value!)
          # dup the resource and then reset desired-state properties.
          current_resource = new_resource.dup

          # We clear desired state in the copy, because it is supposed to be actual state.
          # We keep identity properties and non-desired-state, which are assumed to be
          # "control" values like `recurse: true`
          current_resource.class.properties.each do |name, property|
            if property.desired_state? && !property.identity? && !property.name_property?
              property.reset(current_resource)
            end
          end

          # Call the actual load_current_value! method. If it raises
          # CurrentValueDoesNotExist, set current_resource to `nil`.
          begin
            # If the user specifies load_current_value do |desired_resource|, we
            # pass in the desired resource as well as the current one.
            if current_resource.method(:load_current_value!).arity > 0
              current_resource.load_current_value!(new_resource)
            else
              current_resource.load_current_value!
            end
          rescue Chef::Exceptions::CurrentValueDoesNotExist
            current_resource = nil
          end
        end

        @current_resource = current_resource
      end

      def self.included(other)
        other.extend(ClassMethods)
        other.use_inline_resources
        other.include_resource_dsl true
      end

      module ClassMethods
        CopiedFromChef.extend_chef_module(::Chef::Resource::ActionClass::ClassMethods, self) if defined?(::Chef::Resource::ActionClass::ClassMethods)
        #
        # The Chef::Resource class this ActionClass was declared against.
        #
        # @return [Class] The Chef::Resource class this ActionClass was declared against.
        #
        attr_accessor :resource_class

        def to_s
          "#{resource_class} action provider"
        end

        def inspect
          to_s
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb to tempfile /tmp/chef-rest20160913-19215-13gw5dw
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036b8cc8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036b8de0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "apt_update.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb to tempfile /tmp/chef-rest20160913-19215-s45rwc
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/property'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: John Keiser <jkeiser@chef.io>
# Copyright:: Copyright 2015-2016, John Keiser.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/delayed_evaluator"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  #
  # Type and validation information for a property on a resource.
  #
  # A property named "x" manipulates the "@x" instance variable on a
  # resource.  The *presence* of the variable (`instance_variable_defined?(@x)`)
  # tells whether the variable is defined; it may have any actual value,
  # constrained only by validation.
  #
  # Properties may have validation, defaults, and coercion, and have full
  # support for lazy values.
  #
  # @see Chef::Resource.property
  # @see Chef::DelayedEvaluator
  #
  class Property < (defined?(::Chef::Property) ? ::Chef::Property : Object)
    #
    # Create a reusable property type that can be used in multiple properties
    # in different resources.
    #
    # @param options [Hash<Symbol,Object>] Validation options. See Chef::Resource.property for
    #   the list of options.
    #
    # @example
    #   Property.derive(default: 'hi')
    #
    def self.derive(**options)
      new(**options)
    end

    #
    # Create a new property.
    #
    # @param options [Hash<Symbol,Object>] Property options, including
    #   control options here, as well as validation options (see
    #   Chef::Mixin::ParamsValidate#validate for a description of validation
    #   options).
    #   @option options [Symbol] :name The name of this property.
    #   @option options [Class] :declared_in The class this property comes from.
    #   @option options [Symbol] :instance_variable_name The instance variable
    #     tied to this property. Must include a leading `@`. Defaults to `@<name>`.
    #     `nil` means the property is opaque and not tied to a specific instance
    #     variable.
    #   @option options [Boolean] :desired_state `true` if this property is part of desired
    #     state. Defaults to `true`.
    #   @option options [Boolean] :identity `true` if this property is part of object
    #     identity. Defaults to `false`.
    #   @option options [Boolean] :name_property `true` if this
    #     property defaults to the same value as `name`. Equivalent to
    #     `default: lazy { name }`, except that #property_is_set? will
    #     return `true` if the property is set *or* if `name` is set.
    #   @option options [Boolean] :nillable `true` opt-in to Chef-13 style behavior where
    #     attempting to set a nil value will really set a nil value instead of issuing
    #     a warning and operating like a getter
    #   @option options [Object] :default The value this property
    #     will return if the user does not set one. If this is `lazy`, it will
    #     be run in the context of the instance (and able to access other
    #     properties) and cached. If not, the value will be frozen with Object#freeze
    #     to prevent users from modifying it in an instance.
    #   @option options [Proc] :coerce A proc which will be called to
    #     transform the user input to canonical form. The value is passed in,
    #     and the transformed value returned as output. Lazy values will *not*
    #     be passed to this method until after they are evaluated. Called in the
    #     context of the resource (meaning you can access other properties).
    #   @option options [Boolean] :required `true` if this property
    #     must be present; `false` otherwise. This is checked after the resource
    #     is fully initialized.
    #
    def initialize(**options)
super if defined?(::Chef::Property)
      options = options.inject({}) { |memo, (key, value)| memo[key.to_sym] = value; memo }
      @options = options
      options[:name] = options[:name].to_sym if options[:name]
      options[:instance_variable_name] = options[:instance_variable_name].to_sym if options[:instance_variable_name]

      # Replace name_attribute with name_property
      if options.has_key?(:name_attribute)
        # If we have both name_attribute and name_property and they differ, raise an error
        if options.has_key?(:name_property)
          raise ArgumentError, "Cannot specify both name_property and name_attribute together on property #{self}."
        end
        # replace name_property with name_attribute in place
        options = Hash[options.map { |k, v| k == :name_attribute ? [ :name_property, v ] : [ k, v ] }]
        @options = options
      end

      # Only pick the first of :default, :name_property and :name_attribute if
      # more than one is specified.
      if options.has_key?(:default) && options[:name_property]
        if options[:default].nil? || options.keys.index(:name_property) < options.keys.index(:default)
          options.delete(:default)
          preferred_default = :name_property
        else
          options.delete(:name_property)
          preferred_default = :default
        end
        Chef.log_deprecation("Cannot specify both default and name_property together on property #{self}. Only one (#{preferred_default}) will be obeyed. In Chef 13, this will become an error. Please remove one or the other from the property.")
      end

      # Validate the default early, so the user gets a good error message, and
      # cache it so we don't do it again if so
      begin
        # If we can validate it all the way to output, do it.
        @stored_default = input_to_stored_value(nil, default, is_default: true)
      rescue Chef::Exceptions::CannotValidateStaticallyError
        # If the validation is not static (i.e. has procs), we will have to
        # coerce and validate the default each time we run
      end
    end

    def to_s
      "#{name || "<property type>"}#{declared_in ? " of resource #{declared_in.resource_name}" : ""}"
    end

    #
    # The name of this property.
    #
    # @return [String]
    #
    def name
      options[:name]
    end

    #
    # The class this property was defined in.
    #
    # @return [Class]
    #
    def declared_in
      options[:declared_in]
    end

    #
    # The instance variable associated with this property.
    #
    # Defaults to `@<name>`
    #
    # @return [Symbol]
    #
    def instance_variable_name
      if options.has_key?(:instance_variable_name)
        options[:instance_variable_name]
      elsif name
        :"@#{name}"
      end
    end

    #
    # The raw default value for this resource.
    #
    # Does not coerce or validate the default. Does not evaluate lazy values.
    #
    # Defaults to `lazy { name }` if name_property is true; otherwise defaults to
    # `nil`
    #
    def default
      return options[:default] if options.has_key?(:default)
      return Chef::DelayedEvaluator.new { name } if name_property?
      nil
    end

    #
    # Whether this is part of the resource's natural identity or not.
    #
    # @return [Boolean]
    #
    def identity?
      options[:identity]
    end

    #
    # Whether this is part of desired state or not.
    #
    # Defaults to true.
    #
    # @return [Boolean]
    #
    def desired_state?
      return true if !options.has_key?(:desired_state)
      options[:desired_state]
    end

    #
    # Whether this is name_property or not.
    #
    # @return [Boolean]
    #
    def name_property?
      options[:name_property]
    end

    #
    # Whether this property has a default value.
    #
    # @return [Boolean]
    #
    def has_default?
      options.has_key?(:default) || name_property?
    end

    #
    # Whether this property is required or not.
    #
    # @return [Boolean]
    #
    def required?
      options[:required]
    end

    #
    # Whether this property is sensitive or not.
    #
    # Defaults to false.
    #
    # @return [Boolean]
    #
    def sensitive?
      options.fetch(:sensitive, false)
    end

    #
    # Validation options.  (See Chef::Mixin::ParamsValidate#validate.)
    #
    # @return [Hash<Symbol,Object>]
    #
    def validation_options
      @validation_options ||= options.reject do |k, v|
        [:declared_in, :name, :instance_variable_name, :desired_state, :identity, :default, :name_property, :coerce, :required, :nillable, :sensitive].include?(k)
      end
    end

    #
    # Handle the property being called.
    #
    # The base implementation does the property get-or-set:
    #
    # ```ruby
    # resource.myprop # get
    # resource.myprop value # set
    # ```
    #
    # Subclasses may implement this with any arguments they want, as long as
    # the corresponding DSL calls it correctly.
    #
    # @param resource [Chef::Resource] The resource to get the property from.
    # @param value The value to set (or NOT_PASSED if it is a get).
    #
    # @return The current value of the property. If it is a `set`, lazy values
    #   will be returned without running, validating or coercing. If it is a
    #   `get`, the non-lazy, coerced, validated value will always be returned.
    #
    def call(resource, value = NOT_PASSED)
      if value == NOT_PASSED
        return get(resource)
      end

      if value.nil? && !nillable?
        # In Chef 12, value(nil) does a *get* instead of a set, so we
        # warn if the value would have been changed. In Chef 13, it will be
        # equivalent to value = nil.
        result = get(resource, nil_set: true)

        # Warn about this becoming a set in Chef 13.
        begin
          input_to_stored_value(resource, value)
          # If nil is valid, and it would change the value, warn that this will change to a set.
          if !result.nil?
            Chef.log_deprecation("An attempt was made to change #{name} from #{result.inspect} to nil by calling #{name}(nil). In Chef 12, this does a get rather than a set. In Chef 13, this will change to set the value to nil.")
          end
        rescue Chef::Exceptions::DeprecatedFeatureError
          raise
        rescue
          # If nil is invalid, warn that this will become an error.
          Chef.log_deprecation("nil is an invalid value for #{self}. In Chef 13, this warning will change to an error. Error: #{$!}")
        end

        result
      else
        # Anything else, such as myprop(value) is a set
        set(resource, value)
      end
    end

    #
    # Get the property value from the resource, handling lazy values,
    # defaults, and validation.
    #
    # - If the property's value is lazy, it is evaluated, coerced and validated.
    # - If the property has no value, and is required, raises ValidationFailed.
    # - If the property has no value, but has a lazy default, it is evaluated,
    #   coerced and validated. If the evaluated value is frozen, the resulting
    # - If the property has no value, but has a default, the default value
    #   will be returned and frozen. If the default value is lazy, it will be
    #   evaluated, coerced and validated, and the result stored in the property.
    # - If the property has no value, but is name_property, `resource.name`
    #   is retrieved, coerced, validated and stored in the property.
    # - Otherwise, `nil` is returned.
    #
    # @param resource [Chef::Resource] The resource to get the property from.
    #
    # @return The value of the property.
    #
    # @raise Chef::Exceptions::ValidationFailed If the value is invalid for
    #   this property, or if the value is required and not set.
    #
    def get(resource, nil_set: false)
      # If it's set, return it (and evaluate any lazy values)
      if is_set?(resource)
        value = get_value(resource)
        value = stored_value_to_output(resource, value)

      else
        # We are getting the default value.

        # If the user does something like this:
        #
        # ```
        # class MyResource < Chef::Resource
        #   property :content
        #   action :create do
        #     file '/x.txt' do
        #       content content
        #     end
        #   end
        # end
        # ```
        #
        # It won't do what they expect. This checks whether you try to *read*
        # `content` while we are compiling the resource.
        if !nil_set &&
            resource.respond_to?(:resource_initializing) &&
            resource.resource_initializing &&
            resource.respond_to?(:enclosing_provider) &&
            resource.enclosing_provider &&
            resource.enclosing_provider.new_resource &&
            resource.enclosing_provider.new_resource.respond_to?(name)
          Chef::Log.warn("#{Chef::Log.caller_location}: property #{name} is declared in both #{resource} and #{resource.enclosing_provider}. Use new_resource.#{name} instead. At #{Chef::Log.caller_location}")
        end

        if has_default?
          # If we were able to cache the stored_default, grab it.
          if defined?(@stored_default)
            value = @stored_default
          else
            # Otherwise, we have to validate it now.
            value = input_to_stored_value(resource, default, is_default: true)
          end
          value = stored_value_to_output(resource, value, is_default: true)

          # If the value is mutable (non-frozen), we set it on the instance
          # so that people can mutate it.  (All constant default values are
          # frozen.)
          if !value.frozen? && !value.nil?
            set_value(resource, value)
          end

          value

        elsif required?
          raise Chef::Exceptions::ValidationFailed, "#{name} is required"
        end
      end
    end

    #
    # Set the value of this property in the given resource.
    #
    # Non-lazy values are coerced and validated before being set. Coercion
    # and validation of lazy values is delayed until they are first retrieved.
    #
    # @param resource [Chef::Resource] The resource to set this property in.
    # @param value The value to set.
    #
    # @return The value that was set, after coercion (if lazy, still returns
    #   the lazy value)
    #
    # @raise Chef::Exceptions::ValidationFailed If the value is invalid for
    #   this property.
    #
    def set(resource, value)
      set_value(resource, input_to_stored_value(resource, value))
    end

    #
    # Find out whether this property has been set.
    #
    # This will be true if:
    # - The user explicitly set the value
    # - The property has a default, and the value was retrieved.
    #
    # From this point of view, it is worth looking at this as "what does the
    # user think this value should be." In order words, if the user grabbed
    # the value, even if it was a default, they probably based calculations on
    # it. If they based calculations on it and the value changes, the rest of
    # the world gets inconsistent.
    #
    # @param resource [Chef::Resource] The resource to get the property from.
    #
    # @return [Boolean]
    #
    def is_set?(resource)
      value_is_set?(resource)
    end

    #
    # Reset the value of this property so that is_set? will return false and the
    # default will be returned in the future.
    #
    # @param resource [Chef::Resource] The resource to get the property from.
    #
    def reset(resource)
      reset_value(resource)
    end

    #
    # Coerce an input value into canonical form for the property.
    #
    # After coercion, the value is suitable for storage in the resource.
    # You must validate values after coercion, however.
    #
    # Does no special handling for lazy values.
    #
    # @param resource [Chef::Resource] The resource we're coercing against
    #   (to provide context for the coerce).
    # @param value The value to coerce.
    #
    # @return The coerced value.
    #
    # @raise Chef::Exceptions::ValidationFailed If the value is invalid for
    #   this property.
    #
    def coerce(resource, value)
      if options.has_key?(:coerce)
        # If we have no default value, `nil` is never coerced or validated
        unless !has_default? && value.nil?
          value = exec_in_resource(resource, options[:coerce], value)
        end
      end
      value
    end

    #
    # Validate a value.
    #
    # Calls Chef::Mixin::ParamsValidate#validate with #validation_options as
    # options.
    #
    # @param resource [Chef::Resource] The resource we're validating against
    #   (to provide context for the validate).
    # @param value The value to validate.
    #
    # @raise Chef::Exceptions::ValidationFailed If the value is invalid for
    #   this property.
    #
    def validate(resource, value)
      # If we have no default value, `nil` is never coerced or validated
      unless value.nil? && !has_default?
        if resource
          resource.validate({ name => value }, { name => validation_options })
        else
          name = self.name || :property_type
          Chef::Mixin::ParamsValidate.validate({ name => value }, { name => validation_options })
        end
      end
    end

    #
    # Derive a new Property that is just like this one, except with some added or
    # changed options.
    #
    # @param options [Hash<Symbol,Object>] List of options that would be passed
    #   to #initialize.
    #
    # @return [Property] The new property type.
    #
    def derive(**modified_options)
      # Since name_property, name_attribute and default override each other,
      # if you specify one of them in modified_options it overrides anything in
      # the original options.
      options = self.options
      if modified_options.has_key?(:name_property) ||
          modified_options.has_key?(:name_attribute) ||
          modified_options.has_key?(:default)
        options = options.reject { |k, v| k == :name_attribute || k == :name_property || k == :default }
      end
      self.class.new(options.merge(modified_options))
    end

    #
    # Emit the DSL for this property into the resource class (`declared_in`).
    #
    # Creates a getter and setter for the property.
    #
    def emit_dsl
      # We don't create the getter/setter if it's a custom property; we will
      # be using the existing getter/setter to manipulate it instead.
      return if !instance_variable_name

      # We prefer this form because the property name won't show up in the
      # stack trace if you use `define_method`.
      declared_in.class_eval <<-EOM, __FILE__, __LINE__ + 1
        def #{name}(value=NOT_PASSED)
          raise "Property #{name} of \#{self} cannot be passed a block! If you meant to create a resource named #{name} instead, you'll need to first rename the property." if block_given?
          self.class.properties[#{name.inspect}].call(self, value)
        end
        def #{name}=(value)
          raise "Property #{name} of \#{self} cannot be passed a block! If you meant to create a resource named #{name} instead, you'll need to first rename the property." if block_given?
          self.class.properties[#{name.inspect}].set(self, value)
        end
      EOM
    rescue SyntaxError
      # If the name is not a valid ruby name, we use define_method.
      declared_in.define_method(name) do |value = NOT_PASSED, &block|
        raise "Property #{name} of #{self} cannot be passed a block! If you meant to create a resource named #{name} instead, you'll need to first rename the property." if block
        self.class.properties[name].call(self, value)
      end
      declared_in.define_method("#{name}=") do |value, &block|
        raise "Property #{name} of #{self} cannot be passed a block! If you meant to create a resource named #{name} instead, you'll need to first rename the property." if block
        self.class.properties[name].set(self, value)
      end
    end

    #
    # The options this Property will use for get/set behavior and validation.
    #
    # @see #initialize for a list of valid options.
    #
    attr_reader :options

    #
    # Find out whether this type accepts nil explicitly.
    #
    # A type accepts nil explicitly if "is" allows nil, it validates as nil, *and* is not simply
    # an empty type.
    #
    # A type is presumed to accept nil if it does coercion (which must handle nil).
    #
    # These examples accept nil explicitly:
    # ```ruby
    # property :a, [ String, nil ]
    # property :a, [ String, NilClass ]
    # property :a, [ String, proc { |v| v.nil? } ]
    # ```
    #
    # This does not (because the "is" doesn't exist or doesn't have nil):
    #
    # ```ruby
    # property :x, String
    # ```
    #
    # These do not, even though nil would validate fine (because they do not
    # have "is"):
    #
    # ```ruby
    # property :a
    # property :a, equal_to: [ 1, 2, 3, nil ]
    # property :a, kind_of: [ String, NilClass ]
    # property :a, respond_to: [ ]
    # property :a, callbacks: { "a" => proc { |v| v.nil? } }
    # ```
    #
    # @param resource [Chef::Resource] The resource we're coercing against
    #   (to provide context for the coerce).
    #
    # @return [Boolean] Whether this value explicitly accepts nil.
    #
    # @api private
    def explicitly_accepts_nil?(resource)
      options.has_key?(:coerce) ||
        (options.has_key?(:is) && resource.send(:_pv_is, { name => nil }, name, options[:is], raise_error: false))
    end

    # @api private
    def get_value(resource)
      if instance_variable_name
        resource.instance_variable_get(instance_variable_name)
      else
        resource.send(name)
      end
    end

    # @api private
    def set_value(resource, value)
      if instance_variable_name
        resource.instance_variable_set(instance_variable_name, value)
      else
        resource.send(name, value)
      end
    end

    # @api private
    def value_is_set?(resource)
      if instance_variable_name
        resource.instance_variable_defined?(instance_variable_name)
      else
        true
      end
    end

    # @api private
    def reset_value(resource)
      if instance_variable_name
        if value_is_set?(resource)
          resource.remove_instance_variable(instance_variable_name)
        end
      else
        raise ArgumentError, "Property #{name} has no instance variable defined and cannot be reset"
      end
    end

    private

    def exec_in_resource(resource, proc, *args)
      if resource
        if proc.arity > args.size
          value = proc.call(resource, *args)
        else
          value = resource.instance_exec(*args, &proc)
        end
      else
        # If we don't have a resource yet, we can't exec in resource!
        raise Chef::Exceptions::CannotValidateStaticallyError, "Cannot validate or coerce without a resource"
      end
    end

    def input_to_stored_value(resource, value, is_default: false)
      unless value.is_a?(DelayedEvaluator)
        value = coerce_and_validate(resource, value, is_default: is_default)
      end
      value
    end

    def stored_value_to_output(resource, value, is_default: false)
      # Crack open lazy values before giving the result to the user
      if value.is_a?(DelayedEvaluator)
        value = exec_in_resource(resource, value)
        value = coerce_and_validate(resource, value, is_default: is_default)
      end
      value
    end

    # Coerces and validates the value. If the value is a default, it will warn
    # the user that invalid defaults are bad mmkay, and return it as if it were
    # valid.
    def coerce_and_validate(resource, value, is_default: false)
      result = coerce(resource, value)
      begin
        # If the input is from a default, we need to emit an invalid default warning on validate.
        validate(resource, result)
      rescue Chef::Exceptions::CannotValidateStaticallyError
        # This one gets re-raised
        raise
      rescue
        # Anything else is just an invalid default: in those cases, we just
        # warn and return the (possibly coerced) value to the user.
        if is_default
          if value.nil?
            Chef.log_deprecation("Default value nil is invalid for property #{self}. Possible fixes: 1. Remove 'default: nil' if nil means 'undefined'. 2. Set a valid default value if there is a reasonable one. 3. Allow nil as a valid value of your property (for example, 'property #{name.inspect}, [ String, nil ], default: nil'). Error: #{$!}")
          else
            Chef.log_deprecation("Default value #{value.inspect} is invalid for property #{self}. In Chef 13 this will become an error: #{$!}.")
          end
        else
          raise
        end
      end

      result
    end

    def nillable?
      !!options[:nillable]
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb to tempfile /tmp/chef-rest20160913-19215-181fsyi
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003615e10
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003615f50>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "platform_introspection.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/platform_introspection'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Adam Jacob (<adam@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)

    # == Chef::DSL::PlatformIntrospection
    # Provides the DSL for platform-dependent switch logic, such as
    # #value_for_platform.
    module PlatformIntrospection
      CopiedFromChef.extend_chef_module(::Chef::DSL::PlatformIntrospection, self) if defined?(::Chef::DSL::PlatformIntrospection)

      # Implementation class for determining platform dependent values
      class PlatformDependentValue < (defined?(::Chef::DSL::PlatformIntrospection::PlatformDependentValue) ? ::Chef::DSL::PlatformIntrospection::PlatformDependentValue : Object)

        # Create a platform dependent value object.
        # === Arguments
        # platform_hash (Hash) a hash of the same structure as Chef::Platform,
        # like this:
        #   {
        #     :debian => {:default => 'the value for all debian'}
        #     [:centos, :redhat, :fedora] => {:default => "value for all EL variants"}
        #     :ubuntu => { :default => "default for ubuntu", '10.04' => "value for 10.04 only"},
        #     :default => "the default when nothing else matches"
        #   }
        # * platforms can be specified as Symbols or Strings
        # * multiple platforms can be grouped by using an Array as the key
        # * values for platforms need to be Hashes of the form:
        #   {platform_version => value_for_that_version}
        # * the exception to the above is the default value, which is given as
        #   :default => default_value
        def initialize(platform_hash)
super if defined?(::Chef::DSL::PlatformIntrospection::PlatformDependentValue)
          @values = {}
          platform_hash.each { |platforms, value| set(platforms, value) }
        end

        def value_for_node(node)
          platform, version = node[:platform].to_s, node[:platform_version].to_s
          # Check if we match a version constraint via Chef::VersionConstraint::Platform and Chef::Version::Platform
          matched_value = match_versions(node)
          if @values.key?(platform) && @values[platform].key?(version)
            @values[platform][version]
          elsif matched_value
            matched_value
          elsif @values.key?(platform) && @values[platform].key?("default")
            @values[platform]["default"]
          elsif @values.key?("default")
            @values["default"]
          else
            nil
          end
        end

        private

        def match_versions(node)
          begin
            platform, version = node[:platform].to_s, node[:platform_version].to_s
            return nil unless @values.key?(platform)
            node_version = Chef::Version::Platform.new(version)
            key_matches = []
            keys = @values[platform].keys
            keys.each do |k|
              begin
                if Chef::VersionConstraint::Platform.new(k).include?(node_version)
                  key_matches << k
                end
              rescue Chef::Exceptions::InvalidVersionConstraint => e
                Chef::Log.debug "Caught InvalidVersionConstraint. This means that a key in value_for_platform cannot be interpreted as a Chef::VersionConstraint::Platform."
                Chef::Log.debug(e)
              end
            end
            return @values[platform][version] if key_matches.include?(version)
            case key_matches.length
            when 0
              return nil
            when 1
              return @values[platform][key_matches.first]
            else
              raise "Multiple matches detected for #{platform} with values #{@values}. The matches are: #{key_matches}"
            end
          rescue Chef::Exceptions::InvalidCookbookVersion => e
            # Lets not break because someone passes a weird string like 'default' :)
            Chef::Log.debug(e)
            Chef::Log.debug "InvalidCookbookVersion exceptions are common and expected here: the generic constraint matcher attempted to match something which is not a constraint. Moving on to next version or constraint"
            return nil
          rescue Chef::Exceptions::InvalidPlatformVersion => e
            Chef::Log.debug "Caught InvalidPlatformVersion, this means that Chef::Version::Platform does not know how to turn #{node_version} into an x.y.z format"
            Chef::Log.debug(e)
            return nil
          end
        end

        def set(platforms, value)
          if platforms.to_s == "default"
            @values["default"] = value
          else
            assert_valid_platform_values!(platforms, value)
            Array(platforms).each { |platform| @values[platform.to_s] = normalize_keys(value) }
            value
          end
        end

        def normalize_keys(hash)
          hash.inject({}) do |h, key_value|
            keys, value = *key_value
            Array(keys).each do |key|
              h[key.to_s] = value
            end
            h
          end
        end

        def assert_valid_platform_values!(platforms, value)
          unless value.kind_of?(Hash)
            msg = "platform dependent values must be specified in the format :platform => {:version => value} "
            msg << "you gave a value #{value.inspect} for platform(s) #{platforms}"
            raise ArgumentError, msg
          end
        end
      end

      # Given a hash similar to the one we use for Platforms, select a value from the hash.  Supports
      # per platform defaults, along with a single base default. Arrays may be passed as hash keys and
      # will be expanded.
      #
      # === Parameters
      # platform_hash:: A platform-style hash.
      #
      # === Returns
      # value:: Whatever the most specific value of the hash is.
      def value_for_platform(platform_hash)
        PlatformDependentValue.new(platform_hash).value_for_node(node)
      end

      # Given a list of platforms, returns true if the current recipe is being run on a node with
      # that platform, false otherwise.
      #
      # === Parameters
      # args:: A list of platforms. Each platform can be in string or symbol format.
      #
      # === Returns
      # true:: If the current platform is in the list
      # false:: If the current platform is not in the list
      def platform?(*args)
        has_platform = false

        args.flatten.each do |platform|
          has_platform = true if platform.to_s == node[:platform]
        end

        has_platform
      end

     # Implementation class for determining platform family dependent values
      class PlatformFamilyDependentValue < (defined?(::Chef::DSL::PlatformIntrospection::PlatformFamilyDependentValue) ? ::Chef::DSL::PlatformIntrospection::PlatformFamilyDependentValue : Object)

        # Create a platform family dependent value object.
        # === Arguments
        # platform_family_hash (Hash) a map of platform families to values.
        # like this:
        #   {
        #     :rhel => "value for all EL variants"
        #     :fedora =>  "value for fedora variants fedora and amazon" ,
        #     [:fedora, :rhel] => "value for all known redhat variants"
        #     :debian =>  "value for debian variants including debian, ubuntu, mint" ,
        #     :default => "the default when nothing else matches"
        #   }
        # * platform families can be specified as Symbols or Strings
        # * multiple platform families can be grouped by using an Array as the key
        # * values for platform families can be any object, with no restrictions. Some examples:
        #   - [:stop, :start]
        #   - "mysql-devel"
        #   - { :key => "value" }
        def initialize(platform_family_hash)
super if defined?(::Chef::DSL::PlatformIntrospection::PlatformFamilyDependentValue)
          @values = {}
          @values["default"] = nil
          platform_family_hash.each { |platform_families, value| set(platform_families, value) }
        end

        def value_for_node(node)
          if node.key?(:platform_family)
            platform_family = node[:platform_family].to_s
            if @values.key?(platform_family)
              @values[platform_family]
            else
              @values["default"]
            end
          else
            @values["default"]
          end
        end

        private

        def set(platform_family, value)
          if platform_family.to_s == "default"
            @values["default"] = value
          else
            Array(platform_family).each { |family| @values[family.to_s] = value }
            value
          end
        end
      end

      # Given a hash mapping platform families to values, select a value from the hash. Supports a single
      # base default if platform family is not in the map. Arrays may be passed as hash keys and will be
      # expanded
      #
      # === Parameters
      # platform_family_hash:: A hash in the form { platform_family_name => value }
      #
      # === Returns
      # value:: Whatever the most specific value of the hash is.
      def value_for_platform_family(platform_family_hash)
        PlatformFamilyDependentValue.new(platform_family_hash).value_for_node(node)
      end

      # Given a list of platform families, returns true if the current recipe is being run on a
      # node within that platform family, false otherwise.
      #
      # === Parameters
      # args:: A list of platform families. Each platform family can be in string or symbol format.
      #
      # === Returns
      # true:: if the current node platform family is in the list.
      # false:: if the current node platform family is not in the list.
      def platform_family?(*args)
        args.flatten.any? do |platform_family|
          platform_family.to_s == node[:platform_family]
        end
      end

      # Shamelessly stolen from https://github.com/sethvargo/chef-sugar/blob/master/lib/chef/sugar/docker.rb
      # Given a node object, returns whether the node is a docker container.
      #
      # === Parameters
      # node:: [Chef::Node] The node to check.
      #
      # === Returns
      # true:: if the current node is a docker container
      # false:: if the current node is not a docker container
      def docker?(node = run_context.nil? ? nil : run_context.node)
        # Using "File.exist?('/.dockerinit') || File.exist?('/.dockerenv')" makes Travis sad,
        # and that makes us sad too.
        node && node[:virtualization] && node[:virtualization][:systems] &&
          node[:virtualization][:systems][:docker] && node[:virtualization][:systems][:docker] == "guest"
      end

    end
  end
end

# **DEPRECATED**
# This used to be part of chef/mixin/language. Load the file to activate the deprecation code.
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003670b30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003670db0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "apt_repository.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000228ca88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000228cbf0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "universal.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000022d3ac8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000022e0070>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "recipe.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb to tempfile /tmp/chef-rest20160913-19215-19btz27
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000226c148
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000226c328>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "core.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/apt_repository'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    class AptRepository < (defined?(::Chef::Resource::AptRepository) ? ::Chef::Resource::AptRepository : Chef::Resource)
      resource_name :apt_repository
      provides :apt_repository

      property :repo_name, String, name_property: true
      property :uri, String
      property :distribution, [ String, nil, false ], default: lazy { node["lsb"]["codename"] }, nillable: true, coerce: proc { |x| x ? x : nil }
      property :components, Array, default: []
      property :arch, [String, nil, false], default: nil, nillable: true, coerce: proc { |x| x ? x : nil }
      property :trusted, [TrueClass, FalseClass], default: false
      # whether or not to add the repository as a source repo, too
      property :deb_src, [TrueClass, FalseClass], default: false
      property :keyserver, [String, nil, false], default: "keyserver.ubuntu.com", nillable: true, coerce: proc { |x| x ? x : nil }
      property :key, [String, nil, false], default: nil, nillable: true, coerce: proc { |x| x ? x : nil }
      property :key_proxy, [String, nil, false], default: nil, nillable: true, coerce: proc { |x| x ? x : nil }

      property :cookbook, [String, nil, false], default: nil, desired_state: false, nillable: true, coerce: proc { |x| x ? x : nil }
      property :cache_rebuild, [TrueClass, FalseClass], default: true, desired_state: false
      property :sensitive, [TrueClass, FalseClass], default: false, desired_state: false

      default_action :add
      allowed_actions :add, :remove
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb to tempfile /tmp/chef-rest20160913-19215-13d8v93
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/apt_update'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    class AptUpdate < (defined?(::Chef::Resource::AptUpdate) ? ::Chef::Resource::AptUpdate : Chef::Resource)
      resource_name :apt_update
      provides :apt_update, os: "linux"

      property :frequency, Integer, default: 86_400

      default_action :periodic
      allowed_actions :update, :periodic
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001eeab50
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001eeb190>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "delayed_evaluator.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb to tempfile /tmp/chef-rest20160913-19215-zcrrdv
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/universal'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Copyright:: Copyright 2008-2016, 2009-2015 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/dsl/platform_introspection"
require "chef_compat/copied_from_chef/chef/mixin/powershell_out"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)
    # Part of a family of DSL mixins.
    #
    # Chef::DSL::Recipe mixes into Recipes and LWRP Providers.
    #   - this does not target core chef resources and providers.
    #   - this is restricted to recipe/resource/provider context where a resource collection exists.
    #   - cookbook authors should typically include modules into here.
    #
    # Chef::DSL::Core mixes into Recipes, LWRP Providers and Core Providers
    #   - this adds cores providers on top of the Recipe DSL.
    #   - this is restricted to recipe/resource/provider context where a resource collection exists.
    #   - core chef authors should typically include modules into here.
    #
    # Chef::DSL::Universal mixes into Recipes, LWRP Resources+Providers, Core Resources+Providers, and Attributes files.
    #   - this adds resources and attributes files.
    #   - do not add helpers which manipulate the resource collection.
    #   - this is for general-purpose stuff that is useful nearly everywhere.
    #   - it also pollutes the namespace of nearly every context, watch out.
    #
    module Universal
      CopiedFromChef.extend_chef_module(::Chef::DSL::Universal, self) if defined?(::Chef::DSL::Universal)
      include Chef::DSL::PlatformIntrospection
      include Chef::Mixin::PowershellOut
      include Chef::Mixin::ShellOut
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/recipe'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
require "chef_compat/copied_from_chef/chef/dsl/core"
require "chef_compat/copied_from_chef/chef/mixin/lazy_module_include"
class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)
    module Recipe
      CopiedFromChef.extend_chef_module(::Chef::DSL::Recipe, self) if defined?(::Chef::DSL::Recipe)
      include Chef::DSL::Core
      extend Chef::Mixin::LazyModuleInclude
      module FullDSL
        CopiedFromChef.extend_chef_module(::Chef::DSL::Recipe::FullDSL, self) if defined?(::Chef::DSL::Recipe::FullDSL)
        include Chef::DSL::Recipe
        extend Chef::Mixin::LazyModuleInclude
      end
    end
  end
end
require "chef_compat/copied_from_chef/chef/resource"
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb to tempfile /tmp/chef-rest20160913-19215-4dnc8
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001fc3630
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001fc3810>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "lazy_module_include.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000138e428
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000138e6a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "params_validate.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb to tempfile /tmp/chef-rest20160913-19215-yk8nu9
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/delayed_evaluator'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: John Keiser <jkeiser@chef.io>
# Copyright:: Copyright 2015-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class DelayedEvaluator < (defined?(::Chef::DelayedEvaluator) ? ::Chef::DelayedEvaluator : Proc)
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb to tempfile /tmp/chef-rest20160913-19215-1dwn3fz
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000f53de0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000f5c8f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "declare_resource.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/declare_resource'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters
# Copyright:: Copyright 2008-2016, 2009-2015 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)
    module DeclareResource
      CopiedFromChef.extend_chef_module(::Chef::DSL::DeclareResource, self) if defined?(::Chef::DSL::DeclareResource)

      # Helper for switching run_contexts.  Allows for using :parent or :root in place of
      # passing the run_context.  Executes the block in the run_context.  Returns the return
      # value of the passed block.
      #
      # @param rc  [Chef::RunContext,Symbol] Either :root, :parent or a Chef::RunContext
      #
      # @return return value of the block
      #
      # @example
      #   # creates/returns a 'service[foo]' resource in the root run_context
      #   resource = with_run_context(:root)
      #     edit_resource(:service, "foo") do
      #       action :nothing
      #     end
      #   end
      #
      def with_run_context(rc)
        raise ArgumentError, "with_run_context is useless without a block" unless block_given?
        old_run_context = @run_context
        @run_context =
          case rc
          when Chef::RunContext
            rc
          when :root
            Chef.run_context
          when :parent
            run_context.parent_run_context
          else
            raise ArgumentError, "bad argument to run_context helper, must be :root, :parent, or a Chef::RunContext"
          end
        yield
      ensure
        @run_context = old_run_context
      end

      # Lookup a resource in the resource collection by name and delete it.  This
      # will raise Chef::Exceptions::ResourceNotFound if the resource is not found.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      #
      # @return [Chef::Resource] The resource
      #
      # @example
      #   delete_resource!(:template, '/x/y.txy')
      #
      def delete_resource!(type, name, run_context: self.run_context)
        run_context.resource_collection.delete("#{type}[#{name}]").tap do |resource|
          # Purge any pending notifications too. This will not raise an exception
          # if there are no notifications.
          if resource
            run_context.before_notification_collection.delete(resource.declared_key)
            run_context.immediate_notification_collection.delete(resource.declared_key)
            run_context.delayed_notification_collection.delete(resource.declared_key)
          end
        end
      end

      # Lookup a resource in the resource collection by name and delete it.  Returns
      # nil if the resource is not found and should not fail.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      #
      # @return [Chef::Resource] The resource
      #
      # @example
      #   delete_resource(:template, '/x/y.txy')
      #
      def delete_resource(type, name, run_context: self.run_context)
        delete_resource!(type, name, run_context: run_context)
      rescue Chef::Exceptions::ResourceNotFound
        nil
      end

      # Lookup a resource in the resource collection by name and edit the resource.  If the resource is not
      # found this will raise Chef::Exceptions::ResourceNotFound.  This is the correct API to use for
      # "chef_rewind" functionality.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      # @param resource_attrs_block A block that lets you set attributes of the
      #   resource (it is instance_eval'd on the resource instance).
      #
      # @return [Chef::Resource] The updated resource
      #
      # @example
      #   edit_resource!(:template, '/x/y.txy') do
      #     cookbook_name: cookbook_name
      #   end
      #
      def edit_resource!(type, name, created_at = nil, run_context: self.run_context, &resource_attrs_block)
        resource = find_resource!(type, name, run_context: run_context)
        resource.instance_eval(&resource_attrs_block) if block_given?
        resource
      end

      # Lookup a resource in the resource collection by name.  If it exists,
      # return it.  If it does not exist, create it.  This is a useful function
      # for accumulator patterns.  In CRUD terminology this is an "upsert" operation and is
      # used to assert that the resource must exist with the specified properties.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param created_at [String] The caller of the resource.  Use `caller[0]`
      #   to get the caller of your function.  Defaults to the caller of this
      #   function.
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      # @param resource_attrs_block A block that lets you set attributes of the
      #   resource (it is instance_eval'd on the resource instance).
      #
      # @return [Chef::Resource] The updated or created resource
      #
      # @example
      #   resource = edit_resource(:template, '/x/y.txy') do
      #     source "y.txy.erb"
      #     variables {}
      #   end
      #   resource.variables.merge!({ home: "/home/klowns"  })
      #
      def edit_resource(type, name, created_at = nil, run_context: self.run_context, &resource_attrs_block)
        edit_resource!(type, name, created_at, run_context: run_context, &resource_attrs_block)
      rescue Chef::Exceptions::ResourceNotFound
        declare_resource(type, name, created_at, run_context: run_context, &resource_attrs_block)
      end

      # Lookup a resource in the resource collection by name.  If the resource is not
      # found this will raise Chef::Exceptions::ResourceNotFound.  This API is identical to the
      # resources() call and while it is a synonym it is not intended to deprecate that call.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      #
      # @return [Chef::Resource] The updated resource
      #
      # @example
      #   resource = find_resource!(:template, '/x/y.txy')
      #
      def find_resource!(type, name, run_context: self.run_context)
        raise ArgumentError, "find_resource! does not take a block" if block_given?
        run_context.resource_collection.find(type => name)
      end

      # Lookup a resource in the resource collection by name.  If the resource is not found
      # the will be no exception raised and the call will return nil.  If a block is given and
      # no resource is found it will create the resource using the block, if the resource is
      # found then the block will not be applied.  The block version is similar to create_if_missing
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      #
      # @return [Chef::Resource] The updated resource
      #
      # @example
      #   if ( find_resource(:template, '/x/y.txy') )
      #     # do something
      #   else
      #     # don't worry about the error
      #   end
      #
      # @example
      #   # this API can be used to return a resource from an outer run context, and will only create
      #   # an action :nothing service if one does not already exist.
      #   resource = with_run_context(:root) do
      #     find_resource(:service, 'whatever') do
      #       action :nothing
      #     end
      #   end
      #
      def find_resource(type, name, created_at: nil, run_context: self.run_context, &resource_attrs_block)
        find_resource!(type, name, run_context: run_context)
      rescue Chef::Exceptions::ResourceNotFound
        if block_given?
          declare_resource(type, name, created_at, run_context: run_context, &resource_attrs_block)
        end # returns nil otherwise
      end

      # Instantiates a resource (via #build_resource), then adds it to the
      # resource collection. Note that resource classes are looked up directly,
      # so this will create the resource you intended even if the method name
      # corresponding to that resource has been overridden.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param created_at [String] The caller of the resource.  Use `caller[0]`
      #   to get the caller of your function.  Defaults to the caller of this
      #   function.
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      # @param resource_attrs_block A block that lets you set attributes of the
      #   resource (it is instance_eval'd on the resource instance).
      #
      # @return [Chef::Resource] The new resource.
      #
      # @example
      #   declare_resource(:file, '/x/y.txy', caller[0]) do
      #     action :delete
      #   end
      #   # Equivalent to
      #   file '/x/y.txt' do
      #     action :delete
      #   end
      #
      def declare_resource(type, name, created_at = nil, run_context: self.run_context, create_if_missing: false, &resource_attrs_block)
        created_at ||= caller[0]

        if create_if_missing
          Chef::Log.deprecation "build_resource with a create_if_missing flag is deprecated, use edit_resource instead"
          # midly goofy since we call edit_resource only to re-call ourselves, but that's why its deprecated...
          return edit_resource(type, name, created_at, run_context: run_context, &resource_attrs_block)
        end

        resource = build_resource(type, name, created_at, &resource_attrs_block)

        run_context.resource_collection.insert(resource, resource_type: type, instance_name: name)
        resource
      end

      # Instantiate a resource of the given +type+ with the given +name+ and
      # attributes as given in the +resource_attrs_block+.
      #
      # The resource is NOT added to the resource collection.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param created_at [String] The caller of the resource.  Use `caller[0]`
      #   to get the caller of your function.  Defaults to the caller of this
      #   function.
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      # @param resource_attrs_block A block that lets you set attributes of the
      #   resource (it is instance_eval'd on the resource instance).
      #
      # @return [Chef::Resource] The new resource.
      #
      # @example
      #   build_resource(:file, '/x/y.txy', caller[0]) do
      #     action :delete
      #   end
      #
      def build_resource(type, name, created_at = nil, run_context: self.run_context, &resource_attrs_block)
        created_at ||= caller[0]

        # this needs to be lazy in order to avoid circular dependencies since ResourceBuilder
        # will requires the entire provider+resolver universe
        require "chef_compat/copied_from_chef/chef/resource_builder" unless defined?(Chef::ResourceBuilder)

        Chef::ResourceBuilder.new(
          type:                type,
          name:                name,
          created_at:          created_at,
          params:              @params,
          run_context:         run_context,
          cookbook_name:       cookbook_name,
          recipe_name:         recipe_name,
          enclosing_provider:  self.is_a?(Chef::Provider) ? self : nil
        ).build(&resource_attrs_block)
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb to tempfile /tmp/chef-rest20160913-19215-z2pawm
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f54878
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f54ad0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/lazy_module_include'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Copyright:: Copyright 2011-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    # If you have:
    #
    # module A
    #   extend LazyModuleInclude
    # end
    #
    # module B
    #   include A
    # end
    #
    # module C
    #   include B
    # end
    #
    # module Monkeypatches
    #   def monkey
    #     puts "monkey!"
    #   end
    # end
    #
    # A.send(:include, Monkeypatches)
    #
    # Then B and C and any classes that they're included in will also get the #monkey method patched into them.
    #
    module LazyModuleInclude
      CopiedFromChef.extend_chef_module(::Chef::Mixin::LazyModuleInclude, self) if defined?(::Chef::Mixin::LazyModuleInclude)

      # Most of the magick is in this hook which creates a closure over the parent class and then builds an
      # "infector" module which infects all descendants and which is responsible for updating the list of
      # descendants in the parent class.
      def included(klass)
        super
        parent_klass = self
        infector = Module.new do
          define_method(:included) do |subklass|
            super(subklass)
            subklass.extend(infector)
            parent_klass.descendants.push(subklass)
          end
        end
        klass.extend(infector)
        parent_klass.descendants.push(klass)
      end

      def descendants
        @descendants ||= []
      end

      def include(*classes)
        super
        classes.each do |klass|
          descendants.each do |descendant|
            descendant.send(:include, klass)
          end
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb to tempfile /tmp/chef-rest20160913-19215-1bu49v4
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000b32360
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000b32478>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "properties.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/params_validate'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Adam Jacob (<adam@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "chef_compat/copied_from_chef/chef/constants"
require "chef_compat/copied_from_chef/chef/property"
require "chef_compat/copied_from_chef/chef/delayed_evaluator"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    module ParamsValidate
      CopiedFromChef.extend_chef_module(::Chef::Mixin::ParamsValidate, self) if defined?(::Chef::Mixin::ParamsValidate)
      # Takes a hash of options, along with a map to validate them.  Returns the original
      # options hash, plus any changes that might have been made (through things like setting
      # default values in the validation map)
      #
      # For example:
      #
      #   validate({ :one => "neat" }, { :one => { :kind_of => String }})
      #
      # Would raise an exception if the value of :one above is not a kind_of? string.  Valid
      # map options are:
      #
      # @param opts [Hash<Symbol,Object>] Validation opts.
      #   @option opts [Object,Array] :is An object, or list of
      #     objects, that must match the value using Ruby's `===` operator
      #     (`opts[:is].any? { |v| v === value }`). (See #_pv_is.)
      #   @option opts [Object,Array] :equal_to An object, or list
      #     of objects, that must be equal to the value using Ruby's `==`
      #     operator (`opts[:is].any? { |v| v == value }`)  (See #_pv_equal_to.)
      #   @option opts [Regexp,Array<Regexp>] :regex An object, or
      #     list of objects, that must match the value with `regex.match(value)`.
      #     (See #_pv_regex)
      #   @option opts [Class,Array<Class>] :kind_of A class, or
      #     list of classes, that the value must be an instance of.  (See
      #     #_pv_kind_of.)
      #   @option opts [Hash<String,Proc>] :callbacks A hash of
      #     messages -> procs, all of which match the value. The proc must
      #     return a truthy or falsey value (true means it matches).  (See
      #     #_pv_callbacks.)
      #   @option opts [Symbol,Array<Symbol>] :respond_to A method
      #     name, or list of method names, the value must respond to.  (See
      #     #_pv_respond_to.)
      #   @option opts [Symbol,Array<Symbol>] :cannot_be A property,
      #     or a list of properties, that the value cannot have (such as `:nil` or
      #     `:empty`). The method with a questionmark at the end is called on the
      #     value (e.g. `value.empty?`). If the value does not have this method,
      #     it is considered valid (i.e. if you don't respond to `empty?` we
      #     assume you are not empty).  (See #_pv_cannot_be.)
      #   @option opts [Proc] :coerce A proc which will be called to
      #     transform the user input to canonical form. The value is passed in,
      #     and the transformed value returned as output. Lazy values will *not*
      #     be passed to this method until after they are evaluated. Called in the
      #     context of the resource (meaning you can access other properties).
      #     (See #_pv_coerce.) (See #_pv_coerce.)
      #   @option opts [Boolean] :required `true` if this property
      #     must be present and not `nil`; `false` otherwise. This is checked
      #     after the resource is fully initialized. (See #_pv_required.)
      #   @option opts [Boolean] :name_property `true` if this
      #     property defaults to the same value as `name`. Equivalent to
      #     `default: lazy { name }`, except that #property_is_set? will
      #     return `true` if the property is set *or* if `name` is set. (See
      #     #_pv_name_property.)
      #   @option opts [Boolean] :name_attribute Same as `name_property`.
      #   @option opts [Object] :default The value this property
      #     will return if the user does not set one. If this is `lazy`, it will
      #     be run in the context of the instance (and able to access other
      #     properties).  (See #_pv_default.)
      #
      def validate(opts, map)
        map = map.validation_options if map.is_a?(Property)

        #--
        # validate works by taking the keys in the validation map, assuming it's a hash, and
        # looking for _pv_:symbol as methods.  Assuming it find them, it calls the right
        # one.
        #++
        raise ArgumentError, "Options must be a hash" unless opts.kind_of?(Hash)
        raise ArgumentError, "Validation Map must be a hash" unless map.kind_of?(Hash)

        map.each do |key, validation|
          unless key.kind_of?(Symbol) || key.kind_of?(String)
            raise ArgumentError, "Validation map keys must be symbols or strings!"
          end
          case validation
          when true
            _pv_required(opts, key)
          when false
            true
          when Hash
            validation.each do |check, carg|
              check_method = "_pv_#{check}"
              if self.respond_to?(check_method, true)
                self.send(check_method, opts, key, carg)
              else
                raise ArgumentError, "Validation map has unknown check: #{check}"
              end
            end
          end
        end
        opts
      end

      def lazy(&block)
        DelayedEvaluator.new(&block)
      end

      def set_or_return(symbol, value, validation)
        property = SetOrReturnProperty.new(name: symbol, **validation)
        property.call(self, value)
      end

      private

      def explicitly_allows_nil?(key, validation)
        validation.has_key?(:is) && _pv_is({ key => nil }, key, validation[:is], raise_error: false)
      end

      # Return the value of a parameter, or nil if it doesn't exist.
      def _pv_opts_lookup(opts, key)
        if opts.has_key?(key.to_s)
          opts[key.to_s]
        elsif opts.has_key?(key.to_sym)
          opts[key.to_sym]
        else
          nil
        end
      end

      # Raise an exception if the parameter is not found.
      def _pv_required(opts, key, is_required = true, explicitly_allows_nil = false)
        if is_required
          return true if opts.has_key?(key.to_s) && (explicitly_allows_nil || !opts[key.to_s].nil?)
          return true if opts.has_key?(key.to_sym) && (explicitly_allows_nil || !opts[key.to_sym].nil?)
          raise Exceptions::ValidationFailed, "Required argument #{key.inspect} is missing!"
        end
        true
      end

      #
      # List of things values must be equal to.
      #
      # Uses Ruby's `==` to evaluate (equal_to == value).  At least one must
      # match for the value to be valid.
      #
      # `nil` passes this validation automatically.
      #
      # @return [Array,nil] List of things values must be equal to, or nil if
      #   equal_to is unspecified.
      #
      def _pv_equal_to(opts, key, to_be)
        value = _pv_opts_lookup(opts, key)
        unless value.nil?
          to_be = Array(to_be)
          to_be.each do |tb|
            return true if value == tb
          end
          raise Exceptions::ValidationFailed, "Option #{key} must be equal to one of: #{to_be.join(", ")}!  You passed #{value.inspect}."
        end
      end

      #
      # List of things values must be instances of.
      #
      # Uses value.kind_of?(kind_of) to evaluate. At least one must match for
      # the value to be valid.
      #
      # `nil` automatically passes this validation.
      #
      def _pv_kind_of(opts, key, to_be)
        value = _pv_opts_lookup(opts, key)
        unless value.nil?
          to_be = Array(to_be)
          to_be.each do |tb|
            return true if value.kind_of?(tb)
          end
          raise Exceptions::ValidationFailed, "Option #{key} must be a kind of #{to_be}!  You passed #{value.inspect}."
        end
      end

      #
      # List of method names values must respond to.
      #
      # Uses value.respond_to?(respond_to) to evaluate. At least one must match
      # for the value to be valid.
      #
      def _pv_respond_to(opts, key, method_name_list)
        value = _pv_opts_lookup(opts, key)
        unless value.nil?
          Array(method_name_list).each do |method_name|
            unless value.respond_to?(method_name)
              raise Exceptions::ValidationFailed, "Option #{key} must have a #{method_name} method!"
            end
          end
        end
      end

      #
      # List of things that must not be true about the value.
      #
      # Calls `value.<thing>?` All responses must be false for the value to be
      # valid.
      # Values which do not respond to <thing>? are considered valid (because if
      # a value doesn't respond to `:readable?`, then it probably isn't
      # readable.)
      #
      # @example
      #   ```ruby
      #   property :x, cannot_be: [ :nil, :empty ]
      #   x [ 1, 2 ] #=> valid
      #   x 1        #=> valid
      #   x []       #=> invalid
      #   x nil      #=> invalid
      #   ```
      #
      def _pv_cannot_be(opts, key, predicate_method_base_name)
        value = _pv_opts_lookup(opts, key)
        if !value.nil?
          Array(predicate_method_base_name).each do |method_name|
            predicate_method = :"#{method_name}?"

            if value.respond_to?(predicate_method)
              if value.send(predicate_method)
                raise Exceptions::ValidationFailed, "Option #{key} cannot be #{predicate_method_base_name}"
              end
            end
          end
        end
      end

      #
      # The default value for a property.
      #
      # When the property is not assigned, this will be used.
      #
      # If this is a lazy value, it will either be passed the resource as a value,
      # or if the lazy proc does not take parameters, it will be run in the
      # context of the instance with instance_eval.
      #
      # @example
      #   ```ruby
      #   property :x, default: 10
      #   ```
      #
      # @example
      #   ```ruby
      #   property :x
      #   property :y, default: lazy { x+2 }
      #   ```
      #
      # @example
      #   ```ruby
      #   property :x
      #   property :y, default: lazy { |r| r.x+2 }
      #   ```
      #
      def _pv_default(opts, key, default_value)
        value = _pv_opts_lookup(opts, key)
        if value.nil?
          default_value = default_value.freeze if !default_value.is_a?(DelayedEvaluator)
          opts[key] = default_value
        end
      end

      #
      # List of regexes values that must match.
      #
      # Uses regex.match() to evaluate. At least one must match for the value to
      # be valid.
      #
      # `nil` passes regex validation automatically.
      #
      # @example
      #   ```ruby
      #   property :x, regex: [ /abc/, /xyz/ ]
      #   ```
      #
      def _pv_regex(opts, key, regex)
        value = _pv_opts_lookup(opts, key)
        if !value.nil?
          Array(regex).flatten.each do |r|
            return true if r.match(value.to_s)
          end
          raise Exceptions::ValidationFailed, "Option #{key}'s value #{value} does not match regular expression #{regex.inspect}"
        end
      end

      #
      # List of procs we pass the value to.
      #
      # All procs must return true for the value to be valid. If any procs do
      # not return true, the key will be used for the message: `"Property x's
      # value :y <message>"`.
      #
      # @example
      #   ```ruby
      #   property :x, callbacks: { "is bigger than 10" => proc { |v| v <= 10 }, "is not awesome" => proc { |v| !v.awesome }}
      #   ```
      #
      def _pv_callbacks(opts, key, callbacks)
        raise ArgumentError, "Callback list must be a hash!" unless callbacks.kind_of?(Hash)
        value = _pv_opts_lookup(opts, key)
        if !value.nil?
          callbacks.each do |message, zeproc|
            unless zeproc.call(value)
              raise Exceptions::ValidationFailed, "Option #{key}'s value #{value} #{message}!"
            end
          end
        end
      end

      #
      # Allows a parameter to default to the value of the resource name.
      #
      # @example
      #   ```ruby
      #    property :x, name_property: true
      #   ```
      #
      def _pv_name_property(opts, key, is_name_property = true)
        if is_name_property
          if opts[key].nil?
            raise CannotValidateStaticallyError, "name_property cannot be evaluated without a resource." if self == Chef::Mixin::ParamsValidate
            opts[key] = self.instance_variable_get(:"@name")
          end
        end
      end
      alias :_pv_name_attribute :_pv_name_property

      #
      # List of valid things values can be.
      #
      # Uses Ruby's `===` to evaluate (is === value).  At least one must match
      # for the value to be valid.
      #
      # If a proc is passed, it is instance_eval'd in the resource, passed the
      # value, and must return a truthy or falsey value.
      #
      # @example Class
      #   ```ruby
      #   property :x, String
      #   x 'valid' #=> valid
      #   x 1       #=> invalid
      #   x nil     #=> invalid
      #
      # @example Value
      #   ```ruby
      #   property :x, [ :a, :b, :c, nil ]
      #   x :a  #=> valid
      #   x nil #=> valid
      #   ```
      #
      # @example Regex
      #   ```ruby
      #   property :x, /bar/
      #   x 'foobar' #=> valid
      #   x 'foo'    #=> invalid
      #   x nil      #=> invalid
      #   ```
      #
      # @example Proc
      #   ```ruby
      #   property :x, proc { |x| x > y }
      #   property :y, default: 2
      #   x 3 #=> valid
      #   x 1 #=> invalid
      #   ```
      #
      # @example Property
      #   ```ruby
      #   type = Property.new(is: String)
      #   property :x, type
      #   x 'foo' #=> valid
      #   x 1     #=> invalid
      #   x nil   #=> invalid
      #   ```
      #
      # @example RSpec Matcher
      #   ```ruby
      #   include RSpec::Matchers
      #   property :x, a_string_matching /bar/
      #   x 'foobar' #=> valid
      #   x 'foo'    #=> invalid
      #   x nil      #=> invalid
      #   ```
      #
      def _pv_is(opts, key, to_be, raise_error: true)
        return true if !opts.has_key?(key.to_s) && !opts.has_key?(key.to_sym)
        value = _pv_opts_lookup(opts, key)
        to_be = [ to_be ].flatten(1)
        errors = []
        passed = to_be.any? do |tb|
          case tb
          when Proc
            raise CannotValidateStaticallyError, "is: proc { } must be evaluated once for each resource" if self == Chef::Mixin::ParamsValidate
            instance_exec(value, &tb)
          when Property
            begin
              validate(opts, { key => tb.validation_options })
              true
            rescue Exceptions::ValidationFailed
              # re-raise immediately if there is only one "is" so we get a better stack
              raise if to_be.size == 1
              errors << $!
              false
            end
          else
            tb === value
          end
        end
        if passed
          true
        else
          message = "Property #{key} must be one of: #{to_be.map { |v| v.inspect }.join(", ")}!  You passed #{value.inspect}."
          unless errors.empty?
            message << " Errors:\n#{errors.map { |m| "- #{m}" }.join("\n")}"
          end
          raise Exceptions::ValidationFailed, message
        end
      end

      #
      # Method to mess with a value before it is validated and stored.
      #
      # Allows you to transform values into a canonical form that is easy to
      # work with.
      #
      # This is passed the value to transform, and is run in the context of the
      # instance (so it has access to other resource properties). It must return
      # the value that will be stored in the instance.
      #
      # @example
      #   ```ruby
      #   property :x, Integer, coerce: { |v| v.to_i }
      #   ```
      #
      def _pv_coerce(opts, key, coercer)
        if opts.has_key?(key.to_s)
          raise CannotValidateStaticallyError, "coerce must be evaluated for each resource." if self == Chef::Mixin::ParamsValidate
          opts[key.to_s] = instance_exec(opts[key], &coercer)
        elsif opts.has_key?(key.to_sym)
          raise CannotValidateStaticallyError, "coerce must be evaluated for each resource." if self == Chef::Mixin::ParamsValidate
          opts[key.to_sym] = instance_exec(opts[key], &coercer)
        end
      end

      # We allow Chef::Mixin::ParamsValidate.validate(), but we will raise an
      # error if you try to do anything requiring there to be an actual resource.
      # This way, you can statically validate things if you have constant validation
      # (which is the norm).
      extend self

      # Used by #set_or_return to avoid emitting a deprecation warning for
      # "value nil" and to keep default stickiness working exactly the same
      # @api private
      class SetOrReturnProperty < (defined?(::Chef::Mixin::ParamsValidate::SetOrReturnProperty) ? ::Chef::Mixin::ParamsValidate::SetOrReturnProperty : Chef::Property)
        def get(resource, nil_set: false)
          value = super
          # All values are sticky, frozen or not
          if !is_set?(resource)
            set_value(resource, value)
          end
          value
        end

        def call(resource, value = NOT_PASSED)
          # setting to nil does a get
          if value.nil? && !explicitly_accepts_nil?(resource)
            get(resource, nil_set: true)
          else
            super
          end
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb to tempfile /tmp/chef-rest20160913-19215-1ont98e
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ff1628
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ff16f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "notifying_block.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/core'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Copyright:: Copyright 2008-2016, 2009-2015 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/dsl/declare_resource"
require "chef_compat/copied_from_chef/chef/dsl/universal"
require "chef_compat/copied_from_chef/chef/mixin/notifying_block"
require "chef_compat/copied_from_chef/chef/mixin/lazy_module_include"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)
    # Part of a family of DSL mixins.
    #
    # Chef::DSL::Recipe mixes into Recipes and LWRP Providers.
    #   - this does not target core chef resources and providers.
    #   - this is restricted to recipe/resource/provider context where a resource collection exists.
    #   - cookbook authors should typically include modules into here.
    #
    # Chef::DSL::Core mixes into Recipes, LWRP Providers and Core Providers
    #   - this adds cores providers on top of the Recipe DSL.
    #   - this is restricted to recipe/resource/provider context where a resource collection exists.
    #   - core chef authors should typically include modules into here.
    #
    # Chef::DSL::Universal mixes into Recipes, LWRP Resources+Providers, Core Resources+Providers, and Attributes files.
    #   - this adds resources and attributes files.
    #   - do not add helpers which manipulate the resource collection.
    #   - this is for general-purpose stuff that is useful nearly everywhere.
    #   - it also pollutes the namespace of nearly every context, watch out.
    #
    module Core
      CopiedFromChef.extend_chef_module(::Chef::DSL::Core, self) if defined?(::Chef::DSL::Core)
      include Chef::DSL::Universal
      include Chef::DSL::DeclareResource
      include Chef::Mixin::NotifyingBlock
      extend Chef::Mixin::LazyModuleInclude
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb to tempfile /tmp/chef-rest20160913-19215-1b6gz0x
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
require "chef_compat/copied_from_chef/chef/resource/action_class"
require "chef_compat/copied_from_chef/chef/provider"
require "chef_compat/copied_from_chef/chef/mixin/properties"
require "chef_compat/copied_from_chef/chef/dsl/universal"
class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    include Chef::Mixin::Properties
    property :name, String, coerce: proc { |v| v.is_a?(Array) ? v.join(", ") : v.to_s }, desired_state: false
    def initialize(name, run_context = nil)
super if defined?(::Chef::Resource)
      name(name) unless name.nil?
      @run_context = run_context
      @noop = nil
      @before = nil
      @params = Hash.new
      @provider = nil
      @allowed_actions = self.class.allowed_actions.to_a
      @action = self.class.default_action
      @updated = false
      @updated_by_last_action = false
      @supports = {}
      @ignore_failure = false
      @retries = 0
      @retry_delay = 2
      @not_if = []
      @only_if = []
      @source_line = nil
      # We would like to raise an error when the user gives us a guard
      # interpreter and a ruby_block to the guard. In order to achieve this
      # we need to understand when the user overrides the default guard
      # interpreter. Therefore we store the default separately in a different
      # attribute.
      @guard_interpreter = nil
      @default_guard_interpreter = :default
      @elapsed_time = 0
      @sensitive = false
    end
    def action(arg = nil)
      if arg
        arg = Array(arg).map(&:to_sym)
        arg.each do |action|
          validate(
            { action: action },
            { action: { kind_of: Symbol, equal_to: allowed_actions } }
          )
        end
        @action = arg
      else
        @action
      end
    end
    alias_method :action=, :action
    class UnresolvedSubscribes < (defined?(::Chef::Resource::UnresolvedSubscribes) ? ::Chef::Resource::UnresolvedSubscribes : self)
      alias_method :to_s, :name
      alias_method :declared_key, :name
    end
    def state_for_resource_reporter
      state = {}
      state_properties = self.class.state_properties
      state_properties.each do |property|
        if property.identity? || property.is_set?(self)
          state[property.name] = property.sensitive? ? "*sensitive value suppressed*" : send(property.name)
        end
      end
      state
    end
    alias_method :state, :state_for_resource_reporter
    def identity
      result = {}
      identity_properties = self.class.identity_properties
      identity_properties.each do |property|
        result[property.name] = send(property.name)
      end
      return result.values.first if identity_properties.size == 1
      result
    end
    attr_reader :resource_initializing
    def resource_initializing=(value)
      if value
        @resource_initializing = true
      else
        remove_instance_variable(:@resource_initializing)
      end
    end
    def to_hash
      # Grab all current state, then any other ivars (backcompat)
      result = {}
      self.class.state_properties.each do |p|
        result[p.name] = p.get(self)
      end
      safe_ivars = instance_variables.map { |ivar| ivar.to_sym } - FORBIDDEN_IVARS
      safe_ivars.each do |iv|
        key = iv.to_s.sub(/^@/, "").to_sym
        next if result.has_key?(key)
        result[key] = instance_variable_get(iv)
      end
      result
    end
    def self.identity_property(name = nil)
      result = identity_properties(*Array(name))
      if result.size > 1
        raise Chef::Exceptions::MultipleIdentityError, "identity_property cannot be called on an object with more than one identity property (#{result.map { |r| r.name }.join(", ")})."
      end
      result.first
    end
    attr_accessor :allowed_actions
    def allowed_actions(value = NOT_PASSED)
      if value != NOT_PASSED
        self.allowed_actions = value
      end
      @allowed_actions
    end
    def resource_name
      @resource_name || self.class.resource_name
    end
    def self.use_automatic_resource_name
      automatic_name = convert_to_snake_case(self.name.split("::")[-1])
      resource_name automatic_name
    end
    def self.allowed_actions(*actions)
      @allowed_actions ||=
        if superclass.respond_to?(:allowed_actions)
          superclass.allowed_actions.dup
        else
          [ :nothing ]
        end
      @allowed_actions |= actions.flatten
    end
    def self.allowed_actions=(value)
      @allowed_actions = value.uniq
    end
    def self.default_action(action_name = NOT_PASSED)
      unless action_name.equal?(NOT_PASSED)
        @default_action = Array(action_name).map(&:to_sym)
        self.allowed_actions |= @default_action
      end

      if @default_action
        @default_action
      elsif superclass.respond_to?(:default_action)
        superclass.default_action
      else
        [:nothing]
      end
    end
    def self.default_action=(action_name)
      default_action action_name
    end
    def self.action(action, &recipe_block)
      action = action.to_sym
      declare_action_class
      action_class.action(action, &recipe_block)
      self.allowed_actions += [ action ]
      default_action action if Array(default_action) == [:nothing]
    end
    def self.load_current_value(&load_block)
      define_method(:load_current_value!, &load_block)
    end
    def current_value_does_not_exist!
      raise Chef::Exceptions::CurrentValueDoesNotExist
    end
    def self.action_class(&block)
      return @action_class if @action_class && !block
      # If the superclass needed one, then we need one as well.
      if block || (superclass.respond_to?(:action_class) && superclass.action_class)
        @action_class = declare_action_class(&block)
      end
      @action_class
    end
    def self.declare_action_class(&block)
      @action_class ||= begin
                          if superclass.respond_to?(:action_class)
                            base_provider = superclass.action_class
                          end
                          base_provider ||= Chef::Provider

                          resource_class = self
                          Class.new(base_provider) do
                            include ActionClass
                            self.resource_class = resource_class
                          end
                        end
      @action_class.class_eval(&block) if block
      @action_class
    end
    FORBIDDEN_IVARS = [:@run_context, :@not_if, :@only_if, :@enclosing_provider]
    HIDDEN_IVARS = [:@allowed_actions, :@resource_name, :@source_line, :@run_context, :@name, :@not_if, :@only_if, :@elapsed_time, :@enclosing_provider]
    class << self
    end
    @@sorted_descendants = nil
    module DeprecatedLWRPClass
      CopiedFromChef.extend_chef_module(::Chef::Resource::DeprecatedLWRPClass, self) if defined?(::Chef::Resource::DeprecatedLWRPClass)
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb to tempfile /tmp/chef-rest20160913-19215-18hsmnb
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/properties'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
require "chef_compat/copied_from_chef/chef/delayed_evaluator"
require "chef_compat/copied_from_chef/chef/mixin/params_validate"
require "chef_compat/copied_from_chef/chef/property"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    module Properties
      CopiedFromChef.extend_chef_module(::Chef::Mixin::Properties, self) if defined?(::Chef::Mixin::Properties)
      module ClassMethods
        CopiedFromChef.extend_chef_module(::Chef::Mixin::Properties::ClassMethods, self) if defined?(::Chef::Mixin::Properties::ClassMethods)
        #
        # The list of properties defined on this resource.
        #
        # Everything defined with `property` is in this list.
        #
        # @param include_superclass [Boolean] `true` to include properties defined
        #   on superclasses; `false` or `nil` to return the list of properties
        #   directly on this class.
        #
        # @return [Hash<Symbol,Property>] The list of property names and types.
        #
        def properties(include_superclass = true)
          if include_superclass
            result = {}
            ancestors.reverse_each { |c| result.merge!(c.properties(false)) if c.respond_to?(:properties) }
            result
          else
            @properties ||= {}
          end
        end

        #
        # Create a property on this resource class.
        #
        # If a superclass has this property, or if this property has already been
        # defined by this resource, this will *override* the previous value.
        #
        # @param name [Symbol] The name of the property.
        # @param type [Object,Array<Object>] The type(s) of this property.
        #   If present, this is prepended to the `is` validation option.
        # @param options [Hash<Symbol,Object>] Validation options.
        #   @option options [Object,Array] :is An object, or list of
        #     objects, that must match the value using Ruby's `===` operator
        #     (`options[:is].any? { |v| v === value }`).
        #   @option options [Object,Array] :equal_to An object, or list
        #     of objects, that must be equal to the value using Ruby's `==`
        #     operator (`options[:is].any? { |v| v == value }`)
        #   @option options [Regexp,Array<Regexp>] :regex An object, or
        #     list of objects, that must match the value with `regex.match(value)`.
        #   @option options [Class,Array<Class>] :kind_of A class, or
        #     list of classes, that the value must be an instance of.
        #   @option options [Hash<String,Proc>] :callbacks A hash of
        #     messages -> procs, all of which match the value. The proc must
        #     return a truthy or falsey value (true means it matches).
        #   @option options [Symbol,Array<Symbol>] :respond_to A method
        #     name, or list of method names, the value must respond to.
        #   @option options [Symbol,Array<Symbol>] :cannot_be A property,
        #     or a list of properties, that the value cannot have (such as `:nil` or
        #     `:empty`). The method with a questionmark at the end is called on the
        #     value (e.g. `value.empty?`). If the value does not have this method,
        #     it is considered valid (i.e. if you don't respond to `empty?` we
        #     assume you are not empty).
        #   @option options [Proc] :coerce A proc which will be called to
        #     transform the user input to canonical form. The value is passed in,
        #     and the transformed value returned as output. Lazy values will *not*
        #     be passed to this method until after they are evaluated. Called in the
        #     context of the resource (meaning you can access other properties).
        #   @option options [Boolean] :required `true` if this property
        #     must be present; `false` otherwise. This is checked after the resource
        #     is fully initialized.
        #   @option options [Boolean] :name_property `true` if this
        #     property defaults to the same value as `name`. Equivalent to
        #     `default: lazy { name }`, except that #property_is_set? will
        #     return `true` if the property is set *or* if `name` is set.
        #   @option options [Boolean] :name_attribute Same as `name_property`.
        #   @option options [Object] :default The value this property
        #     will return if the user does not set one. If this is `lazy`, it will
        #     be run in the context of the instance (and able to access other
        #     properties).
        #   @option options [Boolean] :desired_state `true` if this property is
        #     part of desired state. Defaults to `true`.
        #   @option options [Boolean] :identity `true` if this property
        #     is part of object identity. Defaults to `false`.
        #   @option options [Boolean] :sensitive `true` if this property could
        #     contain sensitive information and whose value should be redacted
        #     in any resource reporting / auditing output. Defaults to `false`.
        #
        # @example Bare property
        #   property :x
        #
        # @example With just a type
        #   property :x, String
        #
        # @example With just options
        #   property :x, default: 'hi'
        #
        # @example With type and options
        #   property :x, String, default: 'hi'
        #
        def property(name, type = NOT_PASSED, **options)
          name = name.to_sym

          options = options.inject({}) { |memo, (key, value)| memo[key.to_sym] = value; memo }

          options[:instance_variable_name] = :"@#{name}" if !options.has_key?(:instance_variable_name)
          options[:name] = name
          options[:declared_in] = self

          if type == NOT_PASSED
            # If a type is not passed, the property derives from the
            # superclass property (if any)
            if properties.has_key?(name)
              property = properties[name].derive(**options)
            else
              property = property_type(**options)
            end

          # If a Property is specified, derive a new one from that.
          elsif type.is_a?(Property) || (type.is_a?(Class) && type <= Property)
            property = type.derive(**options)

          # If a primitive type was passed, combine it with "is"
          else
            if options[:is]
              options[:is] = ([ type ] + [ options[:is] ]).flatten(1)
            else
              options[:is] = type
            end
            property = property_type(**options)
          end

          local_properties = properties(false)
          local_properties[name] = property

          property.emit_dsl
        end

        #
        # Create a reusable property type that can be used in multiple properties
        # in different resources.
        #
        # @param options [Hash<Symbol,Object>] Validation options. see #property for
        #   the list of options.
        #
        # @example
        #   property_type(default: 'hi')
        #
        def property_type(**options)
          Property.derive(**options)
        end

        #
        # Create a lazy value for assignment to a default value.
        #
        # @param block The block to run when the value is retrieved.
        #
        # @return [Chef::DelayedEvaluator] The lazy value
        #
        def lazy(&block)
          DelayedEvaluator.new(&block)
        end

        #
        # Get or set the list of desired state properties for this resource.
        #
        # State properties are properties that describe the desired state
        # of the system, such as file permissions or ownership.
        # In general, state properties are properties that could be populated by
        # examining the state of the system (e.g., File.stat can tell you the
        # permissions on an existing file). Contrarily, properties that are not
        # "state properties" usually modify the way Chef itself behaves, for example
        # by providing additional options for a package manager to use when
        # installing a package.
        #
        # This list is used by the Chef client auditing system to extract
        # information from resources to describe changes made to the system.
        #
        # This method is unnecessary when declaring properties with `property`;
        # properties are added to state_properties by default, and can be turned off
        # with `desired_state: false`.
        #
        # ```ruby
        # property :x # part of desired state
        # property :y, desired_state: false # not part of desired state
        # ```
        #
        # @param names [Array<Symbol>] A list of property names to set as desired
        #   state.
        #
        # @return [Array<Property>] All properties in desired state.
        #
        def state_properties(*names)
          if !names.empty?
            names = names.map { |name| name.to_sym }.uniq

            local_properties = properties(false)
            # Add new properties to the list.
            names.each do |name|
              property = properties[name]
              if !property
                self.property name, instance_variable_name: false, desired_state: true
              elsif !property.desired_state?
                self.property name, desired_state: true
              end
            end

            # If state_attrs *excludes* something which is currently desired state,
            # mark it as desired_state: false.
            local_properties.each do |name, property|
              if property.desired_state? && !names.include?(name)
                self.property name, desired_state: false
              end
            end
          end

          properties.values.select { |property| property.desired_state? }
        end

        #
        # Set the identity of this resource to a particular set of properties.
        #
        # This drives #identity, which returns data that uniquely refers to a given
        # resource on the given node (in such a way that it can be correlated
        # across Chef runs).
        #
        # This method is unnecessary when declaring properties with `property`;
        # properties can be added to identity during declaration with
        # `identity: true`.
        #
        # ```ruby
        # property :x, identity: true # part of identity
        # property :y # not part of identity
        # ```
        #
        # If no properties are marked as identity, "name" is considered the identity.
        #
        # @param names [Array<Symbol>] A list of property names to set as the identity.
        #
        # @return [Array<Property>] All identity properties.
        #
        def identity_properties(*names)
          if !names.empty?
            names = names.map { |name| name.to_sym }

            # Add or change properties that are not part of the identity.
            names.each do |name|
              property = properties[name]
              if !property
                self.property name, instance_variable_name: false, identity: true
              elsif !property.identity?
                self.property name, identity: true
              end
            end

            # If identity_properties *excludes* something which is currently part of
            # the identity, mark it as identity: false.
            properties.each do |name, property|
              if property.identity? && !names.include?(name)

                self.property name, identity: false
              end
            end
          end

          result = properties.values.select { |property| property.identity? }
          result = [ properties[:name] ] if result.empty?
          result
        end

        def included(other)
          other.extend ClassMethods
        end
      end

      def self.included(other)
        other.extend ClassMethods
      end

      include Chef::Mixin::ParamsValidate

      #
      # Whether this property has been set (or whether it has a default that has
      # been retrieved).
      #
      # @param name [Symbol] The name of the property.
      # @return [Boolean] `true` if the property has been set.
      #
      def property_is_set?(name)
        property = self.class.properties[name.to_sym]
        raise ArgumentError, "Property #{name} is not defined in class #{self}" if !property
        property.is_set?(self)
      end

      #
      # Clear this property as if it had never been set. It will thereafter return
      # the default.
      # been retrieved).
      #
      # @param name [Symbol] The name of the property.
      #
      def reset_property(name)
        property = self.class.properties[name.to_sym]
        raise ArgumentError, "Property #{name} is not defined in class #{self}" if !property
        property.reset(self)
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb to tempfile /tmp/chef-rest20160913-19215-170y3ft
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e57650
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e57740>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "noop.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003f9e068
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003f9e158>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "powershell_out.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/powershell_out'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Copyright:: Copyright 2015-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    module PowershellOut
      CopiedFromChef.extend_chef_module(::Chef::Mixin::PowershellOut, self) if defined?(::Chef::Mixin::PowershellOut)
      include Chef::Mixin::ShellOut
      include Chef::Mixin::WindowsArchitectureHelper

      # Run a command under powershell with the same API as shell_out.  The
      # options hash is extended to take an "architecture" flag which
      # can be set to :i386 or :x86_64 to force the windows architecture.
      #
      # @param script [String] script to run
      # @param options [Hash] options hash
      # @return [Mixlib::Shellout] mixlib-shellout object
      def powershell_out(*command_args)
        script = command_args.first
        options = command_args.last.is_a?(Hash) ? command_args.last : nil

        run_command_with_os_architecture(script, options)
      end

      # Run a command under powershell with the same API as shell_out!
      # (raises exceptions on errors)
      #
      # @param script [String] script to run
      # @param options [Hash] options hash
      # @return [Mixlib::Shellout] mixlib-shellout object
      def powershell_out!(*command_args)
        cmd = powershell_out(*command_args)
        cmd.error!
        cmd
      end

      private

      # Helper function to run shell_out and wrap it with the correct
      # flags to possibly disable WOW64 redirection (which we often need
      # because chef-client runs as a 32-bit app on 64-bit windows).
      #
      # @param script [String] script to run
      # @param options [Hash] options hash
      # @return [Mixlib::Shellout] mixlib-shellout object
      def run_command_with_os_architecture(script, options)
        options ||= {}
        options = options.dup
        arch = options.delete(:architecture)

        with_os_architecture(nil, architecture: arch) do
          shell_out(
            build_powershell_command(script),
            options
          )
        end
      end

      # Helper to build a powershell command around the script to run.
      #
      # @param script [String] script to run
      # @retrurn [String] powershell command to execute
      def build_powershell_command(script)
        flags = [
          # Hides the copyright banner at startup.
          "-NoLogo",
          # Does not present an interactive prompt to the user.
          "-NonInteractive",
          # Does not load the Windows PowerShell profile.
          "-NoProfile",
          # always set the ExecutionPolicy flag
          # see http://technet.microsoft.com/en-us/library/ee176961.aspx
          "-ExecutionPolicy Unrestricted",
          # Powershell will hang if STDIN is redirected
          # http://connect.microsoft.com/PowerShell/feedback/details/572313/powershell-exe-can-hang-if-stdin-is-redirected
          "-InputFormat None",
        ]

        "powershell.exe #{flags.join(' ')} -Command \"#{script}\""
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e25038
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e25100>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "yum_repository.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb to tempfile /tmp/chef-rest20160913-19215-1q9384
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003aaabd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003aaad18>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "recipe_hook.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c8a408
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c8a570>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "apt_repository.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/apt_repository'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"
require "chef_compat/copied_from_chef/chef/dsl/declare_resource"
require "chef_compat/copied_from_chef/chef/provider/noop"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class AptRepository < (defined?(::Chef::Provider::AptRepository) ? ::Chef::Provider::AptRepository : Chef::Provider)
      use_inline_resources

      include Chef::Mixin::ShellOut
      extend Chef::Mixin::Which

      provides :apt_repository do
        which("apt-get")
      end

      def whyrun_supported?
        true
      end

      def load_current_resource
      end

      action :add do
        unless new_resource.key.nil?
          if is_key_id?(new_resource.key) && !has_cookbook_file?(new_resource.key)
            install_key_from_keyserver
          else
            install_key_from_uri
          end
        end

        declare_resource(:execute, "apt-cache gencaches") do
          ignore_failure true
          action :nothing
        end

        declare_resource(:apt_update, new_resource.name) do
          ignore_failure true
          action :nothing
        end

        components = if is_ppa_url?(new_resource.uri) && new_resource.components.empty?
                       "main"
                     else
                       new_resource.components
                     end

        repo = build_repo(
          new_resource.uri,
          new_resource.distribution,
          components,
          new_resource.trusted,
          new_resource.arch,
          new_resource.deb_src
        )

        declare_resource(:file, "/etc/apt/sources.list.d/#{new_resource.name}.list") do
          owner "root"
          group "root"
          mode "0644"
          content repo
          sensitive new_resource.sensitive
          action :create
          notifies :run, "execute[apt-cache gencaches]", :immediately
          notifies :update, "apt_update[#{new_resource.name}]", :immediately if new_resource.cache_rebuild
        end
      end

      action :remove do
        if ::File.exist?("/etc/apt/sources.list.d/#{new_resource.name}.list")
          converge_by "Removing #{new_resource.name} repository from /etc/apt/sources.list.d/" do
            declare_resource(:file, "/etc/apt/sources.list.d/#{new_resource.name}.list") do
              sensitive new_resource.sensitive
              action :delete
              notifies :update, "apt_update[#{new_resource.name}]", :immediately if new_resource.cache_rebuild
            end

            declare_resource(:apt_update, new_resource.name) do
              ignore_failure true
              action :nothing
            end

          end
        end
      end

      def is_key_id?(id)
        id = id[2..-1] if id.start_with?("0x")
        id =~ /^\h+$/ && [8, 16, 40].include?(id.length)
      end

      def extract_fingerprints_from_cmd(cmd)
        so = shell_out(cmd)
        so.run_command
        so.stdout.split(/\n/).map do |t|
          if z = t.match(/^ +Key fingerprint = ([0-9A-F ]+)/)
            z[1].split.join
          end
        end.compact
      end

      def key_is_valid?(cmd, key)
        valid = true

        so = shell_out(cmd)
        so.run_command
        so.stdout.split(/\n/).map do |t|
          if t =~ %r{^\/#{key}.*\[expired: .*\]$}
            Chef::Log.debug "Found expired key: #{t}"
            valid = false
            break
          end
        end

        Chef::Log.debug "key #{key} #{valid ? "is valid" : "is not valid"}"
        valid
      end

      def cookbook_name
        new_resource.cookbook || new_resource.cookbook_name
      end

      def has_cookbook_file?(fn)
        run_context.has_cookbook_file_in_cookbook?(cookbook_name, fn)
      end

      def no_new_keys?(file)
        installed_keys = extract_fingerprints_from_cmd("apt-key finger")
        proposed_keys = extract_fingerprints_from_cmd("gpg --with-fingerprint #{file}")
        (installed_keys & proposed_keys).sort == proposed_keys.sort
      end

      def install_key_from_uri
        key_name = new_resource.key.split(%r{\/}).last
        cached_keyfile = ::File.join(Chef::Config[:file_cache_path], key_name)
        type = if new_resource.key.start_with?("http")
                 :remote_file
               elsif has_cookbook_file?(new_resource.key)
                 :cookbook_file
               else
                 raise Chef::Exceptions::FileNotFound, "Cannot locate key file"
               end

        declare_resource(type, cached_keyfile) do
          source new_resource.key
          mode "0644"
          sensitive new_resource.sensitive
          action :create
        end

        raise "The key #{cached_keyfile} is invalid and cannot be used to verify an apt repository." unless key_is_valid?("gpg #{cached_keyfile}", "")

        declare_resource(:execute, "apt-key add #{cached_keyfile}") do
          sensitive new_resource.sensitive
          action :run
          not_if do
            no_new_keys?(cached_keyfile)
          end
          notifies :run, "execute[apt-cache gencaches]", :immediately
        end
      end

      def install_key_from_keyserver(key = new_resource.key, keyserver = new_resource.keyserver)
        cmd = "apt-key adv --recv"
        cmd << " --keyserver-options http-proxy=#{new_resource.key_proxy}" if new_resource.key_proxy
        cmd << " --keyserver "
        cmd << if keyserver.start_with?("hkp://")
                 keyserver
               else
                 "hkp://#{keyserver}:80"
               end

        cmd << " #{key}"

        declare_resource(:execute, "install-key #{key}") do
          command cmd
          sensitive new_resource.sensitive
          not_if do
            present = extract_fingerprints_from_cmd("apt-key finger").any? do |fp|
              fp.end_with? key.upcase
            end
            present && key_is_valid?("apt-key list", key.upcase)
          end
          notifies :run, "execute[apt-cache gencaches]", :immediately
        end

        raise "The key #{key} is invalid and cannot be used to verify an apt repository." unless key_is_valid?("apt-key list", key.upcase)
      end

      def install_ppa_key(owner, repo)
        url = "https://launchpad.net/api/1.0/~#{owner}/+archive/#{repo}"
        key_id = Chef::HTTP::Simple.new(url).get("signing_key_fingerprint").delete('"')
        install_key_from_keyserver(key_id, "keyserver.ubuntu.com")
      rescue Net::HTTPServerException => e
        raise "Could not access Launchpad ppa API: #{e.message}"
      end

      def is_ppa_url?(url)
        url.start_with?("ppa:")
      end

      def make_ppa_url(ppa)
        return unless is_ppa_url?(ppa)
        owner, repo = ppa[4..-1].split("/")
        repo ||= "ppa"

        install_ppa_key(owner, repo)
        "http://ppa.launchpad.net/#{owner}/#{repo}/ubuntu"
      end

      def build_repo(uri, distribution, components, trusted, arch, add_src = false)
        uri = make_ppa_url(uri) if is_ppa_url?(uri)

        uri = '"' + uri + '"' unless uri.start_with?("'", '"')
        components = Array(components).join(" ")
        options = []
        options << "arch=#{arch}" if arch
        options << "trusted=yes" if trusted
        optstr = unless options.empty?
                   "[" + options.join(" ") + "]"
                 end
        info = [ optstr, uri, distribution, components ].compact.join(" ")
        repo =  "deb      #{info}\n"
        repo << "deb-src  #{info}\n" if add_src
        repo
      end
    end
  end
end

Chef::Provider::Noop.provides :apt_repository
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb to tempfile /tmp/chef-rest20160913-19215-li25fd
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c2f2d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c2f6c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "apt_update.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003afa318
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003afa430>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "recipe.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/noop'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class Noop < (defined?(::Chef::Provider::Noop) ? ::Chef::Provider::Noop : Chef::Provider)
      def load_current_resource; end

      def respond_to_missing?(method_sym, include_private = false)
        method_sym.to_s.start_with?("action_") || super
      end

      def method_missing(method_sym, *arguments, &block)
        if method_sym.to_s =~ /^action_/
          Chef::Log.debug("NoOp-ing for #{method_sym}")
        else
          super
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/notifying_block'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Author:: Lamont Granquist <lamont@chef.io>
# Copyright:: Copyright 2010-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    module NotifyingBlock
      CopiedFromChef.extend_chef_module(::Chef::Mixin::NotifyingBlock, self) if defined?(::Chef::Mixin::NotifyingBlock)

      def notifying_block(&block)
        begin
          subcontext = subcontext_block(&block)
          Chef::Runner.new(subcontext).converge
        ensure
          # recipes don't have a new_resource
          if respond_to?(:new_resource)
            if subcontext && subcontext.resource_collection.any?(&:updated?)
              new_resource.updated_by_last_action(true)
            end
          end
        end
      end

      def subcontext_block(parent_context = nil, &block)
        parent_context ||= @run_context
        sub_run_context = parent_context.create_child

        begin
          outer_run_context = @run_context
          @run_context = sub_run_context
          instance_eval(&block)
        ensure
          @run_context = outer_run_context
        end

        sub_run_context
      end

    end
  end
end
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb to tempfile /tmp/chef-rest20160913-19215-oehj5h
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb to tempfile /tmp/chef-rest20160913-19215-10izbpx
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/yum_repository'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"
require "chef_compat/copied_from_chef/chef/dsl/declare_resource"
require "chef_compat/copied_from_chef/chef/provider/noop"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class YumRepository < (defined?(::Chef::Provider::YumRepository) ? ::Chef::Provider::YumRepository : Chef::Provider)
      use_inline_resources

      extend Chef::Mixin::Which

      provides :yum_repository do
        which "yum"
      end

      def whyrun_supported?; true; end

      def load_current_resource; end

      action :create do
        declare_resource(:template, "/etc/yum.repos.d/#{new_resource.repositoryid}.repo") do
          if template_available?(new_resource.source)
            source new_resource.source
          else
            source ::File.expand_path("../support/yum_repo.erb", __FILE__)
            local true
          end
          sensitive new_resource.sensitive
          variables(config: new_resource)
          mode new_resource.mode
          if new_resource.make_cache
            notifies :run, "execute[yum clean metadata #{new_resource.repositoryid}]", :immediately if new_resource.clean_metadata || new_resource.clean_headers
            notifies :run, "execute[yum-makecache-#{new_resource.repositoryid}]", :immediately
            notifies :create, "ruby_block[yum-cache-reload-#{new_resource.repositoryid}]", :immediately
          end
        end

        declare_resource(:execute, "yum clean metadata #{new_resource.repositoryid}") do
          command "yum clean metadata --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
          action :nothing
        end

        # get the metadata for this repo only
        declare_resource(:execute, "yum-makecache-#{new_resource.repositoryid}") do
          command "yum -q -y makecache --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
          action :nothing
          only_if { new_resource.enabled }
        end

        # reload internal Chef yum cache
        declare_resource(:ruby_block, "yum-cache-reload-#{new_resource.repositoryid}") do
          block { Chef::Provider::Package::Yum::YumCache.instance.reload }
          action :nothing
        end
      end

      action :delete do
        declare_resource(:file, "/etc/yum.repos.d/#{new_resource.repositoryid}.repo") do
          action :delete
          notifies :run, "execute[yum clean all #{new_resource.repositoryid}]", :immediately
          notifies :create, "ruby_block[yum-cache-reload-#{new_resource.repositoryid}]", :immediately
        end

        declare_resource(:execute, "yum clean all #{new_resource.repositoryid}") do
          command "yum clean all --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
          only_if "yum repolist | grep -P '^#{new_resource.repositoryid}([ \t]|$)'"
          action :nothing
        end

        declare_resource(:ruby_block, "yum-cache-reload-#{new_resource.repositoryid}") do
          block { Chef::Provider::Package::Yum::YumCache.instance.reload }
          action :nothing
        end
      end

      action :makecache do
        declare_resource(:execute, "yum-makecache-#{new_resource.repositoryid}") do
          command "yum -q -y makecache --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
          action :run
          only_if { new_resource.enabled }
        end

        declare_resource(:ruby_block, "yum-cache-reload-#{new_resource.repositoryid}") do
          block { Chef::Provider::Package::Yum::YumCache.instance.reload }
          action :run
        end
      end

      alias_method :action_add, :action_create
      alias_method :action_remove, :action_delete

      def template_available?(path)
        !path.nil? && run_context.has_template_in_cookbook?(new_resource.cookbook_name, path)
      end

    end
  end
end

Chef::Provider::Noop.provides :yum_repository
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb to tempfile /tmp/chef-rest20160913-19215-15xs9j4
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/recipe'
require 'chef_compat/recipe'

class Chef::Recipe
  # If the cookbook depends on compat_resource, create a ChefCompat::Recipe object
  # instead of Chef::Recipe, for the extra goodies.
  def self.new(cookbook_name, recipe_name, run_context)
    if run_context &&
        cookbook_name &&
        recipe_name &&
        run_context.cookbook_collection &&
        run_context.cookbook_collection[cookbook_name] &&
        run_context.cookbook_collection[cookbook_name].metadata.dependencies.has_key?('compat_resource') &&
        self != ::ChefCompat::Recipe
      ::ChefCompat::Recipe.new(cookbook_name, recipe_name, run_context)
    else
      super
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb to tempfile /tmp/chef-rest20160913-19215-tns4qw
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/apt_update'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/provider"
require "chef_compat/copied_from_chef/chef/provider/noop"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class AptUpdate < (defined?(::Chef::Provider::AptUpdate) ? ::Chef::Provider::AptUpdate : Chef::Provider)
      use_inline_resources

      extend Chef::Mixin::Which

      provides :apt_update do
        which("apt-get")
      end

      APT_CONF_DIR = "/etc/apt/apt.conf.d"
      STAMP_DIR = "/var/lib/apt/periodic"

      def whyrun_supported?
        true
      end

      def load_current_resource
      end

      action :periodic do
        if !apt_up_to_date?
          converge_by "update new lists of packages" do
            do_update
          end
        end
      end

      action :update do
        converge_by "force update new lists of packages" do
          do_update
        end
      end

      private

      # Determines whether we need to run `apt-get update`
      #
      # @return [Boolean]
      def apt_up_to_date?
        ::File.exist?("#{STAMP_DIR}/update-success-stamp") &&
          ::File.mtime("#{STAMP_DIR}/update-success-stamp") > Time.now - new_resource.frequency
      end

      def do_update
        [STAMP_DIR, APT_CONF_DIR].each do |d|
          declare_resource(:directory, d) do
            recursive true
          end
        end

        declare_resource(:file, "#{APT_CONF_DIR}/15update-stamp") do
          content "APT::Update::Post-Invoke-Success {\"touch #{STAMP_DIR}/update-success-stamp 2>/dev/null || true\";};"
          action :create_if_missing
        end

        declare_resource(:execute, "apt-get -q update")
      end

    end
  end
end

Chef::Provider::Noop.provides :apt_update
end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb to tempfile /tmp/chef-rest20160913-19215-1cbd7mm
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000399b328
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000399b3f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource_builder.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/recipe'
require 'chef_compat/copied_from_chef/chef/dsl/recipe'

module ChefCompat
  class Recipe < Chef::Recipe
    include ChefCompat::CopiedFromChef::Chef::DSL::Recipe::FullDSL
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb to tempfile /tmp/chef-rest20160913-19215-dp8ne0
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037653b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003765478>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "log.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003a12158
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003a122c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "provider.rb"]>

[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/recipe.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000380cb38
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000380cdb8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "runner.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Lamont Granquist (<lamont@chef.io>)
# Copyright:: Copyright 2015-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# XXX: we now have two copies of this file in the compat_resource cookbook.  I'm uncertain if this is a
# bug or a feature, and I suspect it is actually a feature.  The point of this file is that for all
# resources and cookbooks the global Chef::ResourceBuilder class must be upgraded to at least the
# 12.10.24 version.  The point of the other copy is that for compat_resource cookbooks all their
# resources should be using the lastest version that has been sync'd.  So these two files should
# diverge as times goes on.  I believe that is the correct behavior and that we want to have both
# files in this cookbook.

# NOTE: this was extracted from the Recipe DSL mixin, relevant specs are in spec/unit/recipe_spec.rb

if Gem::Requirement.new("< 12.10.24").satisfied_by?(Gem::Version.new(Chef::VERSION))
  begin
    require 'chef/resource_builder'
    # we use the LoadError this creates on early 12.x to not monkeypatch chef client versions that don't have Chef::ResourceBuilder
    # (it is lazily included and doesn't appear until compile time so we can't resolve the symbol during library loading)

    class Chef
      class ResourceBuilder
        attr_reader :type
        attr_reader :name
        attr_reader :created_at
        attr_reader :params
        attr_reader :run_context
        attr_reader :cookbook_name
        attr_reader :recipe_name
        attr_reader :enclosing_provider
        attr_reader :resource

        # FIXME (ruby-2.1 syntax): most of these are mandatory
        def initialize(type:nil, name:nil, created_at: nil, params: nil, run_context: nil, cookbook_name: nil, recipe_name: nil, enclosing_provider: nil)
          @type               = type
          @name               = name
          @created_at         = created_at
          @params             = params
          @run_context        = run_context
          @cookbook_name      = cookbook_name
          @recipe_name        = recipe_name
          @enclosing_provider = enclosing_provider
        end

        def build(&block)
          raise ArgumentError, "You must supply a name when declaring a #{type} resource" if name.nil?

          @resource = resource_class.new(name, run_context)
          if resource.resource_name.nil?
            raise Chef::Exceptions::InvalidResourceSpecification, "#{resource}.resource_name is `nil`!  Did you forget to put `provides :blah` or `resource_name :blah` in your resource class?"
          end
          resource.source_line = created_at
          resource.declared_type = type

          # If we have a resource like this one, we want to steal its state
          # This behavior is very counter-intuitive and should be removed.
          # See CHEF-3694, https://tickets.opscode.com/browse/CHEF-3694
          # Moved to this location to resolve CHEF-5052, https://tickets.opscode.com/browse/CHEF-5052
          if prior_resource
            resource.load_from(prior_resource)
          end

          resource.cookbook_name = cookbook_name
          resource.recipe_name = recipe_name
          # Determine whether this resource is being created in the context of an enclosing Provider
          resource.enclosing_provider = enclosing_provider

          # XXX: this is required for definition params inside of the scope of a
          # subresource to work correctly.
          resource.params = params

          # Evaluate resource attribute DSL
          if block_given?
            resource.resource_initializing = true
            begin
              resource.instance_eval(&block)
            ensure
              resource.resource_initializing = false
            end
          end

          # emit a cloned resource warning if it is warranted
          if prior_resource
            if is_trivial_resource?(prior_resource) && identicalish_resources?(prior_resource, resource)
              emit_harmless_cloning_debug
            else
              emit_cloned_resource_warning
            end
          end

          # Run optional resource hook
          resource.after_created

          resource
        end

        private

        def resource_class
          # Checks the new platform => short_name => resource mapping initially
          # then fall back to the older approach (Chef::Resource.const_get) for
          # backward compatibility
          @resource_class ||= Chef::Resource.resource_for_node(type, run_context.node)
        end

        def is_trivial_resource?(resource)
          identicalish_resources?(resource_class.new(name, run_context), resource)
        end

        # this is an equality test specific to checking for 3694 cloning warnings
        def identicalish_resources?(first, second)
          skipped_ivars = [ :@source_line, :@cookbook_name, :@recipe_name, :@params, :@elapsed_time, :@declared_type ]
          checked_ivars = ( first.instance_variables | second.instance_variables ) - skipped_ivars
          non_matching_ivars = checked_ivars.reject do |iv|
            if iv == :@action && ( [first.instance_variable_get(iv)].flatten == [:nothing] || [second.instance_variable_get(iv)].flatten == [:nothing] )
              # :nothing action on either side of the comparison always matches
              true
            else
              first.instance_variable_get(iv) == second.instance_variable_get(iv)
            end
          end
          Chef::Log.debug("ivars which did not match with the prior resource: #{non_matching_ivars}")
          non_matching_ivars.empty?
        end

        def emit_cloned_resource_warning
          Chef::Log.warn("Cloning resource attributes for #{resource} from prior resource (CHEF-3694)")
          Chef::Log.warn("Previous #{prior_resource}: #{prior_resource.source_line}") if prior_resource.source_line
          Chef::Log.warn("Current  #{resource}: #{resource.source_line}") if resource.source_line
        end

        def emit_harmless_cloning_debug
          Chef::Log.debug("Harmless resource cloning from #{prior_resource}:#{prior_resource.source_line} to #{resource}:#{resource.source_line}")
        end

        def prior_resource
          @prior_resource ||=
            begin
              key = "#{type}[#{name}]"
              run_context.resource_collection.lookup_local(key)
            rescue Chef::Exceptions::ResourceNotFound
              nil
            end
        end

      end
    end
  rescue LoadError
    # cool we're just on early chef 12.x, nothing to do -- we don't have to worry because there's also not parent_run_context pointer, so we don't have to
    # use lookup_local to avoid resource cloning shit out of the parent run_context.  the resource collection's lookup() method will always use lookup_local
    # over lookup_recursive.
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb to tempfile /tmp/chef-rest20160913-19215-1ydwkc2
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038d6320
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038d6438>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "run_context.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003671ee0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036720c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource_collection.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000023b7a98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000023c0058>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "property.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/log'

# for now we have to patch this in everything
class Chef
  class Log
    def self.caller_location
      # Pick the first caller that is *not* part of the Chef gem, that's the
      # thing the user wrote.
      compat_resource_path = File.expand_path("../../../../..", __FILE__)
      chef_gem_path = Gem.loaded_specs['chef'].full_gem_path
      caller(0..20).find { |c| !c.start_with?(compat_resource_path) && !c.start_with?(chef_gem_path) }
    end
  end
end

if Gem::Requirement.new('< 12.13.37').satisfied_by?(Gem::Version.new(Chef::VERSION))

  # FIXME: why does this not match the implementation in Chef itself?
  class Chef
    class Log
      module ChefCompatDeprecation
        def deprecation(message, location=nil)
          Chef.log_deprecation(message, location)
        end
      end
      extend ChefCompatDeprecation
    end
  end

end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb to tempfile /tmp/chef-rest20160913-19215-1tdhwbx
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

if Gem::Requirement.new('< 12.14.40').satisfied_by?(Gem::Version.new(Chef::VERSION))
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Author:: Tim Hinderliter (<tim@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/exceptions"
require "chef/mixin/params_validate"
require "chef/node"
require "chef/resource_collection"

class Chef
  # == Chef::Runner
  # This class is responsible for executing the steps in a Chef run.
  class Runner

    attr_reader :run_context

    include Chef::Mixin::ParamsValidate

    def initialize(run_context)
      @run_context = run_context
    end

    def delayed_actions
      @run_context.delayed_actions
    end

    def events
      @run_context.events
    end

    # Determine the appropriate provider for the given resource, then
    # execute it.
    def run_action(resource, action, notification_type = nil, notifying_resource = nil)
      # If there are any before notifications, why-run the resource
      # and notify anyone who needs notifying
      before_notifications = run_context.before_notifications(resource) || []
      unless before_notifications.empty?
        forced_why_run do
          Chef::Log.info("#{resource} running why-run #{action} action to support before action")
          resource.run_action(action, notification_type, notifying_resource)
        end

        if resource.updated_by_last_action?
          before_notifications.each do |notification|
            Chef::Log.info("#{resource} sending #{notification.action} action to #{notification.resource} (before)")
            run_action(notification.resource, notification.action, :before, resource)
          end
          resource.updated_by_last_action(false)
        end
      end

      # Actually run the action for realsies
      resource.run_action(action, notification_type, notifying_resource)

      # Execute any immediate and queue up any delayed notifications
      # associated with the resource, but only if it was updated *this time*
      # we ran an action on it.
      if resource.updated_by_last_action?
        run_context.immediate_notifications(resource).each do |notification|
          Chef::Log.info("#{resource} sending #{notification.action} action to #{notification.resource} (immediate)")
          run_action(notification.resource, notification.action, :immediate, resource)
        end

        run_context.delayed_notifications(resource).each do |notification|
          # send the notification to the run_context of the receiving resource
          notification.resource.run_context.add_delayed_action(notification)
        end
      end
    end

    # Iterates over the +resource_collection+ in the +run_context+ calling
    # +run_action+ for each resource in turn.
    def converge
      # Resolve all lazy/forward references in notifications
      run_context.resource_collection.each do |resource|
        resource.resolve_notification_references
      end

      # Execute each resource.
      run_context.resource_collection.execute_each_resource do |resource|
        Array(resource.action).each { |action| run_action(resource, action) }
      end

    rescue Exception => e
      Chef::Log.info "Running queued delayed notifications before re-raising exception"
      run_delayed_notifications(e)
    else
      run_delayed_notifications(nil)
      true
    end

    private

    # Run all our :delayed actions
    def run_delayed_notifications(error = nil)
      collected_failures = Exceptions::MultipleFailures.new
      collected_failures.client_run_failure(error) unless error.nil?
      delayed_actions.each do |notification|
        result = run_delayed_notification(notification)
        if result.kind_of?(Exception)
          collected_failures.notification_failure(result)
        end
      end
      collected_failures.raise!
    end

    def run_delayed_notification(notification)
      Chef::Log.info( "#{notification.notifying_resource} sending #{notification.action}"\
                      " action to #{notification.resource} (delayed)")
      # Struct of resource/action to call
      run_action(notification.resource, notification.action, :delayed)
      true
    rescue Exception => e
      e
    end

    # helper to run a block of code with why_run forced to true and then restore it correctly
    def forced_why_run
      saved = Chef::Config[:why_run]
      Chef::Config[:why_run] = true
      yield
    ensure
      Chef::Config[:why_run] = saved
    end

  end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb to tempfile /tmp/chef-rest20160913-19215-1f1th7b
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037857a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037858b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "node.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000223df28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000223e0b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "recipe.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/provider'
require 'chef/provider/lwrp_base'

class Chef::Provider
  if !defined?(InlineResources)
    InlineResources = Chef::Provider::LWRPBase::InlineResources
  end
  module InlineResources
    require 'chef/dsl/recipe'
    require 'chef/dsl/platform_introspection'
    require 'chef/dsl/data_query'
    require 'chef/dsl/include_recipe'
    include Chef::DSL::Recipe
    include Chef::DSL::PlatformIntrospection
    include Chef::DSL::DataQuery
    include Chef::DSL::IncludeRecipe

    unless Chef::Provider::InlineResources::ClassMethods.instance_method(:action).source_location[0] =~ /chefspec/
      # Don't override action if chefspec is doing its thing
      module ::ChefCompat
        module Monkeypatches
          module InlineResources
            module ClassMethods
              def action(name, &block)
                super(name) { send("compile_action_#{name}") }
                # We put the action in its own method so that super() works.
                define_method("compile_action_#{name}", &block)
              end
            end
          end
        end
      end
      module ClassMethods
        prepend ChefCompat::Monkeypatches::InlineResources::ClassMethods
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb to tempfile /tmp/chef-rest20160913-19215-18rpf30
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/resource_collection/resource_set"
require "chef/resource_collection/resource_list"
require "chef/resource_collection"
require "chef/exceptions"

module ChefCompat
  module Monkeypatches
    module Chef
      module ResourceCollection
        module RecursiveNotificationLookup
          #
          # Copied verbatim from Chef 12.10.24
          #
          attr_accessor :run_context

          def initialize(run_context = nil)
            super()
            @run_context = run_context
          end

          def lookup_local(key)
            resource_set.lookup(key)
          end

          def find_local(*args)
            resource_set.find(*args)
          end

          def lookup(key)
            if run_context.nil?
              lookup_local(key)
            else
              lookup_recursive(run_context, key)
            end
          end

          def find(*args)
            if run_context.nil?
              find_local(*args)
            else
              find_recursive(run_context, *args)
            end
          end

          private

          def lookup_recursive(rc, key)
            rc.resource_collection.send(:resource_set).lookup(key)
          rescue ::Chef::Exceptions::ResourceNotFound
            raise if !rc.respond_to?(:parent_run_context) || rc.parent_run_context.nil?
            lookup_recursive(rc.parent_run_context, key)
          end

          def find_recursive(rc, *args)
            rc.resource_collection.send(:resource_set).find(*args)
          rescue ::Chef::Exceptions::ResourceNotFound
            raise if !rc.respond_to?(:parent_run_context) || rc.parent_run_context.nil?
            find_recursive(rc.parent_run_context, *args)
          end
        end

        module DeleteResources
          #
          # Copied verbatim from Chef 12.10.24
          #
          def delete(key)
            resource_list.delete(key)
            resource_set.delete(key)
          end
        end
      end
    end
  end
end


class Chef::ResourceCollection
  unless method_defined?(:lookup_local)
    prepend ChefCompat::Monkeypatches::Chef::ResourceCollection::RecursiveNotificationLookup
  end
  unless method_defined?(:delete)
    prepend ChefCompat::Monkeypatches::Chef::ResourceCollection::DeleteResources
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

if Gem::Requirement.new('< 12.14.40').satisfied_by?(Gem::Version.new(Chef::VERSION))
#
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Author:: Tim Hinderliter (<tim@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "chef/resource_collection"
require "chef/cookbook_version"
require "chef/node"
require "chef/role"
require "chef/log"
require "chef/recipe"
require "chef/run_context/cookbook_compiler"
require "chef/event_dispatch/events_output_stream"
require "forwardable"

class Chef

  # == Chef::RunContext
  # Value object that loads and tracks the context of a Chef run
  class RunContext
    #
    # Global state
    #

    #
    # The node for this run
    #
    # @return [Chef::Node]
    #
    attr_reader :node

    #
    # The set of cookbooks involved in this run
    #
    # @return [Chef::CookbookCollection]
    #
    attr_reader :cookbook_collection

    #
    # Resource Definitions for this run. Populated when the files in
    # +definitions/+ are evaluated (this is triggered by #load).
    #
    # @return [Array[Chef::ResourceDefinition]]
    #
    attr_reader :definitions

    #
    # Event dispatcher for this run.
    #
    # @return [Chef::EventDispatch::Dispatcher]
    #
    attr_reader :events

    #
    # Hash of factoids for a reboot request.
    #
    # @return [Hash]
    #
    attr_accessor :reboot_info

    #
    # Scoped state
    #

    #
    # The parent run context.
    #
    # @return [Chef::RunContext] The parent run context, or `nil` if this is the
    #   root context.
    #
    attr_reader :parent_run_context

    #
    # The collection of resources intended to be converged (and able to be
    # notified).
    #
    # @return [Chef::ResourceCollection]
    #
    # @see CookbookCompiler
    #
    attr_reader :resource_collection

    #
    # The list of control groups to execute during the audit phase
    #
    attr_reader :audits

    #
    # Notification handling
    #

    #
    # A Hash containing the before notifications triggered by resources
    # during the converge phase of the chef run.
    #
    # @return [Hash[String, Array[Chef::Resource::Notification]]] A hash from
    #   <notifying resource name> => <list of notifications it sent>
    #
    attr_reader :before_notification_collection

    #
    # A Hash containing the immediate notifications triggered by resources
    # during the converge phase of the chef run.
    #
    # @return [Hash[String, Array[Chef::Resource::Notification]]] A hash from
    #   <notifying resource name> => <list of notifications it sent>
    #
    attr_reader :immediate_notification_collection

    #
    # A Hash containing the delayed (end of run) notifications triggered by
    # resources during the converge phase of the chef run.
    #
    # @return [Hash[String, Array[Chef::Resource::Notification]]] A hash from
    #   <notifying resource name> => <list of notifications it sent>
    #
    attr_reader :delayed_notification_collection

    #
    # An Array containing the delayed (end of run) notifications triggered by
    # resources during the converge phase of the chef run.
    #
    # @return [Array[Chef::Resource::Notification]] An array of notification objects
    #
    attr_reader :delayed_actions

    # Creates a new Chef::RunContext object and populates its fields. This object gets
    # used by the Chef Server to generate a fully compiled recipe list for a node.
    #
    # @param node [Chef::Node] The node to run against.
    # @param cookbook_collection [Chef::CookbookCollection] The cookbooks
    #   involved in this run.
    # @param events [EventDispatch::Dispatcher] The event dispatcher for this
    #   run.
    #
    def initialize(node, cookbook_collection, events)
      @node = node
      @cookbook_collection = cookbook_collection
      @events = events

      node.run_context = self
      node.set_cookbook_attribute

      @definitions = Hash.new
      @loaded_recipes_hash = {}
      @loaded_attributes_hash = {}
      @reboot_info = {}
      @cookbook_compiler = nil
      @delayed_actions = []

      initialize_child_state
    end

    #
    # Triggers the compile phase of the chef run.
    #
    # @param run_list_expansion [Chef::RunList::RunListExpansion] The run list.
    # @see Chef::RunContext::CookbookCompiler
    #
    def load(run_list_expansion)
      @cookbook_compiler = CookbookCompiler.new(self, run_list_expansion, events)
      cookbook_compiler.compile
    end

    #
    # Initialize state that applies to both Chef::RunContext and Chef::ChildRunContext
    #
    def initialize_child_state
      @audits = {}
      @resource_collection = Chef::ResourceCollection.new(self)
      @before_notification_collection = Hash.new { |h, k| h[k] = [] }
      @immediate_notification_collection = Hash.new { |h, k| h[k] = [] }
      @delayed_notification_collection = Hash.new { |h, k| h[k] = [] }
      @delayed_actions = []
    end

    #
    # Adds an before notification to the +before_notification_collection+.
    #
    # @param [Chef::Resource::Notification] The notification to add.
    #
    def notifies_before(notification)
      # Note for the future, notification.notifying_resource may be an instance
      # of Chef::Resource::UnresolvedSubscribes when calling {Resource#subscribes}
      # with a string value.
      before_notification_collection[notification.notifying_resource.declared_key] << notification
    end

    #
    # Adds an immediate notification to the +immediate_notification_collection+.
    #
    # @param [Chef::Resource::Notification] The notification to add.
    #
    def notifies_immediately(notification)
      # Note for the future, notification.notifying_resource may be an instance
      # of Chef::Resource::UnresolvedSubscribes when calling {Resource#subscribes}
      # with a string value.
      immediate_notification_collection[notification.notifying_resource.declared_key] << notification
    end

    #
    # Adds a delayed notification to the +delayed_notification_collection+.
    #
    # @param [Chef::Resource::Notification] The notification to add.
    #
    def notifies_delayed(notification)
      # Note for the future, notification.notifying_resource may be an instance
      # of Chef::Resource::UnresolvedSubscribes when calling {Resource#subscribes}
      # with a string value.
      delayed_notification_collection[notification.notifying_resource.declared_key] << notification
    end

    #
    # Adds a delayed action to the +delayed_actions+.
    #
    def add_delayed_action(notification)
      if delayed_actions.any? { |existing_notification| existing_notification.duplicates?(notification) }
        Chef::Log.info( "#{notification.notifying_resource} not queuing delayed action #{notification.action} on #{notification.resource}"\
                       " (delayed), as it's already been queued")
      else
        delayed_actions << notification
      end
    end

    #
    # Get the list of before notifications sent by the given resource.
    #
    # @return [Array[Notification]]
    #
    def before_notifications(resource)
      return before_notification_collection[resource.declared_key]
    end

    #
    # Get the list of immediate notifications sent by the given resource.
    #
    # @return [Array[Notification]]
    #
    def immediate_notifications(resource)
      return immediate_notification_collection[resource.declared_key]
    end

    #
    # Get the list of delayed (end of run) notifications sent by the given
    # resource.
    #
    # @return [Array[Notification]]
    #
    def delayed_notifications(resource)
      return delayed_notification_collection[resource.declared_key]
    end

    #
    # Cookbook and recipe loading
    #

    #
    # Evaluates the recipes +recipe_names+. Used by DSL::IncludeRecipe
    #
    # @param recipe_names [Array[String]] The list of recipe names (e.g.
    #   'my_cookbook' or 'my_cookbook::my_resource').
    # @param current_cookbook The cookbook we are currently running in.
    #
    # @see DSL::IncludeRecipe#include_recipe
    #
    def include_recipe(*recipe_names, current_cookbook: nil)
      result_recipes = Array.new
      recipe_names.flatten.each do |recipe_name|
        if result = load_recipe(recipe_name, current_cookbook: current_cookbook)
          result_recipes << result
        end
      end
      result_recipes
    end

    #
    # Evaluates the recipe +recipe_name+. Used by DSL::IncludeRecipe
    #
    # TODO I am sort of confused why we have both this and include_recipe ...
    #      I don't see anything different beyond accepting and returning an
    #      array of recipes.
    #
    # @param recipe_names [Array[String]] The recipe name (e.g 'my_cookbook' or
    #   'my_cookbook::my_resource').
    # @param current_cookbook The cookbook we are currently running in.
    #
    # @return A truthy value if the load occurred; `false` if already loaded.
    #
    # @see DSL::IncludeRecipe#load_recipe
    #
    def load_recipe(recipe_name, current_cookbook: nil)
      Chef::Log.debug("Loading recipe #{recipe_name} via include_recipe")

      cookbook_name, recipe_short_name = Chef::Recipe.parse_recipe_name(recipe_name, current_cookbook: current_cookbook)

      if unreachable_cookbook?(cookbook_name) # CHEF-4367
        Chef::Log.warn(<<-ERROR_MESSAGE)
MissingCookbookDependency:
Recipe `#{recipe_name}` is not in the run_list, and cookbook '#{cookbook_name}'
is not a dependency of any cookbook in the run_list.  To load this recipe,
first add a dependency on cookbook '#{cookbook_name}' in the cookbook you're
including it from in that cookbook's metadata.
ERROR_MESSAGE
      end

      if loaded_fully_qualified_recipe?(cookbook_name, recipe_short_name)
        Chef::Log.debug("I am not loading #{recipe_name}, because I have already seen it.")
        false
      else
        loaded_recipe(cookbook_name, recipe_short_name)
        node.loaded_recipe(cookbook_name, recipe_short_name)
        cookbook = cookbook_collection[cookbook_name]
        cookbook.load_recipe(recipe_short_name, self)
      end
    end

    #
    # Load the given recipe from a filename.
    #
    # @param recipe_file [String] The recipe filename.
    #
    # @return [Chef::Recipe] The loaded recipe.
    #
    # @raise [Chef::Exceptions::RecipeNotFound] If the file does not exist.
    #
    def load_recipe_file(recipe_file)
      if !File.exist?(recipe_file)
        raise Chef::Exceptions::RecipeNotFound, "could not find recipe file #{recipe_file}"
      end

      Chef::Log.debug("Loading recipe file #{recipe_file}")
      recipe = Chef::Recipe.new("@recipe_files", recipe_file, self)
      recipe.from_file(recipe_file)
      recipe
    end

    #
    # Look up an attribute filename.
    #
    # @param cookbook_name [String] The cookbook name of the attribute file.
    # @param attr_file_name [String] The attribute file's name (not path).
    #
    # @return [String] The filename.
    #
    # @see DSL::IncludeAttribute#include_attribute
    #
    # @raise [Chef::Exceptions::CookbookNotFound] If the cookbook could not be found.
    # @raise [Chef::Exceptions::AttributeNotFound] If the attribute file could not be found.
    #
    def resolve_attribute(cookbook_name, attr_file_name)
      cookbook = cookbook_collection[cookbook_name]
      raise Chef::Exceptions::CookbookNotFound, "could not find cookbook #{cookbook_name} while loading attribute #{name}" unless cookbook

      attribute_filename = cookbook.attribute_filenames_by_short_filename[attr_file_name]
      raise Chef::Exceptions::AttributeNotFound, "could not find filename for attribute #{attr_file_name} in cookbook #{cookbook_name}" unless attribute_filename

      attribute_filename
    end

    #
    # A list of all recipes that have been loaded.
    #
    # This is stored internally as a Hash, so ordering is predictable.
    #
    # TODO is the above statement true in a 1.9+ ruby world?  Is it relevant?
    #
    # @return [Array[String]] A list of recipes in fully qualified form, e.g.
    #   the recipe "nginx" will be given as "nginx::default".
    #
    # @see #loaded_recipe? To determine if a particular recipe has been loaded.
    #
    def loaded_recipes
      loaded_recipes_hash.keys
    end

    #
    # A list of all attributes files that have been loaded.
    #
    # Stored internally using a Hash, so order is predictable.
    #
    # TODO is the above statement true in a 1.9+ ruby world?  Is it relevant?
    #
    # @return [Array[String]] A list of attribute file names in fully qualified
    #   form, e.g. the "nginx" will be given as "nginx::default".
    #
    def loaded_attributes
      loaded_attributes_hash.keys
    end

    #
    # Find out if a given recipe has been loaded.
    #
    # @param cookbook [String] Cookbook name.
    # @param recipe [String] Recipe name.
    #
    # @return [Boolean] `true` if the recipe has been loaded, `false` otherwise.
    #
    def loaded_fully_qualified_recipe?(cookbook, recipe)
      loaded_recipes_hash.has_key?("#{cookbook}::#{recipe}")
    end

    #
    # Find out if a given recipe has been loaded.
    #
    # @param recipe [String] Recipe name.  "nginx" and "nginx::default" yield
    #   the same results.
    #
    # @return [Boolean] `true` if the recipe has been loaded, `false` otherwise.
    #
    def loaded_recipe?(recipe)
      cookbook, recipe_name = Chef::Recipe.parse_recipe_name(recipe)
      loaded_fully_qualified_recipe?(cookbook, recipe_name)
    end

    #
    # Mark a given recipe as having been loaded.
    #
    # @param cookbook [String] Cookbook name.
    # @param recipe [String] Recipe name.
    #
    def loaded_recipe(cookbook, recipe)
      loaded_recipes_hash["#{cookbook}::#{recipe}"] = true
    end

    #
    # Find out if a given attribute file has been loaded.
    #
    # @param cookbook [String] Cookbook name.
    # @param attribute_file [String] Attribute file name.
    #
    # @return [Boolean] `true` if the recipe has been loaded, `false` otherwise.
    #
    def loaded_fully_qualified_attribute?(cookbook, attribute_file)
      loaded_attributes_hash.has_key?("#{cookbook}::#{attribute_file}")
    end

    #
    # Mark a given attribute file as having been loaded.
    #
    # @param cookbook [String] Cookbook name.
    # @param attribute_file [String] Attribute file name.
    #
    def loaded_attribute(cookbook, attribute_file)
      loaded_attributes_hash["#{cookbook}::#{attribute_file}"] = true
    end

    ##
    # Cookbook File Introspection

    #
    # Find out if the cookbook has the given template.
    #
    # @param cookbook [String] Cookbook name.
    # @param template_name [String] Template name.
    #
    # @return [Boolean] `true` if the template is in the cookbook, `false`
    #   otherwise.
    # @see Chef::CookbookVersion#has_template_for_node?
    #
    def has_template_in_cookbook?(cookbook, template_name)
      cookbook = cookbook_collection[cookbook]
      cookbook.has_template_for_node?(node, template_name)
    end

    #
    # Find out if the cookbook has the given file.
    #
    # @param cookbook [String] Cookbook name.
    # @param cb_file_name [String] File name.
    #
    # @return [Boolean] `true` if the file is in the cookbook, `false`
    #   otherwise.
    # @see Chef::CookbookVersion#has_cookbook_file_for_node?
    #
    def has_cookbook_file_in_cookbook?(cookbook, cb_file_name)
      cookbook = cookbook_collection[cookbook]
      cookbook.has_cookbook_file_for_node?(node, cb_file_name)
    end

    #
    # Find out whether the given cookbook is in the cookbook dependency graph.
    #
    # @param cookbook_name [String] Cookbook name.
    #
    # @return [Boolean] `true` if the cookbook is reachable, `false` otherwise.
    #
    # @see Chef::CookbookCompiler#unreachable_cookbook?
    def unreachable_cookbook?(cookbook_name)
      cookbook_compiler.unreachable_cookbook?(cookbook_name)
    end

    #
    # Open a stream object that can be printed into and will dispatch to events
    #
    # @param name [String] The name of the stream.
    # @param options [Hash] Other options for the stream.
    #
    # @return [EventDispatch::EventsOutputStream] The created stream.
    #
    # @yield If a block is passed, it will be run and the stream will be closed
    #   afterwards.
    # @yieldparam stream [EventDispatch::EventsOutputStream] The created stream.
    #
    def open_stream(name: nil, **options)
      stream = EventDispatch::EventsOutputStream.new(events, name: name, **options)
      if block_given?
        begin
          yield stream
        ensure
          stream.close
        end
      else
        stream
      end
    end

    # there are options for how to handle multiple calls to these functions:
    # 1. first call always wins (never change reboot_info once set).
    # 2. last call always wins (happily change reboot_info whenever).
    # 3. raise an exception on the first conflict.
    # 4. disable reboot after this run if anyone ever calls :cancel.
    # 5. raise an exception on any second call.
    # 6. ?
    def request_reboot(reboot_info)
      Chef::Log.info "Changing reboot status from #{self.reboot_info.inspect} to #{reboot_info.inspect}"
      @reboot_info = reboot_info
    end

    def cancel_reboot
      Chef::Log.info "Changing reboot status from #{reboot_info.inspect} to {}"
      @reboot_info = {}
    end

    def reboot_requested?
      reboot_info.size > 0
    end

    #
    # Create a child RunContext.
    #
    def create_child
      ChildRunContext.new(self)
    end

    # @api private
    attr_writer :resource_collection

    protected

    attr_reader :cookbook_compiler
    attr_reader :loaded_attributes_hash
    attr_reader :loaded_recipes_hash

    module Deprecated
      ###
      # These need to be settable so deploy can run a resource_collection
      # independent of any cookbooks via +recipe_eval+
      def audits=(value)
        Chef.log_deprecation("Setting run_context.audits will be removed in a future Chef.  Use run_context.create_child to create a new RunContext instead.")
        @audits = value
      end

      def immediate_notification_collection=(value)
        Chef.log_deprecation("Setting run_context.immediate_notification_collection will be removed in a future Chef.  Use run_context.create_child to create a new RunContext instead.")
        @immediate_notification_collection = value
      end

      def delayed_notification_collection=(value)
        Chef.log_deprecation("Setting run_context.delayed_notification_collection will be removed in a future Chef.  Use run_context.create_child to create a new RunContext instead.")
        @delayed_notification_collection = value
      end
    end
    prepend Deprecated

    #
    # A child run context.  Delegates all root context calls to its parent.
    #
    # @api private
    #
    class ChildRunContext < RunContext
      extend Forwardable
      def_delegators :parent_run_context, *%w{
        cancel_reboot
        config
        cookbook_collection
        cookbook_compiler
        definitions
        events
        has_cookbook_file_in_cookbook?
        has_template_in_cookbook?
        load
        loaded_attribute
        loaded_attributes
        loaded_attributes_hash
        loaded_fully_qualified_attribute?
        loaded_fully_qualified_recipe?
        loaded_recipe
        loaded_recipe?
        loaded_recipes
        loaded_recipes_hash
        node
        open_stream
        reboot_info
        reboot_info=
        reboot_requested?
        request_reboot
        resolve_attribute
        unreachable_cookbook?
      }

      def initialize(parent_run_context)
        @parent_run_context = parent_run_context

        # We don't call super, because we don't bother initializing stuff we're
        # going to delegate to the parent anyway.  Just initialize things that
        # every instance needs.
        initialize_child_state
      end

      CHILD_STATE = %w{
        audits
        audits=
        create_child
        add_delayed_action
        delayed_actions
        delayed_notification_collection
        delayed_notification_collection=
        delayed_notifications
        immediate_notification_collection
        immediate_notification_collection=
        immediate_notifications
        before_notification_collection
        before_notifications
        include_recipe
        initialize_child_state
        load_recipe
        load_recipe_file
        notifies_before
        notifies_immediately
        notifies_delayed
        parent_run_context
        resource_collection
        resource_collection=
      }.map { |x| x.to_sym }

      # Verify that we didn't miss any methods
      unless @__skip_method_checking # hook specifically for compat_resource
        missing_methods = superclass.instance_methods(false) - instance_methods(false) - CHILD_STATE
        if !missing_methods.empty?
          raise "ERROR: not all methods of RunContext accounted for in ChildRunContext! All methods must be marked as child methods with CHILD_STATE or delegated to the parent_run_context. Missing #{missing_methods.join(", ")}."
        end
      end
    end
  end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb to tempfile /tmp/chef-rest20160913-19215-bp0acd
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb to tempfile /tmp/chef-rest20160913-19215-1b0cqrs
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002395420
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002395538>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "mixin",
   "params_validate.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# 12.9 introduced a new optional parameter to `get()` to avoid a nil-set warning.
# We need to mimick it here.
if Chef::VERSION.to_f >= 12.5 && Chef::VERSION.to_f <= 12.8
  require 'chef/property'
  class Chef
    class Property
      # 12.9 introduced a new optional parameter to `get()` to avoid a nil-set warning.
      # When their method gets called with 2 args, we need to ignore and call with 1.
      alias_method :_original_get, :get
      def get(resource, *args)
        _original_get(resource)
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb to tempfile /tmp/chef-rest20160913-19215-x8v9bx
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001edf9d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001edfc28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource_collection",
   "resource_set.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

if Gem::Requirement.new('< 12.14.40').satisfied_by?(Gem::Version.new(Chef::VERSION))
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/dsl/recipe"
require "chef/mixin/from_file"
require "chef/mixin/deprecation"

class Chef
  # == Chef::Recipe
  # A Recipe object is the context in which Chef recipes are evaluated.
  class Recipe
    attr_accessor :cookbook_name, :recipe_name, :recipe, :params, :run_context

    include Chef::DSL::Recipe

    include Chef::Mixin::FromFile
    include Chef::Mixin::Deprecation

    # Parses a potentially fully-qualified recipe name into its
    # cookbook name and recipe short name.
    #
    # For example:
    #   "aws::elastic_ip" returns [:aws, "elastic_ip"]
    #   "aws" returns [:aws, "default"]
    #   "::elastic_ip" returns [ current_cookbook, "elastic_ip" ]
    #--
    # TODO: Duplicates functionality of RunListItem
    def self.parse_recipe_name(recipe_name, current_cookbook: nil)
      case recipe_name
      when /(.+?)::(.+)/
        [ $1.to_sym, $2 ]
      when /^::(.+)/
        raise "current_cookbook is nil, cannot resolve #{recipe_name}" if current_cookbook.nil?
        [ current_cookbook.to_sym, $1 ]
      else
        [ recipe_name.to_sym, "default" ]
      end
    end

    def initialize(cookbook_name, recipe_name, run_context)
      @cookbook_name = cookbook_name
      @recipe_name = recipe_name
      @run_context = run_context
      # TODO: 5/19/2010 cw/tim: determine whether this can be removed
      @params = Hash.new
    end

    # Used in DSL mixins
    def node
      run_context.node
    end

    # Used by the DSL to look up resources when executing in the context of a
    # recipe.
    def resources(*args)
      run_context.resource_collection.find(*args)
    end

    # This was moved to Chef::Node#tag, redirecting here for compatibility
    def tag(*tags)
      run_context.node.tag(*tags)
    end

    # Returns true if the node is tagged with *all* of the supplied +tags+.
    #
    # === Parameters
    # tags<Array>:: A list of tags
    #
    # === Returns
    # true<TrueClass>:: If all the parameters are present
    # false<FalseClass>:: If any of the parameters are missing
    def tagged?(*tags)
      tags.each do |tag|
        return false unless run_context.node.tags.include?(tag)
      end
      true
    end

    # Removes the list of tags from the node.
    #
    # === Parameters
    # tags<Array>:: A list of tags
    #
    # === Returns
    # tags<Array>:: The current list of run_context.node.tags
    def untag(*tags)
      tags.each do |tag|
        run_context.node.tags.delete(tag)
      end
    end
  end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb to tempfile /tmp/chef-rest20160913-19215-fktefi
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000229a070
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000229a160>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource",
   "lwrp_base.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/resource/lwrp_base'
require 'chef/resource/lwrp_base'

module ChefCompat
  module Monkeypatches
    #
    # NOTE: LOTS OF METAPROGRAMMING HERE. NOT FOR FAINT OF HEART.
    #

    # Add an empty module to Class so we can temporarily override it in build_from_file
    module Class
    end
    class<<::Class
      prepend(ChefCompat::Monkeypatches::Class)
    end

    module Chef
      module Resource
        module LWRPBase
          def build_from_file(cookbook_name, filename, run_context)
            # If the cookbook this LWRP is from depends on compat_resource, fix its LWRPs up real good
            if run_context.cookbook_collection[cookbook_name].metadata.dependencies.has_key?('compat_resource')
              # All cookbooks do Class.new(Chef::Resource::LWRPBase). Change Class.new
              # temporarily to translate Chef::Resource::LWRPBase to ChefCompat::Resource
              ChefCompat::Monkeypatches::Class.module_eval do
                def new(*args, &block)
                  # Trick it! Use ChefCompat::Resource instead of Chef::Resource::LWRPBase
                  if args == [ ::Chef::Resource::LWRPBase ]
                    ChefCompat::Monkeypatches::Class.module_eval do
                      remove_method(:new) if method_defined?(:new)
                    end
                    args = [ ChefCompat::Resource::LWRPBase ]
                  end
                  super(*args, &block)
                end
              end

              begin

                # Call the actual build_from_file
                super

              ensure
                class<<ChefCompat::Monkeypatches::Class
                  remove_method(:new) if method_defined?(:new)
                end
              end
            else
              # Call the actual build_from_file
              super
            end
          end
        end
        class <<::Chef::Resource::LWRPBase
          prepend(LWRPBase)
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb to tempfile /tmp/chef-rest20160913-19215-1cv6lju
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000fc1c78
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000fc25d8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
class Chef
  class Node
    unless method_defined?(:set_cookbook_attribute)
      def set_cookbook_attribute
        # this implementation deliberately left blank - we don't need to do anything we just need to not fail
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb to tempfile /tmp/chef-rest20160913-19215-1fnsilv
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Tyler Ball (<tball@chef.io>)
# Copyright:: Copyright 2014-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/resource_collection/resource_list"
require "chef/exceptions"

module ChefCompat
  module Monkeypatches
    module Chef
      module ResourceCollection
        module ResourceSet
          module DeleteResource
            def delete(key)
              raise ArgumentError, "Must pass a Chef::Resource or String to delete" unless key.is_a?(String) || key.is_a?(Chef::Resource)
              key = key.to_s
              res = @resources_by_key.delete(key)

              if res == @resources_by_key.default
                raise Chef::Exceptions::ResourceNotFound, "Cannot find a resource matching #{key} (did you define it first?)"
              end
              res
            end
          end
        end
      end
    end
  end
end

class Chef::ResourceCollection::ResourceSet
  unless method_defined?(:delete)
    prepend ChefCompat::Monkeypatches::Chef::ResourceCollection::ResourceSet::DeleteResource
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb to tempfile /tmp/chef-rest20160913-19215-fp303b
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000014abd88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000014e1500>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource_collection",
   "resource_list.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
if Chef::VERSION.to_f >= 12.5 && Chef::VERSION.to_f <= 12.8
  require 'chef/mixin/params_validate'
  class Chef
    module Mixin
      module ParamsValidate
        class SetOrReturnProperty < Chef::Property
          # 12.9 introduced a new optional parameter to `get()` to avoid a nil-set warning.
          # When their method gets called with 2 args, we need to ignore and call with 1.
          alias_method :_original_get2, :get
          def get(resource, *args)
            _original_get2(resource)
          end
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb to tempfile /tmp/chef-rest20160913-19215-1ah887z
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000013cfab8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000013d0698>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "exceptions.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000e97c30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000eb0370>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ec3a58
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ec3b70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e968f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e96a08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_upstream_version.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# this is NOT an AUTOGENERATED file

if Gem::Requirement.new('< 12.14.60').satisfied_by?(Gem::Version.new(Chef::VERSION))
require 'chef/resource'

class Chef
  class Resource

    class UnresolvedSubscribes < self
      # The full key ise given as the name in {Resource#subscribes}
      alias_method :to_s, :name
      alias_method :declared_key, :name
    end

    def subscribes(action, resources, timing = :delayed)
      resources = [resources].flatten
      resources.each do |resource|
        if resource.is_a?(String)
          resource = UnresolvedSubscribes.new(resource, run_context)
        end
        if resource.run_context.nil?
          resource.run_context = run_context
        end
        resource.notifies(action, self, timing)
      end
      true
    end

    def notifies(action, resource_spec, timing = :delayed)
      # when using old-style resources(:template => "/foo.txt") style, you
      # could end up with multiple resources.
      validate_resource_spec!(resource_spec)

      resources = [ resource_spec ].flatten
      resources.each do |resource|

        case timing.to_s
        when "delayed"
          notifies_delayed(action, resource)
        when "immediate", "immediately"
          notifies_immediately(action, resource)
        when "before"
          notifies_before(action, resource)
        else
          raise ArgumentError,  "invalid timing: #{timing} for notifies(#{action}, #{resources.inspect}, #{timing}) resource #{self} "\
            "Valid timings are: :delayed, :immediate, :immediately, :before"
        end
      end

      true
    end

    #
    # Iterates over all immediate and delayed notifications, calling
    # resolve_resource_reference on each in turn, causing them to
    # resolve lazy/forward references.
    def resolve_notification_references
      run_context.before_notifications(self).each { |n|
        n.resolve_resource_reference(run_context.resource_collection)
      }
      run_context.immediate_notifications(self).each { |n|
        n.resolve_resource_reference(run_context.resource_collection)
      }
      run_context.delayed_notifications(self).each {|n|
        n.resolve_resource_reference(run_context.resource_collection)
      }
    end

    # Helper for #notifies
    def notifies_before(action, resource_spec)
      run_context.notifies_before(Notification.new(resource_spec, action, self))
    end

    # Helper for #notifies
    def notifies_immediately(action, resource_spec)
      run_context.notifies_immediately(Notification.new(resource_spec, action, self))
    end

    # Helper for #notifies
    def notifies_delayed(action, resource_spec)
      run_context.notifies_delayed(Notification.new(resource_spec, action, self))
    end

    #
    # Get the current actual value of this resource.
    #
    # This does not cache--a new value will be returned each time.
    #
    # @return A new copy of the resource, with values filled in from the actual
    #   current value.
    #
    def current_value
      provider = provider_for_action(Array(action).first)
      if provider.whyrun_mode? && !provider.whyrun_supported?
        raise "Cannot retrieve #{self.class.current_resource} in why-run mode: #{provider} does not support why-run"
      end
      provider.load_current_resource
      provider.current_resource
    end

    # These methods are necessary for new resources to initialize old ones properly
    attr_reader :resource_initializing
    def resource_initializing=(value)
      if value
        @resource_initializing = value
      else
        remove_instance_variable(:@resource_initializing)
      end
    end
  end
end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb to tempfile /tmp/chef-rest20160913-19215-ypqy6p
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fe3550
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fe3618>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "resource.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/README.md
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/exceptions'

class Chef
  class Exceptions
    # Used in Resource::ActionClass#load_current_resource to denote that
    # the resource doesn't actually exist (for example, the file does not exist)
    class CurrentValueDoesNotExist < RuntimeError; end unless defined?(CurrentValueDoesNotExist)
    class CannotValidateStaticallyError < RuntimeError; end unless defined?(CannotValidateStaticallyError)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb to tempfile /tmp/chef-rest20160913-19215-b2ygio
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Tyler Ball (<tball@chef.io>)
# Copyright:: Copyright 2014-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/resource_collection/resource_list"
require "chef/exceptions"

module ChefCompat
  module Monkeypatches
    module Chef
      module ResourceCollection
        module ResourceList
          module DeleteResource
            # Copied verbatim from Chef 12.10.4
            def delete(key)
              raise ArgumentError, "Must pass a Chef::Resource or String to delete" unless key.is_a?(String) || key.is_a?(Chef::Resource)
              key = key.to_s
              ret = @resources.reject! { |r| r.to_s == key }
              if ret.nil?
                raise ::Chef::Exceptions::ResourceNotFound, "Cannot find a resource matching #{key} (did you define it first?)"
              end
              ret
            end
          end
        end
      end
    end
  end
end

class Chef::ResourceCollection::ResourceList
  unless method_defined?(:delete)
    prepend ChefCompat::Monkeypatches::Chef::ResourceCollection::ResourceList::DeleteResource
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb to tempfile /tmp/chef-rest20160913-19215-kavw2p
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
class Chef
  NOT_PASSED = Object.new if !defined?(NOT_PASSED)
  # Earlier versions of Chef didn't have this message
  module ChefCompatDeprecation
    def log_deprecation(message, location=nil)
      if !location
        # Pick the first caller that is *not* part of the Chef or ChefCompat gem,
        # that's the thing the user wrote.
        chef_compat_gem_path = File.expand_path("../../..", __FILE__)
        chef_gem_path = File.expand_path("../..",::Chef::Resource.instance_method(:initialize).source_location[0])
        caller(0..10).each do |c|
          if !c.start_with?(chef_gem_path) && !c.start_with?(chef_compat_gem_path)
            location = c
            break
          end
        end
      end

      begin
        super
        # Bleagh. `super_method` doesn't exist on older rubies and I haven't
        # figured out a way to check for its existence otherwise.
      rescue NoMethodError
        Chef::Log.warn(message)
      end
    end
  end

  class<<self
    prepend ChefCompatDeprecation
  end

end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb to tempfile /tmp/chef-rest20160913-19215-63u6ql
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e26618
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e26758>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "README.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
        module ChefCompat
          CHEF_UPSTREAM_VERSION="12.14.40"
        end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/metadata.json
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb to tempfile /tmp/chef-rest20160913-19215-1e4e6wa
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/monkeypatches'
require 'chef_compat/copied_from_chef/chef/resource'

# We do NOT want action defined if chefspec is engaged
if Chef::Provider::InlineResources::ClassMethods.instance_method(:action).source_location[0] =~ /chefspec/
  ChefCompat::CopiedFromChef::Chef::Provider::InlineResources::ClassMethods.instance_eval do
    remove_method(:action)
  end
end

module ChefCompat
  class Resource < ChefCompat::CopiedFromChef::Chef::Resource
    def initialize(*args, &block)
      super
      # @resource_name is used in earlier Chef versions
      @resource_name = self.class.resource_name
    end
    # Things we'll need to define ourselves:
    # 1. provider
    # 2. resource_name

    def provider(*args, &block)
      super || self.class.action_class
    end
    def provider=(arg)
      provider(arg)
    end

    if !respond_to?(:resource_name)
      def self.resource_name(name=Chef::NOT_PASSED)
        # Setter
        if name != Chef::NOT_PASSED
  #        remove_canonical_dsl

          # Set the resource_name and call provides
          if name
            name = name.to_sym
            # If our class is not already providing this name, provide it.
            # Commented out: use of resource_name and provides will need to be
            # mutually exclusive in this world, generally.
            # if !Chef::ResourceResolver.includes_handler?(name, self)
              provides name#, canonical: true
            # end
            @resource_name = name
          else
            @resource_name = nil
          end
        end
        @resource_name
      end
      def self.resource_name=(name)
        resource_name(name)
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ea27b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ea28a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "compat_resource.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb to tempfile /tmp/chef-rest20160913-19215-1ojqj4h
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/resource.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
module ChefCompat
  module CopiedFromChef
    def self.extend_chef_module(chef_module, target)
      target.instance_eval do
        include chef_module
        @chef_module = chef_module
        def self.method_missing(name, *args, &block)
          @chef_module.send(name, *args, &block)
        end
        def self.const_missing(name)
          @chef_module.const_get(name)
        end
      end
    end

    # This patch to CopiedFromChef's ActionClass is necessary for the include to work
    require 'chef/resource'
    class Chef < ::Chef
      class Resource < ::Chef::Resource
        module ActionClass
          def self.use_inline_resources
          end
          def self.include_resource_dsl(include_resource_dsl)
          end
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb to tempfile /tmp/chef-rest20160913-19215-1m7rzni
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e852f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e853e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003bb6f40
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003bb70f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_upstream_version.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ad8ab0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ad9140>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "metadata.json"]>

[2016-09-13T12:59:46+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"compat_resource","version":"12.14.3","description":"Brings the modern custom resource syntax to earlier Chef 12 releases prior to 12.5","long_description":"# compat_resource cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/compat_resource.svg?branch=master)](https://travis-ci.org/chef-cookbooks/compat_resource) [![Cookbook Version](https://img.shields.io/cookbook/v/compat_resource.svg)](https://supermarket.chef.io/cookbooks/compat_resource)\n\nThis cookbook backports functionality introduced in the latest chef-client releases to any chef-client from 12.1 onwards. This includes [Custom Resource](https://docs.chef.io/custom_resources.html) functionality, notification improvements, as well as new resources added to core chef. It allows for the usage of these new resources in cookbooks without requiring the very latest Chef client release.\n\n## Backported functionality\n\n- [Custom Resources](https://docs.chef.io/custom_resources.html)\n- [apt_repository](https://docs.chef.io/resource_apt_repository.html)\n- [apt_update](https://docs.chef.io/resource_apt_update.html)\n- [yum_repository](https://docs.chef.io/resource_yum_repository.html)\n- [:before notifications](https://docs.chef.io/resources.html#timers)\n\n## Requirements\n\n### Platforms\n\n- All platforms supported by Chef\n\n### Chef\n\n- Chef 12.1+\n\n### Cookbooks\n\n- none\n\n## Usage\n\nTo use this cookbook, put `depends 'compat_resource'` in the metadata.rb of your cookbook. Once this is done, you can use all the new custom resource features to define resources. It Just Works.\n\n## Custom Resources?\n\nCurious about how to use custom resources?\n\n- Docs: <https://docs.chef.io/custom_resources.html>\n- Slides: <https://docs.chef.io/decks/custom_resources.html>\n\n## License & Authors\n\n**Author:** John Keiser ([jkeiser@chef.io](mailto:jkeiser@chef.io))\n\n**Copyright:** 2015-2016, Chef Software, Inc. ``` Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n```\nhttp://www.apache.org/licenses/LICENSE-2.0\n```\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n","maintainer":"John Keiser","maintainer_email":"jkeiser@chef.io","license":"Apache 2.0","platforms":{},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/compat_resource","issues_url":"https://github.com/chef-cookbooks/compat_resource/issues","chef_version":">= 12.1","ohai_version":{}}
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/metadata.json to tempfile /tmp/chef-rest20160913-19215-rx60yu
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
# compat_resource cookbook

[![Build Status](https://travis-ci.org/chef-cookbooks/compat_resource.svg?branch=master)](https://travis-ci.org/chef-cookbooks/compat_resource) [![Cookbook Version](https://img.shields.io/cookbook/v/compat_resource.svg)](https://supermarket.chef.io/cookbooks/compat_resource)

This cookbook backports functionality introduced in the latest chef-client releases to any chef-client from 12.1 onwards. This includes [Custom Resource](https://docs.chef.io/custom_resources.html) functionality, notification improvements, as well as new resources added to core chef. It allows for the usage of these new resources in cookbooks without requiring the very latest Chef client release.

## Backported functionality

- [Custom Resources](https://docs.chef.io/custom_resources.html)
- [apt_repository](https://docs.chef.io/resource_apt_repository.html)
- [apt_update](https://docs.chef.io/resource_apt_update.html)
- [yum_repository](https://docs.chef.io/resource_yum_repository.html)
- [:before notifications](https://docs.chef.io/resources.html#timers)

## Requirements

### Platforms

- All platforms supported by Chef

### Chef

- Chef 12.1+

### Cookbooks

- none

## Usage

To use this cookbook, put `depends 'compat_resource'` in the metadata.rb of your cookbook. Once this is done, you can use all the new custom resource features to define resources. It Just Works.

## Custom Resources?

Curious about how to use custom resources?

- Docs: <https://docs.chef.io/custom_resources.html>
- Slides: <https://docs.chef.io/decks/custom_resources.html>

## License & Authors

**Author:** John Keiser ([jkeiser@chef.io](mailto:jkeiser@chef.io))

**Copyright:** 2015-2016, Chef Software, Inc. ``` Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

```
http://www.apache.org/licenses/LICENSE-2.0
```

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/README.md to tempfile /tmp/chef-rest20160913-19215-11hwjab
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
require "chef/version"

if Gem::Requirement.new(">= 12.0").satisfied_by?(Gem::Version.new(Chef::VERSION))

  require 'chef_compat/resource'
  require 'chef_compat/property'
  require 'chef_compat/mixin/properties'

else

  class Chef
    class Resource
      def self.property(args, &block)
        raise_chef_11_error
      end

      def self.resource_name(args, &block)
        raise_chef_11_error
      end

      def self.action(args, &block)
        raise_chef_11_error
      end

      def self.raise_chef_11_error
        raise "This resource is written with Chef 12.5 custom resources, and requires at least Chef 12.0 used with the compat_resource cookbook, it will not work with Chef 11.x clients, and those users must pin their cookbooks to older versions or upgrade."
      end
    end
  end

end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/README.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Lamont Granquist](https://github.com/lamont-granquist)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
* [Lamont Granquist](https://github.com/lamont-granquist)
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-lav7qp
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb to tempfile /tmp/chef-rest20160913-19215-4sabrc
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/MAINTAINERS.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/metadata.json in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/certificate.rb
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/certificate_binding.rb
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/compat_resource.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/CHANGELOG.md
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-kxs8r1
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/compat_resource/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/pagefile.rb
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/zipfile.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003871448
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/zipfile.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038716f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "zipfile.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern (<dougm@vmware.com>)
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Resource:: zipfile
#
# Copyright:: 2010, VMware, Inc.
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :unzip, :zip
default_action :unzip

attribute :path, kind_of: String, name_attribute: true
attribute :source, kind_of: String
attribute :overwrite, kind_of: [TrueClass, FalseClass], default: false
attribute :checksum, kind_of: String
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/zipfile.rb to tempfile /tmp/chef-rest20160913-19215-ypg2b8
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/windows/resources/zipfile.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/printer_port.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003853a38
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/printer_port.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003853c40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "printer_port.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/shortcut.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037bd830
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/shortcut.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037bd920>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "shortcut.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/feature.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037a5230
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/feature.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037a5320>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "feature.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038b3f28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/pagefile.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038bc088>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "pagefile.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/printer.rb
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows
[2016-09-13T12:59:46+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/resources
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003938930
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/resources/certificate_binding.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003938b60>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "certificate_binding.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook Name:: windows
# Resource:: certificate_binding
#
# Copyright:: 2015, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :create, :delete
default_action :create

attribute :cert_name, kind_of: String, name_attribute: true, required: true
attribute :name_kind, kind_of: Symbol, equal_to: [:hash, :subject], default: :subject
attribute :address, kind_of: String, default: '0.0.0.0'
attribute :port, kind_of: Integer, default: 443
attribute :app_id, kind_of: String, default: '{4dc3e181-e14b-4a21-b022-59fc669b0914}'
attribute :store_name, kind_of: String, default: 'MY', regex: /^(?:MY|CA|ROOT)$/

attr_accessor :exists
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate_binding.rb to tempfile /tmp/chef-rest20160913-19215-1hm2l3r
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug Ireton (<doug.ireton@nordstrom.com>)
# Cookbook Name:: windows
# Resource:: printer_port
#
# Copyright:: 2012, Nordstrom, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# See here for more info:
# http://msdn.microsoft.com/en-us/library/windows/desktop/aa394492(v=vs.85).aspx

require 'resolv'

actions :create, :delete
default_action :create

attribute :ipv4_address, name_attribute: true, kind_of: String, required: true, regex: Resolv::IPv4::Regex
attribute :port_name, kind_of: String
attribute :port_number, kind_of: Fixnum, default: 9100
attribute :port_description, kind_of: String
attribute :snmp_enabled, kind_of: [TrueClass, FalseClass], default: false
attribute :port_protocol, kind_of: Fixnum, default: 1, equal_to: [1, 2]

attr_accessor :exists
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer_port.rb to tempfile /tmp/chef-rest20160913-19215-16ta2zr
[2016-09-13T12:59:46+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:46+01:00] INFO: Storing updated cookbooks/windows/resources/printer_port.rb in the cache.
[2016-09-13T12:59:46+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/font.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037b5a68
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/font.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037b5b30>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "font.rb"]>

[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x000000039d1f40
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039d20f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "CHANGELOG.md"]>

[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/certificate_binding.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Resource:: feature
#
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include Windows::Helper

actions :install, :remove, :delete
default_action :install

attribute :feature_name, kind_of: String, name_attribute: true
attribute :source, kind_of: String
attribute :all, kind_of: [TrueClass, FalseClass], default: false

def initialize(name, run_context = nil)
  super
  @provider = lookup_provider_constant(locate_default_provider)
end

private

def locate_default_provider
  if node['windows'].attribute?(:feature_provider)
    "windows_feature_#{node['windows']['feature_provider']}"
  elsif ::File.exist?(locate_sysnative_cmd('dism.exe'))
    :windows_feature_dism
  elsif ::File.exist?(locate_sysnative_cmd('servermanagercmd.exe'))
    :windows_feature_servermanagercmd
  else
    :windows_feature_powershell
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003832180
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/printer.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003832310>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "printer.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature.rb to tempfile /tmp/chef-rest20160913-19215-ohmgve
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:46+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/path.rb
[2016-09-13T12:59:46+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003939c40
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/certificate.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003939d08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "certificate.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook Name:: windows
# Resource:: certificate
#
# Copyright:: 2015, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :create, :delete, :acl_add
default_action :create

attribute :source, kind_of: String, name_attribute: true, required: true
attribute :pfx_password, kind_of: String
attribute :private_key_acl, kind_of: Array
attribute :store_name, kind_of: String, default: 'MY', regex: /^(?:MY|CA|ROOT|TrustedPublisher)$/
attribute :user_store, kind_of: [TrueClass, FalseClass], default: false
--- END RESPONSE ---
[2016-09-13T12:59:46+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern <dougm@vmware.com>
# Cookbook Name:: windows
# Resource:: shortcut
#
# Copyright:: 2010, VMware, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :create

default_action :create
default_action :create

attribute :name, kind_of: String
attribute :target, kind_of: String
attribute :arguments, kind_of: String
attribute :description, kind_of: String
attribute :cwd, kind_of: String
attribute :iconlocation, kind_of: String
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate.rb to tempfile /tmp/chef-rest20160913-19215-ocjuhy
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/shortcut.rb to tempfile /tmp/chef-rest20160913-19215-lalb6o
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/shortcut.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
# compat_resource Cookbook CHANGELOG
This file is used to list changes made in each version of the compat_resource cookbook.

## 12.14.2 (2016-09-09)

- Improve documentation
- keep ChefCompat::Resource defined even if we don't load

## 12.14.1 (2016-09-07)

- add yum_repository resource from Chef 12.14
- Update the minimum chef version in the metadata to 12.1
- Added maintainers files
- suppress constant redef warnings when running chefspec

--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-1jo3g82
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/compat_resource/CHANGELOG.md in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug Ireton (<doug.ireton@nordstrom.com>)
# Cookbook Name:: windows
# Resource:: printer
#
# Copyright:: 2012, Nordstrom, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# See here for more info:
# http://msdn.microsoft.com/en-us/library/windows/desktop/aa394492(v=vs.85).aspx

require 'resolv'

actions :create, :delete
default_action :create

attribute :device_id, kind_of: String, name_attribute: true, required: true
attribute :comment, kind_of: String
attribute :default, kind_of: [TrueClass, FalseClass], default: false
attribute :driver_name, kind_of: String, required: true
attribute :location, kind_of: String
attribute :shared, kind_of: [TrueClass, FalseClass], default: false
attribute :share_name, kind_of: String
attribute :ipv4_address, kind_of: String, regex: Resolv::IPv4::Regex

attr_accessor :exists
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer.rb to tempfile /tmp/chef-rest20160913-19215-1my8mir
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/certificate.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/printer.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Kevin Moser (<kevin.moser@nordstrom.com>)
# Cookbook Name:: windows
# Resource:: pagefile
#
# Copyright:: 2012, Nordstrom, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :set, :delete
default_action :set

attribute :name, kind_of: String, name_attribute: true
attribute :system_managed, kind_of: [TrueClass, FalseClass]
attribute :automatic_managed, kind_of: [TrueClass, FalseClass], default: false
attribute :initial_size, kind_of: Integer
attribute :maximum_size, kind_of: Integer
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/pagefile.rb to tempfile /tmp/chef-rest20160913-19215-1qoo6pd
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x000000035f4dc8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/path.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000035f4e90>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "path.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/feature.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/http_acl.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000237b9f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/http_acl.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000237bb38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "http_acl.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/pagefile.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/font.rb
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/certificate.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f5d0b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/certificate.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f5d1c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "certificate.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/auto_run.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f1c830
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/auto_run.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f1ca38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "auto_run.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Sander Botman <sbotman@schubergphilis.com>
# Cookbook Name:: windows
# Resource:: font
#
# Copyright:: 2014, Schuberg Philis BV.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :install
default_action :install

attribute :file, kind_of: String, name_attribute: true
attribute :source, kind_of: String, required: false
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/font.rb to tempfile /tmp/chef-rest20160913-19215-de09fz
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/font.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook Name:: windows
# Resource:: http_acl
#
# Copyright:: 2015, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :create, :delete
default_action :create

attribute :url, kind_of: String, name_attribute: true, required: true
attribute :user, kind_of: String

attr_accessor :exists
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/http_acl.rb to tempfile /tmp/chef-rest20160913-19215-1no8hgm
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook Name:: windows
# Resource:: path
#
# Copyright:: 2011, Business Intelligence Associates, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :add, :remove
default_action :add

attribute :path, kind_of: String, name_attribute: true
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/path.rb to tempfile /tmp/chef-rest20160913-19215-1s9yuij
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/certificate_binding.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001571cb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/providers/certificate_binding.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001572230>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "certificate_binding.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/path.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/task.rb
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/pagefile.rb
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/printer_port.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f9ed08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/font.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f9ef10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "font.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/zipfile.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f36dc0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/task.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f36ff0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "task.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e9f010
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/pagefile.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e9f560>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "pagefile.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Kevin Moser (<kevin.moser@nordstrom.com>)
# Cookbook Name:: windows
# Provider:: pagefile
#
# Copyright:: 2012, Nordstrom, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

include Chef::Mixin::ShellOut
include Windows::Helper

action :set do
  pagefile = @new_resource.name
  initial_size = @new_resource.initial_size
  maximum_size = @new_resource.maximum_size
  system_managed = @new_resource.system_managed
  automatic_managed = @new_resource.automatic_managed
  updated = false

  if automatic_managed
    unless automatic_managed?
      set_automatic_managed
      updated = true
    end
  else
    if automatic_managed?
      unset_automatic_managed
      updated = true
    end

    # Check that the resource is not just trying to unset automatic managed, if it is do nothing more
    if (initial_size && maximum_size) || system_managed
      create(pagefile) unless exists?(pagefile)

      if system_managed
        unless max_and_min_set?(pagefile, 0, 0)
          set_system_managed(pagefile)
          updated = true
        end
      else
        unless max_and_min_set?(pagefile, initial_size, maximum_size)
          set_custom_size(pagefile, initial_size, maximum_size)
          updated = true
        end
      end
    end
  end

  new_resource.updated_by_last_action(updated)
end

action :delete do
  pagefile = @new_resource.name
  updated = false

  if exists?(pagefile)
    delete(pagefile)
    updated = true
  end

  new_resource.updated_by_last_action(updated)
end

private

def exists?(pagefile)
  @exists ||= begin
    cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" list /format:list", returns: [0])
    cmd.stderr.empty? && (cmd.stdout =~ /SettingID=#{get_setting_id(pagefile)}/i)
  end
end

def max_and_min_set?(pagefile, min, max)
  @max_and_min_set ||= begin
    cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" list /format:list", returns: [0])
    cmd.stderr.empty? && (cmd.stdout =~ /InitialSize=#{min}/i) && (cmd.stdout =~ /MaximumSize=#{max}/i)
  end
end

def create(pagefile)
  Chef::Log.debug("Creating pagefile #{pagefile}")
  cmd = shell_out("#{wmic} pagefileset create name=\"#{win_friendly_path(pagefile)}\"")
  check_for_errors(cmd.stderr)
end

def delete(pagefile)
  Chef::Log.debug("Removing pagefile #{pagefile}")
  cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" delete")
  check_for_errors(cmd.stderr)
end

def automatic_managed?
  @automatic_managed ||= begin
    cmd = shell_out("#{wmic} computersystem where name=\"%computername%\" get AutomaticManagedPagefile /format:list")
    cmd.stderr.empty? && (cmd.stdout =~ /AutomaticManagedPagefile=TRUE/i)
  end
end

def set_automatic_managed
  Chef::Log.debug('Setting pagefile to Automatic Managed')
  cmd = shell_out("#{wmic} computersystem where name=\"%computername%\" set AutomaticManagedPagefile=True")
  check_for_errors(cmd.stderr)
end

def unset_automatic_managed
  Chef::Log.debug('Setting pagefile to User Managed')
  cmd = shell_out("#{wmic} computersystem where name=\"%computername%\" set AutomaticManagedPagefile=False")
  check_for_errors(cmd.stderr)
end

def set_custom_size(pagefile, min, max)
  Chef::Log.debug("Setting #{pagefile} to InitialSize=#{min} & MaximumSize=#{max}")
  cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" set InitialSize=#{min},MaximumSize=#{max}", returns: [0])
  check_for_errors(cmd.stderr)
end

def set_system_managed(pagefile)
  Chef::Log.debug("Setting #{pagefile} to System Managed")
  cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" set InitialSize=0,MaximumSize=0", returns: [0])
  check_for_errors(cmd.stderr)
end

def get_setting_id(pagefile)
  pagefile = win_friendly_path(pagefile)
  pagefile = pagefile.split('\\')
  "#{pagefile[1]} @ #{pagefile[0]}"
end

def check_for_errors(stderr)
  Chef::Log.fatal(stderr) unless stderr.empty?
end

def wmic
  @wmic ||= begin
    locate_sysnative_cmd('wmic.exe')
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/pagefile.rb to tempfile /tmp/chef-rest20160913-19215-1i4hs0i
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/pagefile.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/providers
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/feature_servermanagercmd.rb
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/http_acl.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Sander Botman <sbotman@schubergphilis.com>
# Cookbook Name:: windows
# Provider:: font
#
# Copyright:: 2014, Schuberg Philis BV.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

include Windows::Helper

def load_current_resource
  require 'win32ole'
  fonts_dir = WIN32OLE.new('WScript.Shell').SpecialFolders('Fonts')
  @current_resource = Chef::Resource::WindowsFont.new(@new_resource.name)
  @current_resource.file(win_friendly_path(::File.join(fonts_dir, @new_resource.file)))
  @current_resource
end

# Check to see if the font is installed
#
# === Returns
# <true>:: If the font is installed
# <false>:: If the font is not instaled
def font_exists?
  ::File.exist?(@current_resource.file)
end

def get_cookbook_font
  font_file = @new_resource.file
  if @new_resource.source
    remote_file font_file do
      action  :nothing
      source  "file://#{new_resource.source}"
      path    win_friendly_path(::File.join(ENV['TEMP'], font_file))
    end.run_action(:create)
  else
    cookbook_file font_file do
      action    :nothing
      cookbook  cookbook_name.to_s unless cookbook_name.nil?
      path      win_friendly_path(::File.join(ENV['TEMP'], font_file))
    end.run_action(:create)
  end
end

def del_cookbook_font
  file ::File.join(ENV['TEMP'], @new_resource.file) do
    action :delete
  end
end

def install_font
  require 'win32ole'
  fonts_dir = WIN32OLE.new('WScript.Shell').SpecialFolders('Fonts')
  folder = WIN32OLE.new('Shell.Application').Namespace(fonts_dir)
  folder.CopyHere(win_friendly_path(::File.join(ENV['TEMP'], @new_resource.file)))
  Chef::Log.debug("Installing font: #{@new_resource.file}")
end

action :install do
  if font_exists?
    Chef::Log.debug("Not installing font: #{@new_resource.file}, font already installed.")
    new_resource.updated_by_last_action(false)
  else
    get_cookbook_font
    install_font
    del_cookbook_font
    new_resource.updated_by_last_action(true)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook Name:: windows
# Provider:: certificate
#
# Copyright:: 2015, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

# See this for info on certutil
# https://technet.microsoft.com/en-gb/library/cc732443.aspx

include Windows::Helper

# Support whyrun
def whyrun_supported?
  true
end

action :create do
  hash = '$cert.GetCertHashString()'
  code_script = cert_script(true) <<
                within_store_script { |store| store + '.Add($cert)' } <<
                acl_script(hash)

  guard_script = cert_script(false) <<
                 cert_exists_script(hash)

  powershell_script @new_resource.name do
    guard_interpreter :powershell_script
    convert_boolean_return true
    code code_script
    not_if guard_script
  end
end

# acl_add is a modify-if-exists operation : not idempotent
action :acl_add do
  if ::File.exist?(@new_resource.source)
    hash = '$cert.GetCertHashString()'
    code_script = cert_script(false)
    guard_script = cert_script(false)
  else
    # make sure we have no spaces in the hash string
    hash = "\"#{@new_resource.source.gsub(/\s/, '')}\""
    code_script = ''
    guard_script = ''
  end
  code_script << acl_script(hash)
  guard_script << cert_exists_script(hash)

  powershell_script @new_resource.name do
    guard_interpreter :powershell_script
    convert_boolean_return true
    code code_script
    only_if guard_script
  end
end

action :delete do
  # do we have a hash or a subject?
  # TODO: It's a bit annoying to know the thumbprint of a cert you want to remove when you already
  # have the file.  Support reading the hash directly from the file if provided.
  search = if @new_resource.source =~ /^[a-fA-F0-9]{40}$/
             "Thumbprint -eq '#{@new_resource.source}'"
           else
             "Subject -like '*#{@new_resource.source.sub(/\*/, '`*')}*'" # escape any * in the source
           end
  cert_command = "Get-ChildItem Cert:\\#{@location}\\#{@new_resource.store_name} | where { $_.#{search} }"

  code_script = within_store_script do |store|
    <<-EOH
foreach ($c in #{cert_command})
{
  #{store}.Remove($c)
}
EOH
  end
  guard_script = "@(#{cert_command}).Count -gt 0\n"

  powershell_script @new_resource.name do
    guard_interpreter :powershell_script
    convert_boolean_return true
    code code_script
    only_if guard_script
  end
end

def load_current_resource
  # Currently we don't read out the cert acl here and converge it in a very Chef-y way.
  # We also don't read if the private key is available or populate "exists".  This means
  # that if you converged a cert without persisting the private key once, we won't do it
  # again, even if you have a cert with the keys now.
  # TODO:  Make this more Chef-y and follow a more state-based patten of convergence.
  @current_resource = Chef::Resource::WindowsCertificate.new(@new_resource.name)
  # TODO: Change to allow source to be read from the cookbook.  It makes testing
  # and loading certs from the cookbook much easier.
  @current_resource.source(@new_resource.source)
  @current_resource.pfx_password(@new_resource.pfx_password)
  @current_resource.private_key_acl(@new_resource.private_key_acl)
  @current_resource.store_name(@new_resource.store_name)
  @current_resource.user_store(@new_resource.user_store)
  @location = @current_resource.user_store ? 'CurrentUser' : 'LocalMachine'
end

private

def cert_script(persist)
  cert_script = '$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2'
  file = win_friendly_path(@new_resource.source)
  cert_script << " \"#{file}\""
  if ::File.extname(file.downcase) == '.pfx'
    cert_script << ", \"#{@new_resource.pfx_password}\""
    if persist && @new_resource.user_store
      cert_script << ', [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::PersistKeySet'
    elsif persist
      cert_script << ', ([System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::PersistKeySet -bor [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::MachineKeyset)'
    end
  end
  cert_script << "\n"
end

def cert_exists_script(hash)
  <<-EOH
$hash = #{hash}
Test-Path "Cert:\\#{@location}\\#{@new_resource.store_name}\\$hash"
EOH
end

def within_store_script
  inner_script = yield '$store'
  <<-EOH
$store = New-Object System.Security.Cryptography.X509Certificates.X509Store "#{@new_resource.store_name}", ([System.Security.Cryptography.X509Certificates.StoreLocation]::#{@location})
$store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]::ReadWrite)
#{inner_script}
$store.Close()
EOH
end

def acl_script(hash)
  return '' if @new_resource.private_key_acl.nil? || @new_resource.private_key_acl.empty?
  # this PS came from http://blogs.technet.com/b/operationsguy/archive/2010/11/29/provide-access-to-private-keys-commandline-vs-powershell.aspx
  # and from https://msdn.microsoft.com/en-us/library/windows/desktop/bb204778(v=vs.85).aspx
  set_acl_script = <<-EOH
$hash = #{hash}
$storeCert = Get-ChildItem "cert:\\#{@location}\\#{@new_resource.store_name}\\$hash"
if ($storeCert -eq $null) { throw 'no key exists.' }
$keyname = $storeCert.PrivateKey.CspKeyContainerInfo.UniqueKeyContainerName
if ($keyname -eq $null) { throw 'no private key exists.' }
if ($storeCert.PrivateKey.CspKeyContainerInfo.MachineKeyStore)
{
$fullpath = "$Env:ProgramData\\Microsoft\\Crypto\\RSA\\MachineKeys\\$keyname"
}
else
{
$currentUser = New-Object System.Security.Principal.NTAccount($Env:UserDomain, $Env:UserName)
$userSID = $currentUser.Translate([System.Security.Principal.SecurityIdentifier]).Value
$fullpath = "$Env:ProgramData\\Microsoft\\Crypto\\RSA\\$userSID\\$keyname"
}
EOH
  @new_resource.private_key_acl.each do |name|
    set_acl_script << "$uname='#{name}'; icacls $fullpath /grant $uname`:RX\n"
  end
  set_acl_script
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/certificate.rb to tempfile /tmp/chef-rest20160913-19215-auoqpj
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/font.rb to tempfile /tmp/chef-rest20160913-19215-lt5md6
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/certificate.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook Name:: windows
# Resource:: auto_run
#
# Copyright:: 2011, Business Intelligence Associates, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

actions :create, :remove
default_action :create

attribute :program, kind_of: String
attribute :name, kind_of: String, name_attribute: true
attribute :args, kind_of: String, default: ''
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001472920
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/zipfile.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001472cb8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "zipfile.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Mooring (<paul@chef.io>)
# Cookbook Name:: windows
# Resource:: task
#
# Copyright:: 2012-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Passwords can't be loaded for existing tasks, making :modify both confusing
# and not very useful
actions :create, :delete, :run, :end, :change, :enable, :disable
default_action :create

attribute :task_name, kind_of: String, name_attribute: true, regex: [/\A[^\/\:\*\?\<\>\|]+\z/]
attribute :command, kind_of: String
attribute :cwd, kind_of: String
attribute :user, kind_of: String, default: 'SYSTEM'
attribute :password, kind_of: String, default: nil
attribute :run_level, equal_to: [:highest, :limited], default: :limited
attribute :force, kind_of: [TrueClass, FalseClass], default: false
attribute :interactive_enabled, kind_of: [TrueClass, FalseClass], default: false
attribute :frequency_modifier, kind_of: [Integer, String], default: 1
attribute :frequency, equal_to: [:minute,
                                 :hourly,
                                 :daily,
                                 :weekly,
                                 :monthly,
                                 :once,
                                 :on_logon,
                                 :onstart,
                                 :on_idle], default: :hourly
attribute :start_day, kind_of: String, default: nil
attribute :start_time, kind_of: String, default: nil
attribute :day, kind_of: [String, Integer], default: nil
attribute :months, kind_of: String, default: nil
attribute :idle_time, kind_of: Integer, default: nil

attr_accessor :exists, :status, :enabled
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/task.rb to tempfile /tmp/chef-rest20160913-19215-1kvrv8e
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/printer.rb
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/auto_run.rb to tempfile /tmp/chef-rest20160913-19215-1k228d1
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/task.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003fb8288
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/printer.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003fb8418>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "printer.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000d28bd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/printer_port.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000d29268>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "printer_port.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook Name:: windows
# Provider:: certificate_binding
#
# Copyright:: 2015, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

# See https://msdn.microsoft.com/en-us/library/windows/desktop/cc307236%28v=vs.85%29.aspx for netsh info

include Chef::Mixin::ShellOut
include Chef::Mixin::PowershellOut
include Windows::Helper

# Support whyrun
def whyrun_supported?
  true
end

action :create do
  hash = @new_resource.name_kind == :subject ? getHashFromSubject : @new_resource.cert_name

  if @current_resource.exists
    needsChange = (hash.casecmp(@current_hash) != 0)

    if needsChange
      converge_by("Changing #{@current_resource.address}:#{@current_resource.port}") do
        deleteBinding
        setBinding hash
      end
    else
      Chef::Log.debug("#{@current_resource.address}:#{@current_resource.port} already bound to #{hash} - nothing to do")
    end
  else
    converge_by("Binding #{@current_resource.address}:#{@current_resource.port}") do
      setBinding hash
    end
  end
end

action :delete do
  if @current_resource.exists
    converge_by("Deleting #{@current_resource.address}:#{@current_resource.port}") do
      deleteBinding
    end
  else
    Chef::Log.debug("#{@current_resource.address}:#{@current_resource.port} not bound - nothing to do")
  end
end

def load_current_resource
  @current_resource = Chef::Resource::WindowsCertificateBinding.new(@new_resource.name)
  @current_resource.cert_name(@new_resource.cert_name)
  @current_resource.name_kind(@new_resource.name_kind)
  @current_resource.address(@new_resource.address)
  @current_resource.port(@new_resource.port)
  @current_resource.store_name(@new_resource.store_name)
  @current_resource.app_id(@new_resource.app_id)

  @command = locate_sysnative_cmd('netsh.exe')
  getCurrentHash
end

private

def getCurrentHash
  cmd = shell_out("#{@command} http show sslcert ipport=#{@current_resource.address}:#{@current_resource.port}")
  Chef::Log.debug "netsh reports: #{cmd.stdout}"

  if cmd.exitstatus == 0
    m = cmd.stdout.scan(/Certificate Hash\s+:\s?([A-Fa-f0-9]{40})/)
    if m.empty?
      raise "Failed to extract hash from command output #{cmd.stdout}"
    else
      @current_hash = m[0][0]
      @current_resource.exists = true
    end
  else
    @current_resource.exists = false
  end
end

def setBinding(hash)
  cmd = "#{@command} http add sslcert"
  cmd << " ipport=#{@current_resource.address}:#{@current_resource.port}"
  cmd << " certhash=#{hash}"
  cmd << " appid=#{@current_resource.app_id}"
  cmd << " certstorename=#{@current_resource.store_name}"
  checkHash hash

  shell_out!(cmd)
end

def deleteBinding
  shell_out!("#{@command} http delete sslcert ipport=#{@current_resource.address}:#{@current_resource.port}")
end

def checkHash(hash)
  p = powershell_out!("Test-Path \"cert:\\LocalMachine\\#{@current_resource.store_name}\\#{hash}\"")

  unless p.stderr.empty? && p.stdout =~ /True/i
    raise "A Cert with hash of #{hash} doesn't exist in keystore LocalMachine\\#{@current_resource.store_name}"
  end
  nil
end

def getHashFromSubject
  # escape wildcard subject name (*.acme.com)
  subject = @current_resource.cert_name.sub(/\*/, '`*')
  ps_script = "& { gci cert:\\localmachine\\#{@current_resource.store_name} | where { $_.subject -like '*#{subject}*' } | select -first 1 -expandproperty Thumbprint }"

  Chef::Log.debug "Running PS script #{ps_script}"
  p = powershell_out!(ps_script)

  if !p.stderr.nil? && !p.stderr.empty?
    raise "#{ps_script} failed with #{p.stderr}"
  elsif p.stdout.nil? || p.stdout.empty?
    raise "Couldn't find thumbprint for subject #{@current_resource.cert_name}"
  end

  # seem to get a UTF-8 string with BOM returned sometimes! Strip any such BOM
  hash = p.stdout.strip
  hash[0].ord == 239 ? hash.force_encoding('UTF-8').delete!("\xEF\xBB\xBF".force_encoding('UTF-8')) : hash
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/certificate_binding.rb to tempfile /tmp/chef-rest20160913-19215-zmh1b9
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ed3430
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/providers/feature_servermanagercmd.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ed3660>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "feature_servermanagercmd.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/font.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/certificate_binding.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern (<dougm@vmware.com>)
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Provider:: zipfile
#
# Copyright:: 2010, VMware, Inc.
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

include Windows::Helper

require 'find'

action :unzip do
  ensure_rubyzip_gem_installed
  Chef::Log.debug("unzip #{@new_resource.source} => #{@new_resource.path} (overwrite=#{@new_resource.overwrite})")

  Zip::File.open(cached_file(@new_resource.source, @new_resource.checksum)) do |zip|
    zip.each do |entry|
      path = ::File.join(@new_resource.path, entry.name)
      FileUtils.mkdir_p(::File.dirname(path))
      if @new_resource.overwrite && ::File.exist?(path) && !::File.directory?(path)
        FileUtils.rm(path)
      end
      zip.extract(entry, path)
    end
  end
  new_resource.updated_by_last_action(true)
end

action :zip do
  ensure_rubyzip_gem_installed
  # sanitize paths for windows.
  @new_resource.source.downcase.gsub!(::File::SEPARATOR, ::File::ALT_SEPARATOR)
  @new_resource.path.downcase.gsub!(::File::SEPARATOR, ::File::ALT_SEPARATOR)
  Chef::Log.debug("zip #{@new_resource.source} => #{@new_resource.path} (overwrite=#{@new_resource.overwrite})")

  if @new_resource.overwrite == false && ::File.exist?(@new_resource.path)
    Chef::Log.info("file #{@new_resource.path} already exists and overwrite is set to false, exiting")
  else
    # delete the archive if it already exists, because we are recreating it.
    ::File.unlink(@new_resource.path) if ::File.exist?(@new_resource.path)
    # only supporting compression of a single directory (recursively).
    if ::File.directory?(@new_resource.source)
      z = Zip::File.new(@new_resource.path, true)
      unless @new_resource.source =~ /::File::ALT_SEPARATOR$/
        @new_resource.source << ::File::ALT_SEPARATOR
      end
      Find.find(@new_resource.source) do |f|
        f.downcase.gsub!(::File::SEPARATOR, ::File::ALT_SEPARATOR)
        # don't add root directory to the zipfile.
        next if f == @new_resource.source
        # strip the root directory from the filename before adding it to the zipfile.
        zip_fname = f.sub(@new_resource.source, '')
        Chef::Log.debug("adding #{zip_fname} to archive, sourcefile is: #{f}")
        z.add(zip_fname, f)
      end
      z.close
      new_resource.updated_by_last_action(true)
    else
      Chef::Log.info("Single directory must be specified for compression, and #{@new_resource.source} does not meet that criteria.")
    end
  end
end

private

def ensure_rubyzip_gem_installed
  require 'zip'
rescue LoadError
  Chef::Log.info("Missing gem 'rubyzip'...installing now.")
  chef_gem 'rubyzip' do
    version node['windows']['rubyzipversion']
    action :install
  end
  require 'zip'
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/zipfile.rb to tempfile /tmp/chef-rest20160913-19215-5vtp1x
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/zipfile.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/resources/auto_run.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/path.rb
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/feature_powershell.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e97c78
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/providers/feature_powershell.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e97d40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "feature_powershell.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug Ireton (<doug.ireton@nordstrom.com>)
# Cookbook Name:: windows
# Provider:: printer_port
#
# Copyright:: 2012, Nordstrom, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

# Support whyrun
def whyrun_supported?
  true
end

action :create do
  if @current_resource.exists
    Chef::Log.info "#{@new_resource} already exists - nothing to do."
  else
    converge_by("Create #{@new_resource}") do
      create_printer_port
    end
  end
end

action :delete do
  if @current_resource.exists
    converge_by("Delete #{@new_resource}") do
      delete_printer_port
    end
  else
    Chef::Log.info "#{@current_resource} doesn't exist - can't delete."
  end
end

def load_current_resource
  @current_resource = Chef::Resource::WindowsPrinterPort.new(@new_resource.name)
  @current_resource.name(@new_resource.name)
  @current_resource.ipv4_address(@new_resource.ipv4_address)
  @current_resource.port_name(@new_resource.port_name || "IP_#{@new_resource.ipv4_address}")

  if port_exists?(@current_resource.port_name)
    # TODO: Set @current_resource port properties from registry
    @current_resource.exists = true
  end
end

private

PORTS_REG_KEY = 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Print\Monitors\Standard TCP/IP Port\Ports\\'.freeze unless defined?(PORTS_REG_KEY)

def port_exists?(name)
  port_reg_key = PORTS_REG_KEY + name

  Chef::Log.debug "Checking to see if this reg key exists: '#{port_reg_key}'"
  Registry.key_exists?(port_reg_key)
end

def create_printer_port
  port_name = new_resource.port_name || "IP_#{new_resource.ipv4_address}"

  # create the printer port using PowerShell
  powershell_script "Creating printer port #{new_resource.port_name}" do
    code <<-EOH

      Set-WmiInstance -class Win32_TCPIPPrinterPort `
        -EnableAllPrivileges `
        -Argument @{ HostAddress = "#{new_resource.ipv4_address}";
                     Name        = "#{port_name}";
                     Description = "#{new_resource.port_description}";
                     PortNumber  = "#{new_resource.port_number}";
                     Protocol    = "#{new_resource.port_protocol}";
                     SNMPEnabled = "$#{new_resource.snmp_enabled}";
                  }
    EOH
  end
end

def delete_printer_port
  port_name = new_resource.port_name || "IP_#{new_resource.ipv4_address}"

  powershell_script "Deleting printer port: #{new_resource.port_name}" do
    code <<-EOH
      $port = Get-WMIObject -class Win32_TCPIPPrinterPort -EnableAllPrivileges -Filter "name = '#{port_name}'"
      $port.Delete()
    EOH
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/printer_port.rb to tempfile /tmp/chef-rest20160913-19215-19la6gg
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/printer_port.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/shortcut.rb
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/http_acl.rb
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/feature_dism.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c6fae0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/feature_dism.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c6fba8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "feature_dism.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003e25150
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/path.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003e25240>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "path.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Provider:: feature_servermanagercmd
#
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

include Chef::Provider::WindowsFeature::Base
include Chef::Mixin::ShellOut
include Windows::Helper

# Exit codes are listed at http://technet.microsoft.com/en-us/library/cc749128(v=ws.10).aspx

def check_reboot(result, feature)
  if result.exitstatus == 3010 # successful, but needs reboot
    node.run_state[:reboot_requested] = true
    Chef::Log.warn("Require reboot to install #{feature}")
  elsif result.exitstatus == 1001 # failure, but needs reboot before we can do anything else
    node.run_state[:reboot_requested] = true
    Chef::Log.warn("Failed installing #{feature} and need to reboot")
  end
  result.error! # throw for any other bad results. The above results will also get raised, and should cause a reboot via the handler.
end

def install_feature(_name)
  check_reboot(shell_out("#{servermanagercmd} -install #{@new_resource.feature_name}", returns: [0, 42, 127, 1003, 3010]), @new_resource.feature_name)
end

def remove_feature(_name)
  check_reboot(shell_out("#{servermanagercmd} -remove #{@new_resource.feature_name}", returns: [0, 42, 127, 1003, 3010]), @new_resource.feature_name)
end

def installed?
  @installed ||= begin
    cmd = shell_out("#{servermanagercmd} -query", returns: [0, 42, 127, 1003])
    cmd.stderr.empty? && (cmd.stdout =~ /^\s*?\[X\]\s.+?\s\[#{@new_resource.feature_name}\]\s*$/i)
  end
end

private

# account for File System Redirector
# http://msdn.microsoft.com/en-us/library/aa384187(v=vs.85).aspx
def servermanagercmd
  @servermanagercmd ||= begin
    locate_sysnative_cmd('servermanagercmd.exe')
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_servermanagercmd.rb to tempfile /tmp/chef-rest20160913-19215-nm0cbs
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/feature_servermanagercmd.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/auto_run.rb
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug Ireton (<doug.ireton@nordstrom.com>)
# Cookbook Name:: windows
# Provider:: printer
#
# Copyright:: 2012, Nordstrom, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

# Support whyrun
def whyrun_supported?
  true
end

action :create do
  if @current_resource.exists
    Chef::Log.info "#{@new_resource} already exists - nothing to do."
  else
    converge_by("Create #{@new_resource}") do
      create_printer
    end
  end
end

action :delete do
  if @current_resource.exists
    converge_by("Delete #{@new_resource}") do
      delete_printer
    end
  else
    Chef::Log.info "#{@current_resource} doesn't exist - can't delete."
  end
end

def load_current_resource
  @current_resource = Chef::Resource::WindowsPrinter.new(@new_resource.name)
  @current_resource.name(@new_resource.name)

  if printer_exists?(@current_resource.name)
    # TODO: Set @current_resource printer properties from registry
    @current_resource.exists = true
  end
end

private

PRINTERS_REG_KEY = 'HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Printers\\'.freeze unless defined?(PRINTERS_REG_KEY)

def printer_exists?(name)
  printer_reg_key = PRINTERS_REG_KEY + name
  Chef::Log.debug "Checking to see if this reg key exists: '#{printer_reg_key}'"
  Registry.key_exists?(printer_reg_key)
end

def create_printer
  # Create the printer port first
  windows_printer_port new_resource.ipv4_address do
  end

  port_name = "IP_#{new_resource.ipv4_address}"

  powershell_script "Creating printer: #{new_resource.name}" do
    code <<-EOH

      Set-WmiInstance -class Win32_Printer `
        -EnableAllPrivileges `
        -Argument @{ DeviceID   = "#{new_resource.device_id}";
                     Comment    = "#{new_resource.comment}";
                     Default    = "$#{new_resource.default}";
                     DriverName = "#{new_resource.driver_name}";
                     Location   = "#{new_resource.location}";
                     PortName   = "#{port_name}";
                     Shared     = "$#{new_resource.shared}";
                     ShareName  = "#{new_resource.share_name}";
                  }
    EOH
  end
end

def delete_printer
  powershell_script "Deleting printer: #{new_resource.name}" do
    code <<-EOH
      $printer = Get-WMIObject -class Win32_Printer -EnableAllPrivileges -Filter "name = '#{new_resource.name}'"
      $printer.Delete()
    EOH
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/printer.rb to tempfile /tmp/chef-rest20160913-19215-515e6h
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Greg Zapp (<greg.zapp@gmail.com>)
# Cookbook Name:: windows
# Provider:: feature_powershell
#

use_inline_resources

include Chef::Provider::WindowsFeature::Base
include Chef::Mixin::PowershellOut
include Windows::Helper

def install_feature_cmdlet
  node['os_version'].to_f < 6.2 ? 'Import-Module ServerManager;Add-WindowsFeature' : 'Install-WindowsFeature'
end

def remove_feature_cmdlet
  node['os_version'].to_f < 6.2 ? 'Remove-WindowsFeature' : 'Uninstall-WindowsFeature'
end

def install_feature(_name)
  cmd = powershell_out!("#{install_feature_cmdlet} #{@new_resource.feature_name}")
  Chef::Log.info(cmd.stdout)
end

def remove_feature(_name)
  cmd = powershell_out!("#{remove_feature_cmdlet} #{@new_resource.feature_name}")
  Chef::Log.info(cmd.stdout)
end

def delete_feature(_name)
  cmd = powershell_out!("Uninstall-WindowsFeature #{@new_resource.feature_name} -Remove")
  Chef::Log.info(cmd.stdout)
end

def installed?
  @installed ||= begin
    cmd = powershell_out("Get-WindowsFeature #{@new_resource.feature_name} | Select Installed | % { Write-Host $_.Installed }")
    cmd.stderr.empty? && cmd.stdout =~ /True/i
  end
end

def available?
  @available ||= begin
    cmd = powershell_out("Get-WindowsFeature #{@new_resource.feature_name}")
    cmd.stderr.empty? && cmd.stdout !~ /Removed/i
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/recipes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/printer.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003d5ab30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/shortcut.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003d5add8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "shortcut.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_powershell.rb to tempfile /tmp/chef-rest20160913-19215-1n7c2vk
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/feature_powershell.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c8b8d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/http_acl.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c8bba0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "http_acl.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/providers/task.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003c50820
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/task.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003c50aa0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "task.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook Name:: windows
# Provider:: path
#
# Copyright:: 2011, Business Intelligence Associates, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

include Windows::Helper

action :add do
  env 'path' do
    action :modify
    delim ::File::PATH_SEPARATOR
    value new_resource.path
    notifies :run, "ruby_block[fix ruby ENV['PATH']]", :immediately
  end

  # The windows Env provider does not correctly expand variables in
  # the PATH environment variable. Ruby expects these to be expanded.
  # This is a temporary fix for that.
  #
  # Follow at https://github.com/chef/chef/pull/1876
  #
  ruby_block "fix ruby ENV['PATH']" do
    block do
      ENV['PATH'] = expand_env_vars(ENV['PATH'])
    end
    action :nothing
  end
end

action :remove do
  env 'path' do
    action :delete
    delim ::File::PATH_SEPARATOR
    value new_resource.path
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/path.rb to tempfile /tmp/chef-rest20160913-19215-1lbtwon
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/path.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Provider:: feature_dism
#
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

include Chef::Provider::WindowsFeature::Base
include Chef::Mixin::ShellOut
include Windows::Helper

def install_feature(_name)
  addsource = @new_resource.source ? "/LimitAccess /Source:\"#{@new_resource.source}\"" : ''
  addall = @new_resource.all ? '/All' : ''
  shell_out!("#{dism} /online /enable-feature /featurename:#{@new_resource.feature_name} /norestart #{addsource} #{addall}", returns: [0, 42, 127, 3010])
end

def remove_feature(_name)
  shell_out!("#{dism} /online /disable-feature /featurename:#{@new_resource.feature_name} /norestart", returns: [0, 42, 127, 3010])
end

def delete_feature(_name)
  if win_version.major_version >= 6 && win_version.minor_version >= 2
    shell_out!("#{dism} /online /disable-feature /featurename:#{@new_resource.feature_name} /Remove /norestart", returns: [0, 42, 127, 3010])
  else
    raise Chef::Exceptions::UnsupportedAction, "#{self} :delete action not support on #{win_version.sku}"
  end
end

def installed?
  @installed ||= begin
    # Win32_OptionalFeature wmi class is only available in Win7+ (NT >= 6.1), but is way faster than dism.exe
    if win_version.major_version > 6 || (win_version.major_version == 6 && win_version.minor_version >= 1)
      !execute_wmi_query("SELECT * FROM Win32_OptionalFeature WHERE Name='#{@new_resource.feature_name}' AND InstallState=1").nil?
    else
      cmd = shell_out("#{dism} /online /Get-Features", returns: [0, 42, 127])
      cmd.stderr.empty? && (cmd.stdout =~ /^Feature Name : #{@new_resource.feature_name}.?$\n^State : Enabled.?$/i)
    end
  end
end

def available?
  @available ||= begin
    cmd = shell_out("#{dism} /online /Get-Features", returns: [0, 42, 127])
    cmd.stderr.empty? && (cmd.stdout !~ /^Feature Name : #{@new_resource.feature_name}.?$\n^State : .* with payload removed.?$/i)
  end
end

private

# account for File System Redirector
# http://msdn.microsoft.com/en-us/library/aa384187(v=vs.85).aspx
def dism
  @dism ||= begin
    locate_sysnative_cmd('dism.exe')
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003ae0918
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003ae09e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "recipes",
   "default.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern <dougm@vmware.com>
# Cookbook Name:: windows
# Provider:: shortcut
#
# Copyright:: 2010, VMware, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

def load_current_resource
  require 'win32ole'

  @link = WIN32OLE.new('WScript.Shell').CreateShortcut(@new_resource.name)

  @current_resource = Chef::Resource::WindowsShortcut.new(@new_resource.name)
  @current_resource.name(@new_resource.name)
  @current_resource.target(@link.TargetPath)
  @current_resource.arguments(@link.Arguments)
  @current_resource.description(@link.Description)
  @current_resource.cwd(@link.WorkingDirectory)
  @current_resource.iconlocation(@link.IconLocation)
end

# Check to see if the shorcut needs any changes
#
# === Returns
# <true>:: If a change is required
# <false>:: If the shorcuts are identical
def compare_shortcut
  [:target, :arguments, :description, :cwd, :iconlocation].any? do |attr|
    !@new_resource.send(attr).nil? && @current_resource.send(attr) != @new_resource.send(attr)
  end
end

action :create do
  if compare_shortcut
    @link.TargetPath = @new_resource.target unless @new_resource.target.nil?
    @link.Arguments = @new_resource.arguments unless @new_resource.arguments.nil?
    @link.Description = @new_resource.description unless @new_resource.description.nil?
    @link.WorkingDirectory = @new_resource.cwd unless @new_resource.cwd.nil?
    @link.IconLocation = @new_resource.iconlocation unless @new_resource.iconlocation.nil?
    # ignoring: WindowStyle, Hotkey
    @link.Save
    Chef::Log.info("Added #{@new_resource} shortcut")
    new_resource.updated_by_last_action(true)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/feature_dism.rb to tempfile /tmp/chef-rest20160913-19215-btycxd
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/shortcut.rb to tempfile /tmp/chef-rest20160913-19215-3gnjo8
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/feature_dism.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/windows_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/shortcut.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook Name:: windows
# Provider:: http_acl
#
# Copyright:: 2015, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

# See https://msdn.microsoft.com/en-us/library/windows/desktop/cc307236%28v=vs.85%29.aspx for netsh info

include Chef::Mixin::ShellOut
include Windows::Helper

# Support whyrun
def whyrun_supported?
  true
end

action :create do
  raise 'No user property set' if @new_resource.user.nil? || @new_resource.user.empty?

  if @current_resource.exists
    needsChange = (@current_resource.user.casecmp(@new_resource.user) != 0)

    if needsChange
      converge_by("Changing #{@current_resource.url}") do
        deleteAcl
        setAcl
      end
    else
      Chef::Log.debug("#{@current_resource.url} already set - nothing to do")
    end
  else
    converge_by("Setting #{@current_resource.url}") do
      setAcl
    end
  end
end

action :delete do
  if @current_resource.exists
    converge_by("Deleting #{@current_resource.url}") do
      deleteAcl
    end
  else
    Chef::Log.debug("#{@current_resource.url} does not exist - nothing to do")
  end
end

def load_current_resource
  @current_resource = Chef::Resource::WindowsHttpAcl.new(@new_resource.name)
  @current_resource.url(@new_resource.url)

  @command = locate_sysnative_cmd('netsh.exe')
  getCurrentAcl
end

private

def getCurrentAcl
  cmd = shell_out!("#{@command} http show urlacl url=#{@current_resource.url}")
  Chef::Log.debug "netsh reports: #{cmd.stdout}"

  m = cmd.stdout.scan(/User:\s*(.+)/)
  if m.empty?
    @current_resource.exists = false
  else
    @current_resource.user(m[0][0].chomp)
    @current_resource.exists = true
  end
end

def setAcl
  shell_out!("#{@command} http add urlacl url=#{@new_resource.url} user=\"#{@new_resource.user}\"")
end

def deleteAcl
  shell_out!("#{@command} http delete urlacl url=#{@new_resource.url}")
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003bb5140
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/providers/auto_run.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003bb5370>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "providers",
   "auto_run.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook Name:: windows
# Provider:: auto_run
#
# Copyright:: 2011, Business Intelligence Associates, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

def whyrun_supported?
  true
end

use_inline_resources

action :create do
  registry_key 'HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run' do
    values [{
      name: new_resource.name,
      type: :string,
      data: "\"#{new_resource.program}\" #{new_resource.args}"
    }]
    action :create
  end
end

action :remove do
  registry_key 'HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run' do
    values [{
      name: new_resource.name,
      type: :string,
      data: ''
    }]
    action :delete
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Mooring (<paul@chef.io>)
# Cookbook Name:: windows
# Provider:: task
#
# Copyright:: 2012-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

use_inline_resources

require 'chef/mixin/shell_out'
require 'rexml/document'

include Chef::Mixin::ShellOut

use_inline_resources

action :create do
  if @current_resource.exists && !(task_need_update? || @new_resource.force)
    Chef::Log.info "#{@new_resource} task already exists - nothing to do"
  else
    validate_user_and_password
    validate_interactive_setting
    validate_create_frequency_modifier
    validate_create_day
    validate_create_months
    validate_idle_time

    options = {}
    options['F'] = '' if @new_resource.force || task_need_update?
    options['SC'] = schedule
    options['MO'] = @new_resource.frequency_modifier if frequency_modifier_allowed
    options['I']  = @new_resource.idle_time unless @new_resource.idle_time.nil?
    options['SD'] = @new_resource.start_day unless @new_resource.start_day.nil?
    options['ST'] = @new_resource.start_time unless @new_resource.start_time.nil?
    options['TR'] = @new_resource.command
    options['RU'] = @new_resource.user
    options['RP'] = @new_resource.password if use_password?
    options['RL'] = 'HIGHEST' if @new_resource.run_level == :highest
    options['IT'] = '' if @new_resource.interactive_enabled
    options['D'] = @new_resource.day if @new_resource.day
    options['M'] = @new_resource.months unless @new_resource.months.nil?

    run_schtasks 'CREATE', options
    set_cwd(new_resource.cwd) if new_resource.cwd
    new_resource.updated_by_last_action true
    Chef::Log.info "#{@new_resource} task created"
  end
end

action :run do
  if @current_resource.exists
    if @current_resource.status == :running
      Chef::Log.info "#{@new_resource} task is currently running, skipping run"
    else
      run_schtasks 'RUN'
      new_resource.updated_by_last_action true
      Chef::Log.info "#{@new_resource} task ran"
    end
  else
    Chef::Log.debug "#{@new_resource} task doesn't exists - nothing to do"
  end
end

action :change do
  if @current_resource.exists
    validate_user_and_password
    validate_interactive_setting

    options = {}
    options['TR'] = @new_resource.command if @new_resource.command
    options['RU'] = @new_resource.user if @new_resource.user
    options['RP'] = @new_resource.password if @new_resource.password
    options['SD'] = @new_resource.start_day unless @new_resource.start_day.nil?
    options['ST'] = @new_resource.start_time unless @new_resource.start_time.nil?
    options['IT'] = '' if @new_resource.interactive_enabled

    run_schtasks 'CHANGE', options
    set_cwd(new_resource.cwd) if new_resource.cwd != @current_resource.cwd
    new_resource.updated_by_last_action true
    Chef::Log.info "Change #{@new_resource} task ran"
  else
    Chef::Log.debug "#{@new_resource} task doesn't exists - nothing to do"
  end
end

action :delete do
  if @current_resource.exists
    # always need to force deletion
    run_schtasks 'DELETE', 'F' => ''
    new_resource.updated_by_last_action true
    Chef::Log.info "#{@new_resource} task deleted"
  else
    Chef::Log.debug "#{@new_resource} task doesn't exists - nothing to do"
  end
end

action :end do
  if @current_resource.exists
    if @current_resource.status != :running
      Chef::Log.debug "#{@new_resource} is not running - nothing to do"
    else
      run_schtasks 'END'
      @new_resource.updated_by_last_action true
      Chef::Log.info "#{@new_resource} task ended"
    end
  else
    Chef::Log.fatal "#{@new_resource} task doesn't exist - nothing to do"
    raise Errno::ENOENT, "#{@new_resource}: task does not exist, cannot end"
  end
end

action :enable do
  if @current_resource.exists
    if @current_resource.enabled
      Chef::Log.debug "#{@new_resource} already enabled - nothing to do"
    else
      run_schtasks 'CHANGE', 'ENABLE' => ''
      @new_resource.updated_by_last_action true
      Chef::Log.info "#{@new_resource} task enabled"
    end
  else
    Chef::Log.fatal "#{@new_resource} task doesn't exist - nothing to do"
    raise Errno::ENOENT, "#{@new_resource}: task does not exist, cannot enable"
  end
end

action :disable do
  if @current_resource.exists
    if @current_resource.enabled
      run_schtasks 'CHANGE', 'DISABLE' => ''
      @new_resource.updated_by_last_action true
      Chef::Log.info "#{@new_resource} task disabled"
    else
      Chef::Log.debug "#{@new_resource} already disabled - nothing to do"
    end
  else
    Chef::Log.debug "#{@new_resource} task doesn't exist - nothing to do"
  end
end

def load_current_resource
  @current_resource = Chef::Resource::WindowsTask.new(@new_resource.name)
  pathed_task_name = @new_resource.task_name.start_with?('\\') ? @new_resource.task_name : "\\#{@new_resource.task_name}"

  @current_resource.task_name(pathed_task_name)
  task_hash = load_task_hash(pathed_task_name)

  if task_hash.respond_to?(:[]) && task_hash[:TaskName] == pathed_task_name
    @current_resource.exists = true
    @current_resource.status = :running if task_hash[:Status] == 'Running'
    if task_hash[:ScheduledTaskState] == 'Enabled'
      @current_resource.enabled = true
    end
    @current_resource.cwd(task_hash[:StartIn]) unless task_hash[:StartIn] == 'N/A'
    @current_resource.command(task_hash[:TaskToRun])
    @current_resource.user(task_hash[:RunAsUser])
  end
end

private

# rubocop:disable Style/StringLiteralsInInterpolation
def run_schtasks(task_action, options = {})
  cmd = "schtasks /#{task_action} /TN \"#{@new_resource.task_name}\" "
  options.keys.each do |option|
    cmd += "/#{option} "
    cmd += "\"#{options[option].to_s.gsub('"', "\\\"")}\" " unless options[option] == ''
  end
  Chef::Log.debug('running: ')
  Chef::Log.debug("    #{cmd}")
  shell_out!(cmd, returns: [0])
end
# rubocop:enable Style/StringLiteralsInInterpolation

def task_need_update?
  # gsub needed as schtasks converts single quotes to double quotes on creation
  @current_resource.command != @new_resource.command.tr("'", '"') ||
    @current_resource.user != @new_resource.user
end

def set_cwd(folder)
  Chef::Log.debug 'looking for existing tasks'

  # we use shell_out here instead of shell_out! because a failure implies that the task does not exist
  xml_cmd = shell_out("schtasks /Query /TN \"#{@new_resource.task_name}\" /XML")

  return if xml_cmd.exitstatus != 0

  doc = REXML::Document.new(xml_cmd.stdout)

  Chef::Log.debug 'Removing former CWD if any'
  doc.root.elements.delete('Actions/Exec/WorkingDirectory')

  unless folder.nil?
    Chef::Log.debug 'Setting CWD as #folder'
    cwd_element = REXML::Element.new('WorkingDirectory')
    cwd_element.add_text(folder)
    exec_element = doc.root.elements['Actions/Exec']
    exec_element.add_element(cwd_element)
  end

  temp_task_file = ::File.join(ENV['TEMP'], 'windows_task.xml')
  begin
    ::File.open(temp_task_file, 'w:UTF-16LE') do |f|
      doc.write(f)
    end

    options = {}
    options['RU'] = @new_resource.user if @new_resource.user
    options['RP'] = @new_resource.password if @new_resource.password
    options['IT'] = '' if @new_resource.interactive_enabled
    options['XML'] = temp_task_file

    run_schtasks('DELETE', 'F' => '')
    run_schtasks('CREATE', options)
  ensure
    ::File.delete(temp_task_file)
  end
end

def load_task_hash(task_name)
  Chef::Log.debug 'Looking for existing tasks'

  # we use shell_out here instead of shell_out! because a failure implies that the task does not exist
  output = shell_out("schtasks /Query /FO LIST /V /TN \"#{task_name}\"").stdout
  if output.empty?
    task = false
  else
    task = {}

    output.split("\n").map! do |line|
      line.split(':', 2).map!(&:strip)
    end.each do |field|
      if field.is_a?(Array) && field[0].respond_to?(:to_sym)
        task[field[0].gsub(/\s+/, '').to_sym] = field[1]
      end
    end
  end

  task
end

SYSTEM_USERS = ['NT AUTHORITY\SYSTEM', 'SYSTEM', 'NT AUTHORITY\LOCALSERVICE', 'NT AUTHORITY\NETWORKSERVICE'].freeze

def validate_user_and_password
  if @new_resource.user && use_password?
    if @new_resource.password.nil?
      Chef::Log.fatal "#{@new_resource.task_name}: Can't specify a non-system user without a password!"
    end
  end
end

def validate_interactive_setting
  if @new_resource.interactive_enabled && @new_resource.password.nil?
    Chef::Log.fatal "#{new_resource} did not provide a password when attempting to set interactive/non-interactive."
  end
end

def validate_create_day
  return unless @new_resource.day
  unless [:weekly, :monthly].include?(@new_resource.frequency)
    raise 'day attribute is only valid for tasks that run weekly or monthly'
  end
  if @new_resource.day.is_a?(String) && @new_resource.day.to_i.to_s != @new_resource.day
    days = @new_resource.day.split(',')
    days.each do |day|
      unless ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun', '*'].include?(day.strip.downcase)
        raise 'day attribute invalid.  Only valid values are: MON, TUE, WED, THU, FRI, SAT, SUN and *.  Multiple values must be separated by a comma.'
      end
    end
  end
end

def validate_create_months
  return unless @new_resource.months
  unless [:monthly].include?(@new_resource.frequency)
    raise 'months attribute is only valid for tasks that run monthly'
  end
  if @new_resource.months.is_a? String
    months = @new_resource.months.split(',')
    months.each do |month|
      unless ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC', '*'].include?(month.strip.upcase)
        raise 'months attribute invalid. Only valid values are: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC and *. Multiple values must be separated by a comma.'
      end
    end
  end
end

def validate_idle_time
  return unless @new_resource.frequency == :on_idle
  unless @new_resource.idle_time.to_i > 0 && @new_resource.idle_time.to_i <= 999
    raise "idle_time value #{@new_resource.idle_time} is invalid.  Valid values for :on_idle frequency are 1 - 999."
  end
end

def validate_create_frequency_modifier
  # Currently is handled in create action 'frequency_modifier_allowed' line. Does not allow for frequency_modifier for once,onstart,onlogon,onidle
  # Note that 'OnEvent' is not a supported frequency.
  unless @new_resource.frequency.nil? || @new_resource.frequency_modifier.nil?
    case @new_resource.frequency
    when :minute
      unless @new_resource.frequency_modifier.to_i > 0 && @new_resource.frequency_modifier.to_i <= 1439
        raise "frequency_modifier value #{@new_resource.frequency_modifier} is invalid.  Valid values for :minute frequency are 1 - 1439."
      end
    when :hourly
      unless @new_resource.frequency_modifier.to_i > 0 && @new_resource.frequency_modifier.to_i <= 23
        raise "frequency_modifier value #{@new_resource.frequency_modifier} is invalid.  Valid values for :hourly frequency are 1 - 23."
      end
    when :daily
      unless @new_resource.frequency_modifier.to_i > 0 && @new_resource.frequency_modifier.to_i <= 365
        raise "frequency_modifier value #{@new_resource.frequency_modifier} is invalid.  Valid values for :daily frequency are 1 - 365."
      end
    when :weekly
      unless @new_resource.frequency_modifier.to_i > 0 && @new_resource.frequency_modifier.to_i <= 52
        raise "frequency_modifier value #{@new_resource.frequency_modifier} is invalid.  Valid values for :weekly frequency are 1 - 52."
      end
    when :monthly
      unless ('1'..'12').to_a.push('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', 'LASTDAY').include?(@new_resource.frequency_modifier.to_s.upcase)
        raise "frequency_modifier value #{@new_resource.frequency_modifier} is invalid.  Valid values for :monthly frequency are 1 - 12, 'FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', 'LASTDAY'."
      end
    end
  end
end

def use_password?
  @use_password ||= !SYSTEM_USERS.include?(@new_resource.user.upcase)
end

def schedule
  case @new_resource.frequency
  when :on_logon
    'ONLOGON'
  when :on_idle
    'ONIDLE'
  else
    @new_resource.frequency
  end
end

def frequency_modifier_allowed
  case @new_resource.frequency
  when :minute, :hourly, :daily, :weekly
    true
  when :monthly
    @new_resource.months.nil? || %w(FIRST SECOND THIRD FOURTH LAST LASTDAY).include?(@new_resource.frequency_modifier)
  else
    false
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/task.rb to tempfile /tmp/chef-rest20160913-19215-8c6p1q
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/task.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/windows_package.rb
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/http_acl.rb to tempfile /tmp/chef-rest20160913-19215-1giglmv
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/http_acl.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/version.rb
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000388d328
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/libraries/version.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000388d440>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "version.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Recipe:: default
#
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# gems with precompiled binaries
%w( win32-api win32-service ).each do |win_gem|
  chef_gem win_gem do
    options '--platform=mswin32'
    action :install
    compile_time false
  end
end

# the rest
%w( windows-api windows-pr win32-dir win32-event win32-mutex ).each do |win_gem|
  chef_gem win_gem do
    action :install
    compile_time false
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/recipes/default.rb to tempfile /tmp/chef-rest20160913-19215-1fhq322
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003948628
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/windows_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000039488a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "windows_helper.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/recipes/default.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/recipes
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/providers/auto_run.rb to tempfile /tmp/chef-rest20160913-19215-1c9pq7t
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/feature_base.rb
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/providers/auto_run.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037c94a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/libraries/feature_base.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037c95e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "feature_base.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003870138
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038702f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "windows_privileged.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern <dougm@vmware.com>
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook Name:: windows
# Library:: windows_privileged
#
# Copyright:: 2010, VMware, Inc.
# Copyright:: 2011, Business Intelligence Associates, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# helpers for Windows API calls that require privilege adjustments
class Chef
  class WindowsPrivileged
    # File -> Load Hive... in regedit.exe
    def reg_load_key(name, file)
      load_deps

      run(SE_BACKUP_NAME, SE_RESTORE_NAME) do
        rc = RegLoadKey(HKEY_USERS, name.to_s, file)
        if rc == ERROR_SUCCESS
          return true
        elsif rc == ERROR_SHARING_VIOLATION
          return false
        else
          raise get_last_error(rc)
        end
      end
    end

    # File -> Unload Hive... in regedit.exe
    def reg_unload_key(name)
      load_deps

      run(SE_BACKUP_NAME, SE_RESTORE_NAME) do
        rc = RegUnLoadKey(HKEY_USERS, name.to_s)
        raise get_last_error(rc) if rc != ERROR_SUCCESS
      end
    end

    def run(*privileges)
      load_deps

      token = [0].pack('L')

      unless OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, token)
        raise get_last_error
      end
      token = token.unpack('L')[0]

      privileges.each do |name|
        unless adjust_privilege(token, name, SE_PRIVILEGE_ENABLED)
          raise get_last_error
        end
      end

      begin
        yield
      ensure # disable privs
        privileges.each do |name|
          adjust_privilege(token, name, 0)
        end
      end
    end

    def adjust_privilege(token, priv, attr = 0)
      load_deps

      luid = [0, 0].pack('Ll')
      if LookupPrivilegeValue(nil, priv, luid)
        new_state = [1, luid.unpack('Ll'), attr].flatten.pack('LLlL')
        AdjustTokenPrivileges(token, 0, new_state, new_state.size, 0, 0)
      end
    end

    private

    def load_deps
      if RUBY_PLATFORM =~ /mswin|mingw32|windows/
        require 'windows/error'
        require 'windows/registry'
        require 'windows/process'
        require 'windows/security'

        include Windows::Error
        include Windows::Registry
        include Windows::Process
        include Windows::Security
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/registry_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000381fe90
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/registry_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000381ffa8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "registry_helper.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Library:: version
#
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if RUBY_PLATFORM =~ /mswin|mingw32|windows/
  require_relative 'wmi_helper'
  require 'Win32API'
end

module Windows
  class Version
    # http://msdn.microsoft.com/en-us/library/ms724833(v=vs.85).aspx

    # Suite Masks
    # Microsoft BackOffice components are installed.
    VER_SUITE_BACKOFFICE = 0x00000004 unless defined?(VER_SUITE_BACKOFFICE)
    # Windows Server 2003, Web Edition is installed.
    VER_SUITE_BLADE = 0x00000400 unless defined?(VER_SUITE_BLADE)
    # Windows Server 2003, Compute Cluster Edition is installed.
    VER_SUITE_COMPUTE_SERVER = 0x00004000 unless defined?(VER_SUITE_COMPUTE_SERVER)
    # Windows Server 2008 Datacenter, Windows Server 2003, Datacenter Edition, or Windows 2000 Datacenter Server is installed.
    VER_SUITE_DATACENTER = 0x00000080 unless defined?(VER_SUITE_DATACENTER)
    # Windows Server 2008 Enterprise, Windows Server 2003, Enterprise Edition, or Windows 2000 Advanced Server is installed. Refer to the Remarks section for more information about this bit flag.
    VER_SUITE_ENTERPRISE = 0x00000002 unless defined?(VER_SUITE_ENTERPRISE)
    # Windows XP Embedded is installed.
    VER_SUITE_EMBEDDEDNT = 0x00000040 unless defined?(VER_SUITE_EMBEDDEDNT)
    # Windows Vista Home Premium, Windows Vista Home Basic, or Windows XP Home Edition is installed.
    VER_SUITE_PERSONAL = 0x00000200 unless defined?(VER_SUITE_PERSONAL)
    # Remote Desktop is supported, but only one interactive session is supported. This value is set unless the system is running in application server mode.
    VER_SUITE_SINGLEUSERTS = 0x00000100 unless defined?(VER_SUITE_SINGLEUSERTS)
    # Microsoft Small Business Server was once installed on the system, but may have been upgraded to another version of Windows. Refer to the Remarks section for more information about this bit flag.
    VER_SUITE_SMALLBUSINESS = 0x00000001 unless defined?(VER_SUITE_SMALLBUSINESS)
    # Microsoft Small Business Server is installed with the restrictive client license in force. Refer to the Remarks section for more information about this bit flag.
    VER_SUITE_SMALLBUSINESS_RESTRICTED = 0x00000020 unless defined?(VER_SUITE_SMALLBUSINESS_RESTRICTED)
    # Windows Storage Server 2003 R2 or Windows Storage Server 2003is installed.
    VER_SUITE_STORAGE_SERVER = 0x00002000 unless defined?(VER_SUITE_STORAGE_SERVER)
    # Terminal Services is installed. This value is always set.
    # If VER_SUITE_TERMINAL is set but VER_SUITE_SINGLEUSERTS is not set, the system is running in application server mode.
    VER_SUITE_TERMINAL = 0x00000010 unless defined?(VER_SUITE_TERMINAL)
    # Windows Home Server is installed.
    VER_SUITE_WH_SERVER = 0x00008000 unless defined?(VER_SUITE_WH_SERVER)

    # Product Type
    # The system is a domain controller and the operating system is Windows Server 2012, Windows Server 2008 R2, Windows Server 2008, Windows Server 2003, or Windows 2000 Server.
    VER_NT_DOMAIN_CONTROLLER = 0x0000002 unless defined?(VER_NT_DOMAIN_CONTROLLER)
    # The operating system is Windows Server 2012, Windows Server 2008 R2, Windows Server 2008, Windows Server 2003, or Windows 2000 Server.
    # Note that a server that is also a domain controller is reported as VER_NT_DOMAIN_CONTROLLER, not VER_NT_SERVER.
    VER_NT_SERVER = 0x0000003 unless defined?(VER_NT_SERVER)
    # The operating system is Windows 7, Windows Vista, Windows XP Professional, Windows XP Home Edition, or Windows 2000 Professional.
    VER_NT_WORKSTATION = 0x0000001 unless defined?(VER_NT_WORKSTATION)

    # GetSystemMetrics
    # The build number if the system is Windows Server 2003 R2; otherwise, 0.
    SM_SERVERR2 = 89 unless defined?(SM_SERVERR2)

    # http://msdn.microsoft.com/en-us/library/ms724358(v=vs.85).aspx
    SKU = {
      0x00000006 => { ms_const: 'PRODUCT_BUSINESS', name: 'Business' },
      0x00000010 => { ms_const: 'PRODUCT_BUSINESS_N', name: 'Business N' },
      0x00000012 => { ms_const: 'PRODUCT_CLUSTER_SERVER', name: 'HPC Edition' },
      0x00000008 => { ms_const: 'PRODUCT_DATACENTER_SERVER', name: 'Server Datacenter (full installation)' },
      0x0000000C => { ms_const: 'PRODUCT_DATACENTER_SERVER_CORE', name: 'Server Datacenter (core installation)' },
      0x00000027 => { ms_const: 'PRODUCT_DATACENTER_SERVER_CORE_V', name: 'Server Datacenter without Hyper-V (core installation)' },
      0x00000025 => { ms_const: 'PRODUCT_DATACENTER_SERVER_V', name: 'Server Datacenter without Hyper-V (full installation)' },
      0x00000004 => { ms_const: 'PRODUCT_ENTERPRISE', name: 'Enterprise' },
      0x00000046 => { ms_const: 'PRODUCT_ENTERPRISE_E', name: 'Not supported' },
      0x0000001B => { ms_const: 'PRODUCT_ENTERPRISE_N', name: 'Enterprise N' },
      0x0000000A => { ms_const: 'PRODUCT_ENTERPRISE_SERVER', name: 'Server Enterprise (full installation)' },
      0x0000000E => { ms_const: 'PRODUCT_ENTERPRISE_SERVER_CORE', name: 'Server Enterprise (core installation)' },
      0x00000029 => { ms_const: 'PRODUCT_ENTERPRISE_SERVER_CORE_V', name: 'Server Enterprise without Hyper-V (core installation)' },
      0x0000000F => { ms_const: 'PRODUCT_ENTERPRISE_SERVER_IA64', name: 'Server Enterprise for Itanium-based Systems' },
      0x00000026 => { ms_const: 'PRODUCT_ENTERPRISE_SERVER_V', name: 'Server Enterprise without Hyper-V (full installation)' },
      0x00000002 => { ms_const: 'PRODUCT_HOME_BASIC', name: 'Home Basic' },
      0x00000043 => { ms_const: 'PRODUCT_HOME_BASIC_E', name: 'Not supported' },
      0x00000005 => { ms_const: 'PRODUCT_HOME_BASIC_N', name: 'Home Basic N' },
      0x00000003 => { ms_const: 'PRODUCT_HOME_PREMIUM', name: 'Home Premium' },
      0x00000044 => { ms_const: 'PRODUCT_HOME_PREMIUM_E', name: 'Not supported' },
      0x0000001A => { ms_const: 'PRODUCT_HOME_PREMIUM_N', name: 'Home Premium N' },
      0x0000002A => { ms_const: 'PRODUCT_HYPERV', name: 'Microsoft Hyper-V Server' },
      0x0000001E => { ms_const: 'PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT', name: 'Windows Essential Business Server Management Server' },
      0x00000020 => { ms_const: 'PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING', name: 'Windows Essential Business Server Messaging Server' },
      0x0000001F => { ms_const: 'PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY', name: 'Windows Essential Business Server Security Server' },
      0x00000030 => { ms_const: 'PRODUCT_PROFESSIONAL', name: 'Professional' },
      0x00000045 => { ms_const: 'PRODUCT_PROFESSIONAL_E', name: 'Not supported' },
      0x00000031 => { ms_const: 'PRODUCT_PROFESSIONAL_N', name: 'Professional N' },
      0x00000067 => { ms_const: 'PRODUCT_PROFESSIONAL_WMC', name: 'Professional with Media Center' },
      0x00000018 => { ms_const: 'PRODUCT_SERVER_FOR_SMALLBUSINESS', name: 'Windows Server 2008 for Windows Essential Server Solutions' },
      0x00000023 => { ms_const: 'PRODUCT_SERVER_FOR_SMALLBUSINESS_V', name: 'Windows Server 2008 without Hyper-V for Windows Essential Server Solutions' },
      0x00000021 => { ms_const: 'PRODUCT_SERVER_FOUNDATION', name: 'Server Foundation' },
      0x00000022 => { ms_const: 'PRODUCT_HOME_PREMIUM_SERVER', name: 'Windows Home Server 2011' },
      0x00000032 => { ms_const: 'PRODUCT_SB_SOLUTION_SERVER', name: 'Windows Small Business Server 2011 Essentials' },
      0x00000013 => { ms_const: 'PRODUCT_HOME_SERVER', name: 'Windows Storage Server 2008 R2 Essentials' },
      0x00000009 => { ms_const: 'PRODUCT_SMALLBUSINESS_SERVER', name: 'Windows Small Business Server' },
      0x00000038 => { ms_const: 'PRODUCT_SOLUTION_EMBEDDEDSERVER', name: 'Windows MultiPoint Server' },
      0x00000007 => { ms_const: 'PRODUCT_STANDARD_SERVER', name: 'Server Standard (full installation)' },
      0x0000000D => { ms_const: 'PRODUCT_STANDARD_SERVER_CORE', name: 'Server Standard (core installation)' },
      0x00000028 => { ms_const: 'PRODUCT_STANDARD_SERVER_CORE_V', name: 'Server Standard without Hyper-V (core installation)' },
      0x00000024 => { ms_const: 'PRODUCT_STANDARD_SERVER_V', name: 'Server Standard without Hyper-V (full installation)' },
      0x0000000B => { ms_const: 'PRODUCT_STARTER', name: 'Starter' },
      0x00000042 => { ms_const: 'PRODUCT_STARTER_E', name: 'Not supported' },
      0x0000002F => { ms_const: 'PRODUCT_STARTER_N', name: 'Starter N' },
      0x00000017 => { ms_const: 'PRODUCT_STORAGE_ENTERPRISE_SERVER', name: 'Storage Server Enterprise' },
      0x00000014 => { ms_const: 'PRODUCT_STORAGE_EXPRESS_SERVER', name: 'Storage Server Express' },
      0x00000015 => { ms_const: 'PRODUCT_STORAGE_STANDARD_SERVER', name: 'Storage Server Standard' },
      0x00000016 => { ms_const: 'PRODUCT_STORAGE_WORKGROUP_SERVER', name: 'Storage Server Workgroup' },
      0x00000000 => { ms_const: 'PRODUCT_UNDEFINED', name: 'An unknown product' },
      0x00000001 => { ms_const: 'PRODUCT_ULTIMATE', name: 'Ultimate' },
      0x00000047 => { ms_const: 'PRODUCT_ULTIMATE_E', name: 'Not supported' },
      0x0000001C => { ms_const: 'PRODUCT_ULTIMATE_N', name: 'Ultimate N' },
      0x00000011 => { ms_const: 'PRODUCT_WEB_SERVER', name: 'Web Server (full installation)' },
      0x0000001D => { ms_const: 'PRODUCT_WEB_SERVER_CORE', name: 'Web Server (core installation)' }
    }.freeze unless defined?(SKU)

    attr_reader :major_version, :minor_version, :build_number, :service_pack_major_version, :service_pack_minor_version
    attr_reader :version, :product_type, :product_suite, :sku

    def initialize
      unless RUBY_PLATFORM =~ /mswin|mingw32|windows/
        raise NotImplementedError, 'only valid on Windows platform'
      end
      @version, @product_type, @product_suite, @sku, @service_pack_major_version, @service_pack_minor_version = get_os_info
      @major_version, @minor_version, @build_number = version.split('.').map(&:to_i)
    end

    WIN_VERSIONS = {
      'Windows Server 2012 R2' => { major: 6, minor: 3, callable: -> { @product_type != VER_NT_WORKSTATION } },
      'Windows 8' => { major: 6, minor: 2, callable: -> { @product_type == VER_NT_WORKSTATION } },
      'Windows Server 2012' => { major: 6, minor: 2, callable: -> { @product_type != VER_NT_WORKSTATION } },
      'Windows 7' => { major: 6, minor: 1, callable: -> { @product_type == VER_NT_WORKSTATION } },
      'Windows Server 2008 R2' => { major: 6, minor: 1, callable: -> { @product_type != VER_NT_WORKSTATION } },
      'Windows Server 2008' => { major: 6, minor: 0, callable: -> { @product_type != VER_NT_WORKSTATION } },
      'Windows Vista' => { major: 6, minor: 0, callable: -> { @product_type == VER_NT_WORKSTATION } },
      'Windows Server 2003 R2' => { major: 5, minor: 2, callable: -> { Win32API.new('user32', 'GetSystemMetrics', 'I', 'I').call(SM_SERVERR2) != 0 } },
      'Windows Home Server' => { major: 5, minor: 2, callable: -> { (@product_suite & VER_SUITE_WH_SERVER) == VER_SUITE_WH_SERVER } },
      'Windows Server 2003' => { major: 5, minor: 2, callable: -> { Win32API.new('user32', 'GetSystemMetrics', 'I', 'I').call(SM_SERVERR2) == 0 } },
      'Windows XP' => { major: 5, minor: 1 },
      'Windows 2000' => { major: 5, minor: 0 }
    }.freeze unless defined?(WIN_VERSIONS)

    marketing_names = []

    # General Windows checks
    WIN_VERSIONS.each do |k, v|
      method_name = "#{k.gsub(/\s/, '_').downcase}?"
      define_method(method_name) do
        (@major_version == v[:major]) &&
          (@minor_version == v[:minor]) &&
          (v[:callable] ? v[:callable].call : true)
      end
      marketing_names << [k, method_name]
    end

    define_method(:marketing_name) do
      marketing_names.each do |mn|
        break mn[0] if send(mn[1])
      end
    end

    # Server Type checks
    %w( core full datacenter ).each do |m|
      define_method("server_#{m}?") do
        if @sku
          !(SKU[@sku][:name] =~ /#{m}/i).nil?
        else
          false
        end
      end
    end

    private

    # Win32API call to GetSystemMetrics(SM_SERVERR2)
    # returns: The build number if the system is Windows Server 2003 R2; otherwise, 0.
    def sm_serverr2
      @sm_serverr2 ||= Win32API.new('user32', 'GetSystemMetrics', 'I', 'I').call(SM_SERVERR2)
    end

    # query WMI Win32_OperatingSystem for required OS info
    def get_os_info
      cols = %w( Version ProductType OSProductSuite OperatingSystemSKU ServicePackMajorVersion ServicePackMinorVersion )
      os_info = execute_wmi_query('select * from Win32_OperatingSystem').each.next
      cols.map do |c|
        begin
          wmi_object_property(os_info, c)
        rescue # OperatingSystemSKU doesn't exist in all versions of Windows
          nil
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb to tempfile /tmp/chef-rest20160913-19215-1jjg3j7
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/windows_privileged.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version.rb to tempfile /tmp/chef-rest20160913-19215-1l8ieyw
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/libraries
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x000000038bd078
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000038bd190>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "powershell_helper.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/version.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x000000037a5de8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/windows_package.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037a5eb0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "windows_package.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003734300
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000037343f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "wmi_helper.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/powershell_out.rb
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x000000035f6cb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/powershell_out.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000035f6da8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "powershell_out.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Library:: helper
#
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'chef/mixin/shell_out'

module Powershell
  module Helper
    include Chef::Mixin::ShellOut

    def powershell_installed?
      !powershell_version.nil?
    end

    def interpreter
      # force 64-bit powershell from 32-bit ruby process
      if ::File.exist?("#{ENV['WINDIR']}\\sysnative\\WindowsPowershell\\v1.0\\powershell.exe")
        "#{ENV['WINDIR']}\\sysnative\\WindowsPowershell\\v1.0\\powershell.exe"
      elsif ::File.exist?("#{ENV['WINDIR']}\\system32\\WindowsPowershell\\v1.0\\powershell.exe")
        "#{ENV['WINDIR']}\\system32\\WindowsPowershell\\v1.0\\powershell.exe"
      else
        'powershell.exe'
      end
    end

    def powershell_version
      cmd = shell_out("#{interpreter} -InputFormat none -Command \"& echo $PSVersionTable.psversion.major\"")
      if cmd.stdout.empty? # PowerShell 1.0 doesn't have a $PSVersionTable
        1
      else
        Regexp.last_match(1).to_i if cmd.stdout =~ /^(\d+)/
      end
    rescue Errno::ENOENT
      nil
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb to tempfile /tmp/chef-rest20160913-19215-1sthq2d
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/powershell_helper.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/README.md
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern (<dougm@vmware.com>)
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook Name:: windows
# Provider:: registry
#
# Copyright:: 2010, VMware, Inc.
# Copyright:: 2011-2016, Chef Software, Inc.
# Copyright:: 2011, Business Intelligence Associates, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if RUBY_PLATFORM =~ /mswin|mingw32|windows/
  require 'win32/registry'
  require_relative 'wmi_helper'
end

module Windows
  module RegistryHelper
    @@native_registry_constant = ENV['PROCESSOR_ARCHITEW6432'] == 'AMD64' ? 0x0100 : 0x0200

    def get_hive_name(path)
      Chef::Log.debug('Resolving registry shortcuts to full names')

      reg_path = path.split('\\')
      hive_name = reg_path.shift

      hkey = {
        'HKLM' => 'HKEY_LOCAL_MACHINE',
        'HKCU' => 'HKEY_CURRENT_USER',
        'HKU'  => 'HKEY_USERS'
      }[hive_name] || hive_name

      Chef::Log.debug("Hive resolved to #{hkey}")
      hkey
    end

    def get_hive(path)
      Chef::Log.debug("Getting hive for #{path}")
      reg_path = path.split('\\')
      hive_name = reg_path.shift

      hkey = get_hive_name(path)

      hive = {
        'HKEY_LOCAL_MACHINE' => ::Win32::Registry::HKEY_LOCAL_MACHINE,
        'HKEY_USERS' => ::Win32::Registry::HKEY_USERS,
        'HKEY_CURRENT_USER' => ::Win32::Registry::HKEY_CURRENT_USER
      }[hkey]

      unless hive
        Chef::Application.fatal!("Unsupported registry hive '#{hive_name}'")
      end

      Chef::Log.debug("Registry hive resolved to #{hkey}")
      hive
    end

    def unload_hive(path)
      hive = get_hive(path)
      if hive == ::Win32::Registry::HKEY_USERS
        reg_path = path.split('\\')
        priv = Chef::WindowsPrivileged.new
        begin
          priv.reg_unload_key(reg_path[1])
        rescue
        end
      end
    end

    def set_value(mode, path, values, type = nil)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key_name = reg_path.join('\\')

      Chef::Log.debug("Creating #{path}")

      create_key(path) unless key_exists?(path, true)

      hive.send(mode, key_name, ::Win32::Registry::KEY_ALL_ACCESS | @@native_registry_constant) do |reg|
        changed_something = false
        values.each do |k, val|
          key = k.to_s # wtf. avoid "can't modify frozen string" in win32/registry.rb
          cur_val = nil
          begin
            cur_val = reg[key]
          rescue
            # subkey does not exist (ok)
          end

          next unless cur_val != val

          Chef::Log.debug("setting #{key}=#{val}")

          type = :string if type.nil?

          reg_type = {
            binary: ::Win32::Registry::REG_BINARY,
            string: ::Win32::Registry::REG_SZ,
            multi_string: ::Win32::Registry::REG_MULTI_SZ,
            expand_string: ::Win32::Registry::REG_EXPAND_SZ,
            dword: ::Win32::Registry::REG_DWORD,
            dword_big_endian: ::Win32::Registry::REG_DWORD_BIG_ENDIAN,
            qword: ::Win32::Registry::REG_QWORD
          }[type]

          reg.write(key, reg_type, val)

          ensure_hive_unloaded(hive_loaded)

          changed_something = true
        end
        return changed_something
      end
      false
    end

    def get_value(path, value)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key = reg_path.join('\\')

      hive.open(key, ::Win32::Registry::KEY_ALL_ACCESS | @@native_registry_constant) do |reg|
        begin
          return reg[value]
        rescue
          return nil
        ensure
          ensure_hive_unloaded(hive_loaded)
        end
      end
    end

    def get_values(path)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key = reg_path.join('\\')
      hive.open(key, ::Win32::Registry::KEY_ALL_ACCESS | @@native_registry_constant) do |reg|
        values = []
        begin
          reg.each_value do |name, type, data|
            values << [name, type, data]
          end
        rescue
        ensure
          ensure_hive_unloaded(hive_loaded)
        end
        values
      end
    end

    def delete_value(path, values)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key = reg_path.join('\\')
      Chef::Log.debug("Deleting values in #{path}")
      hive.open(key, ::Win32::Registry::KEY_ALL_ACCESS | @@native_registry_constant) do |reg|
        values.each_key do |key|
          name = key.to_s
          # Ensure delete operation is idempotent.
          if value_exists?(path, key)
            Chef::Log.debug("Deleting value #{name} in #{path}")
            reg.delete_value(name)
          else
            Chef::Log.debug("Value #{name} in #{path} does not exist, skipping.")
          end
        end
      end
    end

    def create_key(path)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key = reg_path.join('\\')
      Chef::Log.debug("Creating registry key #{path}")
      hive.create(key)
    end

    def value_exists?(path, value)
      if key_exists?(path, true)

        hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
        key = reg_path.join('\\')

        Chef::Log.debug("Attempting to open #{key}")
        Chef::Log.debug("Native Constant #{@@native_registry_constant}")
        Chef::Log.debug("Hive #{hive}")

        hive.open(key, ::Win32::Registry::KEY_READ | @@native_registry_constant) do |reg|
          begin
            rtn_value = reg[value]
            return true
          rescue
            return false
          ensure
            ensure_hive_unloaded(hive_loaded)
          end
        end

      end
      false
    end

    # TODO: Does not load user registry...
    def key_exists?(path, load_hive = false)
      if load_hive
        hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
        key = reg_path.join('\\')
      else
        hive = get_hive(path)
        reg_path = path.split('\\')
        hive_name = reg_path.shift
        root_key = reg_path[0]
        key = reg_path.join('\\')
        hive_loaded = false
      end

      begin
        hive.open(key, ::Win32::Registry::Constants::KEY_READ | @@native_registry_constant)
        return true
      rescue
        return false
      ensure
        ensure_hive_unloaded(hive_loaded)
      end
    end

    def get_user_hive_location(sid)
      reg_key = "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\#{sid}"
      Chef::Log.debug("Looking for profile at #{reg_key}")
      if key_exists?(reg_key)
        return get_value(reg_key, 'ProfileImagePath')
      else
        return nil
      end
    end

    def resolve_user_to_sid(username)
      user_query = execute_wmi_query("select * from Win32_UserAccount where Name='#{username}'")
      sid = nil

      user_query.each do |user|
        sid = wmi_object_property(user, 'sid')
        break
      end

      Chef::Log.debug("Resolved user SID to #{sid}")
      return sid
    rescue
      return nil
    end

    def hive_loaded?(path)
      hive = get_hive(path)
      reg_path = path.split('\\')
      hive_name = reg_path.shift
      user_hive = path[0]

      if user_hive?(hive)
        return key_exists?("#{hive_name}\\#{user_hive}")
      else
        return true
      end
    end

    def user_hive?(hive)
      hive == ::Win32::Registry::HKEY_USERS
    end

    def get_reg_path_info(path)
      hive = get_hive(path)
      reg_path = path.split('\\')
      hive_name = reg_path.shift
      root_key = reg_path[0]
      hive_loaded = false

      if user_hive?(hive) && !key_exists?("#{hive_name}\\#{root_key}")
        reg_path, hive_loaded = load_user_hive(hive, reg_path, root_key)
        root_key = reg_path[0]
        Chef::Log.debug("Resolved user (#{path}) to (#{reg_path.join('/')})")
      end

      [hive, reg_path, hive_name, root_key, hive_loaded]
    end

    def load_user_hive(hive, reg_path, user_hive)
      Chef::Log.debug("Reg Path #{reg_path}")
      # See if the hive is loaded. Logged in users will have a key that is named their SID
      # if the user has specified the a path by SID and the user is logged in, this function
      # should not be executed.
      if user_hive?(hive) && !key_exists?("HKU\\#{user_hive}")
        Chef::Log.debug('The user is not logged in and has not been specified by SID')
        sid = resolve_user_to_sid(user_hive)
        Chef::Log.debug("User SID resolved to (#{sid})")
        # Now that the user has been resolved to a SID, check and see if the hive exists.
        # If this exists by SID, the user is logged in and we should use that key.
        # TODO: Replace the username with the sid and send it back because the username
        # does not exist as the key location.
        load_reg = false
        if key_exists?("HKU\\#{sid}")
          reg_path[0] = sid # use the active profile (user is logged on)
          Chef::Log.debug("HKEY_USERS Mapped: #{user_hive} -> #{sid}")
        else
          Chef::Log.debug('User is not logged in')
          load_reg = true
        end

        # The user is not logged in, so we should load the registry from disk
        if load_reg
          profile_path = get_user_hive_location(sid)
          unless profile_path.nil?
            ntuser_dat = "#{profile_path}\\NTUSER.DAT"
            if ::File.exist?(ntuser_dat)
              priv = Chef::WindowsPrivileged.new
              if priv.reg_load_key(sid, ntuser_dat)
                Chef::Log.debug("RegLoadKey(#{sid}, #{user_hive}, #{ntuser_dat})")
                reg_path[0] = sid
              else
                Chef::Log.debug("Failed RegLoadKey(#{sid}, #{user_hive}, #{ntuser_dat})")
              end
            end
          end
        end
      end

      [reg_path, load_reg]
    end

    private

    def ensure_hive_unloaded(hive_loaded = false)
      if hive_loaded
        Chef::Log.debug('Hive was loaded, we really should unload it')
        unload_hive(path)
      end
    end
  end
end

module Registry
  module_function

  extend Windows::RegistryHelper
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/registry_helper.rb to tempfile /tmp/chef-rest20160913-19215-1bxr2oj
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/registry_helper.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/CONTRIBUTING.md
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
# This provider has been deprecated as the same logic is included
# in Chef 12.6 and later. In the near future this provider will be
# removed from this cookbook.

require 'chef/resource/lwrp_base'
require 'chef/provider/lwrp_base'

require 'win32/registry' if RUBY_PLATFORM =~ /mswin|mingw32|windows/

require 'chef/mixin/shell_out'
require 'chef/mixin/language'
class Chef
  class Provider
    class WindowsCookbookPackage < Chef::Provider::LWRPBase # ~FC058
      include Chef::Mixin::ShellOut
      include Windows::Helper

      use_inline_resources

      # the logic in all action methods mirror that of
      # the Chef::Provider::Package which will make
      # refactoring into core chef easy

      action :install do
        # If we specified a version, and it's not the current version, move to the specified version
        if !@new_resource.version.nil? && @new_resource.version != @current_resource.version
          install_version = @new_resource.version
        # If it's not installed at all, install it
        elsif @current_resource.version.nil?
          install_version = candidate_version
        end

        if install_version
          Chef::Log.info("Installing #{@new_resource} version #{install_version}")
          status = install_package(@new_resource.package_name, install_version)
          new_resource.updated_by_last_action(true) if status
        end
      end

      action :upgrade do
        if @current_resource.version != candidate_version
          orig_version = @current_resource.version || 'uninstalled'
          Chef::Log.info("Upgrading #{@new_resource} version from #{orig_version} to #{candidate_version}")
          status = upgrade_package(@new_resource.package_name, candidate_version)
          new_resource.updated_by_last_action(true) if status
        end
      end

      action :remove do
        if removing_package?
          Chef::Log.info("Removing #{@new_resource}")
          remove_package(@current_resource.package_name, @new_resource.version)
          new_resource.updated_by_last_action(true)
        end
      end

      def removing_package?
        if @current_resource.version.nil?
          false # nothing to remove
        elsif @new_resource.version.nil?
          true # remove any version of a package
        elsif @new_resource.version == @current_resource.version
          true # remove the version we have
        else
          false # we don't have the version we want to remove
        end
      end

      def expand_options(options)
        options ? " #{options}" : ''
      end

      # these methods are the required overrides of
      # a provider that extends from Chef::Provider::Package
      # so refactoring into core Chef should be easy

      def load_current_resource
        @current_resource = Chef::Resource::WindowsPackage.new(@new_resource.name)
        @current_resource.package_name(@new_resource.package_name)
        @current_resource.version(nil)

        unless current_installed_version.nil?
          @current_resource.version(current_installed_version)
        end

        @current_resource
      end

      def current_installed_version
        @current_installed_version ||= begin
          if installed_packages.include?(@new_resource.package_name)
            installed_packages[@new_resource.package_name][:version]
          end
        end
      end

      def candidate_version
        @candidate_version ||= begin
          @new_resource.version || 'latest'
        end
      end

      def install_package(_name, _version)
        Chef::Log.debug("Processing #{@new_resource} as a #{installer_type} installer.")
        install_args = [cached_file(@new_resource.source, @new_resource.checksum), expand_options(unattended_installation_flags), expand_options(@new_resource.options)]
        Chef::Log.info('Starting installation...this could take awhile.')
        Chef::Log.debug "Install command: #{sprintf(install_command_template, *install_args)}"
        shell_out!(sprintf(install_command_template, *install_args), timeout: @new_resource.timeout, returns: @new_resource.success_codes)
      end

      def remove_package(_name, _version)
        uninstall_string = installed_packages[@new_resource.package_name][:uninstall_string]
        Chef::Log.info("Registry provided uninstall string for #{@new_resource} is '#{uninstall_string}'")
        uninstall_command = begin
          if uninstall_string =~ /msiexec/i
            "#{uninstall_string} /qn"
          else
            uninstall_string.delete!('"')
            "start \"\" /wait /d\"#{::File.dirname(uninstall_string)}\" #{::File.basename(uninstall_string)}#{expand_options(@new_resource.options)} /S & exit %%%%ERRORLEVEL%%%%"
          end
        end
        Chef::Log.info("Removing #{@new_resource} with uninstall command '#{uninstall_command}'")
        shell_out!(uninstall_command, returns: @new_resource.success_codes)
      end

      private

      def install_command_template
        case installer_type
        when :msi
          'msiexec%2$s "%1$s"%3$s'
        else
          'start "" /wait "%1$s"%2$s%3$s & exit %%%%ERRORLEVEL%%%%'
        end
      end

      # http://unattended.sourceforge.net/installers.php
      def unattended_installation_flags
        case installer_type
        when :msi
          # this is no-ui
          '/qn /i'
        when :installshield
          '/s /sms'
        when :nsis
          '/S /NCRC'
        when :inno
          # "/sp- /silent /norestart"
          '/verysilent /norestart'
        when :wise
          '/s'
        end
      end

      def installer_type
        @installer_type || begin
          if @new_resource.installer_type
            @new_resource.installer_type
          else
            basename = ::File.basename(cached_file(@new_resource.source, @new_resource.checksum))
            if basename.split('.').last.casecmp('msi').zero? # Microsoft MSI
              :msi
            else
              # search the binary file for installer type
              contents = ::Kernel.open(::File.expand_path(cached_file(@new_resource.source)), 'rb', &:read) # TODO: limit data read in
              case contents
              when /inno/i # Inno Setup
                :inno
              when /wise/i # Wise InstallMaster
                :wise
              when /nsis/i # Nullsoft Scriptable Install System
                :nsis
              else
                # if file is named 'setup.exe' assume installshield
                if basename == 'setup.exe'
                  :installshield
                else
                  raise Chef::Exceptions::AttributeNotFound, 'installer_type could not be determined, please set manually'
                end
              end
            end
          end
        end
      end
    end
  end
end

class Chef
  class Resource
    class WindowsCookbookPackage < Chef::Resource::LWRPBase
      if Gem::Version.new(Chef::VERSION) >= Gem::Version.new('12.4.0')
        provides :windows_package, os: 'windows', override: true
      elsif Gem::Version.new(Chef::VERSION) >= Gem::Version.new('12')
        provides :windows_package, os: 'windows'
      end
      actions :install, :remove

      default_action :install

      attribute :package_name, kind_of: String, name_attribute: true
      attribute :source, kind_of: String, required: true
      attribute :version, kind_of: String
      attribute :options, kind_of: String
      attribute :installer_type, kind_of: Symbol, default: nil, equal_to: [:msi, :inno, :nsis, :wise, :installshield, :custom]
      attribute :checksum, kind_of: String
      attribute :timeout, kind_of: Integer, default: 600
      attribute :success_codes, kind_of: Array, default: [0, 42, 127]

      if Gem::Version.new(Chef::VERSION) >= Gem::Version.new('12.6.0')
        attribute :remote_file_attributes, kind_of: Hash
        attribute :response_file, kind_of: String
        attribute :response_file_variables, kind_of: Hash
        alias_method :returns, :success_codes
      end

      self.resource_name = 'windows_package'
      def initialize(*args)
        super
        @provider = if Gem::Version.new(Chef::VERSION) >= Gem::Version.new('12.6.0')
                      Chef::Provider::Package::Windows
                    else
                      Chef::Provider::WindowsCookbookPackage
                    end

        Chef::Log.warn <<-EOF
Please use the package resource available in Chef Client 12.6+.
windows_package will be removed in the next major version release
of the Windows cookbook.
EOF
      end
    end
  end
end

if Gem::Version.new(Chef::VERSION) < Gem::Version.new('12.6') && Chef.respond_to?(:set_resource_priority_array)
  # this wires up the dynamic resource resolver to favor the cookbook version of windows_package over
  # the internal version (but the internal Chef::Resource::WindowsPackage is still the internal version
  # and a wrapper cookbook can override this e.g. for users that want to use the windows cookbook but
  # want the internal windows_package resource)
  Chef.set_resource_priority_array(:windows_package, [Chef::Resource::WindowsCookbookPackage], platform: 'windows')
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_package.rb to tempfile /tmp/chef-rest20160913-19215-hoplkj
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/windows_package.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/.foodcritic
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Adam Edwards (<adamed@chef.io>)
#
# Copyright:: 2014-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if RUBY_PLATFORM =~ /mswin|mingw32|windows/
  require 'win32ole'

  def execute_wmi_query(wmi_query)
    wmi = ::WIN32OLE.connect('winmgmts://')
    result = wmi.ExecQuery(wmi_query)
    return nil unless result.each.count > 0
    result
  end

  def wmi_object_property(wmi_object, wmi_property)
    wmi_object.send(wmi_property)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb to tempfile /tmp/chef-rest20160913-19215-qqbbws
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/wmi_helper.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# WARNING
#
# THIS CODE HAS BEEN MOVED TO CORE CHEF.  DO NOT SUMBIT PULL REQUESTS AGAINST THIS
# CODE.  IT WILL BE REMOVED IN THE FUTURE.
#

unless defined? Chef::Mixin::PowershellOut
  class Chef
    module Mixin
      module PowershellOut
        include Chef::Mixin::ShellOut

        begin
          include Chef::Mixin::WindowsArchitectureHelper
        rescue
          # nothing to do, as the include will happen when windows_architecture_helper.rb
          # is loaded.  This is for ease of removal of that library when either
          # powershell_out is core chef or powershell cookbook depends upon version
          # of chef that has Chef::Mixin::WindowsArchitectureHelper in core chef
        end

        def powershell_out(*command_args)
          Chef::Log.warn 'The powershell_out library in the windows cookbook is deprecated.'
          Chef::Log.warn 'Please upgrade to Chef 12.4.0 or later where it is built-in to core chef.'
          script = command_args.first
          options = command_args.last.is_a?(Hash) ? command_args.last : nil

          run_command(script, options)
        end

        def powershell_out!(*command_args)
          cmd = powershell_out(*command_args)
          cmd.error!
          cmd
        end

        private

        def run_command(script, options)
          if options && options[:architecture]
            architecture = options[:architecture]
            options.delete(:architecture)
          else
            architecture = node_windows_architecture(node)
          end

          disable_redirection = wow64_architecture_override_required?(node, architecture)

          if disable_redirection
            original_redirection_state = disable_wow64_file_redirection(node)
          end

          command = build_command(script)

          cmd = if options
                  shell_out(command, options)
                else
                  shell_out(command)
                end

          if disable_redirection
            restore_wow64_file_redirection(node, original_redirection_state)
          end

          cmd
        end

        def build_command(script)
          flags = [
            # Hides the copyright banner at startup.
            '-NoLogo',
            # Does not present an interactive prompt to the user.
            '-NonInteractive',
            # Does not load the Windows PowerShell profile.
            '-NoProfile',
            # always set the ExecutionPolicy flag
            # see http://technet.microsoft.com/en-us/library/ee176961.aspx
            '-ExecutionPolicy RemoteSigned',
            # Powershell will hang if STDIN is redirected
            # http://connect.microsoft.com/PowerShell/feedback/details/572313/powershell-exe-can-hang-if-stdin-is-redirected
            '-InputFormat None'
          ]

          command = "powershell.exe #{flags.join(' ')} -Command \"#{script}\""
          command
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/MAINTAINERS.md
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000226e380
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000226e858>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "MAINTAINERS.md"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
class Chef
  class Provider
    class WindowsFeature
      module Base
        def action_install
          if installed?
            Chef::Log.debug("#{@new_resource} is already installed - nothing to do")
          else
            install_feature(@new_resource.feature_name)
            @new_resource.updated_by_last_action(true)
            Chef::Log.info("#{@new_resource} installed feature")
          end
        end

        def action_remove
          if installed?
            remove_feature(@new_resource.feature_name)
            @new_resource.updated_by_last_action(true)
            Chef::Log.info("#{@new_resource} removed")
          else
            Chef::Log.debug("#{@new_resource} feature does not exist - nothing to do")
          end
        end

        def action_delete
          if available?
            delete_feature(@new_resource.feature_name)
            @new_resource.updated_by_last_action(true)
            Chef::Log.info("#{@new_resource} deleted")
          else
            Chef::Log.debug("#{@new_resource} feature is not installed - nothing to do")
          end
        end

        def install_feature(_name)
          raise Chef::Exceptions::UnsupportedAction, "#{self} does not support :install"
        end

        def remove_feature(_name)
          raise Chef::Exceptions::UnsupportedAction, "#{self} does not support :remove"
        end

        def delete_feature(_name)
          raise Chef::Exceptions::UnsupportedAction, "#{self} does not support :delete"
        end

        def installed?
          raise Chef::Exceptions::Override, "You must override installed? in #{self}"
        end

        def available?
          raise Chef::Exceptions::Override, "You must override available? in #{self}"
        end
      end
    end
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/feature_base.rb to tempfile /tmp/chef-rest20160913-19215-fgw4fu
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/feature_base.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x000000036bc300
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000036bc418>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "matchers.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_out.rb to tempfile /tmp/chef-rest20160913-19215-10r6d5x
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/powershell_out.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000205a7d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000205b728>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "README.md"]>

[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Library:: helper
#
# Copyright:: 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require 'uri'
require 'Win32API' if Chef::Platform.windows?
require 'chef/exceptions'

module Windows
  module Helper
    AUTO_RUN_KEY = 'HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run'.freeze unless defined?(AUTO_RUN_KEY)
    ENV_KEY = 'HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment'.freeze unless defined?(ENV_KEY)
    ExpandEnvironmentStrings = Win32API.new('kernel32', 'ExpandEnvironmentStrings', %w(P P L), 'L') if Chef::Platform.windows? && !defined?(ExpandEnvironmentStrings)

    # returns windows friendly version of the provided path,
    # ensures backslashes are used everywhere
    def win_friendly_path(path)
      path.gsub(::File::SEPARATOR, ::File::ALT_SEPARATOR || '\\') if path
    end

    # account for Window's wacky File System Redirector
    # http://msdn.microsoft.com/en-us/library/aa384187(v=vs.85).aspx
    # especially important for 32-bit processes (like Ruby) on a
    # 64-bit instance of Windows.
    def locate_sysnative_cmd(cmd)
      if ::File.exist?("#{ENV['WINDIR']}\\sysnative\\#{cmd}")
        "#{ENV['WINDIR']}\\sysnative\\#{cmd}"
      elsif ::File.exist?("#{ENV['WINDIR']}\\system32\\#{cmd}")
        "#{ENV['WINDIR']}\\system32\\#{cmd}"
      else
        cmd
      end
    end

    # Create a feature provider dependent value object.
    # mainly created becasue Windows Feature names are
    # different based on whether dism.exe or servicemanagercmd.exe
    # is used for installation
    def value_for_feature_provider(provider_hash)
      p = Chef::Platform.find_provider_for_node(node, :windows_feature)
      key = p.to_s.downcase.split('::').last
      provider_hash[key] || provider_hash[key.to_sym]
    end

    # singleton instance of the Windows Version checker
    def win_version
      @win_version ||= Windows::Version.new
    end

    # Helper function to properly parse a URI
    def as_uri(source)
      URI.parse(source)
    rescue URI::InvalidURIError
      Chef::Log.warn("#{source} was an invalid URI. Trying to escape invalid characters")
      URI.parse(URI.escape(source))
    end

    # if a file is local it returns a windows friendly path version
    # if a file is remote it caches it locally
    def cached_file(source, checksum = nil, windows_path = true)
      @installer_file_path ||= begin

        if source =~ /^(file|ftp|http|https):\/\//
          uri = as_uri(source)
          cache_file_path = "#{Chef::Config[:file_cache_path]}/#{::File.basename(::URI.unescape(uri.path))}"
          Chef::Log.debug("Caching a copy of file #{source} at #{cache_file_path}")
          remote_file cache_file_path do
            source source
            backup false
            checksum checksum unless checksum.nil?
          end.run_action(:create)
        else
          cache_file_path = source
        end

        windows_path ? win_friendly_path(cache_file_path) : cache_file_path
      end
    end

    # Expands the environment variables
    def expand_env_vars(path)
      # We pick 32k because that is the largest it could be:
      # http://msdn.microsoft.com/en-us/library/windows/desktop/ms724265%28v=vs.85%29.aspx
      buf = 0.chr * 32 * 1024 # 32k
      if ExpandEnvironmentStrings.call(path.dup, buf, buf.length) == 0
        raise Chef::Exceptions::Win32APIError, 'Failed calling ExpandEnvironmentStrings (received 0)'
      end
      buf.strip
    end

    def is_package_installed?(package_name) # rubocop:disable Style/PredicateName
      installed_packages.include?(package_name)
    end

    def installed_packages
      @installed_packages || begin
        installed_packages = {}
        # Computer\HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall
        installed_packages.merge!(extract_installed_packages_from_key(::Win32::Registry::HKEY_LOCAL_MACHINE)) # rescue nil
        # 64-bit registry view
        # Computer\HKEY_LOCAL_MACHINE\Software\Wow6464Node\Microsoft\Windows\CurrentVersion\Uninstall
        installed_packages.merge!(extract_installed_packages_from_key(::Win32::Registry::HKEY_LOCAL_MACHINE, (::Win32::Registry::Constants::KEY_READ | 0x0100))) # rescue nil
        # 32-bit registry view
        # Computer\HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall
        installed_packages.merge!(extract_installed_packages_from_key(::Win32::Registry::HKEY_LOCAL_MACHINE, (::Win32::Registry::Constants::KEY_READ | 0x0200))) # rescue nil
        # Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Uninstall
        installed_packages.merge!(extract_installed_packages_from_key(::Win32::Registry::HKEY_CURRENT_USER)) # rescue nil
        installed_packages
      end
    end

    private

    def extract_installed_packages_from_key(hkey = ::Win32::Registry::HKEY_LOCAL_MACHINE, desired = ::Win32::Registry::Constants::KEY_READ)
      uninstall_subkey = 'Software\Microsoft\Windows\CurrentVersion\Uninstall'
      packages = {}
      begin
        ::Win32::Registry.open(hkey, uninstall_subkey, desired) do |reg|
          reg.each_key do |key, _wtime|
            begin
              k = reg.open(key, desired)
              display_name = begin
                               k['DisplayName']
                             rescue
                               nil
                             end
              version = begin
                          k['DisplayVersion']
                        rescue
                          'NO VERSION'
                        end
              uninstall_string = begin
                                   k['UninstallString']
                                 rescue
                                   nil
                                 end
              if display_name
                packages[display_name] = { name: display_name,
                                           version: version,
                                           uninstall_string: uninstall_string }
              end
            rescue ::Win32::Registry::Error
            end
          end
        end
      rescue ::Win32::Registry::Error
      end
      packages
    end
  end
end

Chef::Recipe.send(:include, Windows::Helper)
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e49e08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e49f20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   ".foodcritic"]>

[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_helper.rb to tempfile /tmp/chef-rest20160913-19215-a06ya4
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x000000020c2ea0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000020c31c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "attributes",
   "default.rb"]>

[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/metadata.json
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/CHANGELOG.md
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000000f52170
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000000f524e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "CHANGELOG.md"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001f80b28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001f80f10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "CONTRIBUTING.md"]>

[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a review from an existing maintainer
for the cookbook to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Adam Edwards](https://github.com/adamedx)

# Maintainers
* [Adam Edwards](https://github.com/adamedx)
* [Kartik Null Cating-Subramanian](https://github.com/ksubrama)
* [Steven Murawski](https://github.com/smurawski)
* [Matt Wrock](https://github.com/mwrock)
* [Jay Mundrawala](https://github.com/jaym)
* [Claire McQuin](https://github.com/mcquin)
* [Salim Alam](https://github.com/chefsalim)
* [Tim Smith](https://github.com/tas50)
* [Jennifer Davis](https://github.com/sigje)
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/MAINTAINERS.md to tempfile /tmp/chef-rest20160913-19215-8q0xvb
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/MAINTAINERS.md in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000139eda0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000139ef58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "metadata.json"]>

[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)

  ChefSpec.define_matcher :windows_auto_run
  ChefSpec.define_matcher :windows_certificate
  ChefSpec.define_matcher :windows_certificate_binding
  ChefSpec.define_matcher :windows_feature
  ChefSpec.define_matcher :windows_font
  ChefSpec.define_matcher :windows_http_acl
  ChefSpec.define_matcher :windows_package
  ChefSpec.define_matcher :windows_pagefile
  ChefSpec.define_matcher :windows_path
  ChefSpec.define_matcher :windows_printer
  ChefSpec.define_matcher :windows_printer_port
  ChefSpec.define_matcher :windows_shortcut
  ChefSpec.define_matcher :windows_task
  ChefSpec.define_matcher :windows_zipfile

  #
  # Assert that a +windows_certificate+ resource exists in the Chef run with the
  # action +:create+. Given a Chef Recipe that creates 'c:\test\mycert.pfx' as a
  # +windows_certificate+:
  #
  #     windows_certificate 'c:\test\mycert.pfx' do
  #       action :create
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_certificate+ resource with ChefSpec.
  #
  # @example Assert that a +windows_certificate+ was created
  #   expect(chef_run).to create_windows_certificate('c:\test\mycert.pfx')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def create_windows_certificate(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate, :create, resource_name)
  end

  #
  # Assert that a +windows_certificate+ resource exists in the Chef run with the
  # action +:delete+. Given a Chef Recipe that deletes "me.acme.com" as a
  # +windows_certificate+:
  #
  #     windows_certificate 'me.acme.com' do
  #       action :delete
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_certificate+ resource with ChefSpec.
  #
  # @example Assert that a +windows_certificate+ was _not_ deleted
  #   expect(chef_run).to_not delete_windows_certificate('me.acme.com')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def delete_windows_certificate(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate, :delete, resource_name)
  end

  #
  # Assert that a +windows_certificate+ resource exists in the Chef run with the
  # action +:acl_add+. Given a Chef Recipe that adds a private key acl to "me.acme.com" as a
  # +windows_certificate+:
  #
  #     windows_certificate 'me.acme.com' do
  #       private_key_acl ['acme\fred', 'pc\jane']
  #       action :acl_add
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_certificate+ resource with ChefSpec.
  #
  # @example Assert that a +windows_certificate+ was _not_ removed
  #   expect(chef_run).to add_acl_to_windows_certificate('me.acme.com').with(private_key_acl: ['acme\fred', 'pc\jane'])
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def add_acl_to_windows_certificate(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate, :acl_add, resource_name)
  end

  #
  # Assert that a +windows_package+ resource exists in the Chef run with the
  # action +:install+. Given a Chef Recipe that installs "Node.js" as a
  # +windows_package+:
  #
  #     windows_package 'Node.js' do
  #       source 'http://nodejs.org/dist/v0.10.26/x64/node-v0.10.26-x64.msi'
  #       action :install
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_package+ resource with ChefSpec.
  #
  # @example Assert that a +windows_package+ was installed
  #   expect(chef_run).to install_windows_package('Node.js')
  #
  # @example Assert that a +windows_package+ was _not_ installed
  #   expect(chef_run).to_not install_windows_package('7-zip')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def install_windows_package(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_package, :install, resource_name)
  end

  #
  # Assert that a +windows_package+ resource exists in the Chef run with the
  # action +:remove+. Given a Chef Recipe that removes "Node.js" as a
  # +windows_package+:
  #
  #     windows_package 'Node.js' do
  #       action :remove
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_package+ resource with ChefSpec.
  #
  # @example Assert that a +windows_package+ was installed
  #   expect(chef_run).to remove_windows_package('Node.js')
  #
  # @example Assert that a +windows_package+ was _not_ removed
  #   expect(chef_run).to_not remove_windows_package('7-zip')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def remove_windows_package(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_package, :remove, resource_name)
  end

  #
  # Assert that a +windows_feature+ resource exists in the Chef run with the
  # action +:install+. Given a Chef Recipe that installs "NetFX3" as a
  # +windows_feature+:
  #
  #     windows_feature 'NetFX3' do
  #       action :install
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_feature+ resource with ChefSpec.
  #
  # @example Assert that a +windows_feature+ was installed
  #   expect(chef_run).to install_windows_feature('NetFX3')
  #
  # @example Assert that a +windows_feature+ was _not_ installed
  #   expect(chef_run).to_not install_windows_feature('NetFX3')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def install_windows_feature(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature, :install, resource_name)
  end

  #
  # Assert that a +windows_feature+ resource exists in the Chef run with the
  # action +:remove+. Given a Chef Recipe that removes "NetFX3" as a
  # +windows_feature+:
  #
  #     windows_feature 'NetFX3' do
  #       action :remove
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_feature+ resource with ChefSpec.
  #
  # @example Assert that a +windows_feature+ was removed
  #   expect(chef_run).to remove_windows_feature('NetFX3')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def remove_windows_feature(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature, :remove, resource_name)
  end

  #
  # Assert that a +windows_feature+ resource exists in the Chef run with the
  # action +:delete+. Given a Chef Recipe that deletes "NetFX3" as a
  # +windows_feature+:
  #
  #     windows_feature 'NetFX3' do
  #       action :delete
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_feature+ resource with ChefSpec.
  #
  # @example Assert that a +windows_feature+ was deleted
  #   expect(chef_run).to delete_windows_feature('NetFX3')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def delete_windows_feature(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature, :delete, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:create+. Given a Chef Recipe that creates "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       command 'mybatch.bat'
  #       action :create
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was created
  #   expect(chef_run).to create_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def create_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :create, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:disable+. Given a Chef Recipe that creates "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :disable
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was disabled
  #   expect(chef_run).to disable_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def disable_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :disable, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:enable+. Given a Chef Recipe that creates "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :enable
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was enabled
  #   expect(chef_run).to enable_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def enable_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :enable, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:delete+. Given a Chef Recipe that deletes "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :delete
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was deleted
  #   expect(chef_run).to delete_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def delete_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :delete, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:run+. Given a Chef Recipe that runs "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :run
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was run
  #   expect(chef_run).to run_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def run_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :run, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:change+. Given a Chef Recipe that changes "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :change
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was changed
  #   expect(chef_run).to change_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def change_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :change, resource_name)
  end

  #
  # Assert that a +windows_path+ resource exists in the Chef run with the
  # action +:add+. Given a Chef Recipe that adds "C:\7-Zip" to the Windows
  # PATH env var
  #
  #     windows_path 'C:\7-Zip' do
  #       action :add
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_path+ resource with ChefSpec.
  #
  # @example Assert that a +windows_path+ was added
  #   expect(chef_run).to add_windows_path('C:\7-Zip')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def add_windows_path(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_path, :add, resource_name)
  end

  #
  # Assert that a +windows_path+ resource exists in the Chef run with the
  # action +:remove+. Given a Chef Recipe that removes "C:\7-Zip" from the
  # Windows PATH env var
  #
  #     windows_path 'C:\7-Zip' do
  #       action :remove
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_path+ resource with ChefSpec.
  #
  # @example Assert that a +windows_path+ was removed
  #   expect(chef_run).to remove_windows_path('C:\7-Zip')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def remove_windows_path(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_path, :remove, resource_name)
  end

  #
  # Assert that a +windows_pagefile+ resource exists in the Chef run with the
  # action +:set+. Given a Chef Recipe that sets a pagefile
  #
  #     windows_pagefile "pagefile" do
  #       system_managed true
  #       initial_size 1024
  #       maximum_size 4096
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_pagefile+ resource with ChefSpec.
  #
  # @example Assert that a +windows_pagefile+ was set
  #   expect(chef_run).to set_windows_pagefile('pagefile').with(
  #     initial_size: 1024)
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def set_windows_pagefile(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_pagefile, :set, resource_name)
  end

  #
  # Assert that a +windows_zipfile+ resource exists in the Chef run with the
  # action +:unzip+. Given a Chef Recipe that extracts "SysinternalsSuite.zip"
  # to c:/bin
  #
  #     windows_zipfile "c:/bin" do
  #       source "http://download.sysinternals.com/Files/SysinternalsSuite.zip"
  #       action :unzip
  #       not_if {::File.exists?("c:/bin/PsExec.exe")}
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_zipfile+ resource with ChefSpec.
  #
  # @example Assert that a +windows_zipfile+ was unzipped
  #   expect(chef_run).to unzip_windows_zipfile_to('c:/bin')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def unzip_windows_zipfile_to(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_zipfile, :unzip, resource_name)
  end

  #
  # Assert that a +windows_zipfile+ resource exists in the Chef run with the
  # action +:zip+. Given a Chef Recipe that zips "c:/src"
  # to c:/code.zip
  #
  #     windows_zipfile "c:/code.zip" do
  #       source "c:/src"
  #       action :zip
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_zipfile+ resource with ChefSpec.
  #
  # @example Assert that a +windows_zipfile+ was zipped
  #   expect(chef_run).to zip_windows_zipfile_to('c:/code.zip')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def zip_windows_zipfile_to(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_zipfile, :zip, resource_name)
  end

  # All the other less commonly used LWRPs
  def create_windows_shortcut(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_shortcut, :create, resource_name)
  end

  def create_windows_auto_run(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_auto_run, :create, resource_name)
  end

  def remove_windows_auto_run(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_auto_run, :remove, resource_name)
  end

  def create_windows_printer(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_printer, :create, resource_name)
  end

  def delete_windows_printer(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_printer, :delete, resource_name)
  end

  def create_windows_printer_port(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_printer_port, :create, resource_name)
  end

  def delete_windows_printer_port(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_printer_port, :delete, resource_name)
  end

  def install_windows_font(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_font, :install, resource_name)
  end

  def create_windows_certificate_binding(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate_binding, :create, resource_name)
  end

  def delete_windows_certificate_binding(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate_binding, :delete, resource_name)
  end

  def create_windows_http_acl(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_http_acl, :create, resource_name)
  end

  def delete_windows_http_acl(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_http_acl, :delete, resource_name)
  end
end
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/matchers.rb to tempfile /tmp/chef-rest20160913-19215-1u9lnbk
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/matchers.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
# windows Cookbook CHANGELOG

This file is used to list changes made in each version of the windows cookbook.

## 2.1.0 (2016-09-07)

- Added the powershell_out mixin back to allow for Chef 12.1-12.3 compatibility
- Set the dependency back to Chef 12.1

## 2.0.1 (2016-09-07)

- Clarify the platforms we support in the readme
- Require Chef 12.4 which included powershell_out

## 2.0.0 (2016-09-07)

This cookbook now requires Chef 12.1+. Resources (lwrps) that have been moved into the chef-client have been removed from this cookbook. While the functionality in the chef-client is similar, and in many cases improved, the names and properties have changed in some cases. Make sure to check <https://docs.chef.io/resources.html> for full documentation on each of these resources, and as usual carefully test your cookbooks before upgrading to this new release.

### Removed resources and helpers:

- windows_reboot provider
- windows_batch provider
- windows_registry provider
- Powershell out for only_if / not_if statements
- Windows Architecture Helper
- Reboot handler and the dependency on the chef_handler cookbook

#### Changes resource behavior

- For Chef clients 12.6 and later the windows_package provider will no longer be used as windows_package logic is now included in Chef. Chef 12.1 - 12.5.1 clients will continue to default to the windows_package provider in this cookbook for full compatibility.

#### Additional changes

- Updated and expanded testing
- Fixed the windows_feature powershell provider to run on Windows 2008 / 2008 R2
- Added TrustedPublisher as a valid cert store_name
- Updated the certificate_binding resource to respect the app_id property
- Added why-run support to the auto_run resource

## 1.44.3 (2016-08-16)

- Remove support for ChefSpec <4.1 in the matchers
- Add missing Chefspec matchers

## 1.44.2 (2016-08-15)

- Add missing windows_font matcher
- Add chef_version to the metadata
- Switch from Rubocop to Cookstyle and use our improved Rakefile
- Remove test deps from the Gemfile that are in ChefDK

## v1.44.1

- [PR 375](https://github.com/chef-cookbooks/windows/pull/375) - Fix comparison of string to number in platform_version
- [PR 376](https://github.com/chef-cookbooks/windows/pull/376) - Switch to cookstyle, update gem deps and other minor stuff
- [PR 377](https://github.com/chef-cookbooks/windows/pull/377) - add test and check for feature installation through powershell

## v1.44.0

- [PR 372](https://github.com/chef-cookbooks/windows/pull/372) - Support Server 2008 for feature installs via PowerShell

## v1.43.0

- [PR 369](https://github.com/chef-cookbooks/windows/pull/369) - Add a enable_windows_task matcher

## v1.42.0

- [PR 365](https://github.com/chef-cookbooks/windows/pull/365) - Escape command quotes when passing to schtasks

## v1.41.0

- [PR 364](https://github.com/chef-cookbooks/windows/pull/364) - Configurable font source

## v1.40.0

- [PR 357](https://github.com/chef-cookbooks/windows/pull/357) - Fixes for schtasks
- [PR 359](https://github.com/chef-cookbooks/windows/pull/359) - take bundler out of the appveyor build
- [PR 356](https://github.com/chef-cookbooks/windows/pull/356) - Misc fixes and updates
- [PR 355](https://github.com/chef-cookbooks/windows/pull/355) - bump and pin rubocop, fix broken cop
- [PR 348](https://github.com/chef-cookbooks/windows/pull/348) - Make notify work for `windows_task`

## v1.39.2

- [PR 329](https://github.com/chef-cookbooks/windows/pull/329) - Silence `compile_time` warning for `chef_gem`
- [PR 338](https://github.com/chef-cookbooks/windows/pull/338) - ChefSpec matchers for `windows_certificate`
- [PR 341](https://github.com/chef-cookbooks/windows/pull/341) - Updated rubocop and FoodCritic compliance
- [PR 336](https://github.com/chef-cookbooks/windows/pull/336) - Fixed where clause compliance with PS v1/v2

## v1.39.1

- [PR 325](https://github.com/chef-cookbooks/windows/pull/325) - Raise an error if a bogus feature is given to the powershell `windows_feature` provider
- [PR 326](https://github.com/chef-cookbooks/windows/pull/326) - Fix `windows_font` and copy the font file before installation

## v1.39.0

- [PR 305](https://github.com/chef-cookbooks/windows/pull/305) - Added `months` attribute to `windows_task` and allow `frequency_modifier` to accept values 'FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', and 'LASTDAY' for monthly frequency
- [PR 310](https://github.com/chef-cookbooks/windows/pull/310) - Fix `windows_task` breaks when there is a space in the user name
- [PR 314](https://github.com/chef-cookbooks/windows/pull/314) - fixes reboot handling on some chef versions below 11.12
- [PR 317](https://github.com/chef-cookbooks/windows/pull/317) - Adds a `disable_windows_task` matcher
- [PR 311](https://github.com/chef-cookbooks/windows/pull/311) - Implements the `cwd` attribute of `windows_task`
- [PR 318](https://github.com/chef-cookbooks/windows/pull/318) - Use dsl instead of manual resource instanciation
- [PR 303](https://github.com/chef-cookbooks/windows/pull/303) - Fix `http_acl` idempotency when user name contains a space
- [PR 257](https://github.com/chef-cookbooks/windows/pull/257) - Speed up windows_feature dism provider
- [PR 319](https://github.com/chef-cookbooks/windows/pull/319) - Add a `.kitchen.cloud.yml` for kitchen testing on Azure
- [PR 315](https://github.com/chef-cookbooks/windows/pull/315) - Deprecate `windows_package` and forward to `Chef::Provider::Package::Windows` when running 12.6 or higher

## v1.38.4

- [PR 295](https://github.com/chef-cookbooks/windows/pull/295) - Escape `http_acl` username
- [PR 293](https://github.com/chef-cookbooks/windows/pull/293) - Separating assignments to `code_script` and `guard_script` as they should be different scripts and not hold the same reference
- [Issue 298](https://github.com/chef-cookbooks/windows/issues/298) - `windows_certificate_binding` is ignoring `store_name` attribute and always saving to `MY`
- [Issue 296](https://github.com/chef-cookbooks/windows/pull/302) - Fixes `windows_certificate` idempotentcy on chef 11 clients

## v1.38.3

- Make `windows_task` resource idempotent (double quotes need to be single when comparing)
- [Issue 245](https://github.com/chef-cookbooks/windows/issues/256) - Fix `No resource, method, or local variable named`password' for `Chef::Provider::WindowsTask'` when `interactive_enabled` is `true`

## v1.38.2

- Lazy-load windows-pr gem library files. Chef 12.5 no longer includes the windows-pr gem. Earlier versions of this cookbook will not compile on Chef 12.5.

## v1.38.1 (2015-07-28)

- Publishing without extended metadata

## v1.38.0 (2015-07-27)

- Do not set new_resource.password to nil, Fixes #219, Fixes #220
- Add `windows_certificate` resource #212
- Add `windows_http_acl` resource #214

## v1.37.0 (2015-05-14)

- fix `windows_package` `Chef.set_resource_priority_array` warning
- update `windows_task` to support tasks in folders
- fix `windows_task` delete action
- replace `windows_task` name attribute with 'task_name'
- add :end action to 'windows_task'
- Tasks created with the `windows_task` resource default to the SYSTEM account
- The force attribute for `windows_task` makes the :create action update the definition.
- `windows_task` :create action will force an update of the task if the user or command differs from the currently configured setting.
- add default provider for `windows_feature`
- add a helper to make sure `WindowsRebootHandler` works in ChefSpec
- added a source and issues url to the metadata for Supermarket
- updated the Gemfile and .kitchen.yml to reflect the latest test-kitchen windows guest support
- started tests using the kitchen-pester verifier

## v1.36.6 (2014-12-18)

- reverting all chef_gem compile_time work

## v1.36.5 (2014-12-18)

- Fix zipfile provider

## v1.36.4 (2014-12-18)

- Fix Chef chef_gem with Chef::Resource::ChefGem.method_defined?(:compile_time)

## v1.36.3 (2014-12-18)

- Fix Chef chef_gem below 12.1.0

## v1.36.2 (2014-12-17)

- Being explicit about usage of the chef_gem's compile_time property.
- Eliminating future deprecation warnings in Chef 12.1.0

## v1.36.1 (2014-12-17)

- [PR 160](https://github.com/chef-cookbooks/windows/pull/160) - Fix Chef 11.10 / versions without windows_package in core

## v1.36.0 (2014-12-16)

- [PR 145](https://github.com/chef-cookbooks/windows/pull/145) - do not fail on non-existant task
- [PR 144](https://github.com/chef-cookbooks/windows/pull/144) - Add a zip example to the README
- [PR 110](https://github.com/chef-cookbooks/windows/pull/110) - More zip documentation
- [PR 148](https://github.com/chef-cookbooks/windows/pull/148) - Add an LWRP for font installation
- [PR 151](https://github.com/chef-cookbooks/windows/pull/151) - Fix windows_package on Chef 12, add integration tests
- [PR 129](https://github.com/chef-cookbooks/windows/pull/129) - Add enable/disable actions to task LWRP
- [PR 115](https://github.com/chef-cookbooks/windows/pull/115) - require Chef::Mixin::PowershellOut before using it
- [PR 88](https://github.com/chef-cookbooks/windows/pull/88) - Code 1003 from servermanagercmd.exe is valid

## v1.34.8 (2014-10-31)

- [Issue 137](https://github.com/chef-cookbooks/windows/issues/137) - windows_path resource breaks with ruby 2.x

## v1.34.6 (2014-09-22)

- [Chef-2009](https://github.com/chef/chef/issues/2009) - Patch to work around a regression in [Chef](https://github.com/chef/chef)

## v1.34.2 (2014-08-12)

- [Issue 99](https://github.com/chef-cookbooks/windows/issues/99) - Remove rubygems / Internet wmi-lite dependency (PR #108)

## v1.34.0 (2014-08-04)

- [Issue 99](https://github.com/chef-cookbooks/windows/issues/99) - Use wmi-lite to fix Chef 11.14.2 break in rdp-ruby-wmi dependency

## v1.32.1 (2014-07-15)

- Fixes broken cookbook release

## v1.32.0 (2014-07-11)

- Add ChefSpec resource methods to allow notification testing (@sneal)
- Add use_inline_resources to providers (@micgo)
- [COOK-4728] - Allow reboot handler to be used as an exception handler
- [COOK-4620] - Ensure win_friendly_path doesn't error out when ALT_SEPARATOR is nil

## v1.31.0 (2014-05-07)

- [COOK-2934] - Add windows_feature support for 2 new DISM attributes: all, source

## v1.30.2 (2014-04-02)

- [COOK-4414] - Adding ChefSpec matchers

## v1.30.0 (2014-02-14)

- [COOK-3715] - Unable to create a startup task with no login
- [COOK-4188] - Add powershell_version method to return Powershell version

## v1.12.8 (2014-01-21)

- [COOK-3988] Don't unescape URI before constructing it.

## v1.12.6 (2014-01-03)

- [COOK-4168] Circular dep on powershell - moving powershell libraries into windows. removing dependency on powershell

## v1.12.4

Fixing depend/depends typo in metadata.rb

## v1.12.2

### Bug

- **[COOK-4110](https://tickets.chef.io/browse/COOK-4110)** - feature_servermanager installed? method regex bug

## v1.12.0

### Bug

- **[COOK-3793](https://tickets.chef.io/browse/COOK-3793)** - parens inside parens of README.md don't render

### New Feature

- **[COOK-3714](https://tickets.chef.io/browse/COOK-3714)** - Powershell features provider and delete support.

## v1.11.0

### Improvement

- **[COOK-3724](https://tickets.chef.io/browse/COOK-3724)** - Rrecommend built-in resources over cookbook resources
- **[COOK-3515](https://tickets.chef.io/browse/COOK-3515)** - Remove unprofessional comment from library
- **[COOK-3455](https://tickets.chef.io/browse/COOK-3455)** - Add Windows Server 2012R2 to windows cookbook version helper

### Bug

- **[COOK-3542](https://tickets.chef.io/browse/COOK-3542)** - Fix an issue where `windows_zipfile` fails with LoadError
- **[COOK-3447](https://tickets.chef.io/browse/COOK-3447)** - Allow Overriding Of The Default Reboot Timeout In windows_reboot_handler
- **[COOK-3382](https://tickets.chef.io/browse/COOK-3382)** - Allow windows_task to create `on_logon` tasks
- **[COOK-2098](https://tickets.chef.io/browse/COOK-2098)** - Fix and issue where the `windows_reboot` handler is ignoring the reboot time

### New Feature

- **[COOK-3458](https://tickets.chef.io/browse/COOK-3458)** - Add support for `start_date` and `start_time` in `windows_task`

## v1.10.0

### Improvement

- [COOK-3126]: `windows_task` should support the on start frequency
- [COOK-3127]: Support the force option on task create and delete

## v1.9.0

### Bug

- [COOK-2899]: windows_feature fails when a feature install requires a reboot
- [COOK-2914]: Foodcritic failures in Cookbooks
- [COOK-2983]: windows cookbook has foodcritic failures

### Improvement

- [COOK-2686]: Add Windows Server 2012 to version.rb so other depending chef scripts can detect Windows Server 2012

## v1.8.10

When using Windows qualified filepaths (C:/foo), the #absolute? method for URI returns true, because "C" is the scheme.

This change checks that the URI is http or https scheme, so it can be passed off to remote_file appropriately.

- [COOK-2729] - allow only http, https URI schemes

## v1.8.8

- [COOK-2729] - helper should use URI rather than regex and bare string

## v1.8.6

- [COOK-968] - `windows_package` provider should gracefully handle paths with spaces
- [COOK-222] - `windows_task` resource does not declare :change action
- [COOK-241] - Windows cookbook should check for redefined constants
- [COOK-248] - Windows package install type is case sensitive

## v1.8.4

- [COOK-2336] - MSI That requires reboot returns with RC 3010 and causes chef run failure
- [COOK-2368] - `version` attribute of the `windows_package` provider should be documented

## v1.8.2

**Important**: Use powershell in nodes expanded run lists to ensure powershell is downloaded, as powershell has a dependency on this cookbook; v1.8.0 created a circular dependency.

- [COOK-2301] - windows 1.8.0 has circular dependency on powershell

## v1.8.0

- [COOK-2126] - Add checksum attribute to `windows_zipfile`
- [COOK-2142] - Add printer and `printer_port` LWRPs
- [COOK-2149] - Chef::Log.debug Windows Package command line
- [COOK-2155] -`windows_package` does not send checksum to `cached_file` in `installer_type`

## v1.7.0

- [COOK-1745] - allow for newer versions of rubyzip

## v1.6.0

- [COOK-2048] - undefined method for Falseclass on task :change when action is :nothing (and task doesn't exist)
- [COOK-2049] - Add `windows_pagefile` resource

## v1.5.0

- [COOK-1251] - Fix LWRP "NotImplementedError"
- [COOK-1921] - Task LWRP will return true for resource exists when no other scheduled tasks exist
- [COOK-1932] - Include :change functionality to windows task lwrp

## v1.4.0:

- [COOK-1571] - `windows_package` resource (with msi provider) does not accept spaces in filename
- [COOK-1581] - Windows cookbook needs a scheduled tasks LWRP
- [COOK-1584] - `windows_registry` should support all registry types

## v1.3.4

- [COOK-1173] - `windows_registry` throws Win32::Registry::Error for action :remove on a nonexistent key
- [COOK-1182] - windows package sets start window title instead of quoting a path
- [COOK-1476] - zipfile lwrp should support :zip action
- [COOK-1485] - package resource fails to perform install correctly when "source" contains quote
- [COOK-1519] - add action :remove for path lwrp

## v1.3.2

- [COOK-1033] - remove the `libraries/ruby_19_patches.rb` file which causes havoc on non-Windows systems.
- [COOK-811] - add a timeout parameter attribute for `windows_package`

## v1.3.0

- [COOK-1323] - Update for changes in Chef 0.10.10.

  - Setting file mode doesn't make sense on Windows (package provider
  - and `reboot_handler` recipe)
  - Prefix ::Win32 to avoid namespace collision with Chef::Win32
  - (`registry_helper` library)
  - Use chef_gem instead of gem_package so gems get installed correctly under the Ruby environment Chef runs in (reboot_handler recipe, zipfile provider)

## v1.2.12

- [COOK-1037] - specify version for rubyzip gem
- [COOK-1007] - `windows_feature` does not work to remove features with dism
- [COOK-667] - shortcut resource + provider for Windows platforms

## v1.2.10

- [COOK-939] - add `type` parameter to `windows_registry` to allow binary registry keys.
- [COOK-940] - refactor logic so multiple values get created.

## v1.2.8

- FIX: Older Windows (Windows Server 2003) sometimes return 127 on successful forked commands
- FIX: `windows_package`, ensure we pass the WOW* registry redirection flags into reg.open

## v1.2.6

- patch to fix [CHEF-2684], Open4 is named Open3 in Ruby 1.9
- Ruby 1.9's Open3 returns 0 and 42 for successful commands
- retry keyword can only be used in a rescue block in Ruby 1.9

## v1.2.4

- `windows_package` - catch Win32::Registry::Error that pops up when searching certain keys

## v1.2.2

- combined numerous helper libarires for easier sharing across libaries/LWRPs
- renamed Chef::Provider::WindowsFeature::Base file to the more descriptive `feature_base.rb`
- refactored `windows_path` LWRP

  - :add action should MODIFY the the underlying ENV variable (vs CREATE)
  - deleted greedy :remove action until it could be made more idempotent

- added a `windows_batch` resource/provider for running batch scripts remotely

## v1.2.0

- [COOK-745] gracefully handle required server restarts on Windows platform

  - WindowsRebootHandler for requested and pending reboots
  - `windows_reboot` LWRP for requesting (receiving notifies) reboots
  - `reboot_handler` recipe for enabling WindowsRebootHandler as a report handler

- [COOK-714] Correct initialize misspelling

- RegistryHelper - new `get_values` method which returns all values for a particular key.

## v1.0.8

- [COOK-719] resource/provider for managing windows features
- [COOK-717] remove `windows_env_vars` resource as env resource exists in core chef
- new `Windows::Version` helper class
- refactored `Windows::Helper` mixin

## v1.0.6

- added `force_modify` action to `windows_registry` resource
- add `win_friendly_path` helper
- re-purpose default recipe to install useful supporting windows related gems

## v1.0.4

- [COOK-700] new resources and improvements to the `windows_registry` provider (thanks Paul Morton!)

  - Open the registry in the bitednes of the OS
  - Provide convenience methods to check if keys and values exit
  - Provide convenience method for reading registry values
  - NEW - `windows_auto_run` resource/provider
  - NEW - `windows_env_vars` resource/provider
  - NEW - `windows_path` resource/provider

- re-write of the `windows_package` logic for determining current installed packages

- new checksum attribute for `windows_package` resource...useful for remote packages

## v1.0.2

- [COOK-647] account for Wow6432Node registry redirecter
- [COOK-656] begin/rescue on win32/registry

## v1.0.0

- [COOK-612] initial release
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
# Windows Cookbook

[![Build Status](https://travis-ci.org/chef-cookbooks/windows.svg?branch=master)](http://travis-ci.org/chef-cookbooks/windows) [![Cookbook Version](https://img.shields.io/cookbook/v/windows.svg)](https://supermarket.chef.io/cookbooks/windows)

Provides a set of Windows-specific primitives (Chef resources) meant to aid in the creation of cookbooks/recipes targeting the Windows platform.

## Requirements

### Platforms

- Windows 7
- Windows Server 2008 R2
- Windows 8, 8.1
- Windows Server 2012 (R1, R2)

### Chef

- Chef 12.1+

## Resource/Provider

### windows_auto_run

#### Actions

- `:create` - Create an item to be run at login
- `:remove` - Remove an item that was previously setup to run at login

#### Attribute Parameters

- `name` - Name attribute. The name of the value to be stored in the registry
- `program` - The program to be run at login
- `args` - The arguments for the program

#### Examples

Run BGInfo at login

```ruby
windows_auto_run 'BGINFO' do
  program 'C:/Sysinternals/bginfo.exe'
  args    '\'C:/Sysinternals/Config.bgi\' /NOLICPROMPT /TIMER:0'
  action  :create
end
```

### windows_certificate

Installs a certificate into the Windows certificate store from a file, and grants read-only access to the private key for designated accounts. Due to current limitations in winrm, installing certificated remotely may not work if the operation requires a user profile. Operations on the local machine store should still work.

#### Actions

- `:create` - creates or updates a certificate.
- `:delete` - deletes a certificate.
- `:acl_add` - adds read-only entries to a certificate's private key ACL.

#### Attribute Parameters

- `source` - name attribute. The source file (for create and acl_add), thumbprint (for delete and acl_add) or subject (for delete).
- `pfx_password` - the password to access the source if it is a pfx file.
- `private_key_acl` - array of 'domain\account' entries to be granted read-only access to the certificate's private key. This is not idempotent.
- `store_name` - the certificate store to manipulate. One of MY (default : personal store), CA (trusted intermediate store) or ROOT (trusted root store).
- `user_store` - if false (default) then use the local machine store; if true then use the current user's store.

#### Examples

```ruby
# Add PFX cert to local machine personal store and grant accounts read-only access to private key
windows_certificate "c:/test/mycert.pfx" do
    pfx_password    "password"
    private_key_acl    ["acme\fred", "pc\jane"]
end
```

```ruby
# Add cert to trusted intermediate store
windows_certificate "c:/test/mycert.cer" do
    store_name    "CA"
end
```

```ruby
# Remove all certicates matching the subject
windows_certificate "me.acme.com" do
    action :delete
end
```

### windows_certificate_binding

Binds a certificate to an HTTP port in order to enable TLS communication.

#### Actions

- `:create` - creates or updates a binding.
- `:delete` - deletes a binding.

#### Attribute Parameters

- `cert_name` - name attribute. The thumbprint(hash) or subject that identifies the certificate to be bound.
- `name_kind` - indicates the type of cert_name. One of :subject (default) or :hash.
- `address` - the address to bind against. Default is 0.0.0.0 (all IP addresses).
- `port` - the port to bind against. Default is 443.
- `app_id` - the GUID that defines the application that owns the binding. Default is the values used by IIS.
- `store_name` - the store to locate the certificate in. One of MY (default : personal store), CA (trusted intermediate store) or ROOT (trusted root store).

#### Examples

```ruby
# Bind the first certificate matching the subject to the default TLS port
windows_certificate_binding "me.acme.com" do
end
```

```ruby
# Bind a cert from the CA store with the given hash to port 4334
windows_certificate_binding "me.acme.com" do
    cert_name    "d234567890a23f567c901e345bc8901d34567890"
    name_kind    :hash
    store_name    "CA"
    port        4334
end
```

### windows_feature

Windows Roles and Features can be thought of as built-in operating system packages that ship with the OS. A server role is a set of software programs that, when they are installed and properly configured, lets a computer perform a specific function for multiple users or other computers within a network. A Role can have multiple Role Services that provide functionality to the Role. Role services are software programs that provide the functionality of a role. Features are software programs that, although they are not directly parts of roles, can support or augment the functionality of one or more roles, or improve the functionality of the server, regardless of which roles are installed. Collectively we refer to all of these attributes as 'features'.

This resource allows you to manage these 'features' in an unattended, idempotent way.

There are two providers for the `windows_features` which map into Microsoft's two major tools for managing roles/features: [Deployment Image Servicing and Management (DISM)](http://msdn.microsoft.com/en-us/library/dd371719%28v=vs.85%29.aspx) and [Servermanagercmd](http://technet.microsoft.com/en-us/library/ee344834%28WS.10%29.aspx) (The CLI for Server Manager). As Servermanagercmd is deprecated, Chef will set the default provider to `Chef::Provider::WindowsFeature::DISM` if DISM is present on the system being configured. The default provider will fall back to `Chef::Provider::WindowsFeature::ServerManagerCmd`.

For more information on Roles, Role Services and Features see the [Microsoft TechNet article on the topic](http://technet.microsoft.com/en-us/library/cc754923.aspx). For a complete list of all features that are available on a node type either of the following commands at a command prompt:

```text
dism /online /Get-Features
servermanagercmd -query
```

#### Actions

- `:install` - install a Windows role/feature
- `:remove` - remove a Windows role/feature

#### Attribute Parameters

- `feature_name` - name of the feature/role to install. The same feature may have different names depending on the provider used (ie DHCPServer vs DHCP; DNS-Server-Full-Role vs DNS).
- `all` - Boolean. Optional. Default: false. DISM provider only. Forces all dependencies to be installed.
- `source` - String. Optional. DISM provider only. Uses local repository for feature install.

#### Providers

- **Chef::Provider::WindowsFeature::DISM**: Uses Deployment Image Servicing and Management (DISM) to manage roles/features.
- **Chef::Provider::WindowsFeature::ServerManagerCmd**: Uses Server Manager to manage roles/features.
- **Chef::Provider::WindowsFeaturePowershell**: Uses Powershell to manage roles/features. (see [COOK-3714](https://tickets.opscode.com/browse/COOK-3714)

#### Examples

Enable the node as a DHCP Server

```ruby
windows_feature 'DHCPServer' do
  action :install
end
```

Enable TFTP

```ruby
windows_feature 'TFTP' do
  action :install
end
```

Enable .Net 3.5.1 on Server 2012 using repository files on DVD and install all dependencies

```ruby
windows_feature "NetFx3" do
  action :install
  all true
  source "d:\sources\sxs"
end
```

Disable Telnet client/server

```ruby
%w[TelnetServer TelnetClient].each do |feature|
  windows_feature feature do
    action :remove
  end
end
```

Add SMTP Feature with powershell provider

```ruby
windows_feature "smtp-server" do
  action :install
  all true
  provider :windows_feature_powershell
end
```

### windows_font

Installs a font.

Font files should be included in the cookbooks

#### Actions

- `:install` - install a font to the system fonts directory.

#### Attribute Parameters

- `file` - The name of the font file name to install. The path defaults to the files/default directory of the cookbook you're calling windows_font from. Defaults to the resource name.
- `source` - Set an alternate path to the font file.

#### Examples

```ruby
windows_font 'Code New Roman.otf'
```

### windows_http_acl

Sets the Access Control List for an http URL to grant non-admin accounts permission to open HTTP endpoints.

#### Actions

- `:create` - creates or updates the ACL for a URL.
- `:delete` - deletes the ACL from a URL.

#### Attribute Parameters

- `url` - the name of the url to be created/deleted.
- `user` - the name (domain\user) of the user or group to be granted permission to the URL. Mandatory for create. Only one user or group can be granted permission so this replaces any previously defined entry.

#### Examples

```ruby
windows_http_acl 'http://+:50051/' do
    user 'pc\\fred'
end
```

```ruby
windows_http_acl 'http://+:50051/' do
    action :delete
end
```

### windows_package

This resource is now deprecated and will be removed in a future version of this cookbook. Chef >= 12.6.0 includes a built-in [package](https://docs.chef.io/resource_windows_package.html) resource.

Manage Windows application packages in an unattended, idempotent way.

The following application installers are currently supported:

- MSI packages
- InstallShield
- Wise InstallMaster
- Inno Setup
- Nullsoft Scriptable Install System

If the proper installer type is not passed into the resource's installer_type attribute, the provider will do it's best to identify the type by introspecting the installation package. If the installation type cannot be properly identified the `:custom` value can be passed into the installer_type attribute along with the proper flags for silent/quiet installation (using the `options` attribute..see example below).

**PLEASE NOTE** - For proper idempotence the resource's `package_name` should be the same as the 'DisplayName' registry value in the uninstallation data that is created during package installation. The easiest way to definitively find the proper 'DisplayName' value is to install the package on a machine and search for the uninstall information under the following registry keys:

- `HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall`
- `HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Uninstall`
- `HKEY_LOCAL_MACHINE\Software\Wow6464Node\Microsoft\Windows\CurrentVersion\Uninstall`

For maximum flexibility the `source` attribute supports both remote and local installation packages.

#### Actions

- `:install` - install a package
- `:remove` - remove a package. The remove action is completely hit or miss as many application uninstallers do not support a full silent/quiet mode.

#### Attribute Parameters

- `package_name` - name attribute. The 'DisplayName' of the application installation package.
- `source` - The source of the windows installer. This can either be a URI or a local path.
- `installer_type` - They type of windows installation package. Valid values include :msi, :inno, :nsis, :wise, :installshield, :custom. If this value is not provided, the provider will do it's best to identify the installer type through introspection of the file.
- `checksum` - useful if source is remote, the SHA-256 checksum of the file--if the local file matches the checksum, Chef will not download it
- `options` - Additional options to pass the underlying installation command
- `timeout` - set a timeout for the package download (default 600 seconds)
- `version` - The version number of this package, as indicated by the 'DisplayVersion' value in one of the 'Uninstall' registry keys. If the given version number does equal the 'DisplayVersion' in the registry, the package will be installed.
- `success_codes` - set an array of possible successful installation return codes. Previously this was hardcoded, but certain MSIs may have a different return code, e.g. 3010 for reboot required. Must be an array, and defaults to `[0, 42, 127]`.

#### Examples

Install PuTTY (InnoSetup installer)

```ruby
windows_package 'PuTTY version 0.60' do
  source 'http://the.earth.li/~sgtatham/putty/latest/x86/putty-0.60-installer.exe'
  installer_type :inno
  action :install
end
```

Install 7-Zip (MSI installer)

```ruby
windows_package '7-Zip 9.20 (x64 edition)' do
  source 'http://downloads.sourceforge.net/sevenzip/7z920-x64.msi'
  action :install
end
```

Install Notepad++ (Y U No Emacs?) using a local installer

```ruby
windows_package 'Notepad++' do
  source 'c:/installation_files/npp.5.9.2.Installer.exe'
  action :install
end
```

Install VLC for that Xvid (NSIS installer)

```ruby
windows_package 'VLC media player 1.1.10' do
  source 'http://superb-sea2.dl.sourceforge.net/project/vlc/1.1.10/win32/vlc-1.1.10-win32.exe'
  action :install
end
```

Install Firefox as custom installer and manually set the silent install flags

```ruby
windows_package 'Mozilla Firefox 5.0 (x86 en-US)' do
  source 'http://archive.mozilla.org/pub/mozilla.org/mozilla.org/firefox/releases/5.0/win32/en-US/Firefox%20Setup%205.0.exe'
  options '-ms'
  installer_type :custom
  action :install
end
```

Google Chrome FTW (MSI installer)

```ruby
windows_package 'Google Chrome' do
  source 'https://dl-ssl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7B806F36C0-CB54-4A84-A3F3-0CF8A86575E0%7D%26lang%3Den%26browser%3D3%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dfalse/edgedl/chrome/install/GoogleChromeStandaloneEnterprise.msi'
  action :install
end
```

Remove Google Chrome

```ruby
windows_package 'Google Chrome' do
  action :remove
end
```

Remove 7-Zip

```ruby
windows_package '7-Zip 9.20 (x64 edition)' do
  action :remove
end
```

### windows_printer_port

Create and delete TCP/IPv4 printer ports.

#### Actions

- `:create` - Create a TCIP/IPv4 printer port. This is the default action.
- `:delete` - Delete a TCIP/IPv4 printer port

#### Attribute Parameters

- `ipv4_address` - Name attribute. Required. IPv4 address, e.g. '10.0.24.34'
- `port_name` - Port name. Optional. Defaults to 'IP_' + `ipv4_address`
- `port_number` - Port number. Optional. Defaults to 9100.
- `port_description` - Port description. Optional.
- `snmp_enabled` - Boolean. Optional. Defaults to false.
- `port_protocol` - Port protocol, 1 (RAW), or 2 (LPR). Optional. Defaults to 1.

#### Examples

Create a TCP/IP printer port named 'IP_10.4.64.37' with all defaults

```ruby
windows_printer_port '10.4.64.37' do
  action :create
end
```

Delete a printer port

```ruby
windows_printer_port '10.4.64.37' do
  action :delete
end
```

Delete a port with a custom port_name

```ruby
windows_printer_port '10.4.64.38' do
  port_name 'My awesome port'
  action :delete
end
```

Create a port with more options

```ruby
windows_printer_port '10.4.64.39' do
  port_name 'My awesome port'
  snmp_enabled true
  port_protocol 2
end
```

### windows_printer

Create Windows printer. Note that this doesn't currently install a printer driver. You must already have the driver installed on the system.

The Windows Printer LWRP will automatically create a TCP/IP printer port for you using the `ipv4_address` property. If you want more granular control over the printer port, just create it using the `windows_printer_port` LWRP before creating the printer.

#### Actions

- `:create` - Create a new printer
- `:delete` - Delete a new printer

#### Attribute Parameters

- `device_id` - Name attribute. Required. Printer queue name, e.g. 'HP LJ 5200 in fifth floor copy room'
- `comment` - Optional string describing the printer queue.
- `default` - Boolean. Optional. Defaults to false. Note that Windows sets the first printer defined to the default printer regardless of this setting.
- `driver_name` - String. Required. Exact name of printer driver. Note that the printer driver must already be installed on the node.
- `location` - Printer location, e.g. 'Fifth floor copy room', or 'US/NYC/Floor42/Room4207'
- `shared` - Boolean. Defaults to false.
- `share_name` - Printer share name.
- `ipv4_address` - Printer IPv4 address, e.g. '10.4.64.23'. You don't have to be able to ping the IP address to set it. Required.

An error of "Set-WmiInstance : Generic failure" is most likely due to the printer driver name not matching or not being installed.

#### Examples

Create a printer

```ruby
windows_printer 'HP LaserJet 5th Floor' do
  driver_name 'HP LaserJet 4100 Series PCL6'
  ipv4_address '10.4.64.38'
end
```

Delete a printer. Note: this doesn't delete the associated printer port. See `windows_printer_port` above for how to delete the port.

```ruby
windows_printer 'HP LaserJet 5th Floor' do
  action :delete
end
```

### windows_shortcut

Creates and modifies Windows shortcuts.

#### Actions

- `:create` - create or modify a windows shortcut

#### Attribute Parameters

- `name` - name attribute. The shortcut to create/modify.
- `target` - what the shortcut links to
- `arguments` - arguments to pass to the target when the shortcut is executed
- `description` - description of the shortcut
- `cwd` - Working directory to use when the target is executed
- `iconlocation` - Icon to use, in the format of `"path, index"` where index is which icon in that file to use (See [WshShortcut.IconLocation](https://msdn.microsoft.com/en-us/library/3s9bx7at.aspx))

#### Examples

Add a shortcut all users desktop:

```ruby
require 'win32ole'
all_users_desktop = WIN32OLE.new("WScript.Shell").SpecialFolders("AllUsersDesktop")

windows_shortcut "#{all_users_desktop}/Notepad.lnk" do
  target "C:\\WINDOWS\\notepad.exe"
  description "Launch Notepad"
  iconlocation "C:\\windows\\notepad.exe, 0"
end
```

#### Library Methods

```ruby
Registry.value_exists?('HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run','BGINFO')
Registry.key_exists?('HKLM\SOFTWARE\Microsoft')
BgInfo = Registry.get_value('HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run','BGINFO')
```

### windows_path

#### Actions

- `:add` - Add an item to the system path
- `:remove` - Remove an item from the system path

#### Attribute Parameters

- `path` - Name attribute. The name of the value to add to the system path

#### Examples

Add Sysinternals to the system path

```ruby
windows_path 'C:\Sysinternals' do
  action :add
end
```

Remove 7-Zip from the system path

```ruby
windows_path 'C:\7-Zip' do
  action :remove
end
```

### windows_task

Creates, deletes or runs a Windows scheduled task. Requires Windows Server 2008 due to API usage.

#### Actions

- `:create` - creates a task (or updates existing if user or command has changed)
- `:delete` - deletes a task
- `:run` - runs a task
- `:end` - ends a task
- `:change` - changes the un/pw or command of a task
- `:enable` - enable a task
- `:disable` - disable a task

#### Attribute Parameters

- `task_name` - name attribute, The task name. ("Task Name" or "/Task Name")
- `force` - When used with create, will update the task.
- `command` - The command the task will run.
- `cwd` - The directory the task will be run from.
- `user` - The user to run the task as. (defaults to 'SYSTEM')
- `password` - The user's password. (requires user)
- `run_level` - Run with `:limited` or `:highest` privileges.
- `frequency` - Frequency with which to run the task. (default is :hourly. Other valid values include :minute, :hourly, :daily, :weekly, :monthly, :once, :on_logon, :onstart, :on_idle) :once requires start_time
- `frequency_modifier` - Multiple for frequency. (15 minutes, 2 days). Monthly tasks may also use these values": ('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', 'LASTDAY')
- `start_day` - Specifies the first date on which the task runs. Optional string (MM/DD/YYYY)
- `start_time` - Specifies the start time to run the task. Optional string (HH:mm)
- `interactive_enabled` - (Allow task to run interactively or non-interactively. Requires user and password.)
- `day` - For monthly or weekly tasks, the day(s) on which the task runs. (MON - SUN, *, 1 - 31)
- `months` - The Months of the year on which the task runs. (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, *). Multiple months should be comma delimited.
- `idle_time` - For :on_idle frequency, the time (in minutes) without user activity that must pass to trigger the task. (1 - 999)

#### Examples

Create a `chef-client` task with TaskPath `\` running every 15 minutes

```ruby
windows_task 'chef-client' do
  user 'Administrator'
  password '$ecR3t'
  cwd 'C:\\chef\\bin'
  command 'chef-client -L C:\\tmp\\'
  run_level :highest
  frequency :minute
  frequency_modifier 15
end
```

Update `chef-client` task with new password and log location

```ruby
windows_task 'chef-client' do
  user 'Administrator'
  password 'N3wPassW0Rd'
  cwd 'C:\\chef\\bin'
  command 'chef-client -L C:\\chef\\logs\\'
  action :change
end
```

Delete a task named `old task`

```ruby
windows_task 'old task' do
  action :delete
end
```

Enable a task named `chef-client`

```ruby
windows_task 'chef-client' do
  action :enable
end
```

Disable a task named `ProgramDataUpdater` with TaskPath `\Microsoft\Windows\Application Experience\`

```ruby
windows_task '\Microsoft\Windows\Application Experience\ProgramDataUpdater' do
  action :disable
end
```

### windows_zipfile

Most version of Windows do not ship with native cli utility for managing compressed files. This resource provides a pure-ruby implementation for managing zip files. Be sure to use the `not_if` or `only_if` meta parameters to guard the resource for idempotence or action will be taken every Chef run.

#### Actions

- `:unzip` - unzip a compressed file
- `:zip` - zip a directory (recursively)

#### Attribute Parameters

- `path` - name attribute. The path where files will be (un)zipped to.
- `source` - source of the zip file (either a URI or local path) for :unzip, or directory to be zipped for :zip.
- `overwrite` - force an overwrite of the files if they already exist.
- `checksum` - for :unzip, useful if source is remote, if the local file matches the SHA-256 checksum, Chef will not download it.

#### Examples

Unzip a remote zip file locally

```ruby
windows_zipfile 'c:/bin' do
  source 'http://download.sysinternals.com/Files/SysinternalsSuite.zip'
  action :unzip
  not_if {::File.exists?('c:/bin/PsExec.exe')}
end
```

Unzip a local zipfile

```ruby
windows_zipfile 'c:/the_codez' do
  source 'c:/foo/baz/the_codez.zip'
  action :unzip
end
```

Create a local zipfile

```ruby
windows_zipfile 'c:/foo/baz/the_codez.zip' do
  source 'c:/the_codez'
  action :zip
end
```

## Libraries

### WindowsHelper

Helper that allows you to use helpful functions in windows

#### installed_packages

Returns a hash of all DisplayNames installed

```ruby
# usage in a recipe
::Chef::Recipe.send(:include, Windows::Helper)
hash_of_installed_packages = installed_packages
```

#### is_package_installed?

- `package_name` - The name of the package you want to query to see if it is installed
- `returns` - true if the package is installed, false if it the package is not installed

Download a file if a package isn't installed

```ruby
# usage in a recipe to not download a file if package is already installed
::Chef::Recipe.send(:include, Windows::Helper)
is_win_sdk_installed = is_package_installed?('Windows Software Development Kit')

remote_file 'C:\windows\temp\windows_sdk.zip' do
  source 'http://url_to_download/windows_sdk.zip'
  action :create_if_missing
  not_if {is_win_sdk_installed}
end
```

Do something if a package is installed

```ruby
# usage in a provider
include Windows::Helper
if is_package_installed?('Windows Software Development Kit')
  # do something if package is installed
end
```

## Windows ChefSpec Matchers

The Windows cookbook includes custom [ChefSpec](https://github.com/sethvargo/chefspec) matchers you can use to test your own cookbooks that consume Windows cookbook LWRPs.

### Example Matcher Usage

```ruby
expect(chef_run).to install_windows_package('Node.js').with(
  source: 'http://nodejs.org/dist/v0.10.26/x64/node-v0.10.26-x64.msi')
```

### Windows Cookbook Matchers

- create_windows_auto_run
- remove_windows_auto_run
- create_windows_certificate
- delete_windows_certificate
- add_acl_to_windows_certificate
- create_windows_certificate_binding
- delete_windows_certificate_binding
- install_windows_feature
- remove_windows_feature
- delete_windows_feature
- install_windows_font
- create_windows_http_acl
- delete_windows_http_acl
- install_windows_package
- remove_windows_package
- set_windows_pagefile
- add_windows_path
- remove_windows_path
- create_windows_printer
- delete_windows_printer
- create_windows_printer_port
- delete_windows_printer_port
- create_windows_shortcut
- create_windows_shortcut
- create_windows_task
- disable_windows_task
- enable_windows_task
- delete_windows_task
- run_windows_task
- change_windows_task
- unzip_windows_zipfile_to
- zip_windows_zipfile_to

## Usage

Place an explicit dependency on this cookbook (using depends in the cookbook's metadata.rb) from any cookbook where you would like to use the Windows-specific resources/providers that ship with this cookbook.

```ruby
depends 'windows'
```

### default

Convenience recipe that installs supporting gems for many of the resources/providers that ship with this cookbook.

## License & Authors

- Author:: Seth Chisamore ([schisamo@chef.io](mailto:schisamo@chef.io))
- Author:: Doug MacEachern ([dougm@vmware.com](mailto:dougm@vmware.com))
- Author:: Paul Morton ([pmorton@biaprotect.com](mailto:pmorton@biaprotect.com))
- Author:: Doug Ireton ([doug.ireton@nordstrom.com](mailto:doug.ireton@nordstrom.com))

```text
Copyright 2011-2016, Chef Software, Inc.
Copyright 2010, VMware, Inc.
Copyright 2011, Business Intelligence Associates, Inc
Copyright 2012, Nordstrom, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/CHANGELOG.md to tempfile /tmp/chef-rest20160913-19215-1glze6h
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/README.md to tempfile /tmp/chef-rest20160913-19215-1u50xqu
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: windows
# Attribute:: default
#
# Copyright 2011-2016, Chef Software, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['windows']['rubyzipversion'] = nil
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/attributes/default.rb to tempfile /tmp/chef-rest20160913-19215-9ok7ml
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/CONTRIBUTING.md to tempfile /tmp/chef-rest20160913-19215-1geww8b
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/CONTRIBUTING.md in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"windows","version":"2.0.2","description":"Provides a set of useful Windows-specific primitives.","long_description":"# Windows Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/windows.svg?branch=master)](http://travis-ci.org/chef-cookbooks/windows) [![Cookbook Version](https://img.shields.io/cookbook/v/windows.svg)](https://supermarket.chef.io/cookbooks/windows)\n\nProvides a set of Windows-specific primitives (Chef resources) meant to aid in the creation of cookbooks/recipes targeting the Windows platform.\n\n## Requirements\n\n### Platforms\n\n- Windows 7\n- Windows Server 2008 R2\n- Windows 8, 8.1\n- Windows Server 2012 (R1, R2)\n\n### Chef\n\n- Chef 12.1+\n\n## Resource/Provider\n\n### windows_auto_run\n\n#### Actions\n\n- `:create` - Create an item to be run at login\n- `:remove` - Remove an item that was previously setup to run at login\n\n#### Attribute Parameters\n\n- `name` - Name attribute. The name of the value to be stored in the registry\n- `program` - The program to be run at login\n- `args` - The arguments for the program\n\n#### Examples\n\nRun BGInfo at login\n\n```ruby\nwindows_auto_run 'BGINFO' do\n  program 'C:/Sysinternals/bginfo.exe'\n  args    '\\'C:/Sysinternals/Config.bgi\\' /NOLICPROMPT /TIMER:0'\n  action  :create\nend\n```\n\n### windows_certificate\n\nInstalls a certificate into the Windows certificate store from a file, and grants read-only access to the private key for designated accounts. Due to current limitations in winrm, installing certificated remotely may not work if the operation requires a user profile. Operations on the local machine store should still work.\n\n#### Actions\n\n- `:create` - creates or updates a certificate.\n- `:delete` - deletes a certificate.\n- `:acl_add` - adds read-only entries to a certificate's private key ACL.\n\n#### Attribute Parameters\n\n- `source` - name attribute. The source file (for create and acl_add), thumbprint (for delete and acl_add) or subject (for delete).\n- `pfx_password` - the password to access the source if it is a pfx file.\n- `private_key_acl` - array of 'domain\\account' entries to be granted read-only access to the certificate's private key. This is not idempotent.\n- `store_name` - the certificate store to manipulate. One of MY (default : personal store), CA (trusted intermediate store) or ROOT (trusted root store).\n- `user_store` - if false (default) then use the local machine store; if true then use the current user's store.\n\n#### Examples\n\n```ruby\n# Add PFX cert to local machine personal store and grant accounts read-only access to private key\nwindows_certificate \"c:/test/mycert.pfx\" do\n    pfx_password    \"password\"\n    private_key_acl    [\"acme\\fred\", \"pc\\jane\"]\nend\n```\n\n```ruby\n# Add cert to trusted intermediate store\nwindows_certificate \"c:/test/mycert.cer\" do\n    store_name    \"CA\"\nend\n```\n\n```ruby\n# Remove all certicates matching the subject\nwindows_certificate \"me.acme.com\" do\n    action :delete\nend\n```\n\n### windows_certificate_binding\n\nBinds a certificate to an HTTP port in order to enable TLS communication.\n\n#### Actions\n\n- `:create` - creates or updates a binding.\n- `:delete` - deletes a binding.\n\n#### Attribute Parameters\n\n- `cert_name` - name attribute. The thumbprint(hash) or subject that identifies the certificate to be bound.\n- `name_kind` - indicates the type of cert_name. One of :subject (default) or :hash.\n- `address` - the address to bind against. Default is 0.0.0.0 (all IP addresses).\n- `port` - the port to bind against. Default is 443.\n- `app_id` - the GUID that defines the application that owns the binding. Default is the values used by IIS.\n- `store_name` - the store to locate the certificate in. One of MY (default : personal store), CA (trusted intermediate store) or ROOT (trusted root store).\n\n#### Examples\n\n```ruby\n# Bind the first certificate matching the subject to the default TLS port\nwindows_certificate_binding \"me.acme.com\" do\nend\n```\n\n```ruby\n# Bind a cert from the CA store with the given hash to port 4334\nwindows_certificate_binding \"me.acme.com\" do\n    cert_name    \"d234567890a23f567c901e345bc8901d34567890\"\n    name_kind    :hash\n    store_name    \"CA\"\n    port        4334\nend\n```\n\n### windows_feature\n\nWindows Roles and Features can be thought of as built-in operating system packages that ship with the OS. A server role is a set of software programs that, when they are installed and properly configured, lets a computer perform a specific function for multiple users or other computers within a network. A Role can have multiple Role Services that provide functionality to the Role. Role services are software programs that provide the functionality of a role. Features are software programs that, although they are not directly parts of roles, can support or augment the functionality of one or more roles, or improve the functionality of the server, regardless of which roles are installed. Collectively we refer to all of these attributes as 'features'.\n\nThis resource allows you to manage these 'features' in an unattended, idempotent way.\n\nThere are two providers for the `windows_features` which map into Microsoft's two major tools for managing roles/features: [Deployment Image Servicing and Management (DISM)](http://msdn.microsoft.com/en-us/library/dd371719%28v=vs.85%29.aspx) and [Servermanagercmd](http://technet.microsoft.com/en-us/library/ee344834%28WS.10%29.aspx) (The CLI for Server Manager). As Servermanagercmd is deprecated, Chef will set the default provider to `Chef::Provider::WindowsFeature::DISM` if DISM is present on the system being configured. The default provider will fall back to `Chef::Provider::WindowsFeature::ServerManagerCmd`.\n\nFor more information on Roles, Role Services and Features see the [Microsoft TechNet article on the topic](http://technet.microsoft.com/en-us/library/cc754923.aspx). For a complete list of all features that are available on a node type either of the following commands at a command prompt:\n\n```text\ndism /online /Get-Features\nservermanagercmd -query\n```\n\n#### Actions\n\n- `:install` - install a Windows role/feature\n- `:remove` - remove a Windows role/feature\n\n#### Attribute Parameters\n\n- `feature_name` - name of the feature/role to install. The same feature may have different names depending on the provider used (ie DHCPServer vs DHCP; DNS-Server-Full-Role vs DNS).\n- `all` - Boolean. Optional. Default: false. DISM provider only. Forces all dependencies to be installed.\n- `source` - String. Optional. DISM provider only. Uses local repository for feature install.\n\n#### Providers\n\n- **Chef::Provider::WindowsFeature::DISM**: Uses Deployment Image Servicing and Management (DISM) to manage roles/features.\n- **Chef::Provider::WindowsFeature::ServerManagerCmd**: Uses Server Manager to manage roles/features.\n- **Chef::Provider::WindowsFeaturePowershell**: Uses Powershell to manage roles/features. (see [COOK-3714](https://tickets.opscode.com/browse/COOK-3714)\n\n#### Examples\n\nEnable the node as a DHCP Server\n\n```ruby\nwindows_feature 'DHCPServer' do\n  action :install\nend\n```\n\nEnable TFTP\n\n```ruby\nwindows_feature 'TFTP' do\n  action :install\nend\n```\n\nEnable .Net 3.5.1 on Server 2012 using repository files on DVD and install all dependencies\n\n```ruby\nwindows_feature \"NetFx3\" do\n  action :install\n  all true\n  source \"d:\\sources\\sxs\"\nend\n```\n\nDisable Telnet client/server\n\n```ruby\n%w[TelnetServer TelnetClient].each do |feature|\n  windows_feature feature do\n    action :remove\n  end\nend\n```\n\nAdd SMTP Feature with powershell provider\n\n```ruby\nwindows_feature \"smtp-server\" do\n  action :install\n  all true\n  provider :windows_feature_powershell\nend\n```\n\n### windows_font\n\nInstalls a font.\n\nFont files should be included in the cookbooks\n\n#### Actions\n\n- `:install` - install a font to the system fonts directory.\n\n#### Attribute Parameters\n\n- `file` - The name of the font file name to install. The path defaults to the files/default directory of the cookbook you're calling windows_font from. Defaults to the resource name.\n- `source` - Set an alternate path to the font file.\n\n#### Examples\n\n```ruby\nwindows_font 'Code New Roman.otf'\n```\n\n### windows_http_acl\n\nSets the Access Control List for an http URL to grant non-admin accounts permission to open HTTP endpoints.\n\n#### Actions\n\n- `:create` - creates or updates the ACL for a URL.\n- `:delete` - deletes the ACL from a URL.\n\n#### Attribute Parameters\n\n- `url` - the name of the url to be created/deleted.\n- `user` - the name (domain\\user) of the user or group to be granted permission to the URL. Mandatory for create. Only one user or group can be granted permission so this replaces any previously defined entry.\n\n#### Examples\n\n```ruby\nwindows_http_acl 'http://+:50051/' do\n    user 'pc\\\\fred'\nend\n```\n\n```ruby\nwindows_http_acl 'http://+:50051/' do\n    action :delete\nend\n```\n\n### windows_package\n\nThis resource is now deprecated and will be removed in a future version of this cookbook. Chef >= 12.6.0 includes a built-in [package](https://docs.chef.io/resource_windows_package.html) resource.\n\nManage Windows application packages in an unattended, idempotent way.\n\nThe following application installers are currently supported:\n\n- MSI packages\n- InstallShield\n- Wise InstallMaster\n- Inno Setup\n- Nullsoft Scriptable Install System\n\nIf the proper installer type is not passed into the resource's installer_type attribute, the provider will do it's best to identify the type by introspecting the installation package. If the installation type cannot be properly identified the `:custom` value can be passed into the installer_type attribute along with the proper flags for silent/quiet installation (using the `options` attribute..see example below).\n\n**PLEASE NOTE** - For proper idempotence the resource's `package_name` should be the same as the 'DisplayName' registry value in the uninstallation data that is created during package installation. The easiest way to definitively find the proper 'DisplayName' value is to install the package on a machine and search for the uninstall information under the following registry keys:\n\n- `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall`\n- `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall`\n- `HKEY_LOCAL_MACHINE\\Software\\Wow6464Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall`\n\nFor maximum flexibility the `source` attribute supports both remote and local installation packages.\n\n#### Actions\n\n- `:install` - install a package\n- `:remove` - remove a package. The remove action is completely hit or miss as many application uninstallers do not support a full silent/quiet mode.\n\n#### Attribute Parameters\n\n- `package_name` - name attribute. The 'DisplayName' of the application installation package.\n- `source` - The source of the windows installer. This can either be a URI or a local path.\n- `installer_type` - They type of windows installation package. Valid values include :msi, :inno, :nsis, :wise, :installshield, :custom. If this value is not provided, the provider will do it's best to identify the installer type through introspection of the file.\n- `checksum` - useful if source is remote, the SHA-256 checksum of the file--if the local file matches the checksum, Chef will not download it\n- `options` - Additional options to pass the underlying installation command\n- `timeout` - set a timeout for the package download (default 600 seconds)\n- `version` - The version number of this package, as indicated by the 'DisplayVersion' value in one of the 'Uninstall' registry keys. If the given version number does equal the 'DisplayVersion' in the registry, the package will be installed.\n- `success_codes` - set an array of possible successful installation return codes. Previously this was hardcoded, but certain MSIs may have a different return code, e.g. 3010 for reboot required. Must be an array, and defaults to `[0, 42, 127]`.\n\n#### Examples\n\nInstall PuTTY (InnoSetup installer)\n\n```ruby\nwindows_package 'PuTTY version 0.60' do\n  source 'http://the.earth.li/~sgtatham/putty/latest/x86/putty-0.60-installer.exe'\n  installer_type :inno\n  action :install\nend\n```\n\nInstall 7-Zip (MSI installer)\n\n```ruby\nwindows_package '7-Zip 9.20 (x64 edition)' do\n  source 'http://downloads.sourceforge.net/sevenzip/7z920-x64.msi'\n  action :install\nend\n```\n\nInstall Notepad++ (Y U No Emacs?) using a local installer\n\n```ruby\nwindows_package 'Notepad++' do\n  source 'c:/installation_files/npp.5.9.2.Installer.exe'\n  action :install\nend\n```\n\nInstall VLC for that Xvid (NSIS installer)\n\n```ruby\nwindows_package 'VLC media player 1.1.10' do\n  source 'http://superb-sea2.dl.sourceforge.net/project/vlc/1.1.10/win32/vlc-1.1.10-win32.exe'\n  action :install\nend\n```\n\nInstall Firefox as custom installer and manually set the silent install flags\n\n```ruby\nwindows_package 'Mozilla Firefox 5.0 (x86 en-US)' do\n  source 'http://archive.mozilla.org/pub/mozilla.org/mozilla.org/firefox/releases/5.0/win32/en-US/Firefox%20Setup%205.0.exe'\n  options '-ms'\n  installer_type :custom\n  action :install\nend\n```\n\nGoogle Chrome FTW (MSI installer)\n\n```ruby\nwindows_package 'Google Chrome' do\n  source 'https://dl-ssl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7B806F36C0-CB54-4A84-A3F3-0CF8A86575E0%7D%26lang%3Den%26browser%3D3%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dfalse/edgedl/chrome/install/GoogleChromeStandaloneEnterprise.msi'\n  action :install\nend\n```\n\nRemove Google Chrome\n\n```ruby\nwindows_package 'Google Chrome' do\n  action :remove\nend\n```\n\nRemove 7-Zip\n\n```ruby\nwindows_package '7-Zip 9.20 (x64 edition)' do\n  action :remove\nend\n```\n\n### windows_printer_port\n\nCreate and delete TCP/IPv4 printer ports.\n\n#### Actions\n\n- `:create` - Create a TCIP/IPv4 printer port. This is the default action.\n- `:delete` - Delete a TCIP/IPv4 printer port\n\n#### Attribute Parameters\n\n- `ipv4_address` - Name attribute. Required. IPv4 address, e.g. '10.0.24.34'\n- `port_name` - Port name. Optional. Defaults to 'IP_' + `ipv4_address`\n- `port_number` - Port number. Optional. Defaults to 9100.\n- `port_description` - Port description. Optional.\n- `snmp_enabled` - Boolean. Optional. Defaults to false.\n- `port_protocol` - Port protocol, 1 (RAW), or 2 (LPR). Optional. Defaults to 1.\n\n#### Examples\n\nCreate a TCP/IP printer port named 'IP_10.4.64.37' with all defaults\n\n```ruby\nwindows_printer_port '10.4.64.37' do\n  action :create\nend\n```\n\nDelete a printer port\n\n```ruby\nwindows_printer_port '10.4.64.37' do\n  action :delete\nend\n```\n\nDelete a port with a custom port_name\n\n```ruby\nwindows_printer_port '10.4.64.38' do\n  port_name 'My awesome port'\n  action :delete\nend\n```\n\nCreate a port with more options\n\n```ruby\nwindows_printer_port '10.4.64.39' do\n  port_name 'My awesome port'\n  snmp_enabled true\n  port_protocol 2\nend\n```\n\n### windows_printer\n\nCreate Windows printer. Note that this doesn't currently install a printer driver. You must already have the driver installed on the system.\n\nThe Windows Printer LWRP will automatically create a TCP/IP printer port for you using the `ipv4_address` property. If you want more granular control over the printer port, just create it using the `windows_printer_port` LWRP before creating the printer.\n\n#### Actions\n\n- `:create` - Create a new printer\n- `:delete` - Delete a new printer\n\n#### Attribute Parameters\n\n- `device_id` - Name attribute. Required. Printer queue name, e.g. 'HP LJ 5200 in fifth floor copy room'\n- `comment` - Optional string describing the printer queue.\n- `default` - Boolean. Optional. Defaults to false. Note that Windows sets the first printer defined to the default printer regardless of this setting.\n- `driver_name` - String. Required. Exact name of printer driver. Note that the printer driver must already be installed on the node.\n- `location` - Printer location, e.g. 'Fifth floor copy room', or 'US/NYC/Floor42/Room4207'\n- `shared` - Boolean. Defaults to false.\n- `share_name` - Printer share name.\n- `ipv4_address` - Printer IPv4 address, e.g. '10.4.64.23'. You don't have to be able to ping the IP address to set it. Required.\n\nAn error of \"Set-WmiInstance : Generic failure\" is most likely due to the printer driver name not matching or not being installed.\n\n#### Examples\n\nCreate a printer\n\n```ruby\nwindows_printer 'HP LaserJet 5th Floor' do\n  driver_name 'HP LaserJet 4100 Series PCL6'\n  ipv4_address '10.4.64.38'\nend\n```\n\nDelete a printer. Note: this doesn't delete the associated printer port. See `windows_printer_port` above for how to delete the port.\n\n```ruby\nwindows_printer 'HP LaserJet 5th Floor' do\n  action :delete\nend\n```\n\n### windows_shortcut\n\nCreates and modifies Windows shortcuts.\n\n#### Actions\n\n- `:create` - create or modify a windows shortcut\n\n#### Attribute Parameters\n\n- `name` - name attribute. The shortcut to create/modify.\n- `target` - what the shortcut links to\n- `arguments` - arguments to pass to the target when the shortcut is executed\n- `description` - description of the shortcut\n- `cwd` - Working directory to use when the target is executed\n- `iconlocation` - Icon to use, in the format of `\"path, index\"` where index is which icon in that file to use (See [WshShortcut.IconLocation](https://msdn.microsoft.com/en-us/library/3s9bx7at.aspx))\n\n#### Examples\n\nAdd a shortcut all users desktop:\n\n```ruby\nrequire 'win32ole'\nall_users_desktop = WIN32OLE.new(\"WScript.Shell\").SpecialFolders(\"AllUsersDesktop\")\n\nwindows_shortcut \"#{all_users_desktop}/Notepad.lnk\" do\n  target \"C:\\\\WINDOWS\\\\notepad.exe\"\n  description \"Launch Notepad\"\n  iconlocation \"C:\\\\windows\\\\notepad.exe, 0\"\nend\n```\n\n#### Library Methods\n\n```ruby\nRegistry.value_exists?('HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run','BGINFO')\nRegistry.key_exists?('HKLM\\SOFTWARE\\Microsoft')\nBgInfo = Registry.get_value('HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run','BGINFO')\n```\n\n### windows_path\n\n#### Actions\n\n- `:add` - Add an item to the system path\n- `:remove` - Remove an item from the system path\n\n#### Attribute Parameters\n\n- `path` - Name attribute. The name of the value to add to the system path\n\n#### Examples\n\nAdd Sysinternals to the system path\n\n```ruby\nwindows_path 'C:\\Sysinternals' do\n  action :add\nend\n```\n\nRemove 7-Zip from the system path\n\n```ruby\nwindows_path 'C:\\7-Zip' do\n  action :remove\nend\n```\n\n### windows_task\n\nCreates, deletes or runs a Windows scheduled task. Requires Windows Server 2008 due to API usage.\n\n#### Actions\n\n- `:create` - creates a task (or updates existing if user or command has changed)\n- `:delete` - deletes a task\n- `:run` - runs a task\n- `:end` - ends a task\n- `:change` - changes the un/pw or command of a task\n- `:enable` - enable a task\n- `:disable` - disable a task\n\n#### Attribute Parameters\n\n- `task_name` - name attribute, The task name. (\"Task Name\" or \"/Task Name\")\n- `force` - When used with create, will update the task.\n- `command` - The command the task will run.\n- `cwd` - The directory the task will be run from.\n- `user` - The user to run the task as. (defaults to 'SYSTEM')\n- `password` - The user's password. (requires user)\n- `run_level` - Run with `:limited` or `:highest` privileges.\n- `frequency` - Frequency with which to run the task. (default is :hourly. Other valid values include :minute, :hourly, :daily, :weekly, :monthly, :once, :on_logon, :onstart, :on_idle) :once requires start_time\n- `frequency_modifier` - Multiple for frequency. (15 minutes, 2 days). Monthly tasks may also use these values\": ('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', 'LASTDAY')\n- `start_day` - Specifies the first date on which the task runs. Optional string (MM/DD/YYYY)\n- `start_time` - Specifies the start time to run the task. Optional string (HH:mm)\n- `interactive_enabled` - (Allow task to run interactively or non-interactively. Requires user and password.)\n- `day` - For monthly or weekly tasks, the day(s) on which the task runs. (MON - SUN, *, 1 - 31)\n- `months` - The Months of the year on which the task runs. (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, *). Multiple months should be comma delimited.\n- `idle_time` - For :on_idle frequency, the time (in minutes) without user activity that must pass to trigger the task. (1 - 999)\n\n#### Examples\n\nCreate a `chef-client` task with TaskPath `\\` running every 15 minutes\n\n```ruby\nwindows_task 'chef-client' do\n  user 'Administrator'\n  password '$ecR3t'\n  cwd 'C:\\\\chef\\\\bin'\n  command 'chef-client -L C:\\\\tmp\\\\'\n  run_level :highest\n  frequency :minute\n  frequency_modifier 15\nend\n```\n\nUpdate `chef-client` task with new password and log location\n\n```ruby\nwindows_task 'chef-client' do\n  user 'Administrator'\n  password 'N3wPassW0Rd'\n  cwd 'C:\\\\chef\\\\bin'\n  command 'chef-client -L C:\\\\chef\\\\logs\\\\'\n  action :change\nend\n```\n\nDelete a task named `old task`\n\n```ruby\nwindows_task 'old task' do\n  action :delete\nend\n```\n\nEnable a task named `chef-client`\n\n```ruby\nwindows_task 'chef-client' do\n  action :enable\nend\n```\n\nDisable a task named `ProgramDataUpdater` with TaskPath `\\Microsoft\\Windows\\Application Experience\\`\n\n```ruby\nwindows_task '\\Microsoft\\Windows\\Application Experience\\ProgramDataUpdater' do\n  action :disable\nend\n```\n\n### windows_zipfile\n\nMost version of Windows do not ship with native cli utility for managing compressed files. This resource provides a pure-ruby implementation for managing zip files. Be sure to use the `not_if` or `only_if` meta parameters to guard the resource for idempotence or action will be taken every Chef run.\n\n#### Actions\n\n- `:unzip` - unzip a compressed file\n- `:zip` - zip a directory (recursively)\n\n#### Attribute Parameters\n\n- `path` - name attribute. The path where files will be (un)zipped to.\n- `source` - source of the zip file (either a URI or local path) for :unzip, or directory to be zipped for :zip.\n- `overwrite` - force an overwrite of the files if they already exist.\n- `checksum` - for :unzip, useful if source is remote, if the local file matches the SHA-256 checksum, Chef will not download it.\n\n#### Examples\n\nUnzip a remote zip file locally\n\n```ruby\nwindows_zipfile 'c:/bin' do\n  source 'http://download.sysinternals.com/Files/SysinternalsSuite.zip'\n  action :unzip\n  not_if {::File.exists?('c:/bin/PsExec.exe')}\nend\n```\n\nUnzip a local zipfile\n\n```ruby\nwindows_zipfile 'c:/the_codez' do\n  source 'c:/foo/baz/the_codez.zip'\n  action :unzip\nend\n```\n\nCreate a local zipfile\n\n```ruby\nwindows_zipfile 'c:/foo/baz/the_codez.zip' do\n  source 'c:/the_codez'\n  action :zip\nend\n```\n\n## Libraries\n\n### WindowsHelper\n\nHelper that allows you to use helpful functions in windows\n\n#### installed_packages\n\nReturns a hash of all DisplayNames installed\n\n```ruby\n# usage in a recipe\n::Chef::Recipe.send(:include, Windows::Helper)\nhash_of_installed_packages = installed_packages\n```\n\n#### is_package_installed?\n\n- `package_name` - The name of the package you want to query to see if it is installed\n- `returns` - true if the package is installed, false if it the package is not installed\n\nDownload a file if a package isn't installed\n\n```ruby\n# usage in a recipe to not download a file if package is already installed\n::Chef::Recipe.send(:include, Windows::Helper)\nis_win_sdk_installed = is_package_installed?('Windows Software Development Kit')\n\nremote_file 'C:\\windows\\temp\\windows_sdk.zip' do\n  source 'http://url_to_download/windows_sdk.zip'\n  action :create_if_missing\n  not_if {is_win_sdk_installed}\nend\n```\n\nDo something if a package is installed\n\n```ruby\n# usage in a provider\ninclude Windows::Helper\nif is_package_installed?('Windows Software Development Kit')\n  # do something if package is installed\nend\n```\n\n## Windows ChefSpec Matchers\n\nThe Windows cookbook includes custom [ChefSpec](https://github.com/sethvargo/chefspec) matchers you can use to test your own cookbooks that consume Windows cookbook LWRPs.\n\n### Example Matcher Usage\n\n```ruby\nexpect(chef_run).to install_windows_package('Node.js').with(\n  source: 'http://nodejs.org/dist/v0.10.26/x64/node-v0.10.26-x64.msi')\n```\n\n### Windows Cookbook Matchers\n\n- create_windows_auto_run\n- remove_windows_auto_run\n- create_windows_certificate\n- delete_windows_certificate\n- add_acl_to_windows_certificate\n- create_windows_certificate_binding\n- delete_windows_certificate_binding\n- install_windows_feature\n- remove_windows_feature\n- delete_windows_feature\n- install_windows_font\n- create_windows_http_acl\n- delete_windows_http_acl\n- install_windows_package\n- remove_windows_package\n- set_windows_pagefile\n- add_windows_path\n- remove_windows_path\n- create_windows_printer\n- delete_windows_printer\n- create_windows_printer_port\n- delete_windows_printer_port\n- create_windows_shortcut\n- create_windows_shortcut\n- create_windows_task\n- disable_windows_task\n- enable_windows_task\n- delete_windows_task\n- run_windows_task\n- change_windows_task\n- unzip_windows_zipfile_to\n- zip_windows_zipfile_to\n\n## Usage\n\nPlace an explicit dependency on this cookbook (using depends in the cookbook's metadata.rb) from any cookbook where you would like to use the Windows-specific resources/providers that ship with this cookbook.\n\n```ruby\ndepends 'windows'\n```\n\n### default\n\nConvenience recipe that installs supporting gems for many of the resources/providers that ship with this cookbook.\n\n## License & Authors\n\n- Author:: Seth Chisamore ([schisamo@chef.io](mailto:schisamo@chef.io))\n- Author:: Doug MacEachern ([dougm@vmware.com](mailto:dougm@vmware.com))\n- Author:: Paul Morton ([pmorton@biaprotect.com](mailto:pmorton@biaprotect.com))\n- Author:: Doug Ireton ([doug.ireton@nordstrom.com](mailto:doug.ireton@nordstrom.com))\n\n```text\nCopyright 2011-2016, Chef Software, Inc.\nCopyright 2010, VMware, Inc.\nCopyright 2011, Business Intelligence Associates, Inc\nCopyright 2012, Nordstrom, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"windows":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/windows","issues_url":"https://github.com/chef-cookbooks/windows/issues","chef_version":">= 12.1","ohai_version":{}}
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/attributes/default.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/attributes
[2016-09-13T12:59:47+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC001
--- END RESPONSE ---
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/libraries/windows_helper.rb in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/.foodcritic to tempfile /tmp/chef-rest20160913-19215-2kufe5
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/.foodcritic in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/README.md in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/CHANGELOG.md in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/metadata.json to tempfile /tmp/chef-rest20160913-19215-1g4pu0m
[2016-09-13T12:59:47+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2016-09-13T12:59:47+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2016-09-13T12:59:47+01:00] INFO: Storing updated cookbooks/windows/metadata.json in the cache.
[2016-09-13T12:59:47+01:00] DEBUG: Cookbooks to compile: [:apt, :compat_resource, :rsyslog, :bluepill, :windows, :"7-zip", :"build-essential", :ohai, :packagecloud, :yum, :"yum-epel", :runit, :nginx, :iptables]
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook apt's library file: /root/.chef/cookbooks/apt/libraries/apt_update.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook apt's library file: /root/.chef/cookbooks/apt/libraries/helpers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook apt's library file: /root/.chef/cookbooks/apt/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook apt's library file: /root/.chef/cookbooks/apt/libraries/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook compat_resource's library file: /root/.chef/cookbooks/compat_resource/libraries/autoload.rb
[2016-09-13T12:59:47+01:00] DEBUG: loading compat_resource based on chef-version 12.14.40 over chef version 12.13.37
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook rsyslog's library file: /root/.chef/cookbooks/rsyslog/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook bluepill's library file: /root/.chef/cookbooks/bluepill/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/feature_base.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/powershell_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/powershell_out.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/registry_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/version.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/windows_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/windows_package.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/windows_privileged.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/wmi_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook build-essential's library file: /root/.chef/cookbooks/build-essential/libraries/_msys_helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook build-essential's library file: /root/.chef/cookbooks/build-essential/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook build-essential's library file: /root/.chef/cookbooks/build-essential/libraries/timing.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook build-essential's library file: /root/.chef/cookbooks/build-essential/libraries/xcode_command_line_tools.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook ohai's library file: /root/.chef/cookbooks/ohai/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook packagecloud's library file: /root/.chef/cookbooks/packagecloud/libraries/helper.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook packagecloud's library file: /root/.chef/cookbooks/packagecloud/libraries/matcher.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook yum's library file: /root/.chef/cookbooks/yum/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook runit's library file: /root/.chef/cookbooks/runit/libraries/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook runit's library file: /root/.chef/cookbooks/runit/libraries/helpers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook runit's library file: /root/.chef/cookbooks/runit/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook runit's library file: /root/.chef/cookbooks/runit/libraries/provider_runit_service.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook runit's library file: /root/.chef/cookbooks/runit/libraries/resource_runit_service.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook nginx's library file: /root/.chef/cookbooks/nginx/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook iptables's library file: /root/.chef/cookbooks/iptables/libraries/matchers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook apt's attribute file /root/.chef/cookbooks/apt/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute apt::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook rsyslog's attribute file /root/.chef/cookbooks/rsyslog/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute rsyslog::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook bluepill's attribute file /root/.chef/cookbooks/bluepill/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute bluepill::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook windows's attribute file /root/.chef/cookbooks/windows/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute windows::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook 7-zip's attribute file /root/.chef/cookbooks/7-zip/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute 7-zip::default
[2016-09-13T12:59:47+01:00] WARN: method access to node attributes (node.foo.bar) is deprecated and will be removed in Chef 13, please use bracket syntax (node["foo"]["bar"]) at /root/.chef/cookbooks/7-zip/attributes/default.rb:21:in `from_file' at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/event_dispatch/dispatcher.rb:43:in `call'
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook build-essential's attribute file /root/.chef/cookbooks/build-essential/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute build-essential::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook ohai's attribute file /root/.chef/cookbooks/ohai/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute ohai::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook packagecloud's attribute file /root/.chef/cookbooks/packagecloud/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute packagecloud::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook yum's attribute file /root/.chef/cookbooks/yum/attributes/main.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute yum::main
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute yum-epel::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-debuginfo.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute yum-epel::epel-debuginfo
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-source.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute yum-epel::epel-source
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute yum-epel::epel-testing-debuginfo
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-testing-source.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute yum-epel::epel-testing-source
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-testing.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute yum-epel::epel-testing
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute yum-epel::epel
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook runit's attribute file /root/.chef/cookbooks/runit/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute runit::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::default
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/auth_request.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::auth_request
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/devel.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::devel
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/echo.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::echo
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/geoip.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::geoip
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/headers_more.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::headers_more
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/lua.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::lua
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/naxsi.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::naxsi
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/openssl_source.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::openssl_source
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/pagespeed.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::pagespeed
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/passenger.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::passenger
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/rate_limiting.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::rate_limiting
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/repo.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::repo
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/set_misc.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::set_misc
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/socketproxy.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::socketproxy
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/source.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::source
[2016-09-13T12:59:47+01:00] DEBUG: I am not loading attribute file nginx::default, because I have already seen it.
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/status.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::status
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/syslog.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::syslog
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook nginx's attribute file /root/.chef/cookbooks/nginx/attributes/upload_progress.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute nginx::upload_progress
[2016-09-13T12:59:47+01:00] DEBUG: Node chef-master loading cookbook iptables's attribute file /root/.chef/cookbooks/iptables/attributes/default.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading Attribute iptables::default
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook apt's providers from /root/.chef/cookbooks/apt/providers/preference.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/apt/providers/preference.rb into provider apt_preference (LWRP provider apt_preference from cookbook apt)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook apt's providers from /root/.chef/cookbooks/apt/providers/repository.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/apt/providers/repository.rb into provider apt_repository (LWRP provider apt_repository from cookbook apt)
[2016-09-13T12:59:47+01:00] WARN: Chef::Provider::AptRepository already exists!  Cannot create deprecation class for LWRP provider apt_repository from cookbook apt
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook apt's resources from /root/.chef/cookbooks/apt/resources/preference.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/apt/resources/preference.rb into resource apt_preference (Custom resource apt_preference from cookbook apt)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook apt's resources from /root/.chef/cookbooks/apt/resources/repository.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/apt/resources/repository.rb into resource apt_repository (Custom resource apt_repository from cookbook apt)
[2016-09-13T12:59:47+01:00] WARN: AptRepository already exists!  Deprecation class overwrites Custom resource apt_repository from cookbook apt
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook rsyslog's resources from /root/.chef/cookbooks/rsyslog/resources/file_input.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/rsyslog/resources/file_input.rb into resource rsyslog_file_input (Custom resource rsyslog_file_input from cookbook rsyslog)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook bluepill's providers from /root/.chef/cookbooks/bluepill/providers/service.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/bluepill/providers/service.rb into provider bluepill_service (LWRP provider bluepill_service from cookbook bluepill)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook bluepill's resources from /root/.chef/cookbooks/bluepill/resources/service.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/bluepill/resources/service.rb into resource bluepill_service (Custom resource bluepill_service from cookbook bluepill)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/auto_run.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/auto_run.rb into provider windows_auto_run (LWRP provider windows_auto_run from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/certificate.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/certificate.rb into provider windows_certificate (LWRP provider windows_certificate from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/certificate_binding.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/certificate_binding.rb into provider windows_certificate_binding (LWRP provider windows_certificate_binding from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/feature_dism.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/feature_dism.rb into provider windows_feature_dism (LWRP provider windows_feature_dism from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/feature_powershell.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/feature_powershell.rb into provider windows_feature_powershell (LWRP provider windows_feature_powershell from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/feature_servermanagercmd.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/feature_servermanagercmd.rb into provider windows_feature_servermanagercmd (LWRP provider windows_feature_servermanagercmd from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/font.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/font.rb into provider windows_font (LWRP provider windows_font from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/http_acl.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/http_acl.rb into provider windows_http_acl (LWRP provider windows_http_acl from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/pagefile.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/pagefile.rb into provider windows_pagefile (LWRP provider windows_pagefile from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/path.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/path.rb into provider windows_path (LWRP provider windows_path from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/printer.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/printer.rb into provider windows_printer (LWRP provider windows_printer from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/printer_port.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/printer_port.rb into provider windows_printer_port (LWRP provider windows_printer_port from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/shortcut.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/shortcut.rb into provider windows_shortcut (LWRP provider windows_shortcut from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/task.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/task.rb into provider windows_task (LWRP provider windows_task from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's providers from /root/.chef/cookbooks/windows/providers/zipfile.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/providers/zipfile.rb into provider windows_zipfile (LWRP provider windows_zipfile from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/auto_run.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/auto_run.rb into resource windows_auto_run (Custom resource windows_auto_run from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/certificate.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/certificate.rb into resource windows_certificate (Custom resource windows_certificate from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/certificate_binding.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/certificate_binding.rb into resource windows_certificate_binding (Custom resource windows_certificate_binding from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/feature.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/feature.rb into resource windows_feature (Custom resource windows_feature from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/font.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/font.rb into resource windows_font (Custom resource windows_font from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/http_acl.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/http_acl.rb into resource windows_http_acl (Custom resource windows_http_acl from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/pagefile.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/pagefile.rb into resource windows_pagefile (Custom resource windows_pagefile from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/path.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/path.rb into resource windows_path (Custom resource windows_path from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/printer.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/printer.rb into resource windows_printer (Custom resource windows_printer from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/printer_port.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/printer_port.rb into resource windows_printer_port (Custom resource windows_printer_port from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/shortcut.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/shortcut.rb into resource windows_shortcut (Custom resource windows_shortcut from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/task.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/task.rb into resource windows_task (Custom resource windows_task from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/zipfile.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/zipfile.rb into resource windows_zipfile (Custom resource windows_zipfile from cookbook windows)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook build-essential's providers from /root/.chef/cookbooks/build-essential/providers/msys_archive.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/build-essential/providers/msys_archive.rb into provider build_essential_msys_archive (LWRP provider build_essential_msys_archive from cookbook build-essential)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook build-essential's resources from /root/.chef/cookbooks/build-essential/resources/msys_archive.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/build-essential/resources/msys_archive.rb into resource build_essential_msys_archive (Custom resource build_essential_msys_archive from cookbook build-essential)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook ohai's providers from /root/.chef/cookbooks/ohai/providers/hint.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/ohai/providers/hint.rb into provider ohai_hint (LWRP provider ohai_hint from cookbook ohai)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook ohai's resources from /root/.chef/cookbooks/ohai/resources/hint.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/ohai/resources/hint.rb into resource ohai_hint (Custom resource ohai_hint from cookbook ohai)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook packagecloud's providers from /root/.chef/cookbooks/packagecloud/providers/repo.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/packagecloud/providers/repo.rb into provider packagecloud_repo (LWRP provider packagecloud_repo from cookbook packagecloud)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook packagecloud's resources from /root/.chef/cookbooks/packagecloud/resources/repo.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/packagecloud/resources/repo.rb into resource packagecloud_repo (Custom resource packagecloud_repo from cookbook packagecloud)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook yum's providers from /root/.chef/cookbooks/yum/providers/globalconfig.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/yum/providers/globalconfig.rb into provider yum_globalconfig (LWRP provider yum_globalconfig from cookbook yum)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook yum's providers from /root/.chef/cookbooks/yum/providers/repository.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/yum/providers/repository.rb into provider yum_repository (LWRP provider yum_repository from cookbook yum)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook yum's resources from /root/.chef/cookbooks/yum/resources/globalconfig.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/yum/resources/globalconfig.rb into resource yum_globalconfig (Custom resource yum_globalconfig from cookbook yum)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook yum's resources from /root/.chef/cookbooks/yum/resources/repository.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/yum/resources/repository.rb into resource yum_repository (Custom resource yum_repository from cookbook yum)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook iptables's resources from /root/.chef/cookbooks/iptables/resources/rule.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/iptables/resources/rule.rb into resource iptables_rule (Custom resource iptables_rule from cookbook iptables)
[2016-09-13T12:59:47+01:00] DEBUG: Loading cookbook nginx's definitions from /root/.chef/cookbooks/nginx/definitions/nginx_site.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading recipe nginx::default via include_recipe
[2016-09-13T12:59:47+01:00] DEBUG: Found recipe default in cookbook nginx
[2016-09-13T12:59:47+01:00] DEBUG: Loading recipe nginx::package via include_recipe
[2016-09-13T12:59:47+01:00] DEBUG: Found recipe package in cookbook nginx
[2016-09-13T12:59:47+01:00] DEBUG: Loading recipe nginx::ohai_plugin via include_recipe
[2016-09-13T12:59:47+01:00] DEBUG: Found recipe ohai_plugin in cookbook nginx
[2016-09-13T12:59:47+01:00] DEBUG: Resources for generic ohai resource enabled on node include: [Chef::Resource::Ohai]
[2016-09-13T12:59:47+01:00] DEBUG: Resource for ohai is Chef::Resource::Ohai
[2016-09-13T12:59:47+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:47+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:47+01:00] DEBUG: Loading recipe ohai::default via include_recipe
[2016-09-13T12:59:47+01:00] DEBUG: Found recipe default in cookbook ohai
[2016-09-13T12:59:47+01:00] INFO: ohai plugins will be at: /etc/chef/ohai_plugins
[2016-09-13T12:59:47+01:00] DEBUG: Resources for generic remote_directory resource enabled on node include: [Chef::Resource::RemoteDirectory]
[2016-09-13T12:59:47+01:00] DEBUG: Resource for remote_directory is Chef::Resource::RemoteDirectory
[2016-09-13T12:59:47+01:00] INFO: Processing remote_directory[/etc/chef/ohai_plugins for cookbook ohai] action create (ohai::default line 32)
[2016-09-13T12:59:47+01:00] DEBUG: Providers for generic remote_directory resource enabled on node include: [Chef::Provider::RemoteDirectory]
[2016-09-13T12:59:47+01:00] DEBUG: Provider for action create on resource remote_directory[/etc/chef/ohai_plugins for cookbook ohai] is Chef::Provider::RemoteDirectory
[2016-09-13T12:59:47+01:00] INFO: remote_directory[/etc/chef/ohai_plugins for cookbook ohai] created directory /etc/chef/ohai_plugins
[2016-09-13T12:59:47+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:47+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:47+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T12:59:47+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T12:59:47+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T12:59:47+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T12:59:47+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:47+01:00] INFO: remote_directory[/etc/chef/ohai_plugins for cookbook ohai] mode changed to 755
[2016-09-13T12:59:47+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T12:59:47+01:00] INFO: Processing cookbook_file[/etc/chef/ohai_plugins/README] action create (dynamically defined)
[2016-09-13T12:59:47+01:00] DEBUG: Not fetching cookbooks/ohai/files/default/plugins/README, as the cache is up to date.
[2016-09-13T12:59:47+01:00] DEBUG: Current checksum: 85bc3bb921efade3f2566a668ab4b639; manifest checksum: 85bc3bb921efade3f2566a668ab4b639)
[2016-09-13T12:59:47+01:00] DEBUG: cookbook_file[/etc/chef/ohai_plugins/README] staging /root/.chef/cookbooks/ohai/files/default/plugins/README to /etc/chef/ohai_plugins/.chef-README20160913-19215-199p67u
[2016-09-13T12:59:47+01:00] DEBUG: Touching /etc/chef/ohai_plugins/README to create it
[2016-09-13T12:59:47+01:00] INFO: cookbook_file[/etc/chef/ohai_plugins/README] created file /etc/chef/ohai_plugins/README
[2016-09-13T12:59:47+01:00] DEBUG: calculating checksum of /etc/chef/ohai_plugins/.chef-README20160913-19215-199p67u to compare with 
[2016-09-13T12:59:47+01:00] DEBUG: Running: diff -u /etc/chef/ohai_plugins/README /etc/chef/ohai_plugins/.chef-README20160913-19215-199p67u
[2016-09-13T12:59:47+01:00] DEBUG: Reading modes from /etc/chef/ohai_plugins/README file
[2016-09-13T12:59:47+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/chef/ohai_plugins/.chef-README20160913-19215-199p67u
[2016-09-13T12:59:47+01:00] DEBUG: Moving temporary file /etc/chef/ohai_plugins/.chef-README20160913-19215-199p67u into place at /etc/chef/ohai_plugins/README
[2016-09-13T12:59:47+01:00] INFO: cookbook_file[/etc/chef/ohai_plugins/README] updated file contents /etc/chef/ohai_plugins/README
[2016-09-13T12:59:47+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:47+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:47+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T12:59:47+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T12:59:47+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T12:59:47+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T12:59:47+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:47+01:00] INFO: cookbook_file[/etc/chef/ohai_plugins/README] mode changed to 644
[2016-09-13T12:59:47+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T12:59:47+01:00] DEBUG: Resources for generic ohai resource enabled on node include: [Chef::Resource::Ohai]
[2016-09-13T12:59:47+01:00] DEBUG: Resource for ohai is Chef::Resource::Ohai
[2016-09-13T12:59:47+01:00] INFO: Processing ohai[custom_plugins] action reload (ohai::default line 46)
[2016-09-13T12:59:47+01:00] DEBUG: Providers for generic ohai resource enabled on node include: [Chef::Provider::Ohai]
[2016-09-13T12:59:47+01:00] DEBUG: Provider for action reload on resource ohai[custom_plugins] is Chef::Provider::Ohai
[2016-09-13T12:59:47+01:00] WARN: Ohai::Config[:plugin_path] is set. Ohai::Config[:plugin_path] is deprecated and will be removed in future releases of ohai. Use ohai.plugin_path in your configuration file to configure :plugin_path for ohai.
[2016-09-13T12:59:47+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/etc/chef/ohai_plugins", "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins"], :disabled_plugins=>[], :hints_path=>["/etc/chef/ohai/hints"], :plugin=>{}, :node_name=>"chef-master", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2016-09-13T12:59:47+01:00] WARN: Ohai::Config[:plugin_path] is set. Ohai::Config[:plugin_path] is deprecated and will be removed in future releases of ohai. Use ohai.plugin_path in your configuration file to configure :plugin_path for ohai.
[2016-09-13T12:59:47+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/etc/chef/ohai_plugins", "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins"], :disabled_plugins=>[], :hints_path=>["/etc/chef/ohai/hints"], :plugin=>{}, :node_name=>"chef-master", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2016-09-13T12:59:47+01:00] DEBUG: Searching for Ohai plugins in /etc/chef/ohai_plugins
[2016-09-13T12:59:47+01:00] DEBUG: Searching for Ohai plugins in /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/cloud_v2.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/java.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ohai_time.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/kernel.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/virtualization.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/go.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ps.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/os.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/command.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/vmware.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/bsd/virtualization.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/bsd/filesystem.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/php.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/init_package.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/scala.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/hardware.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/virtualization.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/system_profiler.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/filesystem2.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/filesystem.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/languages.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/python.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/cloud.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linode.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/digital_ocean.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/erlang.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/root_group.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/shells.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/mono.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/softlayer.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dmi.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/lua.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/fips.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/virtualization.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/drivers.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/filesystem.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/fips.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/virtualization.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/sessions.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/mdadm.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/block_device.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/filesystem2.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/lsb.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/filesystem.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openstack.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ssh_host_key.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/elixir.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/os.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/joyent.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/virtualization.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/zpools.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/dmi.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/filesystem.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/eucalyptus.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/network_listeners.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/nodejs.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/hostname.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/perl.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ec2.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/network_route.rb
[2016-09-13T12:59:47+01:00] DEBUG: Could not load sigar gem. Skipping NetworkRoutes plugin
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/filesystem.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ohai.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ruby.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/rust.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/keys.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/uptime.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ip_scopes.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/rackspace.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/azure.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/passwd.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/packages.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/virtualbox.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/powershell.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/kernel.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/virtualization.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/platform.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/network.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/uptime.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/cpu.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/memory.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/os.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/filesystem.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/groovy.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/os.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/timezone.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/gce.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/chef.rb
[2016-09-13T12:59:47+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/c.rb
[2016-09-13T12:59:48+01:00] DEBUG: Plugin DMI: ran 'dmidecode' and failed #<Errno::ENOENT: No such file or directory - dmidecode>
[2016-09-13T12:59:48+01:00] DEBUG: Plugin DMI threw #<Ohai::Exceptions::Exec: No such file or directory - dmidecode>
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:43:in `rescue in shell_out'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:37:in `shell_out'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dmi.rb:47:in `block (2 levels) in <main>'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin/versionvii.rb:90:in `instance_eval'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin/versionvii.rb:90:in `run_plugin'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin.rb:100:in `run'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin.rb:173:in `safe_run'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/runner.rb:84:in `run_v7_plugin'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/runner.rb:43:in `run_plugin'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:98:in `block in run_plugins'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:97:in `each'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:97:in `run_plugins'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:75:in `all_plugins'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/provider/ohai.rb:42:in `block in action_reload'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/why_run.rb:52:in `add_action'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/provider.rb:176:in `converge_by'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/provider/ohai.rb:35:in `action_reload'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/provider.rb:145:in `run_action'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource.rb:603:in `run_action'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/ohai/recipes/default.rb:52:in `from_file'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/from_file.rb:30:in `from_file'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:336:in `load_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:292:in `block in include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:291:in `each'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:291:in `include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/nginx/recipes/ohai_plugin.rb:35:in `from_file'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/from_file.rb:30:in `from_file'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:336:in `load_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:292:in `block in include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:291:in `each'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:291:in `include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/nginx/recipes/package.rb:21:in `from_file'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/from_file.rb:30:in `from_file'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:336:in `load_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:292:in `block in include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:291:in `each'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:291:in `include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/nginx/recipes/default.rb:22:in `from_file'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/from_file.rb:30:in `from_file'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb:336:in `load_recipe'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/run_context/cookbook_compiler.rb:140:in `block in compile_recipes'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/run_context/cookbook_compiler.rb:138:in `each'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/run_context/cookbook_compiler.rb:138:in `compile_recipes'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/run_context/cookbook_compiler.rb:75:in `compile'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/run_context.rb:176:in `load'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/policy_builder/expand_node_object.rb:97:in `setup_run_context'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/2.1.0/forwardable.rb:183:in `setup_run_context'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:510:in `setup_run_context'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:280:in `run'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:302:in `block in fork_chef_client'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:290:in `fork'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:290:in `fork_chef_client'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:255:in `block in run_chef_client'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:243:in `run_chef_client'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:450:in `loop'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:434:in `run_application'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:60:in `run'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/solo.rb:226:in `run'
[2016-09-13T12:59:48+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/bin/chef-solo:25:in `<top (required)>'
[2016-09-13T12:59:48+01:00] DEBUG: /usr/bin/chef-solo:53:in `load'
[2016-09-13T12:59:48+01:00] DEBUG: /usr/bin/chef-solo:53:in `<main>'
[2016-09-13T12:59:48+01:00] DEBUG: Plugin Kernel: ran 'uname -s' and returned 0
[2016-09-13T12:59:48+01:00] DEBUG: Plugin Kernel: ran 'uname -r' and returned 0
[2016-09-13T12:59:48+01:00] DEBUG: Plugin Kernel: ran 'uname -v' and returned 0
[2016-09-13T12:59:48+01:00] DEBUG: Plugin Kernel: ran 'uname -m' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Kernel: ran 'uname -p' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Kernel: ran 'uname -o' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Kernel: ran 'env lsmod' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Did not find hint ec2.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:49+01:00] DEBUG: Plugin EC2: has_ec2_xen_uuid? == false
[2016-09-13T12:59:49+01:00] DEBUG: Plugin EC2: has_ec2_dmi? == false
[2016-09-13T12:59:49+01:00] DEBUG: Plugin EC2: has_amazon_org? == false
[2016-09-13T12:59:49+01:00] DEBUG: Plugin EC2: looks_like_ec2? == false
[2016-09-13T12:59:49+01:00] DEBUG: Did not find hint gce.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:49+01:00] DEBUG: Mixin GCE: can_metadata_connect? failed setting up socket: getaddrinfo: Name or service not known
[2016-09-13T12:59:49+01:00] DEBUG: Plugin GCE: looks_like_gce? == false
[2016-09-13T12:59:49+01:00] DEBUG: default route table is 'main'
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Network: ran 'ip addr' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Network: ran 'ip -d -s link' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Network: ran 'ip -f inet neigh show' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet route show table main' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Parsing 10.0.2.0/24 dev eth0  proto kernel  scope link  src 10.0.2.15
[2016-09-13T12:59:49+01:00] DEBUG: Parsing 192.168.33.0/24 dev eth1  proto kernel  scope link  src 192.168.33.10
[2016-09-13T12:59:49+01:00] DEBUG: Parsing 169.254.0.0/16 dev eth0  scope link  metric 1002
[2016-09-13T12:59:49+01:00] DEBUG: Parsing 169.254.0.0/16 dev eth1  scope link  metric 1003
[2016-09-13T12:59:49+01:00] DEBUG: Parsing default via 10.0.2.2 dev eth0
[2016-09-13T12:59:49+01:00] DEBUG: default_interface set to eth0
[2016-09-13T12:59:49+01:00] DEBUG: default_gateway set to 10.0.2.2
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Network: ran 'ip -f inet6 neigh show' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet6 route show table main' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable ::/96 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable ::ffff:0.0.0.0/96 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable 2002:a00::/24 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable 2002:7f00::/24 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable 2002:a9fe::/32 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable 2002:ac10::/28 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable 2002:c0a8::/32 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable 2002:e000::/19 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing unreachable 3ffe:ffff::/32 dev lo  metric 1024  error -113 mtu 65536
[2016-09-13T12:59:49+01:00] DEBUG: Parsing fe80::/64 dev eth0  proto kernel  metric 256  mtu 1500
[2016-09-13T12:59:49+01:00] DEBUG: Parsing fe80::/64 dev eth1  proto kernel  metric 256  mtu 1500
[2016-09-13T12:59:49+01:00] DEBUG: Unable to determine 'default_inet6_interface' as no default routes were found for that interface family
[2016-09-13T12:59:49+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool eth0' and returned 0
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: Settings for eth0:
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Supported ports: [ TP ]
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Supported link modes:   10baseT/Half 10baseT/Full 
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	                        1000baseT/Full 
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Supported pause frame use: No
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Supports auto-negotiation: Yes
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Advertised link modes:  10baseT/Half 10baseT/Full 
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	                        1000baseT/Full 
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Advertised pause frame use: No
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Advertised auto-negotiation: Yes
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Speed: 1000Mb/s
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Duplex: Full
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Port: Twisted Pair
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	PHYAD: 0
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Transceiver: internal
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Auto-negotiation: on
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	MDI-X: off (auto)
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Supports Wake-on: umbg
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Wake-on: d
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Current message level: 0x00000007 (7)
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 			       drv probe link
[2016-09-13T12:59:49+01:00] DEBUG: Parsing ethtool output: 	Link detected: yes
[2016-09-13T12:59:50+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool eth1' and returned 0
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: Settings for eth1:
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Supported ports: [ TP ]
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Supported link modes:   10baseT/Half 10baseT/Full 
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	                        1000baseT/Full 
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Supported pause frame use: No
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Supports auto-negotiation: Yes
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Advertised link modes:  10baseT/Half 10baseT/Full 
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	                        1000baseT/Full 
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Advertised pause frame use: No
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Advertised auto-negotiation: Yes
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Speed: 1000Mb/s
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Duplex: Full
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Port: Twisted Pair
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	PHYAD: 0
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Transceiver: internal
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Auto-negotiation: on
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	MDI-X: off (auto)
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Supports Wake-on: umbg
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Wake-on: d
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Current message level: 0x00000007 (7)
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 			       drv probe link
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: 	Link detected: yes
[2016-09-13T12:59:50+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool -g eth0' and returned 0
[2016-09-13T12:59:50+01:00] DEBUG: Parsing ethtool output: Ring parameters for eth0:
Pre-set maximums:
RX:		4096
RX Mini:	0
RX Jumbo:	0
TX:		4096
Current hardware settings:
RX:		256
RX Mini:	0
RX Jumbo:	0
TX:		256


[2016-09-13T12:59:51+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool -g eth1' and returned 0
[2016-09-13T12:59:51+01:00] DEBUG: Parsing ethtool output: Ring parameters for eth1:
Pre-set maximums:
RX:		4096
RX Mini:	0
RX Jumbo:	0
TX:		4096
Current hardware settings:
RX:		256
RX Mini:	0
RX Jumbo:	0
TX:		256


[2016-09-13T12:59:51+01:00] DEBUG: Did not find hint rackspace.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Rackspace: ran 'xenstore-read vm-data/provider_data/provider' and failed #<Errno::ENOENT: No such file or directory - xenstore-read>
[2016-09-13T12:59:51+01:00] DEBUG: Did not find hint eucalyptus.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Eucalyptus: has_euca_mac? == false
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Eucalyptus: looks_like_euca? == false
[2016-09-13T12:59:51+01:00] DEBUG: Did not find hint linode.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Linode: looks_like_linode? == false
[2016-09-13T12:59:51+01:00] DEBUG: Did not find hint openstack.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Openstack: openstack hint not present
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Openstack: has_openstack_dmi? == false
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Openstack: Node does not appear to be an Openstack node
[2016-09-13T12:59:51+01:00] DEBUG: Did not find hint azure.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:51+01:00] DEBUG: azure plugin: No hints present for azure and doesn't appear to be azure.
[2016-09-13T12:59:51+01:00] DEBUG: Did not find hint digital_ocean.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Digitalocean: No hints present for and doesn't look like digitalocean
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Java: ran 'java -mx64m -version' and failed #<Errno::ENOENT: No such file or directory - java>
[2016-09-13T12:59:51+01:00] DEBUG: Java plugin: Could not shell_out "java -mx64m -version". Skipping plugin
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Go: ran 'go version' and failed #<Errno::ENOENT: No such file or directory - go>
[2016-09-13T12:59:51+01:00] DEBUG: Go plugin: Could not shell_out "go version". Skipping plugin
[2016-09-13T12:59:51+01:00] DEBUG: Plugin PHP: ran 'php -v' and failed #<Errno::ENOENT: No such file or directory - php>
[2016-09-13T12:59:51+01:00] DEBUG: Php plugin: Could not shell_out "php -v". Skipping plugin
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Scala: ran 'scala -version' and failed #<Errno::ENOENT: No such file or directory - scala>
[2016-09-13T12:59:51+01:00] DEBUG: Scala plugin: Could not shell_out "scala -version". Skipping data
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Scala: ran 'sbt --version' and failed #<Errno::ENOENT: No such file or directory - sbt>
[2016-09-13T12:59:51+01:00] DEBUG: Scala plugin: Could not shell_out "sbt --version". Skipping data
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Python: ran 'python -c "import sys; print (sys.version)"' and returned 0
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Erlang: ran 'erl -eval 'erlang:display(erlang:system_info(otp_release)), erlang:display(erlang:system_info(version)), erlang:display(erlang:system_info(nif_version)), halt().'  -noshell' and returned 127
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Erlang: ran 'erl +V' and failed #<Errno::ENOENT: No such file or directory - erl>
[2016-09-13T12:59:51+01:00] DEBUG: Erlang plugin: Could not shell_out "erl +V". Skipping data
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Mono: ran 'mono -V' and failed #<Errno::ENOENT: No such file or directory - mono>
[2016-09-13T12:59:51+01:00] DEBUG: Mono plugin: Could not shell_out "mono -V". Skipping plugin
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Lua: ran 'lua -v' and returned 0
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Elixir: ran 'elixir -v' and failed #<Errno::ENOENT: No such file or directory - elixir>
[2016-09-13T12:59:51+01:00] DEBUG: Elixir plugin: Could not shell_out "elixir -v". Skipping plugin
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Nodejs: ran 'node -v' and failed #<Errno::ENOENT: No such file or directory - node>
[2016-09-13T12:59:51+01:00] DEBUG: Nodejs plugin: Could not shell_out "node -v". Skipping plugin
[2016-09-13T12:59:51+01:00] DEBUG: Plugin Perl: ran 'perl -V:version -V:archname' and returned 0
[2016-09-13T12:59:52+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %Q(platform=#{RUBY_PLATFORM},version=#{RUBY_VERSION},release_date=#{RUBY_RELEASE_DATE},target=#{RbConfig::CONFIG['target']},target_cpu=#{RbConfig::CONFIG['target_cpu']},target_vendor=#{RbConfig::CONFIG['target_vendor']},target_os=#{RbConfig::CONFIG['target_os']},host=#{RbConfig::CONFIG['host']},host_cpu=#{RbConfig::CONFIG['host_cpu']},host_os=#{RbConfig::CONFIG['host_os']},host_vendor=#{RbConfig::CONFIG['host_vendor']},bin_dir=#{RbConfig::CONFIG['bindir']},ruby_bin=#{::File.join(RbConfig::CONFIG['bindir'], RbConfig::CONFIG['ruby_install_name'])},)"' and returned 0
[2016-09-13T12:59:52+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; require 'rubygems'; puts ::Gem.default_exec_format % 'gem'"' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %x{/opt/chef/embedded/bin/ruby /opt/chef/embedded/bin/gem env gemdir}.chomp!"' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Rust: ran 'rustc --version' and failed #<Errno::ENOENT: No such file or directory - rustc>
[2016-09-13T12:59:53+01:00] DEBUG: Rust plugin: Could not shell_out "rustc --version". Skipping plugin
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Powershell: No data to collect. Skipping...
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Groovy: ran 'groovy -v' and failed #<Errno::ENOENT: No such file or directory - groovy>
[2016-09-13T12:59:53+01:00] DEBUG: Groovy plugin: Could not shell_out "groovy -v". Skipping plugin
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C: ran 'gcc -v' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C: ran '/lib/libc.so.6' and failed #<Errno::ENOENT: No such file or directory - /lib/libc.so.6>
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C '/lib/libc.so.6' binary could not be found. Skipping data.
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C: ran '/lib64/libc.so.6' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C: ran 'cl /?' and returned 127
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C 'cl /?' failed. Skipping data.
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C: ran 'devenv.com /?' and returned 127
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C 'devenv.com /?' failed. Skipping data.
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C: ran 'xlc -qversion' and failed #<Errno::ENOENT: No such file or directory - xlc>
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C: ran 'cc -V -flags' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C: ran 'what /opt/ansic/bin/cc' and failed #<Errno::ENOENT: No such file or directory - what>
[2016-09-13T12:59:53+01:00] DEBUG: Plugin C 'what /opt/ansic/bin/cc' binary could not be found. Skipping data.
[2016-09-13T12:59:53+01:00] DEBUG: Skipping LSB, cannot find /etc/lsb-release or /usr/bin/lsb_release
[2016-09-13T12:59:53+01:00] DEBUG: Could not load sigar gem. Skipping NetworkListeners plugin
[2016-09-13T12:59:53+01:00] DEBUG: [inet] Using default interface eth0 and default gateway 10.0.2.2 to set the default ip to 10.0.2.15
[2016-09-13T12:59:53+01:00] DEBUG: [inet6] no default interface, picking the first ipaddress
[2016-09-13T12:59:53+01:00] DEBUG: ipaddress and ip6address are set from different interfaces (eth0 & eth1)
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Drivers: No data to collect. Skipping...
[2016-09-13T12:59:53+01:00] DEBUG: Virtualization plugin: did not find nova
[2016-09-13T12:59:53+01:00] DEBUG: Virtualization plugin: did not find lxc-version
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Filesystem: ran 'df -P' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Filesystem: ran 'df -iP' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Filesystem: ran 'mount' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,FSTYPE' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,UUID' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,LABEL' and returned 0
[2016-09-13T12:59:53+01:00] DEBUG: Plugin Hardware: No data to collect. Skipping...
[2016-09-13T12:59:53+01:00] DEBUG: Plugin SystemProfile: No data to collect. Skipping...
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Filesystem2: ran 'df -P' and returned 0
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Filesystem2: ran 'df -iP' and returned 0
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Filesystem2: ran 'mount' and returned 0
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Filesystem2: ran 'lsblk -n -P -o NAME,UUID,LABEL,FSTYPE' and returned 0
[2016-09-13T12:59:54+01:00] DEBUG: Did not find hint softlayer.json in the hint path(s): /etc/chef/ohai/hints 
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Softlayer: looks_like_softlayer? == false
[2016-09-13T12:59:54+01:00] DEBUG: Sessions plugin: did not find loginctl
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Zpools: No data to collect. Skipping...
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Hostname: ran 'hostname -s' and returned 0
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Hostname: ran 'hostname' and returned 0
[2016-09-13T12:59:54+01:00] DEBUG: Plugin Hostname: ran 'hostname --fqdn' and returned 0
[2016-09-13T12:59:54+01:00] DEBUG: Plugin ip_scopes: cannot load gem, plugin disabled: cannot load such file -- ipaddr_extensions
[2016-09-13T12:59:55+01:00] DEBUG: Plugin Packages: ran 'rpm -qa --qf '%{NAME}\t%|EPOCH?{%{EPOCH}}:{0}|\t%{VERSION}\t%{RELEASE}\t%{INSTALLTIME}\t%{ARCH}\n'' and returned 0
[2016-09-13T12:59:55+01:00] DEBUG: Plugin Virtualbox: ran 'VBoxControl guestproperty enumerate' and returned 0
[2016-09-13T12:59:55+01:00] INFO: ohai[custom_plugins] reloaded
[2016-09-13T12:59:55+01:00] DEBUG: Loading recipe yum-epel via include_recipe
[2016-09-13T12:59:55+01:00] DEBUG: Found recipe default in cookbook yum-epel
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic yum_repository resource enabled on node include: [Custom resource yum_repository from cookbook yum]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for yum_repository is Custom resource yum_repository from cookbook yum
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic package resource enabled on node include: [Chef::Resource::YumPackage, Chef::Resource::Package]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for package is Chef::Resource::YumPackage
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic service resource enabled on node include: [Chef::Resource::Service]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for service is Chef::Resource::Service
[2016-09-13T12:59:55+01:00] DEBUG: Loading recipe nginx::commons via include_recipe
[2016-09-13T12:59:55+01:00] DEBUG: Found recipe commons in cookbook nginx
[2016-09-13T12:59:55+01:00] DEBUG: Loading recipe nginx::commons_dir via include_recipe
[2016-09-13T12:59:55+01:00] DEBUG: Found recipe commons_dir in cookbook nginx
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2016-09-13T12:59:55+01:00] DEBUG: Loading recipe nginx::commons_script via include_recipe
[2016-09-13T12:59:55+01:00] DEBUG: Found recipe commons_script in cookbook nginx
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Loading recipe nginx::commons_conf via include_recipe
[2016-09-13T12:59:55+01:00] DEBUG: Found recipe commons_conf in cookbook nginx
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic execute resource enabled on node include: [Chef::Resource::Execute]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for execute is Chef::Resource::Execute
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic service resource enabled on node include: [Chef::Resource::Service]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for service is Chef::Resource::Service
[2016-09-13T12:59:55+01:00] DEBUG: ivars which did not match with the prior resource: [:@supports]
[2016-09-13T12:59:55+01:00] WARN: Cloning resource attributes for service[nginx] from prior resource (CHEF-3694)
Previous service[nginx]: /root/.chef/cookbooks/nginx/recipes/package.rb:47:in `from_file'
Current  service[nginx]: /root/.chef/cookbooks/nginx/recipes/default.rb:24:in `from_file' at /root/.chef/cookbooks/nginx/recipes/default.rb:24:in `from_file' at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/event_dispatch/dispatcher.rb:43:in `call'
[2016-09-13T12:59:55+01:00] DEBUG: Loading recipe iptables::default via include_recipe
[2016-09-13T12:59:55+01:00] DEBUG: Found recipe default in cookbook iptables
[2016-09-13T12:59:55+01:00] DEBUG: Loading recipe iptables::_package via include_recipe
[2016-09-13T12:59:55+01:00] DEBUG: Found recipe _package in cookbook iptables
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic package resource enabled on node include: [Chef::Resource::YumPackage, Chef::Resource::Package]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for package is Chef::Resource::YumPackage
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic execute resource enabled on node include: [Chef::Resource::Execute]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for execute is Chef::Resource::Execute
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic file resource enabled on node include: [Chef::Resource::File]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for file is Chef::Resource::File
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic service resource enabled on node include: [Chef::Resource::Service]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for service is Chef::Resource::Service
[2016-09-13T12:59:55+01:00] DEBUG: Converging node chef-master
[2016-09-13T12:59:55+01:00] INFO: Processing ohai[reload_nginx] action nothing (nginx::ohai_plugin line 22)
[2016-09-13T12:59:55+01:00] DEBUG: Skipping ohai[reload_nginx] due to action :nothing
[2016-09-13T12:59:55+01:00] INFO: Processing template[/etc/chef/ohai_plugins/nginx.rb] action create (nginx::ohai_plugin line 27)
[2016-09-13T12:59:55+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Provider for action create on resource template[/etc/chef/ohai_plugins/nginx.rb] is Chef::Provider::Template
[2016-09-13T12:59:55+01:00] DEBUG: Not fetching cookbooks/nginx/templates/default/plugins/nginx.rb.erb, as the cache is up to date.
[2016-09-13T12:59:55+01:00] DEBUG: Current checksum: 9ac55559cbd9e4bd8c8e0f74b15855aa; manifest checksum: 9ac55559cbd9e4bd8c8e0f74b15855aa)
[2016-09-13T12:59:55+01:00] DEBUG: Touching /etc/chef/ohai_plugins/nginx.rb to create it
[2016-09-13T12:59:55+01:00] INFO: template[/etc/chef/ohai_plugins/nginx.rb] created file /etc/chef/ohai_plugins/nginx.rb
[2016-09-13T12:59:55+01:00] DEBUG: calculating checksum of /etc/chef/ohai_plugins/.chef-nginx.rb20160913-19215-1626fyv to compare with 
[2016-09-13T12:59:55+01:00] DEBUG: Running: diff -u /etc/chef/ohai_plugins/nginx.rb /etc/chef/ohai_plugins/.chef-nginx.rb20160913-19215-1626fyv
[2016-09-13T12:59:55+01:00] DEBUG: Reading modes from /etc/chef/ohai_plugins/nginx.rb file
[2016-09-13T12:59:55+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/chef/ohai_plugins/.chef-nginx.rb20160913-19215-1626fyv
[2016-09-13T12:59:55+01:00] DEBUG: Moving temporary file /etc/chef/ohai_plugins/.chef-nginx.rb20160913-19215-1626fyv into place at /etc/chef/ohai_plugins/nginx.rb
[2016-09-13T12:59:55+01:00] INFO: template[/etc/chef/ohai_plugins/nginx.rb] updated file contents /etc/chef/ohai_plugins/nginx.rb
[2016-09-13T12:59:55+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:55+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:55+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T12:59:55+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T12:59:55+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T12:59:55+01:00] INFO: template[/etc/chef/ohai_plugins/nginx.rb] owner changed to 0
[2016-09-13T12:59:55+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T12:59:55+01:00] INFO: template[/etc/chef/ohai_plugins/nginx.rb] group changed to 0
[2016-09-13T12:59:55+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T12:59:55+01:00] INFO: template[/etc/chef/ohai_plugins/nginx.rb] mode changed to 755
[2016-09-13T12:59:55+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T12:59:55+01:00] INFO: template[/etc/chef/ohai_plugins/nginx.rb] sending reload action to ohai[reload_nginx] (immediate)
[2016-09-13T12:59:55+01:00] INFO: Processing ohai[reload_nginx] action reload (nginx::ohai_plugin line 22)
[2016-09-13T12:59:55+01:00] DEBUG: Providers for generic ohai resource enabled on node include: [Chef::Provider::Ohai]
[2016-09-13T12:59:55+01:00] DEBUG: Provider for action reload on resource ohai[reload_nginx] is Chef::Provider::Ohai
[2016-09-13T12:59:55+01:00] WARN: Ohai::Config[:plugin_path] is set. Ohai::Config[:plugin_path] is deprecated and will be removed in future releases of ohai. Use ohai.plugin_path in your configuration file to configure :plugin_path for ohai.
[2016-09-13T12:59:55+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/etc/chef/ohai_plugins", "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins"], :disabled_plugins=>[], :hints_path=>["/etc/chef/ohai/hints"], :plugin=>{}, :node_name=>"chef-master", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2016-09-13T12:59:55+01:00] WARN: Ohai::Config[:plugin_path] is set. Ohai::Config[:plugin_path] is deprecated and will be removed in future releases of ohai. Use ohai.plugin_path in your configuration file to configure :plugin_path for ohai.
[2016-09-13T12:59:55+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/etc/chef/ohai_plugins", "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins"], :disabled_plugins=>[], :hints_path=>["/etc/chef/ohai/hints"], :plugin=>{}, :node_name=>"chef-master", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2016-09-13T12:59:55+01:00] DEBUG: Searching for Ohai plugins in /etc/chef/ohai_plugins
[2016-09-13T12:59:55+01:00] DEBUG: Searching for Ohai plugins in /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /etc/chef/ohai_plugins/nginx.rb
[2016-09-13T12:59:55+01:00] WARN: [DEPRECATION] Plugin at /etc/chef/ohai_plugins/nginx.rb is a version 6 plugin. Version 6 plugins will not be supported in future releases of Ohai. Please upgrade your plugin to version 7 plugin syntax. For more information visit here: docs.chef.io/ohai_custom.html
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/cloud_v2.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/java.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ohai_time.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/kernel.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/virtualization.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/go.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ps.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/os.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/command.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/vmware.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/bsd/virtualization.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/bsd/filesystem.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/php.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/init_package.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/scala.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/hardware.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/virtualization.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/system_profiler.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/filesystem2.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/filesystem.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/languages.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/python.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/cloud.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linode.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/digital_ocean.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/erlang.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/root_group.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/shells.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/mono.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/softlayer.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dmi.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/lua.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/fips.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/virtualization.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/drivers.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/filesystem.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/fips.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/virtualization.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/sessions.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/mdadm.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/block_device.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/filesystem2.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/lsb.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/filesystem.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openstack.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ssh_host_key.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/elixir.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/os.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/joyent.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/virtualization.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/zpools.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/dmi.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/filesystem.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/eucalyptus.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/network_listeners.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/nodejs.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/hostname.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/perl.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ec2.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/network_route.rb
[2016-09-13T12:59:55+01:00] DEBUG: Could not load sigar gem. Skipping NetworkRoutes plugin
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/filesystem.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ohai.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ruby.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/rust.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/keys.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/uptime.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ip_scopes.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/rackspace.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/azure.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/passwd.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/packages.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/virtualbox.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/powershell.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/kernel.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/virtualization.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/platform.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/network.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/uptime.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/cpu.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/memory.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/os.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/filesystem.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/groovy.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/os.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/timezone.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/gce.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/chef.rb
[2016-09-13T12:59:55+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/c.rb
[2016-09-13T12:59:55+01:00] DEBUG: Skipping provides 'nginx' for plugin 'nginx'
[2016-09-13T12:59:55+01:00] DEBUG: Skipping provides 'nginx/version' for plugin 'nginx'
[2016-09-13T12:59:55+01:00] DEBUG: Skipping provides 'nginx/configure_arguments' for plugin 'nginx'
[2016-09-13T12:59:55+01:00] DEBUG: Skipping provides 'nginx/prefix' for plugin 'nginx'
[2016-09-13T12:59:55+01:00] DEBUG: Skipping provides 'nginx/conf_path' for plugin 'nginx'
[2016-09-13T12:59:55+01:00] WARN: Ohai::Mixin::Command run_command is deprecated and will be removed in Ohai 9.0.0
[2016-09-13T12:59:55+01:00] WARN: Ohai::Mixin::Command popen4 is deprecated and will be removed in Ohai 9.0.0
[2016-09-13T12:59:55+01:00] DEBUG: Plugin nginx threw #<Ohai::Exceptions::Exec: command /usr/sbin/nginx -V doesn't exist or is not in the PATH>
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin/versionvi.rb:47:in `instance_eval'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:361:in `popen4'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:114:in `run_command_unix'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:71:in `block in run_command'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:70:in `chdir'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/mixin/command.rb:70:in `run_command'
[2016-09-13T12:59:55+01:00] DEBUG: (eval):47:in `block in collect_contents'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin/versionvi.rb:47:in `instance_eval'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin/versionvi.rb:47:in `block in collect_contents'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin.rb:100:in `run'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/dsl/plugin.rb:173:in `safe_run'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/runner.rb:61:in `run_v6_plugin'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/runner.rb:45:in `run_plugin'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:85:in `block in run_plugins'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:84:in `each'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:84:in `run_plugins'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/system.rb:75:in `all_plugins'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/provider/ohai.rb:42:in `block in action_reload'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/mixin/why_run.rb:52:in `add_action'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/provider.rb:176:in `converge_by'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/provider/ohai.rb:35:in `action_reload'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/provider.rb:145:in `run_action'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource.rb:603:in `run_action'
[2016-09-13T12:59:55+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:78:in `run_action'
[2016-09-13T12:59:55+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:86:in `block in run_action'
[2016-09-13T12:59:55+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:84:in `each'
[2016-09-13T12:59:55+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:84:in `run_action'
[2016-09-13T12:59:55+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block (2 levels) in converge'
[2016-09-13T12:59:55+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `each'
[2016-09-13T12:59:55+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:106:in `block in converge'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource_collection/stepable_iterator.rb:116:in `call'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource_collection/stepable_iterator.rb:116:in `call_iterator_block'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource_collection/stepable_iterator.rb:104:in `iterate'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/2.1.0/forwardable.rb:183:in `execute_each_resource'
[2016-09-13T12:59:55+01:00] DEBUG: /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb:105:in `converge'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:669:in `block in converge'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:664:in `catch'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:664:in `converge'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:703:in `converge_and_save'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/client.rb:283:in `run'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:302:in `block in fork_chef_client'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:290:in `fork'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:290:in `fork_chef_client'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:255:in `block in run_chef_client'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:243:in `run_chef_client'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:450:in `loop'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/client.rb:434:in `run_application'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application.rb:60:in `run'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib/chef/application/solo.rb:226:in `run'
[2016-09-13T12:59:55+01:00] DEBUG: /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/bin/chef-solo:25:in `<top (required)>'
[2016-09-13T12:59:55+01:00] DEBUG: /usr/bin/chef-solo:53:in `load'
[2016-09-13T12:59:55+01:00] DEBUG: /usr/bin/chef-solo:53:in `<main>'
[2016-09-13T12:59:55+01:00] INFO: ohai[reload_nginx] reloaded
[2016-09-13T12:59:55+01:00] INFO: Processing remote_directory[/etc/chef/ohai_plugins for cookbook ohai] action nothing (ohai::default line 32)
[2016-09-13T12:59:55+01:00] DEBUG: Skipping remote_directory[/etc/chef/ohai_plugins for cookbook ohai] due to action :nothing
[2016-09-13T12:59:55+01:00] INFO: Processing ohai[custom_plugins] action nothing (ohai::default line 46)
[2016-09-13T12:59:55+01:00] DEBUG: Skipping ohai[custom_plugins] due to action :nothing
[2016-09-13T12:59:55+01:00] INFO: Processing yum_repository[epel] action create (yum-epel::default line 23)
[2016-09-13T12:59:55+01:00] DEBUG: Providers for generic yum_repository resource enabled on node include: [LWRP provider yum_repository from cookbook yum]
[2016-09-13T12:59:55+01:00] DEBUG: Provider for action create on resource yum_repository[epel] is LWRP provider yum_repository from cookbook yum
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic execute resource enabled on node include: [Chef::Resource::Execute]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for execute is Chef::Resource::Execute
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic execute resource enabled on node include: [Chef::Resource::Execute]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for execute is Chef::Resource::Execute
[2016-09-13T12:59:55+01:00] DEBUG: Resources for generic ruby_block resource enabled on node include: [Chef::Resource::RubyBlock]
[2016-09-13T12:59:55+01:00] DEBUG: Resource for ruby_block is Chef::Resource::RubyBlock
[2016-09-13T12:59:55+01:00] INFO: Processing template[/etc/yum.repos.d/epel.repo] action create (/root/.chef/cookbooks/yum/providers/repository.rb line 45)
[2016-09-13T12:59:55+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T12:59:55+01:00] DEBUG: Provider for action create on resource template[/etc/yum.repos.d/epel.repo] is Chef::Provider::Template
[2016-09-13T12:59:55+01:00] DEBUG: template[/etc/yum.repos.d/epel.repo] checksumming file at /etc/yum.repos.d/epel.repo.
[2016-09-13T12:59:55+01:00] DEBUG: Not fetching cookbooks/yum/templates/default/repo.erb, as the cache is up to date.
[2016-09-13T12:59:55+01:00] DEBUG: Current checksum: 238e119a33b9d3a255e61e0caacd4b18; manifest checksum: 238e119a33b9d3a255e61e0caacd4b18)
[2016-09-13T12:59:55+01:00] DEBUG: calculating checksum of /etc/yum.repos.d/.chef-epel.repo20160913-19215-1daxvwn to compare with cd49150ce444209e46d03678afe306c824ee8dc9ee48efb64d55cd5d002cf5bc
[2016-09-13T12:59:55+01:00] DEBUG: Running: diff -u /etc/yum.repos.d/epel.repo /etc/yum.repos.d/.chef-epel.repo20160913-19215-1daxvwn
[2016-09-13T12:59:55+01:00] INFO: template[/etc/yum.repos.d/epel.repo] backed up to /root/.chef/local-mode-cache/backup/etc/yum.repos.d/epel.repo.chef-20160913125955.625840
[2016-09-13T12:59:55+01:00] DEBUG: Reading modes from /etc/yum.repos.d/epel.repo file
[2016-09-13T12:59:55+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/yum.repos.d/.chef-epel.repo20160913-19215-1daxvwn
[2016-09-13T12:59:55+01:00] DEBUG: Moving temporary file /etc/yum.repos.d/.chef-epel.repo20160913-19215-1daxvwn into place at /etc/yum.repos.d/epel.repo
[2016-09-13T12:59:55+01:00] INFO: template[/etc/yum.repos.d/epel.repo] updated file contents /etc/yum.repos.d/epel.repo
[2016-09-13T12:59:55+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2016-09-13T12:59:55+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T12:59:55+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T12:59:55+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T12:59:55+01:00] INFO: template[/etc/yum.repos.d/epel.repo] sending run action to execute[yum clean metadata epel] (immediate)
[2016-09-13T12:59:55+01:00] INFO: Processing execute[yum clean metadata epel] action run (/root/.chef/cookbooks/yum/providers/repository.rb line 62)
[2016-09-13T12:59:55+01:00] DEBUG: Providers for generic execute resource enabled on node include: [Chef::Provider::Execute]
[2016-09-13T12:59:55+01:00] DEBUG: Provider for action run on resource execute[yum clean metadata epel] is Chef::Provider::Execute
[2016-09-13T12:59:56+01:00] INFO: execute[yum clean metadata epel] ran successfully
[2016-09-13T12:59:56+01:00] INFO: template[/etc/yum.repos.d/epel.repo] sending run action to execute[yum-makecache-epel] (immediate)
[2016-09-13T12:59:56+01:00] INFO: Processing execute[yum-makecache-epel] action run (/root/.chef/cookbooks/yum/providers/repository.rb line 68)
[2016-09-13T12:59:56+01:00] DEBUG: Providers for generic execute resource enabled on node include: [Chef::Provider::Execute]
[2016-09-13T12:59:56+01:00] DEBUG: Provider for action run on resource execute[yum-makecache-epel] is Chef::Provider::Execute
[2016-09-13T13:00:08+01:00] INFO: execute[yum-makecache-epel] ran successfully
[2016-09-13T13:00:08+01:00] INFO: template[/etc/yum.repos.d/epel.repo] sending create action to ruby_block[yum-cache-reload-epel] (immediate)
[2016-09-13T13:00:08+01:00] INFO: Processing ruby_block[yum-cache-reload-epel] action create (/root/.chef/cookbooks/yum/providers/repository.rb line 75)
[2016-09-13T13:00:08+01:00] DEBUG: Providers for generic ruby_block resource enabled on node include: [Chef::Provider::RubyBlock]
[2016-09-13T13:00:08+01:00] DEBUG: Provider for action create on resource ruby_block[yum-cache-reload-epel] is Chef::Provider::RubyBlock
[2016-09-13T13:00:08+01:00] INFO: ruby_block[yum-cache-reload-epel] called
[2016-09-13T13:00:08+01:00] INFO: Processing execute[yum clean metadata epel] action nothing (/root/.chef/cookbooks/yum/providers/repository.rb line 62)
[2016-09-13T13:00:08+01:00] DEBUG: Skipping execute[yum clean metadata epel] due to action :nothing
[2016-09-13T13:00:08+01:00] INFO: Processing execute[yum-makecache-epel] action nothing (/root/.chef/cookbooks/yum/providers/repository.rb line 68)
[2016-09-13T13:00:08+01:00] DEBUG: Skipping execute[yum-makecache-epel] due to action :nothing
[2016-09-13T13:00:08+01:00] INFO: Processing ruby_block[yum-cache-reload-epel] action nothing (/root/.chef/cookbooks/yum/providers/repository.rb line 75)
[2016-09-13T13:00:08+01:00] DEBUG: Skipping ruby_block[yum-cache-reload-epel] due to action :nothing
[2016-09-13T13:00:08+01:00] INFO: Processing yum_package[nginx] action install (nginx::package line 41)
[2016-09-13T13:00:08+01:00] DEBUG: Providers for generic yum_package resource enabled on node include: [Chef::Provider::Package::Yum]
[2016-09-13T13:00:08+01:00] DEBUG: Provider for action install on resource yum_package[nginx] is Chef::Provider::Package::Yum
[2016-09-13T13:00:12+01:00] DEBUG: yum_package[nginx] checking yum info for nginx
[2016-09-13T13:00:12+01:00] DEBUG: yum_package[nginx] installed version: [nil] candidate version: 1.10.1-1.el6
[2016-09-13T13:00:12+01:00] DEBUG: yum_package[nginx] nginx not installed, installing 1.10.1-1.el6
[2016-09-13T13:00:12+01:00] INFO: yum_package[nginx] installing nginx-1.10.1-1.el6 from epel repository
[2016-09-13T13:00:12+01:00] DEBUG: yum_package[nginx]: yum command: "yum -d0 -e0 -y install nginx-1.10.1-1.el6"
[2016-09-13T13:00:43+01:00] INFO: yum_package[nginx] installed nginx at 1.10.1-1.el6
[2016-09-13T13:00:43+01:00] INFO: yum_package[nginx] sending reload action to ohai[reload_nginx] (immediate)
[2016-09-13T13:00:43+01:00] INFO: Processing ohai[reload_nginx] action reload (nginx::ohai_plugin line 22)
[2016-09-13T13:00:43+01:00] DEBUG: Providers for generic ohai resource enabled on node include: [Chef::Provider::Ohai]
[2016-09-13T13:00:43+01:00] DEBUG: Provider for action reload on resource ohai[reload_nginx] is Chef::Provider::Ohai
[2016-09-13T13:00:43+01:00] WARN: Ohai::Config[:plugin_path] is set. Ohai::Config[:plugin_path] is deprecated and will be removed in future releases of ohai. Use ohai.plugin_path in your configuration file to configure :plugin_path for ohai.
[2016-09-13T13:00:43+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/etc/chef/ohai_plugins", "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins"], :disabled_plugins=>[], :hints_path=>["/etc/chef/ohai/hints"], :plugin=>{}, :node_name=>"chef-master", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2016-09-13T13:00:43+01:00] WARN: Ohai::Config[:plugin_path] is set. Ohai::Config[:plugin_path] is deprecated and will be removed in future releases of ohai. Use ohai.plugin_path in your configuration file to configure :plugin_path for ohai.
[2016-09-13T13:00:43+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/etc/chef/ohai_plugins", "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins"], :disabled_plugins=>[], :hints_path=>["/etc/chef/ohai/hints"], :plugin=>{}, :node_name=>"chef-master", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2016-09-13T13:00:43+01:00] DEBUG: Searching for Ohai plugins in /etc/chef/ohai_plugins
[2016-09-13T13:00:43+01:00] DEBUG: Searching for Ohai plugins in /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /etc/chef/ohai_plugins/nginx.rb
[2016-09-13T13:00:43+01:00] WARN: [DEPRECATION] Plugin at /etc/chef/ohai_plugins/nginx.rb is a version 6 plugin. Version 6 plugins will not be supported in future releases of Ohai. Please upgrade your plugin to version 7 plugin syntax. For more information visit here: docs.chef.io/ohai_custom.html
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/cloud_v2.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/java.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ohai_time.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openbsd/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/kernel.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/virtualization.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/go.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ps.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dragonflybsd/os.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/command.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/vmware.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/bsd/virtualization.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/bsd/filesystem.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/php.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/init_package.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/scala.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/hardware.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/virtualization.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/system_profiler.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/filesystem2.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/darwin/filesystem.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/languages.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/python.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/cloud.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linode.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/digital_ocean.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/erlang.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/root_group.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/shells.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/mono.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/softlayer.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/dmi.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/lua.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/fips.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/virtualization.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/drivers.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/windows/filesystem.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/fips.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/virtualization.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/sessions.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/mdadm.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/block_device.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/filesystem2.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/lsb.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/linux/filesystem.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/openstack.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ssh_host_key.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/elixir.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/freebsd/os.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/joyent.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/virtualization.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/zpools.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/dmi.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/solaris2/filesystem.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/eucalyptus.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/network_listeners.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/nodejs.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/hostname.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/perl.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ec2.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/network_route.rb
[2016-09-13T13:00:43+01:00] DEBUG: Could not load sigar gem. Skipping NetworkRoutes plugin
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/sigar/filesystem.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ohai.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ruby.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/rust.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/keys.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/uptime.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/ip_scopes.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/rackspace.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/azure.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/netbsd/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/passwd.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/packages.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/virtualbox.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/powershell.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/kernel.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/virtualization.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/platform.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/network.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/uptime.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/cpu.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/memory.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/os.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/aix/filesystem.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/groovy.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/os.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/timezone.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/gce.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/chef.rb
[2016-09-13T13:00:43+01:00] DEBUG: Loading plugin at /opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai/plugins/c.rb
[2016-09-13T13:00:43+01:00] DEBUG: Skipping provides 'nginx' for plugin 'nginx'
[2016-09-13T13:00:43+01:00] DEBUG: Skipping provides 'nginx/version' for plugin 'nginx'
[2016-09-13T13:00:43+01:00] DEBUG: Skipping provides 'nginx/configure_arguments' for plugin 'nginx'
[2016-09-13T13:00:43+01:00] DEBUG: Skipping provides 'nginx/prefix' for plugin 'nginx'
[2016-09-13T13:00:43+01:00] DEBUG: Skipping provides 'nginx/conf_path' for plugin 'nginx'
[2016-09-13T13:00:43+01:00] WARN: Ohai::Mixin::Command run_command is deprecated and will be removed in Ohai 9.0.0
[2016-09-13T13:00:43+01:00] WARN: Ohai::Mixin::Command popen4 is deprecated and will be removed in Ohai 9.0.0
[2016-09-13T13:00:44+01:00] DEBUG: ---- Begin /usr/sbin/nginx -V STDOUT ----
[2016-09-13T13:00:44+01:00] DEBUG: 
[2016-09-13T13:00:44+01:00] DEBUG: ---- End /usr/sbin/nginx -V STDOUT ----
[2016-09-13T13:00:44+01:00] DEBUG: ---- Begin /usr/sbin/nginx -V STDERR ----
[2016-09-13T13:00:44+01:00] DEBUG: nginx version: nginx/1.10.1
built by gcc 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) 
built with OpenSSL 1.0.1e-fips 11 Feb 2013
TLS SNI support enabled
configure arguments: --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/lib/nginx/tmp/client_body --http-proxy-temp-path=/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path=/var/lib/nginx/tmp/scgi --pid-path=/var/run/nginx.pid --lock-path=/var/lock/subsys/nginx --user=nginx --group=nginx --with-file-aio --with-ipv6 --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_stub_status_module --with-http_perl_module=dynamic --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-debug --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic' --with-ld-opt=' -Wl,-E'
[2016-09-13T13:00:44+01:00] DEBUG: ---- End /usr/sbin/nginx -V STDERR ----
[2016-09-13T13:00:44+01:00] DEBUG: Ran  (/usr/sbin/nginx -V) returned 0
[2016-09-13T13:00:44+01:00] INFO: ohai[reload_nginx] reloaded
[2016-09-13T13:00:44+01:00] INFO: Processing service[nginx] action enable (nginx::package line 47)
[2016-09-13T13:00:44+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2016-09-13T13:00:44+01:00] DEBUG: Provider for action enable on resource service[nginx] is Chef::Provider::Service::Redhat
[2016-09-13T13:00:44+01:00] DEBUG: service[nginx] supports status, running
[2016-09-13T13:00:45+01:00] INFO: service[nginx] enabled
[2016-09-13T13:00:45+01:00] INFO: Processing directory[/etc/nginx] action create (nginx::commons_dir line 22)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource directory[/etc/nginx] is Chef::Provider::Directory
[2016-09-13T13:00:45+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found target_uid == current_uid, not updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found target_gid == current_gid, not updating group
[2016-09-13T13:00:45+01:00] INFO: Processing directory[/var/log/nginx] action create (nginx::commons_dir line 29)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource directory[/var/log/nginx] is Chef::Provider::Directory
[2016-09-13T13:00:45+01:00] DEBUG: Found target_mode != current_mode, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found target_mode != current_mode, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found target_uid == current_uid, not updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T13:00:45+01:00] DEBUG: Found target_uid == current_uid, not updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T13:00:45+01:00] DEBUG: Found target_mode != current_mode, updating mode
[2016-09-13T13:00:45+01:00] INFO: directory[/var/log/nginx] mode changed to 750
[2016-09-13T13:00:45+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:45+01:00] INFO: Processing directory[/var/run] action create (nginx::commons_dir line 36)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource directory[/var/run] is Chef::Provider::Directory
[2016-09-13T13:00:45+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found target_uid == current_uid, not updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found target_gid == current_gid, not updating group
[2016-09-13T13:00:45+01:00] INFO: Processing directory[/etc/nginx/sites-available] action create (nginx::commons_dir line 44)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource directory[/etc/nginx/sites-available] is Chef::Provider::Directory
[2016-09-13T13:00:45+01:00] INFO: directory[/etc/nginx/sites-available] created directory /etc/nginx/sites-available
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] INFO: directory[/etc/nginx/sites-available] owner changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] INFO: directory[/etc/nginx/sites-available] group changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] INFO: directory[/etc/nginx/sites-available] mode changed to 755
[2016-09-13T13:00:45+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:45+01:00] INFO: Processing directory[/etc/nginx/sites-enabled] action create (nginx::commons_dir line 44)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource directory[/etc/nginx/sites-enabled] is Chef::Provider::Directory
[2016-09-13T13:00:45+01:00] INFO: directory[/etc/nginx/sites-enabled] created directory /etc/nginx/sites-enabled
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] INFO: directory[/etc/nginx/sites-enabled] owner changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] INFO: directory[/etc/nginx/sites-enabled] group changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] INFO: directory[/etc/nginx/sites-enabled] mode changed to 755
[2016-09-13T13:00:45+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:45+01:00] INFO: Processing directory[/etc/nginx/conf.d] action create (nginx::commons_dir line 44)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource directory[/etc/nginx/conf.d] is Chef::Provider::Directory
[2016-09-13T13:00:45+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found target_uid == current_uid, not updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found target_gid == current_gid, not updating group
[2016-09-13T13:00:45+01:00] INFO: Processing template[/usr/sbin/nxensite] action create (nginx::commons_script line 23)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource template[/usr/sbin/nxensite] is Chef::Provider::Template
[2016-09-13T13:00:45+01:00] DEBUG: Not fetching cookbooks/nginx/templates/default/nxensite.erb, as the cache is up to date.
[2016-09-13T13:00:45+01:00] DEBUG: Current checksum: d0a082a3abd9fa78bc178f560d89c5d3; manifest checksum: d0a082a3abd9fa78bc178f560d89c5d3)
[2016-09-13T13:00:45+01:00] DEBUG: Touching /usr/sbin/nxensite to create it
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxensite] created file /usr/sbin/nxensite
[2016-09-13T13:00:45+01:00] DEBUG: calculating checksum of /usr/sbin/.chef-nxensite20160913-19215-13rde12 to compare with 
[2016-09-13T13:00:45+01:00] DEBUG: Running: diff -u /usr/sbin/nxensite /usr/sbin/.chef-nxensite20160913-19215-13rde12
[2016-09-13T13:00:45+01:00] DEBUG: Reading modes from /usr/sbin/nxensite file
[2016-09-13T13:00:45+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /usr/sbin/.chef-nxensite20160913-19215-13rde12
[2016-09-13T13:00:45+01:00] DEBUG: Moving temporary file /usr/sbin/.chef-nxensite20160913-19215-13rde12 into place at /usr/sbin/nxensite
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxensite] updated file contents /usr/sbin/nxensite
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxensite] owner changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxensite] group changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxensite] mode changed to 755
[2016-09-13T13:00:45+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:45+01:00] INFO: Processing template[/usr/sbin/nxdissite] action create (nginx::commons_script line 23)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource template[/usr/sbin/nxdissite] is Chef::Provider::Template
[2016-09-13T13:00:45+01:00] DEBUG: Not fetching cookbooks/nginx/templates/default/nxdissite.erb, as the cache is up to date.
[2016-09-13T13:00:45+01:00] DEBUG: Current checksum: e54bbff0120a2342ef2ffd8f7c0b962b; manifest checksum: e54bbff0120a2342ef2ffd8f7c0b962b)
[2016-09-13T13:00:45+01:00] DEBUG: Touching /usr/sbin/nxdissite to create it
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxdissite] created file /usr/sbin/nxdissite
[2016-09-13T13:00:45+01:00] DEBUG: calculating checksum of /usr/sbin/.chef-nxdissite20160913-19215-1rde25d to compare with 
[2016-09-13T13:00:45+01:00] DEBUG: Running: diff -u /usr/sbin/nxdissite /usr/sbin/.chef-nxdissite20160913-19215-1rde25d
[2016-09-13T13:00:45+01:00] DEBUG: Reading modes from /usr/sbin/nxdissite file
[2016-09-13T13:00:45+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /usr/sbin/.chef-nxdissite20160913-19215-1rde25d
[2016-09-13T13:00:45+01:00] DEBUG: Moving temporary file /usr/sbin/.chef-nxdissite20160913-19215-1rde25d into place at /usr/sbin/nxdissite
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxdissite] updated file contents /usr/sbin/nxdissite
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxdissite] owner changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxdissite] group changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] INFO: template[/usr/sbin/nxdissite] mode changed to 755
[2016-09-13T13:00:45+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:45+01:00] INFO: Processing template[nginx.conf] action create (nginx::commons_conf line 22)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource template[nginx.conf] is Chef::Provider::Template
[2016-09-13T13:00:45+01:00] DEBUG: template[nginx.conf] checksumming file at /etc/nginx/nginx.conf.
[2016-09-13T13:00:45+01:00] DEBUG: Not fetching cookbooks/nginx/templates/default/nginx.conf.erb, as the cache is up to date.
[2016-09-13T13:00:45+01:00] DEBUG: Current checksum: ba86213184a6e2a6a9e5c91b1e120363; manifest checksum: ba86213184a6e2a6a9e5c91b1e120363)
[2016-09-13T13:00:45+01:00] DEBUG: calculating checksum of /etc/nginx/.chef-nginx.conf20160913-19215-16chrp2 to compare with 959c5e1f56d7c88d94eca2315232351a987ef20cf5b5efc9eb5f7d5c7a901085
[2016-09-13T13:00:45+01:00] DEBUG: Running: diff -u /etc/nginx/nginx.conf /etc/nginx/.chef-nginx.conf20160913-19215-16chrp2
[2016-09-13T13:00:45+01:00] INFO: template[nginx.conf] backed up to /root/.chef/local-mode-cache/backup/etc/nginx/nginx.conf.chef-20160913130045.643580
[2016-09-13T13:00:45+01:00] DEBUG: Reading modes from /etc/nginx/nginx.conf file
[2016-09-13T13:00:45+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/nginx/.chef-nginx.conf20160913-19215-16chrp2
[2016-09-13T13:00:45+01:00] DEBUG: Moving temporary file /etc/nginx/.chef-nginx.conf20160913-19215-16chrp2 into place at /etc/nginx/nginx.conf
[2016-09-13T13:00:45+01:00] INFO: template[nginx.conf] updated file contents /etc/nginx/nginx.conf
[2016-09-13T13:00:45+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found target_uid == current_uid, not updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found target_gid == current_gid, not updating group
[2016-09-13T13:00:45+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:45+01:00] INFO: Processing template[/etc/nginx/sites-available/default] action create (nginx::commons_conf line 32)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action create on resource template[/etc/nginx/sites-available/default] is Chef::Provider::Template
[2016-09-13T13:00:45+01:00] DEBUG: Not fetching cookbooks/nginx/templates/default/default-site.erb, as the cache is up to date.
[2016-09-13T13:00:45+01:00] DEBUG: Current checksum: 282e5ef755b521b75e4daae9b72fee12; manifest checksum: 282e5ef755b521b75e4daae9b72fee12)
[2016-09-13T13:00:45+01:00] DEBUG: Touching /etc/nginx/sites-available/default to create it
[2016-09-13T13:00:45+01:00] INFO: template[/etc/nginx/sites-available/default] created file /etc/nginx/sites-available/default
[2016-09-13T13:00:45+01:00] DEBUG: calculating checksum of /etc/nginx/sites-available/.chef-default20160913-19215-2o77c6 to compare with 
[2016-09-13T13:00:45+01:00] DEBUG: Running: diff -u /etc/nginx/sites-available/default /etc/nginx/sites-available/.chef-default20160913-19215-2o77c6
[2016-09-13T13:00:45+01:00] DEBUG: Reading modes from /etc/nginx/sites-available/default file
[2016-09-13T13:00:45+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/nginx/sites-available/.chef-default20160913-19215-2o77c6
[2016-09-13T13:00:45+01:00] DEBUG: Moving temporary file /etc/nginx/sites-available/.chef-default20160913-19215-2o77c6 into place at /etc/nginx/sites-available/default
[2016-09-13T13:00:45+01:00] INFO: template[/etc/nginx/sites-available/default] updated file contents /etc/nginx/sites-available/default
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] DEBUG: Found current_uid == nil, so we are creating a new file, updating owner
[2016-09-13T13:00:45+01:00] INFO: template[/etc/nginx/sites-available/default] owner changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_gid == nil, so we are creating a new file, updating group
[2016-09-13T13:00:45+01:00] INFO: template[/etc/nginx/sites-available/default] group changed to 0
[2016-09-13T13:00:45+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:45+01:00] INFO: template[/etc/nginx/sites-available/default] mode changed to 644
[2016-09-13T13:00:45+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:45+01:00] INFO: template[/etc/nginx/sites-available/default] not queuing delayed action reload on service[nginx] (delayed), as it's already been queued
[2016-09-13T13:00:45+01:00] INFO: Processing execute[nxensite default] action run (nginx::commons_conf line 32)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic execute resource enabled on node include: [Chef::Provider::Execute]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action run on resource execute[nxensite default] is Chef::Provider::Execute
[2016-09-13T13:00:45+01:00] INFO: execute[nxensite default] ran successfully
[2016-09-13T13:00:45+01:00] INFO: execute[nxensite default] not queuing delayed action reload on service[nginx] (delayed), as it's already been queued
[2016-09-13T13:00:45+01:00] INFO: Processing service[nginx] action start (nginx::default line 24)
[2016-09-13T13:00:45+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2016-09-13T13:00:45+01:00] DEBUG: Provider for action start on resource service[nginx] is Chef::Provider::Service::Redhat
[2016-09-13T13:00:45+01:00] DEBUG: service[nginx] supports status, running
[2016-09-13T13:00:46+01:00] INFO: service[nginx] started
[2016-09-13T13:00:46+01:00] INFO: Processing yum_package[iptables] action install (iptables::_package line 23)
[2016-09-13T13:00:46+01:00] DEBUG: Providers for generic yum_package resource enabled on node include: [Chef::Provider::Package::Yum]
[2016-09-13T13:00:46+01:00] DEBUG: Provider for action install on resource yum_package[iptables] is Chef::Provider::Package::Yum
[2016-09-13T13:00:48+01:00] DEBUG: yum_package[iptables] checking yum info for iptables
[2016-09-13T13:00:48+01:00] DEBUG: yum_package[iptables] installed version: ["1.4.7-16.el6"] candidate version: 1.4.7-16.el6
[2016-09-13T13:00:48+01:00] DEBUG: yum_package[iptables] iptables 1.4.7-16.el6 already installed
[2016-09-13T13:00:48+01:00] DEBUG: yum_package[iptables] is already installed - nothing to do
[2016-09-13T13:00:48+01:00] INFO: Processing execute[rebuild-iptables] action nothing (iptables::default line 22)
[2016-09-13T13:00:48+01:00] DEBUG: Skipping execute[rebuild-iptables] due to action :nothing
[2016-09-13T13:00:48+01:00] INFO: Processing directory[/etc/iptables.d] action create (iptables::default line 27)
[2016-09-13T13:00:48+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2016-09-13T13:00:48+01:00] DEBUG: Provider for action create on resource directory[/etc/iptables.d] is Chef::Provider::Directory
[2016-09-13T13:00:48+01:00] INFO: directory[/etc/iptables.d] created directory /etc/iptables.d
[2016-09-13T13:00:48+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2016-09-13T13:00:48+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T13:00:48+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T13:00:48+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:48+01:00] INFO: Processing template[/usr/sbin/rebuild-iptables] action create (iptables::default line 31)
[2016-09-13T13:00:48+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T13:00:48+01:00] DEBUG: Provider for action create on resource template[/usr/sbin/rebuild-iptables] is Chef::Provider::Template
[2016-09-13T13:00:48+01:00] DEBUG: Not fetching cookbooks/iptables/templates/default/rebuild-iptables.erb, as the cache is up to date.
[2016-09-13T13:00:48+01:00] DEBUG: Current checksum: 6f68e1c4aebfc8a2095bc9fee1c69376; manifest checksum: 6f68e1c4aebfc8a2095bc9fee1c69376)
[2016-09-13T13:00:48+01:00] DEBUG: Touching /usr/sbin/rebuild-iptables to create it
[2016-09-13T13:00:48+01:00] INFO: template[/usr/sbin/rebuild-iptables] created file /usr/sbin/rebuild-iptables
[2016-09-13T13:00:48+01:00] DEBUG: calculating checksum of /usr/sbin/.chef-rebuild-iptables20160913-19215-13rvaac to compare with 
[2016-09-13T13:00:48+01:00] DEBUG: Running: diff -u /usr/sbin/rebuild-iptables /usr/sbin/.chef-rebuild-iptables20160913-19215-13rvaac
[2016-09-13T13:00:48+01:00] DEBUG: Reading modes from /usr/sbin/rebuild-iptables file
[2016-09-13T13:00:48+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /usr/sbin/.chef-rebuild-iptables20160913-19215-13rvaac
[2016-09-13T13:00:48+01:00] DEBUG: Moving temporary file /usr/sbin/.chef-rebuild-iptables20160913-19215-13rvaac into place at /usr/sbin/rebuild-iptables
[2016-09-13T13:00:48+01:00] INFO: template[/usr/sbin/rebuild-iptables] updated file contents /usr/sbin/rebuild-iptables
[2016-09-13T13:00:48+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:48+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:48+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T13:00:48+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T13:00:48+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T13:00:48+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T13:00:48+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2016-09-13T13:00:48+01:00] INFO: template[/usr/sbin/rebuild-iptables] mode changed to 755
[2016-09-13T13:00:48+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:48+01:00] INFO: Processing template[/etc/network/if-pre-up.d/iptables_load] action create (iptables::default line 40)
[2016-09-13T13:00:48+01:00] DEBUG: Skipping template[/etc/network/if-pre-up.d/iptables_load] due to only_if ruby block
[2016-09-13T13:00:48+01:00] INFO: Processing file[/etc/sysconfig/iptables] action create_if_missing (iptables::default line 49)
[2016-09-13T13:00:48+01:00] DEBUG: Providers for generic file resource enabled on node include: [Chef::Provider::File]
[2016-09-13T13:00:48+01:00] DEBUG: Provider for action create_if_missing on resource file[/etc/sysconfig/iptables] is Chef::Provider::File
[2016-09-13T13:00:48+01:00] DEBUG: Touching /etc/sysconfig/iptables to create it
[2016-09-13T13:00:48+01:00] INFO: file[/etc/sysconfig/iptables] created file /etc/sysconfig/iptables
[2016-09-13T13:00:48+01:00] DEBUG: calculating checksum of /etc/sysconfig/.chef-iptables20160913-19215-tf4o2t to compare with 
[2016-09-13T13:00:48+01:00] DEBUG: Running: diff -u /etc/sysconfig/iptables /etc/sysconfig/.chef-iptables20160913-19215-tf4o2t
[2016-09-13T13:00:48+01:00] DEBUG: Reading modes from /etc/sysconfig/iptables file
[2016-09-13T13:00:48+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/sysconfig/.chef-iptables20160913-19215-tf4o2t
[2016-09-13T13:00:48+01:00] DEBUG: Moving temporary file /etc/sysconfig/.chef-iptables20160913-19215-tf4o2t into place at /etc/sysconfig/iptables
[2016-09-13T13:00:48+01:00] INFO: file[/etc/sysconfig/iptables] updated file contents /etc/sysconfig/iptables
[2016-09-13T13:00:48+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2016-09-13T13:00:48+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T13:00:48+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T13:00:48+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:48+01:00] INFO: Processing template[/etc/sysconfig/iptables-config] action create (iptables::default line 54)
[2016-09-13T13:00:48+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T13:00:48+01:00] DEBUG: Provider for action create on resource template[/etc/sysconfig/iptables-config] is Chef::Provider::Template
[2016-09-13T13:00:48+01:00] DEBUG: template[/etc/sysconfig/iptables-config] checksumming file at /etc/sysconfig/iptables-config.
[2016-09-13T13:00:48+01:00] DEBUG: Not fetching cookbooks/iptables/templates/default/iptables-config.erb, as the cache is up to date.
[2016-09-13T13:00:48+01:00] DEBUG: Current checksum: 375a02610e0c4703fe9ac43bcb19819b; manifest checksum: 375a02610e0c4703fe9ac43bcb19819b)
[2016-09-13T13:00:48+01:00] DEBUG: calculating checksum of /etc/sysconfig/.chef-iptables-config20160913-19215-15gj3d7 to compare with 97d756c35ea1a7a6d0293e51acffea1c8e1576014267f2625be507616df5652c
[2016-09-13T13:00:48+01:00] DEBUG: Running: diff -u /etc/sysconfig/iptables-config /etc/sysconfig/.chef-iptables-config20160913-19215-15gj3d7
[2016-09-13T13:00:48+01:00] INFO: template[/etc/sysconfig/iptables-config] backed up to /root/.chef/local-mode-cache/backup/etc/sysconfig/iptables-config.chef-20160913130048.953449
[2016-09-13T13:00:48+01:00] DEBUG: Reading modes from /etc/sysconfig/iptables-config file
[2016-09-13T13:00:48+01:00] DEBUG: Applying mode = 600, uid = 0, gid = 0 to /etc/sysconfig/.chef-iptables-config20160913-19215-15gj3d7
[2016-09-13T13:00:48+01:00] DEBUG: Moving temporary file /etc/sysconfig/.chef-iptables-config20160913-19215-15gj3d7 into place at /etc/sysconfig/iptables-config
[2016-09-13T13:00:48+01:00] INFO: template[/etc/sysconfig/iptables-config] updated file contents /etc/sysconfig/iptables-config
[2016-09-13T13:00:48+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2016-09-13T13:00:48+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T13:00:48+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T13:00:48+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:48+01:00] INFO: Processing template[/etc/sysconfig/ip6tables-config] action create (iptables::default line 60)
[2016-09-13T13:00:48+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2016-09-13T13:00:48+01:00] DEBUG: Provider for action create on resource template[/etc/sysconfig/ip6tables-config] is Chef::Provider::Template
[2016-09-13T13:00:48+01:00] DEBUG: template[/etc/sysconfig/ip6tables-config] checksumming file at /etc/sysconfig/ip6tables-config.
[2016-09-13T13:00:48+01:00] DEBUG: Not fetching cookbooks/iptables/templates/default/iptables-config.erb, as the cache is up to date.
[2016-09-13T13:00:48+01:00] DEBUG: Current checksum: 375a02610e0c4703fe9ac43bcb19819b; manifest checksum: 375a02610e0c4703fe9ac43bcb19819b)
[2016-09-13T13:00:48+01:00] DEBUG: calculating checksum of /etc/sysconfig/.chef-ip6tables-config20160913-19215-gkt331 to compare with 4f76ef600c72cdd5eebfbfd108d2f7be48a9cc3c59cddc7f667aba701dea0111
[2016-09-13T13:00:48+01:00] DEBUG: Running: diff -u /etc/sysconfig/ip6tables-config /etc/sysconfig/.chef-ip6tables-config20160913-19215-gkt331
[2016-09-13T13:00:48+01:00] INFO: template[/etc/sysconfig/ip6tables-config] backed up to /root/.chef/local-mode-cache/backup/etc/sysconfig/ip6tables-config.chef-20160913130048.966056
[2016-09-13T13:00:48+01:00] DEBUG: Reading modes from /etc/sysconfig/ip6tables-config file
[2016-09-13T13:00:48+01:00] DEBUG: Applying mode = 600, uid = 0, gid = 0 to /etc/sysconfig/.chef-ip6tables-config20160913-19215-gkt331
[2016-09-13T13:00:48+01:00] DEBUG: Moving temporary file /etc/sysconfig/.chef-ip6tables-config20160913-19215-gkt331 into place at /etc/sysconfig/ip6tables-config
[2016-09-13T13:00:48+01:00] INFO: template[/etc/sysconfig/ip6tables-config] updated file contents /etc/sysconfig/ip6tables-config
[2016-09-13T13:00:48+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2016-09-13T13:00:48+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2016-09-13T13:00:48+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2016-09-13T13:00:48+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2016-09-13T13:00:48+01:00] INFO: Processing service[iptables] action enable (iptables::default line 66)
[2016-09-13T13:00:48+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2016-09-13T13:00:48+01:00] DEBUG: Provider for action enable on resource service[iptables] is Chef::Provider::Service::Redhat
[2016-09-13T13:00:48+01:00] DEBUG: service[iptables] supports status, running
[2016-09-13T13:00:49+01:00] DEBUG: service[iptables] already enabled - nothing to do
[2016-09-13T13:00:49+01:00] INFO: Processing service[iptables] action start (iptables::default line 66)
[2016-09-13T13:00:49+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2016-09-13T13:00:49+01:00] DEBUG: Provider for action start on resource service[iptables] is Chef::Provider::Service::Redhat
[2016-09-13T13:00:49+01:00] DEBUG: service[iptables] supports status, running
[2016-09-13T13:00:49+01:00] INFO: service[iptables] started
[2016-09-13T13:00:49+01:00] INFO: template[nginx.conf] sending reload action to service[nginx] (delayed)
[2016-09-13T13:00:49+01:00] INFO: Processing service[nginx] action reload (nginx::default line 24)
[2016-09-13T13:00:49+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2016-09-13T13:00:49+01:00] DEBUG: Provider for action reload on resource service[nginx] is Chef::Provider::Service::Redhat
[2016-09-13T13:00:49+01:00] DEBUG: service[nginx] supports status, running
[2016-09-13T13:00:49+01:00] DEBUG: service[nginx] is running
[2016-09-13T13:00:49+01:00] INFO: service[nginx] reloaded
[2016-09-13T13:00:49+01:00] DEBUG: Saving the current state of node chef-master
[2016-09-13T13:00:49+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2016-09-13T13:00:49+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2016-09-13T13:00:49+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2016-09-13T13:00:49+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2016-09-13T13:00:49+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2016-09-13T13:00:49+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2016-09-13T13:00:49+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2016-09-13T13:00:49+01:00] DEBUG: PUT /organizations/chef/nodes/chef-master
--- PUT BODY ---
{"name":"chef-master","chef_environment":"_default","json_class":"Chef::Node","automatic":{"dmi":{},"kernel":{"name":"Linux","release":"2.6.32-642.1.1.el6.x86_64","version":"#1 SMP Tue May 31 21:57:07 UTC 2016","machine":"x86_64","processor":"x86_64","os":"GNU/Linux","modules":{"vboxsf":{"size":"37731","refcount":"2","version":"5.1.2 r108956"},"vboxguest":{"size":"285383","refcount":"1","version":"5.1.2 r108956"},"nls_utf8":{"size":"1455","refcount":"0"},"ipv6":{"size":"336282","refcount":"16"},"sg":{"size":"29318","refcount":"0","version":"3.5.34"},"i2c_piix4":{"size":"11232","refcount":"0"},"i2c_core":{"size":"29132","refcount":"1"},"e1000":{"size":"134895","refcount":"0","version":"7.3.21-k8-NAPI"},"ext4":{"size":"379655","refcount":"2"},"jbd2":{"size":"93252","refcount":"1"},"mbcache":{"size":"8193","refcount":"1"},"sd_mod":{"size":"37158","refcount":"3"},"crc_t10dif":{"size":"1209","refcount":"1"},"ahci":{"size":"43154","refcount":"2","version":"3.0"},"pata_acpi":{"size":"3701","refcount":"0","version":"0.2.3"},"ata_generic":{"size":"3837","refcount":"0","version":"0.2.15"},"ata_piix":{"size":"24409","refcount":"0","version":"2.13"},"video":{"size":"21654","refcount":"0"},"output":{"size":"2409","refcount":"1"},"dm_mirror":{"size":"14864","refcount":"0"},"dm_region_hash":{"size":"12085","refcount":"1"},"dm_log":{"size":"9930","refcount":"2"},"dm_mod":{"size":"102467","refcount":"8"}}},"network":{"interfaces":{"lo":{"mtu":"65536","flags":["LOOPBACK","UP","LOWER_UP"],"encapsulation":"Loopback","addresses":{"127.0.0.1":{"family":"inet","prefixlen":"8","netmask":"255.0.0.0","scope":"Node"},"::1":{"family":"inet6","prefixlen":"128","scope":"Node","tags":[]}},"state":"unknown","routes":[{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"}]},"eth0":{"type":"eth","number":"0","mtu":"1500","flags":["BROADCAST","MULTICAST","UP","LOWER_UP"],"encapsulation":"Ethernet","addresses":{"08:00:27:EC:55:DD":{"family":"lladdr"},"10.0.2.15":{"family":"inet","prefixlen":"24","netmask":"255.255.255.0","broadcast":"10.0.2.255","scope":"Global"},"fe80::a00:27ff:feec:55dd":{"family":"inet6","prefixlen":"64","scope":"Link","tags":[]}},"state":"up","arp":{"10.0.2.3":"52:54:00:12:35:03","10.0.2.2":"52:54:00:12:35:02"},"routes":[{"destination":"10.0.2.0/24","family":"inet","scope":"link","proto":"kernel","src":"10.0.2.15"},{"destination":"169.254.0.0/16","family":"inet","scope":"link","metric":"1002"},{"destination":"default","family":"inet","via":"10.0.2.2"},{"destination":"fe80::/64","family":"inet6","metric":"256","proto":"kernel"}],"link_speed":1000,"duplex":"Full","port":"Twisted Pair","transceiver":"internal","auto_negotiation":"on","mdi_x":"off (auto)","ring_params":{"max_rx":4096,"max_rx_mini":0,"max_rx_jumbo":0,"max_tx":4096,"current_rx":256,"current_rx_mini":0,"current_rx_jumbo":0,"current_tx":256}},"eth1":{"type":"eth","number":"1","mtu":"1500","flags":["BROADCAST","MULTICAST","UP","LOWER_UP"],"encapsulation":"Ethernet","addresses":{"08:00:27:47:BD:00":{"family":"lladdr"},"192.168.33.10":{"family":"inet","prefixlen":"24","netmask":"255.255.255.0","broadcast":"192.168.33.255","scope":"Global"},"fe80::a00:27ff:fe47:bd00":{"family":"inet6","prefixlen":"64","scope":"Link","tags":[]}},"state":"up","arp":{"192.168.33.1":"0a:00:27:00:00:0d"},"routes":[{"destination":"192.168.33.0/24","family":"inet","scope":"link","proto":"kernel","src":"192.168.33.10"},{"destination":"169.254.0.0/16","family":"inet","scope":"link","metric":"1003"},{"destination":"fe80::/64","family":"inet6","metric":"256","proto":"kernel"}],"link_speed":1000,"duplex":"Full","port":"Twisted Pair","transceiver":"internal","auto_negotiation":"on","mdi_x":"off (auto)","ring_params":{"max_rx":4096,"max_rx_mini":0,"max_rx_jumbo":0,"max_tx":4096,"current_rx":256,"current_rx_mini":0,"current_rx_jumbo":0,"current_tx":256}}},"default_interface":"eth0","default_gateway":"10.0.2.2"},"counters":{"network":{"interfaces":{"lo":{"rx":{"bytes":"0","packets":"0","errors":"0","drop":"0","overrun":"0"},"tx":{"bytes":"0","packets":"0","errors":"0","drop":"0","carrier":"0","collisions":"0"}},"eth0":{"tx":{"queuelen":"1000","bytes":"1404524","packets":"21145","errors":"0","drop":"0","carrier":"0","collisions":"0"},"rx":{"bytes":"102627518","packets":"74257","errors":"0","drop":"0","overrun":"0"}},"eth1":{"tx":{"queuelen":"1000","bytes":"664981","packets":"2885","errors":"0","drop":"0","carrier":"0","collisions":"0"},"rx":{"bytes":"338800","packets":"3283","errors":"0","drop":"0","overrun":"0"}}}}},"ipaddress":"10.0.2.15","macaddress":"08:00:27:EC:55:DD","etc":{"passwd":{"root":{"dir":"/root","gid":0,"uid":0,"shell":"/bin/bash","gecos":"root"},"bin":{"dir":"/bin","gid":1,"uid":1,"shell":"/sbin/nologin","gecos":"bin"},"daemon":{"dir":"/sbin","gid":2,"uid":2,"shell":"/sbin/nologin","gecos":"daemon"},"adm":{"dir":"/var/adm","gid":4,"uid":3,"shell":"/sbin/nologin","gecos":"adm"},"lp":{"dir":"/var/spool/lpd","gid":7,"uid":4,"shell":"/sbin/nologin","gecos":"lp"},"sync":{"dir":"/sbin","gid":0,"uid":5,"shell":"/bin/sync","gecos":"sync"},"shutdown":{"dir":"/sbin","gid":0,"uid":6,"shell":"/sbin/shutdown","gecos":"shutdown"},"halt":{"dir":"/sbin","gid":0,"uid":7,"shell":"/sbin/halt","gecos":"halt"},"mail":{"dir":"/var/spool/mail","gid":12,"uid":8,"shell":"/sbin/nologin","gecos":"mail"},"uucp":{"dir":"/var/spool/uucp","gid":14,"uid":10,"shell":"/sbin/nologin","gecos":"uucp"},"operator":{"dir":"/root","gid":0,"uid":11,"shell":"/sbin/nologin","gecos":"operator"},"games":{"dir":"/usr/games","gid":100,"uid":12,"shell":"/sbin/nologin","gecos":"games"},"gopher":{"dir":"/var/gopher","gid":30,"uid":13,"shell":"/sbin/nologin","gecos":"gopher"},"ftp":{"dir":"/var/ftp","gid":50,"uid":14,"shell":"/sbin/nologin","gecos":"FTP User"},"nobody":{"dir":"/","gid":99,"uid":99,"shell":"/sbin/nologin","gecos":"Nobody"},"vcsa":{"dir":"/dev","gid":69,"uid":69,"shell":"/sbin/nologin","gecos":"virtual console memory owner"},"saslauth":{"dir":"/var/empty/saslauth","gid":76,"uid":499,"shell":"/sbin/nologin","gecos":"Saslauthd user"},"postfix":{"dir":"/var/spool/postfix","gid":89,"uid":89,"shell":"/sbin/nologin","gecos":""},"sshd":{"dir":"/var/empty/sshd","gid":74,"uid":74,"shell":"/sbin/nologin","gecos":"Privilege-separated SSH"},"vagrant":{"dir":"/home/vagrant","gid":500,"uid":500,"shell":"/bin/bash","gecos":"vagrant"},"vboxadd":{"dir":"/var/run/vboxadd","gid":1,"uid":498,"shell":"/bin/false","gecos":""}},"group":{"root":{"gid":0,"members":[]},"bin":{"gid":1,"members":["bin","daemon"]},"daemon":{"gid":2,"members":["bin","daemon"]},"sys":{"gid":3,"members":["bin","adm"]},"adm":{"gid":4,"members":["adm","daemon"]},"tty":{"gid":5,"members":[]},"disk":{"gid":6,"members":[]},"lp":{"gid":7,"members":["daemon"]},"mem":{"gid":8,"members":[]},"kmem":{"gid":9,"members":[]},"wheel":{"gid":10,"members":[]},"mail":{"gid":12,"members":["mail","postfix"]},"uucp":{"gid":14,"members":[]},"man":{"gid":15,"members":[]},"games":{"gid":20,"members":[]},"gopher":{"gid":30,"members":[]},"video":{"gid":39,"members":[]},"dip":{"gid":40,"members":[]},"ftp":{"gid":50,"members":[]},"lock":{"gid":54,"members":[]},"audio":{"gid":63,"members":[]},"nobody":{"gid":99,"members":[]},"users":{"gid":100,"members":[]},"floppy":{"gid":19,"members":[]},"vcsa":{"gid":69,"members":[]},"utmp":{"gid":22,"members":[]},"utempter":{"gid":35,"members":[]},"cdrom":{"gid":11,"members":[]},"tape":{"gid":33,"members":[]},"dialout":{"gid":18,"members":[]},"saslauth":{"gid":76,"members":[]},"postdrop":{"gid":90,"members":[]},"postfix":{"gid":89,"members":[]},"fuse":{"gid":499,"members":[]},"sshd":{"gid":74,"members":[]},"vagrant":{"gid":500,"members":["vagrant"]},"vboxsf":{"gid":498,"members":[]}}},"current_user":"root","cloud_v2":null,"languages":{"python":{"version":"2.6.6","builddate":"Jul 23 2015, 15:22:56"},"lua":{"version":"5.1.4"},"perl":{"version":"5.10.1","archname":"x86_64-linux-thread-multi"},"ruby":{"platform":"x86_64-linux","version":"2.1.9","release_date":"2016-03-30","target":"x86_64-pc-linux-gnu","target_cpu":"x86_64","target_vendor":"pc","target_os":"linux","host":"x86_64-pc-linux-gnu","host_cpu":"x86_64","host_os":"linux-gnu","host_vendor":"pc","bin_dir":"/opt/chef/embedded/bin","ruby_bin":"/opt/chef/embedded/bin/ruby","gems_dir":"/opt/chef/embedded/lib/ruby/gems/2.1.0","gem_bin":"/opt/chef/embedded/bin/gem"},"c":{"gcc":{"version":"4.4.7","description":"gcc version 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) "},"glibc":{"version":"2.12","description":"GNU C Library stable release version 2.12, by Roland McGrath et al."}}},"ohai_time":1473767993.7327073,"os":"linux","os_version":"2.6.32-642.1.1.el6.x86_64","lsb":{},"platform":"centos","platform_version":"6.8","platform_family":"rhel","ip6address":"fe80::a00:27ff:fe47:bd00","cpu":{"0":{"vendor_id":"GenuineIntel","family":"6","model":"37","model_name":"Intel(R) Core(TM) i5 CPU         650  @ 3.20GHz","stepping":"5","mhz":"3192.376","cache_size":"4096 KB","physical_id":"0","core_id":"0","cores":"2","flags":["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","mmx","fxsr","sse","sse2","ht","syscall","nx","rdtscp","lm","constant_tsc","rep_good","xtopology","nonstop_tsc","unfair_spinlock","pni","pclmulqdq","ssse3","cx16","sse4_1","sse4_2","popcnt","aes","hypervisor","lahf_lm"]},"1":{"vendor_id":"GenuineIntel","family":"6","model":"37","model_name":"Intel(R) Core(TM) i5 CPU         650  @ 3.20GHz","stepping":"5","mhz":"3192.376","cache_size":"4096 KB","physical_id":"0","core_id":"1","cores":"2","flags":["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","mmx","fxsr","sse","sse2","ht","syscall","nx","rdtscp","lm","constant_tsc","rep_good","xtopology","nonstop_tsc","unfair_spinlock","pni","pclmulqdq","ssse3","cx16","sse4_1","sse4_2","popcnt","aes","hypervisor","lahf_lm"]},"total":2,"real":1,"cores":2},"memory":{"swap":{"cached":"0kB","total":"1277948kB","free":"1277948kB"},"hugepages":{"total":"0","free":"0","reserved":"0","surplus":"0"},"total":"1922052kB","free":"258572kB","buffers":"90648kB","cached":"1221184kB","active":"540736kB","inactive":"916024kB","dirty":"7204kB","writeback":"0kB","anon_pages":"144972kB","mapped":"10960kB","slab":"180644kB","slab_reclaimable":"158540kB","slab_unreclaim":"22104kB","page_tables":"2332kB","nfs_unstable":"0kB","bounce":"0kB","commit_limit":"2238972kB","committed_as":"248588kB","vmalloc_total":"34359738367kB","vmalloc_used":"32064kB","vmalloc_chunk":"34359695352kB","hugepage_size":"2048kB"},"virtualization":{"systems":{"vbox":"guest"},"system":"vbox","role":"guest"},"command":{"ps":"ps -ef"},"filesystem":{"/dev/mapper/VolGroup-lv_root":{"kb_size":"18261312","kb_used":"1953196","kb_available":"15373820","percent_used":"12%","mount":"/","total_inodes":"1169168","inodes_used":"101552","inodes_available":"1067616","inodes_percent_used":"9%","fs_type":"ext4","mount_options":["rw"],"uuid":"9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e"},"tmpfs":{"kb_size":"961024","kb_used":"0","kb_available":"961024","percent_used":"0%","mount":"/dev/shm","total_inodes":"240256","inodes_used":"1","inodes_available":"240255","inodes_percent_used":"1%","fs_type":"tmpfs","mount_options":["rw"]},"/dev/sda1":{"kb_size":"487652","kb_used":"55187","kb_available":"406865","percent_used":"12%","mount":"/boot","total_inodes":"128016","inodes_used":"44","inodes_available":"127972","inodes_percent_used":"1%","fs_type":"ext4","mount_options":["rw"],"uuid":"cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2"},"vagrant":{"kb_size":"126343160","kb_used":"72260704","kb_available":"54082456","percent_used":"58%","mount":"/vagrant","total_inodes":"1000","inodes_used":"0","inodes_available":"1000","inodes_percent_used":"0%","fs_type":"vboxsf","mount_options":["uid=500","gid=500","rw"]},"proc":{"mount":"/proc","fs_type":"proc","mount_options":["rw"]},"sysfs":{"mount":"/sys","fs_type":"sysfs","mount_options":["rw"]},"devpts":{"mount":"/dev/pts","fs_type":"devpts","mount_options":["rw","gid=5","mode=620"]},"none":{"mount":"/proc/sys/fs/binfmt_misc","fs_type":"binfmt_misc","mount_options":["rw"]},"/dev/sda2":{"fs_type":"LVM2_member","uuid":"1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22"},"/dev/mapper/VolGroup-lv_swap":{"fs_type":"swap","uuid":"376d9de0-a04a-4c8e-90fd-7721b522b166"},"rootfs":{"mount":"/","fs_type":"rootfs","mount_options":["rw"]},"devtmpfs":{"mount":"/dev","fs_type":"devtmpfs","mount_options":["rw","relatime","size=950288k","nr_inodes=237572","mode=755"]},"/proc/bus/usb":{"mount":"/proc/bus/usb","fs_type":"usbfs","mount_options":["rw","relatime"]}},"init_package":"init","filesystem2":{"by_device":{"/dev/mapper/VolGroup-lv_root":{"kb_size":"18261312","kb_used":"1953196","kb_available":"15373820","percent_used":"12%","total_inodes":"1169168","inodes_used":"101552","inodes_available":"1067616","inodes_percent_used":"9%","fs_type":"ext4","mount_options":["rw"],"uuid":"9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e","mounts":["/"]},"tmpfs":{"kb_size":"961024","kb_used":"0","kb_available":"961024","percent_used":"0%","total_inodes":"240256","inodes_used":"1","inodes_available":"240255","inodes_percent_used":"1%","fs_type":"tmpfs","mount_options":["rw"],"mounts":["/dev/shm"]},"/dev/sda1":{"kb_size":"487652","kb_used":"55187","kb_available":"406865","percent_used":"12%","total_inodes":"128016","inodes_used":"44","inodes_available":"127972","inodes_percent_used":"1%","fs_type":"ext4","mount_options":["rw"],"uuid":"cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2","mounts":["/boot"]},"vagrant":{"kb_size":"126343160","kb_used":"72260704","kb_available":"54082456","percent_used":"58%","total_inodes":"1000","inodes_used":"0","inodes_available":"1000","inodes_percent_used":"0%","fs_type":"vboxsf","mount_options":["uid=500","gid=500","rw"],"mounts":["/vagrant"]},"proc":{"fs_type":"proc","mount_options":["rw"],"mounts":["/proc"]},"sysfs":{"fs_type":"sysfs","mount_options":["rw"],"mounts":["/sys"]},"devpts":{"fs_type":"devpts","mount_options":["rw","gid=5","mode=620"],"mounts":["/dev/pts"]},"none":{"fs_type":"binfmt_misc","mount_options":["rw"],"mounts":["/proc/sys/fs/binfmt_misc"]},"/dev/sda":{"mounts":[]},"/dev/sda2":{"fs_type":"LVM2_member","uuid":"1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22","mounts":[]},"/dev/mapper/VolGroup-lv_swap":{"fs_type":"swap","uuid":"376d9de0-a04a-4c8e-90fd-7721b522b166","mounts":[]},"rootfs":{"fs_type":"rootfs","mount_options":["rw"],"mounts":["/"]},"devtmpfs":{"fs_type":"devtmpfs","mount_options":["rw","relatime","size=950288k","nr_inodes=237572","mode=755"],"mounts":["/dev"]},"/proc/bus/usb":{"fs_type":"usbfs","mount_options":["rw","relatime"],"mounts":["/proc/bus/usb"]}},"by_mountpoint":{"/":{"kb_size":"18261312","kb_used":"1953196","kb_available":"15373820","percent_used":"12%","total_inodes":"1169168","inodes_used":"101552","inodes_available":"1067616","inodes_percent_used":"9%","fs_type":"rootfs","mount_options":["rw"],"uuid":"9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e","devices":["/dev/mapper/VolGroup-lv_root","rootfs"]},"/dev/shm":{"kb_size":"961024","kb_used":"0","kb_available":"961024","percent_used":"0%","total_inodes":"240256","inodes_used":"1","inodes_available":"240255","inodes_percent_used":"1%","fs_type":"tmpfs","mount_options":["rw"],"devices":["tmpfs"]},"/boot":{"kb_size":"487652","kb_used":"55187","kb_available":"406865","percent_used":"12%","total_inodes":"128016","inodes_used":"44","inodes_available":"127972","inodes_percent_used":"1%","fs_type":"ext4","mount_options":["rw"],"uuid":"cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2","devices":["/dev/sda1"]},"/vagrant":{"kb_size":"126343160","kb_used":"72260704","kb_available":"54082456","percent_used":"58%","total_inodes":"1000","inodes_used":"0","inodes_available":"1000","inodes_percent_used":"0%","fs_type":"vboxsf","mount_options":["uid=500","gid=500","rw"],"devices":["vagrant"]},"/proc":{"fs_type":"proc","mount_options":["rw"],"devices":["proc"]},"/sys":{"fs_type":"sysfs","mount_options":["rw"],"devices":["sysfs"]},"/dev/pts":{"fs_type":"devpts","mount_options":["rw","gid=5","mode=620"],"devices":["devpts"]},"/proc/sys/fs/binfmt_misc":{"fs_type":"binfmt_misc","mount_options":["rw"],"devices":["none"]},"/dev":{"fs_type":"devtmpfs","mount_options":["rw","relatime","size=950288k","nr_inodes=237572","mode=755"],"devices":["devtmpfs"]},"/proc/bus/usb":{"fs_type":"usbfs","mount_options":["rw","relatime"],"devices":["/proc/bus/usb"]}},"by_pair":{"/dev/mapper/VolGroup-lv_root,/":{"device":"/dev/mapper/VolGroup-lv_root","kb_size":"18261312","kb_used":"1953196","kb_available":"15373820","percent_used":"12%","mount":"/","total_inodes":"1169168","inodes_used":"101552","inodes_available":"1067616","inodes_percent_used":"9%","fs_type":"ext4","mount_options":["rw"],"uuid":"9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e"},"tmpfs,/dev/shm":{"device":"tmpfs","kb_size":"961024","kb_used":"0","kb_available":"961024","percent_used":"0%","mount":"/dev/shm","total_inodes":"240256","inodes_used":"1","inodes_available":"240255","inodes_percent_used":"1%","fs_type":"tmpfs","mount_options":["rw"]},"/dev/sda1,/boot":{"device":"/dev/sda1","kb_size":"487652","kb_used":"55187","kb_available":"406865","percent_used":"12%","mount":"/boot","total_inodes":"128016","inodes_used":"44","inodes_available":"127972","inodes_percent_used":"1%","fs_type":"ext4","mount_options":["rw"],"uuid":"cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2"},"vagrant,/vagrant":{"device":"vagrant","kb_size":"126343160","kb_used":"72260704","kb_available":"54082456","percent_used":"58%","mount":"/vagrant","total_inodes":"1000","inodes_used":"0","inodes_available":"1000","inodes_percent_used":"0%","fs_type":"vboxsf","mount_options":["uid=500","gid=500","rw"]},"proc,/proc":{"device":"proc","mount":"/proc","fs_type":"proc","mount_options":["rw"]},"sysfs,/sys":{"device":"sysfs","mount":"/sys","fs_type":"sysfs","mount_options":["rw"]},"devpts,/dev/pts":{"device":"devpts","mount":"/dev/pts","fs_type":"devpts","mount_options":["rw","gid=5","mode=620"]},"none,/proc/sys/fs/binfmt_misc":{"device":"none","mount":"/proc/sys/fs/binfmt_misc","fs_type":"binfmt_misc","mount_options":["rw"]},"/dev/sda,":{"device":"/dev/sda"},"/dev/sda2,":{"device":"/dev/sda2","fs_type":"LVM2_member","uuid":"1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22"},"/dev/mapper/VolGroup-lv_swap,":{"device":"/dev/mapper/VolGroup-lv_swap","fs_type":"swap","uuid":"376d9de0-a04a-4c8e-90fd-7721b522b166"},"rootfs,/":{"device":"rootfs","mount":"/","fs_type":"rootfs","mount_options":["rw"]},"devtmpfs,/dev":{"device":"devtmpfs","mount":"/dev","fs_type":"devtmpfs","mount_options":["rw","relatime","size=950288k","nr_inodes=237572","mode=755"]},"/proc/bus/usb,/proc/bus/usb":{"device":"/proc/bus/usb","mount":"/proc/bus/usb","fs_type":"usbfs","mount_options":["rw","relatime"]}}},"root_group":"root","shells":["/bin/sh","/bin/bash","/sbin/nologin","/bin/dash"],"fips":{"kernel":{"enabled":false}},"block_device":{"ram0":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram1":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram2":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram3":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram4":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram5":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram6":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram7":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram8":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram9":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram10":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram11":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram12":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram13":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram14":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram15":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop0":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop1":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop2":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop3":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop4":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop5":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop6":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop7":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"sda":{"size":"40960000","removable":"0","model":"VBOX HARDDISK","rev":"1.0","state":"running","timeout":"30","vendor":"ATA","queue_depth":"31","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"dm-0":{"size":"37371904","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"dm-1":{"size":"2555904","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"}},"keys":{"ssh":{"host_dsa_public":"AAAAB3NzaC1kc3MAAACBAKzeNZCMEUlmzh1wSJ1LcwQeL/WPRkWkOJwbKUFCcXOFosotvF7c7G7qUMFd24dtmExmocUeIycLSKLNPTBwNjYacqJKhWfXPaAjKCKEa7V1WJQbjPipbuCNuryi+E9jKODG18+F4qcTjml4fARJe7vpEyOlG4n25gcdaUH8ebJ/AAAAFQCmDtC1oX0AOIvoWZLVY5jTfNpCYwAAAIBI5qVfKbJUN1CxOZ86KP8d+aougFct2hp8nl19T24lyrGxNeoQhP19pwr+MxwRGrxzHbV9rFVDTSDOnpkrdSCJYGMIM1ASmgCllI4Avr275Fzjr5NDFTku9m0I2n4zfEynmZ07Lpsmho8UECyZ0bOCayCjgm2EkWdtxoKGv9LW3QAAAIEAjzWy3LCo61SnIOALKd+xo0GCCsKnvPaofw3sX6PAMMlS1NMEd7jqdHv4/KsWWUmOPL1dpw+cuFTdHph3TpJRrR3u3gWBt8fXWO8QyNsNisD9OZHz39DLSqz8UKmwry8gC1zFZ6MuBC8LBWiDABOXEMXpFR5l0drNJE24tAzNAq4=","host_rsa_public":"AAAAB3NzaC1yc2EAAAABIwAAAQEAoKGBorpanawyuJ4UK34f0WhnAZ7gBBKS4OHAsFA58ATUPQVpQNdkFSmHdGd+XZhN9cy9ERzEvyG/2Znt0749/v237I3ewkP6Dayvkp/okW6pWRdWrwcfiN2cSkpjE4qcsVa5w8ZH4gZt5HfLY97Qgfrib7npSKaxel768vP0MmLLCCN3xkEZt2uuONmvwzHfHUbkrIWVm+O6ZKmW8P7VZaioSIj6579I6vbkJdy3cpMUrGwNJd8uFH/LXIbb2qBuTgQjJL/rBBGtAM052txV37EiJy5/FdT/eanud+zvW2iIjRjQwFl8Ot+gVPLpCE/H5MLnNZrLw4Yfwlipte4TZQ=="}},"hostname":"chef-master","machinename":"chef-master","fqdn":"chef-master","domain":null,"chef_packages":{"ohai":{"version":"8.19.1","ohai_root":"/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai"},"chef":{"version":"12.13.37","chef_root":"/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib"}},"uptime_seconds":1291,"uptime":"21 minutes 31 seconds","idletime_seconds":2226,"idletime":"37 minutes 06 seconds","packages":{"tar":{"epoch":"2","version":"1.23","release":"14.el6","installdate":"1468189149","arch":"x86_64"},"setup":{"epoch":"0","version":"2.8.14","release":"20.el6_4.1","installdate":"1468188629","arch":"noarch"},"libselinux-utils":{"epoch":"0","version":"2.0.94","release":"7.el6","installdate":"1468189149","arch":"x86_64"},"basesystem":{"epoch":"0","version":"10.0","release":"4.el6","installdate":"1468188630","arch":"noarch"},"gmp":{"epoch":"0","version":"4.3.1","release":"10.el6","installdate":"1468189149","arch":"x86_64"},"coreutils":{"epoch":"0","version":"8.4","release":"43.el6","installdate":"1468189150","arch":"x86_64"},"shadow-utils":{"epoch":"2","version":"4.1.5.1","release":"5.el6","installdate":"1468189151","arch":"x86_64"},"openssl":{"epoch":"0","version":"1.0.1e","release":"48.el6_8.1","installdate":"1468189152","arch":"x86_64"},"mysql-libs":{"epoch":"0","version":"5.1.73","release":"7.el6","installdate":"1468189152","arch":"x86_64"},"libcap":{"epoch":"0","version":"2.16","release":"5.5.el6","installdate":"1468188643","arch":"x86_64"},"iputils":{"epoch":"0","version":"20071127","release":"21.el6","installdate":"1468189153","arch":"x86_64"},"info":{"epoch":"0","version":"4.13a","release":"8.el6","installdate":"1468188643","arch":"x86_64"},"initscripts":{"epoch":"0","version":"9.03.53","release":"1.el6.centos","installdate":"1468189153","arch":"x86_64"},"device-mapper-libs":{"epoch":"0","version":"1.02.117","release":"7.el6","installdate":"1468189154","arch":"x86_64"},"libacl":{"epoch":"0","version":"2.2.49","release":"6.el6","installdate":"1468188643","arch":"x86_64"},"device-mapper-event-libs":{"epoch":"0","version":"1.02.117","release":"7.el6","installdate":"1468189154","arch":"x86_64"},"lvm2-libs":{"epoch":"0","version":"2.02.143","release":"7.el6","installdate":"1468189154","arch":"x86_64"},"device-mapper-multipath-libs":{"epoch":"0","version":"0.4.9","release":"93.el6","installdate":"1468189154","arch":"x86_64"},"sed":{"epoch":"0","version":"4.2.1","release":"10.el6","installdate":"1468188644","arch":"x86_64"},"dracut-kernel":{"epoch":"0","version":"004","release":"409.el6_8.2","installdate":"1468189155","arch":"noarch"},"sqlite":{"epoch":"0","version":"3.6.20","release":"1.el6_7.2","installdate":"1468189155","arch":"x86_64"},"bzip2-libs":{"epoch":"0","version":"1.0.5","release":"7.el6_0","installdate":"1468188644","arch":"x86_64"},"nss":{"epoch":"0","version":"3.21.0","release":"8.el6","installdate":"1468189155","arch":"x86_64"},"openssh":{"epoch":"0","version":"5.3p1","release":"118.1.el6_8","installdate":"1468189156","arch":"x86_64"},"libcurl":{"epoch":"0","version":"7.19.7","release":"52.el6","installdate":"1468189156","arch":"x86_64"},"libgpg-error":{"epoch":"0","version":"1.7","release":"4.el6","installdate":"1468188645","arch":"x86_64"},"curl":{"epoch":"0","version":"7.19.7","release":"52.el6","installdate":"1468189156","arch":"x86_64"},"openldap":{"epoch":"0","version":"2.4.40","release":"12.el6","installdate":"1468189156","arch":"x86_64"},"selinux-policy":{"epoch":"0","version":"3.7.19","release":"292.el6","installdate":"1468189157","arch":"noarch"},"cronie-anacron":{"epoch":"0","version":"1.4.4","release":"15.el6_7.1","installdate":"1468189159","arch":"x86_64"},"libidn":{"epoch":"0","version":"1.18","release":"2.el6","installdate":"1468188645","arch":"x86_64"},"libuser":{"epoch":"0","version":"0.56.13","release":"8.el6_7","installdate":"1468189160","arch":"x86_64"},"xz-libs":{"epoch":"0","version":"4.999.9","release":"0.5.beta.20091007git.el6","installdate":"1468188645","arch":"x86_64"},"python-pycurl":{"epoch":"0","version":"7.19.0","release":"9.el6","installdate":"1468189160","arch":"x86_64"},"yum-plugin-fastestmirror":{"epoch":"0","version":"1.1.30","release":"37.el6","installdate":"1468189160","arch":"noarch"},"bzip2":{"epoch":"0","version":"1.0.5","release":"7.el6_0","installdate":"1468188646","arch":"x86_64"},"kernel-firmware":{"epoch":"0","version":"2.6.32","release":"642.1.1.el6","installdate":"1468189163","arch":"noarch"},"fuse":{"epoch":"0","version":"2.8.3","release":"5.el6","installdate":"1468189169","arch":"x86_64"},"cpio":{"epoch":"0","version":"2.10","release":"12.el6_5","installdate":"1468188646","arch":"x86_64"},"selinux-policy-targeted":{"epoch":"0","version":"3.7.19","release":"292.el6","installdate":"1468189169","arch":"noarch"},"openssh-server":{"epoch":"0","version":"5.3p1","release":"118.1.el6_8","installdate":"1468189194","arch":"x86_64"},"dhclient":{"epoch":"12","version":"4.1.1","release":"51.P1.el6.centos","installdate":"1468189194","arch":"x86_64"},"libtasn1":{"epoch":"0","version":"2.3","release":"6.el6_5","installdate":"1468188646","arch":"x86_64"},"lvm2":{"epoch":"0","version":"2.02.143","release":"7.el6","installdate":"1468189195","arch":"x86_64"},"p11-kit-trust":{"epoch":"0","version":"0.18.5","release":"2.el6_5.2","installdate":"1468188647","arch":"x86_64"},"libdrm":{"epoch":"0","version":"2.4.65","release":"2.el6","installdate":"1468189195","arch":"x86_64"},"libnih":{"epoch":"0","version":"1.0.1","release":"7.el6","installdate":"1468188647","arch":"x86_64"},"grub":{"epoch":"1","version":"0.97","release":"94.el6_7.1","installdate":"1468189196","arch":"x86_64"},"logrotate":{"epoch":"0","version":"3.7.8","release":"26.el6_7","installdate":"1468189196","arch":"x86_64"},"libusb":{"epoch":"0","version":"0.1.12","release":"23.el6","installdate":"1468188647","arch":"x86_64"},"binutils":{"epoch":"0","version":"2.20.51.0.2","release":"5.44.el6","installdate":"1468189197","arch":"x86_64"},"libutempter":{"epoch":"0","version":"1.1.5","release":"4.1.el6","installdate":"1468188648","arch":"x86_64"},"libxml2":{"epoch":"0","version":"2.7.6","release":"21.el6_8.1","installdate":"1468189197","arch":"x86_64"},"psmisc":{"epoch":"0","version":"22.6","release":"19.el6_5","installdate":"1468188648","arch":"x86_64"},"perl-Error":{"epoch":"1","version":"0.17015","release":"4.el6","installdate":"1473767001","arch":"noarch"},"vim-minimal":{"epoch":"2","version":"7.4.629","release":"5.el6","installdate":"1468188648","arch":"x86_64"},"vim-filesystem":{"epoch":"2","version":"7.4.629","release":"5.el6","installdate":"1473767001","arch":"x86_64"},"rsync":{"epoch":"0","version":"3.0.6","release":"12.el6","installdate":"1473767004","arch":"x86_64"},"e2fsprogs-libs":{"epoch":"0","version":"1.41.12","release":"22.el6","installdate":"1468188648","arch":"x86_64"},"perl-Git":{"epoch":"0","version":"1.7.1","release":"4.el6_7.1","installdate":"1473767005","arch":"noarch"},"unzip":{"epoch":"0","version":"6.0","release":"4.el6","installdate":"1473767006","arch":"x86_64"},"diffutils":{"epoch":"0","version":"2.8.1","release":"28.el6","installdate":"1468188649","arch":"x86_64"},"chef":{"epoch":"0","version":"12.13.37","release":"1.el6","installdate":"1473767055","arch":"x86_64"},"dash":{"epoch":"0","version":"0.5.5.1","release":"4.el6","installdate":"1468188649","arch":"x86_64"},"groff":{"epoch":"0","version":"1.18.1.4","release":"21.el6","installdate":"1468188650","arch":"x86_64"},"cracklib":{"epoch":"0","version":"2.8.16","release":"4.el6","installdate":"1468188650","arch":"x86_64"},"module-init-tools":{"epoch":"0","version":"3.9","release":"25.el6","installdate":"1468188653","arch":"x86_64"},"redhat-logos":{"epoch":"0","version":"60.0.14","release":"12.el6.centos","installdate":"1468188654","arch":"noarch"},"libedit":{"epoch":"0","version":"2.11","release":"4.20080712cvs.1.el6","installdate":"1468188656","arch":"x86_64"},"mingetty":{"epoch":"0","version":"1.08","release":"5.el6","installdate":"1468188656","arch":"x86_64"},"gnupg2":{"epoch":"0","version":"2.0.14","release":"8.el6","installdate":"1468188657","arch":"x86_64"},"fipscheck-lib":{"epoch":"0","version":"1.2.0","release":"7.el6","installdate":"1468188658","arch":"x86_64"},"pciutils-libs":{"epoch":"0","version":"3.1.10","release":"4.el6","installdate":"1468188658","arch":"x86_64"},"libcap-ng":{"epoch":"0","version":"0.6.4","release":"3.el6_0.1","installdate":"1468188658","arch":"x86_64"},"python":{"epoch":"0","version":"2.6.6","release":"64.el6","installdate":"1468188658","arch":"x86_64"},"pygpgme":{"epoch":"0","version":"0.1","release":"18.20090824bzr68.el6","installdate":"1468188667","arch":"x86_64"},"python-iniparse":{"epoch":"0","version":"0.3.1","release":"2.1.el6","installdate":"1468188667","arch":"noarch"},"newt":{"epoch":"0","version":"0.52.11","release":"3.el6","installdate":"1468188667","arch":"x86_64"},"ustr":{"epoch":"0","version":"1.0.4","release":"9.1.el6","installdate":"1468188667","arch":"x86_64"},"libaio":{"epoch":"0","version":"0.3.107","release":"10.el6","installdate":"1468188667","arch":"x86_64"},"gamin":{"epoch":"0","version":"0.1.10","release":"9.el6","installdate":"1468188667","arch":"x86_64"},"shared-mime-info":{"epoch":"0","version":"0.70","release":"6.el6","installdate":"1468188668","arch":"x86_64"},"grubby":{"epoch":"0","version":"7.0.15","release":"7.el6","installdate":"1468188669","arch":"x86_64"},"dbus-glib":{"epoch":"0","version":"0.86","release":"6.el6","installdate":"1468188670","arch":"x86_64"},"iptables":{"epoch":"0","version":"1.4.7","release":"16.el6","installdate":"1468188670","arch":"x86_64"},"cryptsetup-luks-libs":{"epoch":"0","version":"1.2.0","release":"11.el6","installdate":"1468188673","arch":"x86_64"},"plymouth":{"epoch":"0","version":"0.8.3","release":"27.el6.centos.1","installdate":"1468188673","arch":"x86_64"},"cyrus-sasl":{"epoch":"0","version":"2.1.23","release":"15.el6_6.2","installdate":"1468188674","arch":"x86_64"},"crontabs":{"epoch":"0","version":"1.10","release":"33.el6","installdate":"1468188677","arch":"noarch"},"kbd":{"epoch":"0","version":"1.15","release":"11.el6","installdate":"1468188679","arch":"x86_64"},"system-config-firewall-base":{"epoch":"0","version":"1.2.27","release":"7.2.el6_6","installdate":"1468188721","arch":"noarch"},"cryptsetup-luks":{"epoch":"0","version":"1.2.0","release":"11.el6","installdate":"1468188722","arch":"x86_64"},"e2fsprogs":{"epoch":"0","version":"1.41.12","release":"22.el6","installdate":"1468188726","arch":"x86_64"},"acl":{"epoch":"0","version":"2.2.49","release":"6.el6","installdate":"1468188726","arch":"x86_64"},"bridge-utils":{"epoch":"0","version":"1.2","release":"10.el6","installdate":"1468188726","arch":"x86_64"},"epel-release":{"epoch":"0","version":"6","release":"8","installdate":"1468188848","arch":"noarch"},"libgcc":{"epoch":"0","version":"4.4.7","release":"17.el6","installdate":"1468188934","arch":"x86_64"},"tzdata":{"epoch":"0","version":"2016f","release":"1.el6","installdate":"1468188935","arch":"noarch"},"glibc-common":{"epoch":"0","version":"2.12","release":"1.192.el6","installdate":"1468188944","arch":"x86_64"},"perl-libs":{"epoch":"4","version":"5.10.1","release":"141.el6_7.1","installdate":"1468188948","arch":"x86_64"},"perl-version":{"epoch":"3","version":"0.77","release":"141.el6_7.1","installdate":"1468188949","arch":"x86_64"},"perl":{"epoch":"4","version":"5.10.1","release":"141.el6_7.1","installdate":"1468188951","arch":"x86_64"},"mpfr":{"epoch":"0","version":"2.4.1","release":"6.el6","installdate":"1468188952","arch":"x86_64"},"libstdc++-devel":{"epoch":"0","version":"4.4.7","release":"17.el6","installdate":"1468188953","arch":"x86_64"},"cloog-ppl":{"epoch":"0","version":"0.15.7","release":"1.2.el6","installdate":"1468188954","arch":"x86_64"},"glibc-devel":{"epoch":"0","version":"2.12","release":"1.192.el6","installdate":"1468188954","arch":"x86_64"},"gcc":{"epoch":"0","version":"4.4.7","release":"17.el6","installdate":"1468188955","arch":"x86_64"},"wget":{"epoch":"0","version":"1.12","release":"8.el6","installdate":"1468188956","arch":"x86_64"},"bash":{"epoch":"0","version":"4.1.2","release":"40.el6","installdate":"1468189144","arch":"x86_64"},"chkconfig":{"epoch":"0","version":"1.3.49.5","release":"1.el6","installdate":"1468189144","arch":"x86_64"},"nspr":{"epoch":"0","version":"4.11.0","release":"1.el6","installdate":"1468189144","arch":"x86_64"},"db4":{"epoch":"0","version":"4.7.25","release":"20.el6_7","installdate":"1468189144","arch":"x86_64"},"glib2":{"epoch":"0","version":"2.28.8","release":"5.el6","installdate":"1468189145","arch":"x86_64"},"gawk":{"epoch":"0","version":"3.1.7","release":"10.el6_7.3","installdate":"1468189146","arch":"x86_64"},"file-libs":{"epoch":"0","version":"5.04","release":"30.el6","installdate":"1468189146","arch":"x86_64"},"libuuid":{"epoch":"0","version":"2.17.2","release":"12.24.el6","installdate":"1468189146","arch":"x86_64"},"findutils":{"epoch":"1","version":"4.4.2","release":"9.el6","installdate":"1468189147","arch":"x86_64"},"hwdata":{"epoch":"0","version":"0.233","release":"16.1.el6","installdate":"1468189147","arch":"noarch"},"libpciaccess":{"epoch":"0","version":"0.13.4","release":"1.el6","installdate":"1468189148","arch":"x86_64"},"db4-utils":{"epoch":"0","version":"4.7.25","release":"20.el6_7","installdate":"1468189148","arch":"x86_64"},"upstart":{"epoch":"0","version":"0.6.5","release":"16.el6","installdate":"1468189148","arch":"x86_64"},"procps":{"epoch":"0","version":"3.2.8","release":"36.el6","installdate":"1468189149","arch":"x86_64"},"filesystem":{"epoch":"0","version":"2.4.30","release":"3.el6","installdate":"1468188630","arch":"x86_64"},"device-mapper-persistent-data":{"epoch":"0","version":"0.6.2","release":"0.1.rc7.el6","installdate":"1468189149","arch":"x86_64"},"ncurses-base":{"epoch":"0","version":"5.7","release":"4.20090207.el6","installdate":"1468188630","arch":"x86_64"},"coreutils-libs":{"epoch":"0","version":"8.4","release":"43.el6","installdate":"1468189149","arch":"x86_64"},"pam":{"epoch":"0","version":"1.1.1","release":"22.el6","installdate":"1468189150","arch":"x86_64"},"ca-certificates":{"epoch":"0","version":"2015.2.6","release":"65.0.1.el6_7","installdate":"1468189151","arch":"noarch"},"ncurses-libs":{"epoch":"0","version":"5.7","release":"4.20090207.el6","installdate":"1468188643","arch":"x86_64"},"libssh2":{"epoch":"0","version":"1.4.2","release":"2.el6_7.1","installdate":"1468189152","arch":"x86_64"},"libattr":{"epoch":"0","version":"2.4.44","release":"7.el6","installdate":"1468188643","arch":"x86_64"},"centos-release":{"epoch":"0","version":"6","release":"8.el6.centos.12.3","installdate":"1468189152","arch":"x86_64"},"zlib":{"epoch":"0","version":"1.2.3","release":"29.el6","installdate":"1468188643","arch":"x86_64"},"util-linux-ng":{"epoch":"0","version":"2.17.2","release":"12.24.el6","installdate":"1468189153","arch":"x86_64"},"popt":{"epoch":"0","version":"1.13","release":"7.el6","installdate":"1468188643","arch":"x86_64"},"udev":{"epoch":"0","version":"147","release":"2.73.el6","installdate":"1468189154","arch":"x86_64"},"libcom_err":{"epoch":"0","version":"1.41.12","release":"22.el6","installdate":"1468188643","arch":"x86_64"},"device-mapper":{"epoch":"0","version":"1.02.117","release":"7.el6","installdate":"1468189154","arch":"x86_64"},"device-mapper-event":{"epoch":"0","version":"1.02.117","release":"7.el6","installdate":"1468189154","arch":"x86_64"},"libsepol":{"epoch":"0","version":"2.0.41","release":"4.el6","installdate":"1468188643","arch":"x86_64"},"kpartx":{"epoch":"0","version":"0.4.9","release":"93.el6","installdate":"1468189154","arch":"x86_64"},"dracut":{"epoch":"0","version":"004","release":"409.el6_8.2","installdate":"1468189154","arch":"noarch"},"dhcp-common":{"epoch":"12","version":"4.1.1","release":"51.P1.el6.centos","installdate":"1468189155","arch":"x86_64"},"readline":{"epoch":"0","version":"6.0","release":"4.el6","installdate":"1468188644","arch":"x86_64"},"nss-softokn":{"epoch":"0","version":"3.14.3","release":"23.el6_7","installdate":"1468189155","arch":"x86_64"},"nss-sysinit":{"epoch":"0","version":"3.21.0","release":"8.el6","installdate":"1468189156","arch":"x86_64"},"nss-tools":{"epoch":"0","version":"3.21.0","release":"8.el6","installdate":"1468189156","arch":"x86_64"},"rpm-libs":{"epoch":"0","version":"4.8.0","release":"55.el6","installdate":"1468189156","arch":"x86_64"},"dbus-libs":{"epoch":"1","version":"1.2.24","release":"8.el6_6","installdate":"1468188645","arch":"x86_64"},"rpm":{"epoch":"0","version":"4.8.0","release":"55.el6","installdate":"1468189156","arch":"x86_64"},"pcre":{"epoch":"0","version":"7.8","release":"7.el6","installdate":"1468188645","arch":"x86_64"},"policycoreutils":{"epoch":"0","version":"2.0.83","release":"29.el6","installdate":"1468189157","arch":"x86_64"},"lua":{"epoch":"0","version":"5.1.4","release":"4.1.el6","installdate":"1468188645","arch":"x86_64"},"postfix":{"epoch":"2","version":"2.6.6","release":"6.el6_7.1","installdate":"1468189158","arch":"x86_64"},"cyrus-sasl-lib":{"epoch":"0","version":"2.1.23","release":"15.el6_6.2","installdate":"1468188645","arch":"x86_64"},"cronie":{"epoch":"0","version":"1.4.4","release":"15.el6_7.1","installdate":"1468189159","arch":"x86_64"},"expat":{"epoch":"0","version":"2.0.1","release":"11.el6_2","installdate":"1468188645","arch":"x86_64"},"rpm-python":{"epoch":"0","version":"4.8.0","release":"55.el6","installdate":"1468189160","arch":"x86_64"},"python-urlgrabber":{"epoch":"0","version":"3.9.1","release":"11.el6","installdate":"1468189160","arch":"noarch"},"libgcrypt":{"epoch":"0","version":"1.4.5","release":"11.el6_4","installdate":"1468188646","arch":"x86_64"},"yum":{"epoch":"0","version":"3.2.29","release":"73.el6.centos","installdate":"1468189160","arch":"noarch"},"kernel":{"epoch":"0","version":"2.6.32","release":"573.el6","installdate":"1468188685","arch":"x86_64"},"checkpolicy":{"epoch":"0","version":"2.0.22","release":"1.el6","installdate":"1468188646","arch":"x86_64"},"passwd":{"epoch":"0","version":"0.77","release":"7.el6","installdate":"1468189169","arch":"x86_64"},"which":{"epoch":"0","version":"2.19","release":"6.el6","installdate":"1468188646","arch":"x86_64"},"sudo":{"epoch":"0","version":"1.8.6p3","release":"24.el6","installdate":"1468189193","arch":"x86_64"},"pth":{"epoch":"0","version":"2.0.7","release":"9.3.el6","installdate":"1468188646","arch":"x86_64"},"openssh-clients":{"epoch":"0","version":"5.3p1","release":"118.1.el6_8","installdate":"1468189194","arch":"x86_64"},"sysvinit-tools":{"epoch":"0","version":"2.87","release":"6.dsf.el6","installdate":"1468188646","arch":"x86_64"},"device-mapper-multipath":{"epoch":"0","version":"0.4.9","release":"93.el6","installdate":"1468189194","arch":"x86_64"},"p11-kit":{"epoch":"0","version":"0.18.5","release":"2.el6_5.2","installdate":"1468188646","arch":"x86_64"},"mdadm":{"epoch":"0","version":"3.3.4","release":"1.el6","installdate":"1468189195","arch":"x86_64"},"iscsi-initiator-utils":{"epoch":"0","version":"6.2.0.873","release":"21.el6","installdate":"1468189195","arch":"x86_64"},"audit":{"epoch":"0","version":"2.4.5","release":"3.el6","installdate":"1468189196","arch":"x86_64"},"xfsprogs":{"epoch":"0","version":"3.1.1","release":"19.el6","installdate":"1468189196","arch":"x86_64"},"MAKEDEV":{"epoch":"0","version":"3.24","release":"6.el6","installdate":"1468188648","arch":"x86_64"},"gdbm":{"epoch":"0","version":"1.8.0","release":"39.el6","installdate":"1468189197","arch":"x86_64"},"pinentry":{"epoch":"0","version":"0.7.6","release":"8.el6","installdate":"1468188648","arch":"x86_64"},"kernel-devel":{"epoch":"0","version":"2.6.32","release":"642.1.1.el6","installdate":"1473766767","arch":"x86_64"},"net-tools":{"epoch":"0","version":"1.60","release":"110.el6_2","installdate":"1468188648","arch":"x86_64"},"gpm-libs":{"epoch":"0","version":"1.20.6","release":"12.el6","installdate":"1473767001","arch":"x86_64"},"vim-common":{"epoch":"2","version":"7.4.629","release":"5.el6","installdate":"1473767003","arch":"x86_64"},"git":{"epoch":"0","version":"1.7.1","release":"4.el6_7.1","installdate":"1473767005","arch":"x86_64"},"libss":{"epoch":"0","version":"1.41.12","release":"22.el6","installdate":"1468188648","arch":"x86_64"},"vim-enhanced":{"epoch":"2","version":"7.4.629","release":"5.el6","installdate":"1473767006","arch":"x86_64"},"m4":{"epoch":"0","version":"1.4.13","release":"5.el6","installdate":"1468188649","arch":"x86_64"},"chefdk":{"epoch":"0","version":"0.17.17","release":"1.el6","installdate":"1473767038","arch":"x86_64"},"ncurses":{"epoch":"0","version":"5.7","release":"4.20090207.el6","installdate":"1468188649","arch":"x86_64"},"less":{"epoch":"0","version":"436","release":"13.el6","installdate":"1468188650","arch":"x86_64"},"gzip":{"epoch":"0","version":"1.3.12","release":"22.el6","installdate":"1468188650","arch":"x86_64"},"cracklib-dicts":{"epoch":"0","version":"2.8.16","release":"4.el6","installdate":"1468188651","arch":"x86_64"},"plymouth-scripts":{"epoch":"0","version":"0.8.3","release":"27.el6.centos.1","installdate":"1468188654","arch":"x86_64"},"keyutils-libs":{"epoch":"0","version":"1.4","release":"5.el6","installdate":"1468188656","arch":"x86_64"},"gpgme":{"epoch":"0","version":"1.1.8","release":"3.el6","installdate":"1468188657","arch":"x86_64"},"fipscheck":{"epoch":"0","version":"1.2.0","release":"7.el6","installdate":"1468188658","arch":"x86_64"},"ethtool":{"epoch":"2","version":"3.5","release":"6.el6","installdate":"1468188658","arch":"x86_64"},"plymouth-core-libs":{"epoch":"0","version":"0.8.3","release":"27.el6.centos.1","installdate":"1468188658","arch":"x86_64"},"libffi":{"epoch":"0","version":"3.0.5","release":"3.2.el6","installdate":"1468188658","arch":"x86_64"},"python-libs":{"epoch":"0","version":"2.6.6","release":"64.el6","installdate":"1468188666","arch":"x86_64"},"slang":{"epoch":"0","version":"2.2.1","release":"1.el6","installdate":"1468188667","arch":"x86_64"},"newt-python":{"epoch":"0","version":"0.52.11","release":"3.el6","installdate":"1468188667","arch":"x86_64"},"libsemanage":{"epoch":"0","version":"2.0.43","release":"5.1.el6","installdate":"1468188667","arch":"x86_64"},"pkgconfig":{"epoch":"1","version":"0.23","release":"9.1.el6","installdate":"1468188667","arch":"x86_64"},"yum-metadata-parser":{"epoch":"0","version":"1.1.2","release":"16.el6","installdate":"1468188669","arch":"x86_64"},"rsyslog":{"epoch":"0","version":"5.8.10","release":"10.el6_6","installdate":"1468188674","arch":"x86_64"},"iptables-ipv6":{"epoch":"0","version":"1.4.7","release":"16.el6","installdate":"1468188677","arch":"x86_64"},"kbd-misc":{"epoch":"0","version":"1.15","release":"11.el6","installdate":"1468188679","arch":"noarch"},"b43-openfwwf":{"epoch":"0","version":"5.2","release":"10.el6","installdate":"1468188724","arch":"noarch"},"authconfig":{"epoch":"0","version":"6.1.12","release":"23.el6","installdate":"1468188724","arch":"x86_64"},"efibootmgr":{"epoch":"0","version":"0.5.4","release":"13.el6","installdate":"1468188725","arch":"x86_64"},"attr":{"epoch":"0","version":"2.4.44","release":"7.el6","installdate":"1468188726","arch":"x86_64"},"rootfiles":{"epoch":"0","version":"8.1","release":"6.1.el6","installdate":"1468188726","arch":"noarch"},"gpg-pubkey":{"epoch":"0","version":"c105b9de","release":"4e0fd3a3","installdate":"1468188902","arch":"(none)"},"kernel-headers":{"epoch":"0","version":"2.6.32","release":"642.1.1.el6","installdate":"1468188934","arch":"x86_64"},"glibc":{"epoch":"0","version":"2.12","release":"1.192.el6","installdate":"1468188936","arch":"x86_64"},"perl-Pod-Escapes":{"epoch":"1","version":"1.04","release":"141.el6_7.1","installdate":"1468188947","arch":"x86_64"},"perl-Pod-Simple":{"epoch":"1","version":"3.13","release":"141.el6_7.1","installdate":"1468188949","arch":"x86_64"},"perl-Module-Pluggable":{"epoch":"1","version":"3.90","release":"141.el6_7.1","installdate":"1468188949","arch":"x86_64"},"libstdc++":{"epoch":"0","version":"4.4.7","release":"17.el6","installdate":"1468188952","arch":"x86_64"},"cpp":{"epoch":"0","version":"4.4.7","release":"17.el6","installdate":"1468188953","arch":"x86_64"},"ppl":{"epoch":"0","version":"0.10.2","release":"11.el6","installdate":"1468188954","arch":"x86_64"},"glibc-headers":{"epoch":"0","version":"2.12","release":"1.192.el6","installdate":"1468188954","arch":"x86_64"},"libgomp":{"epoch":"0","version":"4.4.7","release":"17.el6","installdate":"1468188954","arch":"x86_64"},"gcc-c++":{"epoch":"0","version":"4.4.7","release":"17.el6","installdate":"1468188956","arch":"x86_64"},"make":{"epoch":"1","version":"3.81","release":"23.el6","installdate":"1468188956","arch":"x86_64"},"libselinux":{"epoch":"0","version":"2.0.94","release":"7.el6","installdate":"1468189144","arch":"x86_64"},"audit-libs":{"epoch":"0","version":"2.4.5","release":"3.el6","installdate":"1468189144","arch":"x86_64"},"nss-util":{"epoch":"0","version":"3.21.0","release":"2.el6","installdate":"1468189144","arch":"x86_64"},"krb5-libs":{"epoch":"0","version":"1.10.3","release":"57.el6","installdate":"1468189145","arch":"x86_64"},"grep":{"epoch":"0","version":"2.20","release":"3.el6_7.1","installdate":"1468189146","arch":"x86_64"},"libudev":{"epoch":"0","version":"147","release":"2.73.el6","installdate":"1468189146","arch":"x86_64"},"elfutils-libelf":{"epoch":"0","version":"0.164","release":"2.el6","installdate":"1468189146","arch":"x86_64"},"libblkid":{"epoch":"0","version":"2.17.2","release":"12.24.el6","installdate":"1468189146","arch":"x86_64"},"nss-softokn-freebl":{"epoch":"0","version":"3.14.3","release":"23.el6_7","installdate":"1468189147","arch":"x86_64"},"tcp_wrappers-libs":{"epoch":"0","version":"7.6","release":"58.el6","installdate":"1468189147","arch":"x86_64"},"file":{"epoch":"0","version":"5.04","release":"30.el6","installdate":"1468189148","arch":"x86_64"},"iproute":{"epoch":"0","version":"2.6.32","release":"54.el6","installdate":"1468189148","arch":"x86_64"}},"virtualbox":{"host":{"language":"en_US","revision":"108956","version":"5.1.2"},"guest":{}},"time":{"timezone":"BST"},"recipes":["nginx::default","iptables::default","nginx::package","nginx::ohai_plugin","ohai::default","yum-epel::default","nginx::commons","nginx::commons_dir","nginx::commons_script","nginx::commons_conf","iptables::_package"],"expanded_run_list":["nginx::default","iptables::default"],"roles":[],"cookbooks":{"nginx":{"version":"2.7.6"},"iptables":{"version":"2.2.0"},"apt":{"version":"2.9.2"},"bluepill":{"version":"2.4.3"},"build-essential":{"version":"2.4.0"},"ohai":{"version":"2.1.0"},"runit":{"version":"1.8.0"},"yum-epel":{"version":"0.7.1"},"rsyslog":{"version":"4.0.1"},"7-zip":{"version":"1.0.2"},"packagecloud":{"version":"0.2.5"},"yum":{"version":"4.0.0"},"compat_resource":{"version":"12.14.3"},"windows":{"version":"2.0.2"}},"nginx":{"version":"1.10.1","configure_arguments":["--prefix=/usr/share/nginx","--sbin-path=/usr/sbin/nginx","--modules-path=/usr/lib64/nginx/modules","--conf-path=/etc/nginx/nginx.conf","--error-log-path=/var/log/nginx/error.log","--http-log-path=/var/log/nginx/access.log","--http-client-body-temp-path=/var/lib/nginx/tmp/client_body","--http-proxy-temp-path=/var/lib/nginx/tmp/proxy","--http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi","--http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi","--http-scgi-temp-path=/var/lib/nginx/tmp/scgi","--pid-path=/var/run/nginx.pid","--lock-path=/var/lock/subsys/nginx","--user=nginx","--group=nginx","--with-file-aio","--with-ipv6","--with-http_ssl_module","--with-http_v2_module","--with-http_realip_module","--with-http_addition_module","--with-http_xslt_module=dynamic","--with-http_image_filter_module=dynamic","--with-http_geoip_module=dynamic","--with-http_sub_module","--with-http_dav_module","--with-http_flv_module","--with-http_mp4_module","--with-http_gunzip_module","--with-http_gzip_static_module","--with-http_random_index_module","--with-http_secure_link_module","--with-http_degradation_module","--with-http_slice_module","--with-http_stub_status_module","--with-http_perl_module=dynamic","--with-mail=dynamic","--with-mail_ssl_module","--with-pcre","--with-pcre-jit","--with-stream=dynamic","--with-stream_ssl_module","--with-debug","--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector","--param=ssp-buffer-size=4 -m64 -mtune=generic'","--with-ld-opt=' -Wl,-E'"],"prefix":"/usr/share/nginx","conf_path":"/etc/nginx/nginx.conf"}},"normal":{"nginx":{"default_root":"/usr/share/nginx/html"},"tags":[]},"chef_type":"node","default":{"apt":{"cacher-client":{"restrict_environment":false},"cacher_dir":"/var/cache/apt-cacher-ng","cacher_interface":null,"cacher_port":3142,"cacher_ssl_support":false,"caching_server":false,"compiletime":false,"compile_time_update":false,"key_proxy":"","cache_bypass":{},"periodic_update_min_delay":86400,"launchpad_api_version":"1.0","unattended_upgrades":{"enable":false,"update_package_lists":true,"allowed_origins":["Centos "],"package_blacklist":[],"auto_fix_interrupted_dpkg":false,"minimal_steps":false,"install_on_shutdown":false,"mail":null,"mail_only_on_error":true,"remove_unused_dependencies":false,"automatic_reboot":false,"automatic_reboot_time":"now","dl_limit":null},"confd":{"install_recommends":true,"install_suggests":false}},"rsyslog":{"local_host_name":null,"default_log_dir":"/var/log","log_dir":"/srv/rsyslog","working_dir":"/var/lib/rsyslog","server":false,"use_relp":false,"relp_port":20514,"protocol":"tcp","bind":"*","port":514,"server_ip":null,"server_search":"role:loghost","remote_logs":true,"per_host_dir":"%$YEAR%/%$MONTH%/%$DAY%/%HOSTNAME%","max_message_size":"2k","preserve_fqdn":"off","high_precision_timestamps":false,"repeated_msg_reduction":"on","logs_to_forward":"*.*","enable_imklog":true,"config_prefix":"/etc","default_file_template":null,"default_remote_template":null,"rate_limit_interval":null,"rate_limit_burst":null,"enable_tls":false,"action_queue_max_disk_space":"1G","tls_ca_file":null,"tls_certificate_file":null,"tls_key_file":null,"tls_auth_mode":"anon","tls_permitted_peer":null,"use_local_ipv4":false,"allow_non_local":false,"custom_remote":[{}],"additional_directives":{},"service_name":"rsyslog","user":"root","group":"adm","priv_seperation":false,"priv_user":null,"priv_group":null,"modules":["imuxsock","imklog"],"default_facility_logs":{"*.info;mail.none;authpriv.none;cron.none":"/var/log/messages","authpriv.*":"/var/log/secure","mail.*":"-/var/log/maillog","cron.*":"/var/log/cron","*.emerg":":omusrmsg:*","uucp,news.crit":"/var/log/spooler","local7.*":"/var/log/boot.log"}},"bluepill":{"bin":"/opt/chef/embedded/bin/bluepill","logfile":"/var/log/bluepill.log","pid_dir":"/var/run/bluepill","state_dir":"/var/lib/bluepill","group":0,"use_rsyslog":false,"init_dir":"/etc/init.d","conf_dir":"/etc/bluepill","defaults_dir":"/etc/sysconfig"},"windows":{"rubyzipversion":null},"7-zip":{"url":"http://downloads.sourceforge.net/sevenzip/7z922-x64.msi","checksum":"f09bf515289eea45185a4cc673e3bbc18ce608c55b4cf96e77833435c9cdf3dc","package_name":"7-Zip 9.22 (x64 edition)","home":"\\7-zip"},"build-essential":{"compile_time":false,"msys":{"path":"\\msys"}},"ohai":{"plugin_path":"/etc/chef/ohai_plugins","hints_path":"/etc/chef/ohai/hints","plugins":{"ohai":"plugins"}},"packagecloud":{"base_repo_path":"/install/repositories/","gpg_key_path":"/gpgkey","hostname_override":null,"proxy_host":null,"proxy_port":null,"default_type":"rpm"},"yum":{"main":{"cachedir":"/var/cache/yum/$basearch/$releasever","distroverpkg":"centos-release","releasever":null,"alwaysprompt":null,"assumeyes":null,"bandwidth":null,"bugtracker_url":null,"clean_requirements_on_remove":null,"color":null,"color_list_available_downgrade":null,"color_list_available_install":null,"color_list_available_reinstall":null,"color_list_available_upgrade":null,"color_list_installed_extra":null,"color_list_installed_newer":null,"color_list_installed_older":null,"color_list_installed_reinstall":null,"color_search_match":null,"color_update_installed":null,"color_update_local":null,"color_update_remote":null,"commands":null,"deltarpm":null,"debuglevel":null,"diskspacecheck":null,"enable_group_conditionals":null,"errorlevel":null,"exactarch":null,"exclude":null,"gpgcheck":true,"group_package_types":null,"groupremove_leaf_only":null,"history_list_view":null,"history_record":null,"history_record_packages":null,"http_caching":null,"installonly_limit":null,"installonlypkgs":null,"installroot":null,"keepalive":null,"keepcache":false,"kernelpkgnames":null,"localpkg_gpgcheck":false,"logfile":"/var/log/yum.log","max_retries":null,"mdpolicy":null,"metadata_expire":null,"mirrorlist_expire":null,"multilib_policy":null,"obsoletes":null,"overwrite_groups":null,"password":null,"path":"/etc/yum.conf","persistdir":null,"pluginconfpath":null,"pluginpath":null,"plugins":null,"protected_multilib":null,"protected_packages":null,"proxy":null,"proxy_password":null,"proxy_username":null,"recent":null,"repo_gpgcheck":null,"reposdir":null,"reset_nice":null,"rpmverbosity":null,"showdupesfromrepos":null,"skip_broken":null,"ssl_check_cert_permissions":null,"sslcacert":null,"sslclientcert":null,"sslclientkey":null,"sslverify":null,"syslog_device":null,"syslog_facility":null,"syslog_ident":null,"throttle":null,"timeout":null,"tolerant":false,"tsflags":null,"username":null},"epel-debuginfo":{"repositoryid":"epel-debuginfo","description":"Extra Packages for $releasever - $basearch - Debug","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel-source":{"repositoryid":"epel-source","description":"Extra Packages for $releasever - $basearch - Source","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel-testing-debuginfo":{"repositoryid":"epel-testing-debuginfo","description":"Extra Packages for $releasever - $basearch - Testing Debug","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel-testing-source":{"repositoryid":"epel-testing-source","description":"Extra Packages for $releasever - $basearch - Testing Source","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel-testing":{"repositoryid":"epel-testing","description":"Extra Packages for $releasever - $basearch - Testing ","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel":{"repositoryid":"epel","description":"Extra Packages for $releasever - $basearch","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":true,"managed":true,"make_cache":true}},"yum-epel":{"repositories":["epel","epel-debuginfo","epel-source","epel-testing","epel-testing-debuginfo","epel-testing-source"]},"runit":{"sv_bin":"/sbin/sv","chpst_bin":"/sbin/chpst","service_dir":"/etc/service","sv_dir":"/etc/sv","lsb_init_dir":"/etc/init.d","executable":"/sbin/runit","prefer_local_yum":false,"start":"/etc/init.d/runit-start start","stop":"/etc/init.d/runit-start stop","reload":"/etc/init.d/runit-start reload"},"nginx":{"version":"1.6.2","package_name":"nginx","port":"80","dir":"/etc/nginx","script_dir":"/usr/sbin","log_dir":"/var/log/nginx","log_dir_perm":"0750","binary":"/usr/sbin/nginx","default_root":"/var/www/nginx-default","ulimit":"1024","pid":"/var/run/nginx.pid","user":"nginx","init_style":"init","repo_source":"epel","upstart":{"runlevels":"2345","respawn_limit":null,"foreground":true},"group":"nginx","gzip":"on","gzip_static":"off","gzip_http_version":"1.0","gzip_comp_level":"2","gzip_proxied":"any","gzip_vary":"off","gzip_buffers":null,"gzip_types":["text/plain","text/css","application/x-javascript","text/xml","application/xml","application/rss+xml","application/atom+xml","text/javascript","application/javascript","application/json","text/mathml"],"gzip_min_length":1000,"gzip_disable":"MSIE [1-6]\\.","keepalive":"on","keepalive_requests":100,"keepalive_timeout":65,"worker_processes":2,"worker_connections":1024,"worker_rlimit_nofile":null,"multi_accept":false,"event":null,"accept_mutex_delay":null,"server_tokens":null,"server_names_hash_bucket_size":64,"variables_hash_max_size":1024,"variables_hash_bucket_size":64,"sendfile":"on","underscores_in_headers":null,"tcp_nodelay":"on","tcp_nopush":"on","access_log_options":null,"error_log_options":null,"disable_access_log":false,"log_formats":{},"install_method":"package","default_site_enabled":true,"types_hash_max_size":2048,"types_hash_bucket_size":64,"proxy_read_timeout":null,"client_body_buffer_size":null,"client_max_body_size":null,"large_client_header_buffers":null,"default":{"modules":[]},"extra_configs":{},"auth_request":{"url":"http://mdounin.ru/hg/ngx_http_auth_request_module/archive/ee8ff54f9b66.tar.gz","checksum":"7ab85e1c350c5a9c60ed1319c45fed144cc3c3e1"},"devel":{"version":"0.2.18","url":"https://github.com/simpl/ngx_devel_kit/archive/v0.2.18.tar.gz","checksum":"c9c9f0a1b068d38c6c45b15d9605f1b2344dbcd45abf0764cd8e2ba92d6a3d2c"},"echo":{"version":"0.57","url":"https://github.com/openresty/echo-nginx-module/archive/v0.57.tar.gz","checksum":"8467237ca0fae74ca7a32fbd34fc6044df307098415d48068214c9c235695a07"},"geoip":{"path":"/srv/geoip","enable_city":true,"country_dat_url":"http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz","country_dat_checksum":"79ff1099e96c2dc1c2539c9a18aaa13a9afd085cae477df60d95f1644d42bc07","city_dat_url":"http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz","city_dat_checksum":"8a6467033a528f68b1a97de24d9d0ce86c8e8e83683820e16e433ddbd3f712f7","lib_version":"1.6.3","lib_url":"https://github.com/maxmind/geoip-api-c/releases/download/v1.6.3/GeoIP-1.6.3.tar.gz","lib_checksum":"e483839a81a91c3c85df89ef409fc7b526c489e0355d537861cfd1ea9534a8f2"},"headers_more":{"version":"0.25","source_url":"https://github.com/openresty/headers-more-nginx-module/archive/v0.25.tar.gz","source_checksum":"1473f96f59dcec9d83ce65d691559993c1f80da8c0a4c0c0a30dae9f969eeabf"},"lua":{"version":"0.8.7","url":"https://github.com/chaoslawful/lua-nginx-module/archive/v0.8.7.tar.gz","checksum":"4b9be3c159b9c884a38e044e07aaf4d06bd2893977d0b0dae02c124d8e907f93"},"luajit":{"version":"2.0.2","url":"http://luajit.org/download/LuaJIT-2.0.2.tar.gz","checksum":"c05202974a5890e777b181908ac237625b499aece026654d7cc33607e3f46c38"},"naxsi":{"version":"0.53-2","url":"https://github.com/nbs-system/naxsi/archive/0.53-2.tar.gz","checksum":"3eadff1d91995beae41b92733ade28091c2075a24ae37058f4d6aa90b0f4b660"},"openssl_source":{"version":"1.0.1h","url":"http://www.openssl.org/source/openssl-1.0.1h.tar.gz"},"pagespeed":{"version":"1.8.31.4","url":"https://github.com/pagespeed/ngx_pagespeed/archive/release-1.8.31.4-beta.tar.gz","packages":{"rhel":["gcc-c++","pcre-dev","pcre-devel","zlib-devel","make"],"debian":["build-essential","zlib1g-dev","libpcre3","libpcre3-dev"]}},"psol":{"url":"https://dl.google.com/dl/page-speed/psol/1.8.31.4.tar.gz"},"passenger":{"version":"4.0.57","root":"/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/passenger-4.0.57","ruby":"/opt/chef/embedded/bin/ruby","packages":{"rhel":["ruby-devel","libcurl-devel"],"fedora":["ruby-devel","libcurl-devel"],"debian":["ruby-dev","libcurl4-gnutls-dev"]},"install_rake":true,"spawn_method":"smart-lv2","buffer_response":"on","max_pool_size":6,"min_instances":1,"max_instances_per_app":0,"pool_idle_time":300,"max_requests":0,"gem_binary":null,"nodejs":null},"enable_rate_limiting":false,"rate_limiting_zone_name":"default","rate_limiting_backoff":"10m","rate_limit":"1r/s","upstream_repository":"http://nginx.org/packages/centos/6/$basearch/","set_misc":{"version":"0.24","url":"https://github.com/agentzh/set-misc-nginx-module/archive/v0.24.tar.gz","checksum":"da404a7dac5fa4a0a86f42b4ec7648b607f4cd66"},"socketproxy":{"root":"/usr/share/nginx/apps","app_owner":"root","logname":"socketproxy","log_level":"error"},"source":{"version":"1.6.2","prefix":"/opt/nginx-1.6.2","conf_path":"/etc/nginx/nginx.conf","sbin_path":"/opt/nginx-1.6.2/sbin/nginx","default_configure_flags":["--prefix=/opt/nginx-1.6.2","--conf-path=/etc/nginx/nginx.conf","--sbin-path=/opt/nginx-1.6.2/sbin/nginx"],"url":"http://nginx.org/download/nginx-1.6.2.tar.gz","checksum":"b5608c2959d3e7ad09b20fc8f9e5bd4bc87b3bc8ba5936a513c04ed8f1391a18","modules":["nginx::http_ssl_module","nginx::http_gzip_static_module"],"use_existing_user":false},"configure_flags":[],"status":{"port":"8090"},"syslog":{"git_repo":"https://github.com/yaoweibin/nginx_syslog_patch.git","git_revision":"master"},"upload_progress":{"url":"https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0","checksum":"3fb903dab595cf6656fa0fc5743a48daffbba2f6b5c554836be630800eaad4e2","javascript_output":true,"zone_name":"proxied","zone_size":"1m"}},"iptables":{"iptables_sysconfig":{"IPTABLES_MODULES":"","IPTABLES_MODULES_UNLOAD":"yes","IPTABLES_SAVE_ON_STOP":"no","IPTABLES_SAVE_ON_RESTART":"no","IPTABLES_SAVE_COUNTER":"no","IPTABLES_STATUS_NUMERIC":"yes","IPTABLES_STATUS_VERBOSE":"no","IPTABLES_STATUS_LINENUMBERS":"yes"},"ip6tables_sysconfig":{"IP6TABLES_MODULES":"","IP6TABLES_MODULES_UNLOAD":"yes","IP6TABLES_SAVE_ON_STOP":"no","IP6TABLES_SAVE_ON_RESTART":"no","IP6TABLES_SAVE_COUNTER":"no","IP6TABLES_STATUS_NUMERIC":"yes","IP6TABLES_STATUS_VERBOSE":"no","IP6TABLES_STATUS_LINENUMBERS":"yes"}}},"override":{},"run_list":["recipe[nginx::default]","recipe[iptables::default]"]}
--- END PUT BODY ---
[2016-09-13T13:00:49+01:00] DEBUG: #<ChefZero::RestRequest:0x000000089b70f0
 @body=
  "{\"name\":\"chef-master\",\"chef_environment\":\"_default\",\"json_class\":\"Chef::Node\",\"automatic\":{\"dmi\":{},\"kernel\":{\"name\":\"Linux\",\"release\":\"2.6.32-642.1.1.el6.x86_64\",\"version\":\"#1 SMP Tue May 31 21:57:07 UTC 2016\",\"machine\":\"x86_64\",\"processor\":\"x86_64\",\"os\":\"GNU/Linux\",\"modules\":{\"vboxsf\":{\"size\":\"37731\",\"refcount\":\"2\",\"version\":\"5.1.2 r108956\"},\"vboxguest\":{\"size\":\"285383\",\"refcount\":\"1\",\"version\":\"5.1.2 r108956\"},\"nls_utf8\":{\"size\":\"1455\",\"refcount\":\"0\"},\"ipv6\":{\"size\":\"336282\",\"refcount\":\"16\"},\"sg\":{\"size\":\"29318\",\"refcount\":\"0\",\"version\":\"3.5.34\"},\"i2c_piix4\":{\"size\":\"11232\",\"refcount\":\"0\"},\"i2c_core\":{\"size\":\"29132\",\"refcount\":\"1\"},\"e1000\":{\"size\":\"134895\",\"refcount\":\"0\",\"version\":\"7.3.21-k8-NAPI\"},\"ext4\":{\"size\":\"379655\",\"refcount\":\"2\"},\"jbd2\":{\"size\":\"93252\",\"refcount\":\"1\"},\"mbcache\":{\"size\":\"8193\",\"refcount\":\"1\"},\"sd_mod\":{\"size\":\"37158\",\"refcount\":\"3\"},\"crc_t10dif\":{\"size\":\"1209\",\"refcount\":\"1\"},\"ahci\":{\"size\":\"43154\",\"refcount\":\"2\",\"version\":\"3.0\"},\"pata_acpi\":{\"size\":\"3701\",\"refcount\":\"0\",\"version\":\"0.2.3\"},\"ata_generic\":{\"size\":\"3837\",\"refcount\":\"0\",\"version\":\"0.2.15\"},\"ata_piix\":{\"size\":\"24409\",\"refcount\":\"0\",\"version\":\"2.13\"},\"video\":{\"size\":\"21654\",\"refcount\":\"0\"},\"output\":{\"size\":\"2409\",\"refcount\":\"1\"},\"dm_mirror\":{\"size\":\"14864\",\"refcount\":\"0\"},\"dm_region_hash\":{\"size\":\"12085\",\"refcount\":\"1\"},\"dm_log\":{\"size\":\"9930\",\"refcount\":\"2\"},\"dm_mod\":{\"size\":\"102467\",\"refcount\":\"8\"}}},\"network\":{\"interfaces\":{\"lo\":{\"mtu\":\"65536\",\"flags\":[\"LOOPBACK\",\"UP\",\"LOWER_UP\"],\"encapsulation\":\"Loopback\",\"addresses\":{\"127.0.0.1\":{\"family\":\"inet\",\"prefixlen\":\"8\",\"netmask\":\"255.0.0.0\",\"scope\":\"Node\"},\"::1\":{\"family\":\"inet6\",\"prefixlen\":\"128\",\"scope\":\"Node\",\"tags\":[]}},\"state\":\"unknown\",\"routes\":[{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"}]},\"eth0\":{\"type\":\"eth\",\"number\":\"0\",\"mtu\":\"1500\",\"flags\":[\"BROADCAST\",\"MULTICAST\",\"UP\",\"LOWER_UP\"],\"encapsulation\":\"Ethernet\",\"addresses\":{\"08:00:27:EC:55:DD\":{\"family\":\"lladdr\"},\"10.0.2.15\":{\"family\":\"inet\",\"prefixlen\":\"24\",\"netmask\":\"255.255.255.0\",\"broadcast\":\"10.0.2.255\",\"scope\":\"Global\"},\"fe80::a00:27ff:feec:55dd\":{\"family\":\"inet6\",\"prefixlen\":\"64\",\"scope\":\"Link\",\"tags\":[]}},\"state\":\"up\",\"arp\":{\"10.0.2.3\":\"52:54:00:12:35:03\",\"10.0.2.2\":\"52:54:00:12:35:02\"},\"routes\":[{\"destination\":\"10.0.2.0/24\",\"family\":\"inet\",\"scope\":\"link\",\"proto\":\"kernel\",\"src\":\"10.0.2.15\"},{\"destination\":\"169.254.0.0/16\",\"family\":\"inet\",\"scope\":\"link\",\"metric\":\"1002\"},{\"destination\":\"default\",\"family\":\"inet\",\"via\":\"10.0.2.2\"},{\"destination\":\"fe80::/64\",\"family\":\"inet6\",\"metric\":\"256\",\"proto\":\"kernel\"}],\"link_speed\":1000,\"duplex\":\"Full\",\"port\":\"Twisted Pair\",\"transceiver\":\"internal\",\"auto_negotiation\":\"on\",\"mdi_x\":\"off (auto)\",\"ring_params\":{\"max_rx\":4096,\"max_rx_mini\":0,\"max_rx_jumbo\":0,\"max_tx\":4096,\"current_rx\":256,\"current_rx_mini\":0,\"current_rx_jumbo\":0,\"current_tx\":256}},\"eth1\":{\"type\":\"eth\",\"number\":\"1\",\"mtu\":\"1500\",\"flags\":[\"BROADCAST\",\"MULTICAST\",\"UP\",\"LOWER_UP\"],\"encapsulation\":\"Ethernet\",\"addresses\":{\"08:00:27:47:BD:00\":{\"family\":\"lladdr\"},\"192.168.33.10\":{\"family\":\"inet\",\"prefixlen\":\"24\",\"netmask\":\"255.255.255.0\",\"broadcast\":\"192.168.33.255\",\"scope\":\"Global\"},\"fe80::a00:27ff:fe47:bd00\":{\"family\":\"inet6\",\"prefixlen\":\"64\",\"scope\":\"Link\",\"tags\":[]}},\"state\":\"up\",\"arp\":{\"192.168.33.1\":\"0a:00:27:00:00:0d\"},\"routes\":[{\"destination\":\"192.168.33.0/24\",\"family\":\"inet\",\"scope\":\"link\",\"proto\":\"kernel\",\"src\":\"192.168.33.10\"},{\"destination\":\"169.254.0.0/16\",\"family\":\"inet\",\"scope\":\"link\",\"metric\":\"1003\"},{\"destination\":\"fe80::/64\",\"family\":\"inet6\",\"metric\":\"256\",\"proto\":\"kernel\"}],\"link_speed\":1000,\"duplex\":\"Full\",\"port\":\"Twisted Pair\",\"transceiver\":\"internal\",\"auto_negotiation\":\"on\",\"mdi_x\":\"off (auto)\",\"ring_params\":{\"max_rx\":4096,\"max_rx_mini\":0,\"max_rx_jumbo\":0,\"max_tx\":4096,\"current_rx\":256,\"current_rx_mini\":0,\"current_rx_jumbo\":0,\"current_tx\":256}}},\"default_interface\":\"eth0\",\"default_gateway\":\"10.0.2.2\"},\"counters\":{\"network\":{\"interfaces\":{\"lo\":{\"rx\":{\"bytes\":\"0\",\"packets\":\"0\",\"errors\":\"0\",\"drop\":\"0\",\"overrun\":\"0\"},\"tx\":{\"bytes\":\"0\",\"packets\":\"0\",\"errors\":\"0\",\"drop\":\"0\",\"carrier\":\"0\",\"collisions\":\"0\"}},\"eth0\":{\"tx\":{\"queuelen\":\"1000\",\"bytes\":\"1404524\",\"packets\":\"21145\",\"errors\":\"0\",\"drop\":\"0\",\"carrier\":\"0\",\"collisions\":\"0\"},\"rx\":{\"bytes\":\"102627518\",\"packets\":\"74257\",\"errors\":\"0\",\"drop\":\"0\",\"overrun\":\"0\"}},\"eth1\":{\"tx\":{\"queuelen\":\"1000\",\"bytes\":\"664981\",\"packets\":\"2885\",\"errors\":\"0\",\"drop\":\"0\",\"carrier\":\"0\",\"collisions\":\"0\"},\"rx\":{\"bytes\":\"338800\",\"packets\":\"3283\",\"errors\":\"0\",\"drop\":\"0\",\"overrun\":\"0\"}}}}},\"ipaddress\":\"10.0.2.15\",\"macaddress\":\"08:00:27:EC:55:DD\",\"etc\":{\"passwd\":{\"root\":{\"dir\":\"/root\",\"gid\":0,\"uid\":0,\"shell\":\"/bin/bash\",\"gecos\":\"root\"},\"bin\":{\"dir\":\"/bin\",\"gid\":1,\"uid\":1,\"shell\":\"/sbin/nologin\",\"gecos\":\"bin\"},\"daemon\":{\"dir\":\"/sbin\",\"gid\":2,\"uid\":2,\"shell\":\"/sbin/nologin\",\"gecos\":\"daemon\"},\"adm\":{\"dir\":\"/var/adm\",\"gid\":4,\"uid\":3,\"shell\":\"/sbin/nologin\",\"gecos\":\"adm\"},\"lp\":{\"dir\":\"/var/spool/lpd\",\"gid\":7,\"uid\":4,\"shell\":\"/sbin/nologin\",\"gecos\":\"lp\"},\"sync\":{\"dir\":\"/sbin\",\"gid\":0,\"uid\":5,\"shell\":\"/bin/sync\",\"gecos\":\"sync\"},\"shutdown\":{\"dir\":\"/sbin\",\"gid\":0,\"uid\":6,\"shell\":\"/sbin/shutdown\",\"gecos\":\"shutdown\"},\"halt\":{\"dir\":\"/sbin\",\"gid\":0,\"uid\":7,\"shell\":\"/sbin/halt\",\"gecos\":\"halt\"},\"mail\":{\"dir\":\"/var/spool/mail\",\"gid\":12,\"uid\":8,\"shell\":\"/sbin/nologin\",\"gecos\":\"mail\"},\"uucp\":{\"dir\":\"/var/spool/uucp\",\"gid\":14,\"uid\":10,\"shell\":\"/sbin/nologin\",\"gecos\":\"uucp\"},\"operator\":{\"dir\":\"/root\",\"gid\":0,\"uid\":11,\"shell\":\"/sbin/nologin\",\"gecos\":\"operator\"},\"games\":{\"dir\":\"/usr/games\",\"gid\":100,\"uid\":12,\"shell\":\"/sbin/nologin\",\"gecos\":\"games\"},\"gopher\":{\"dir\":\"/var/gopher\",\"gid\":30,\"uid\":13,\"shell\":\"/sbin/nologin\",\"gecos\":\"gopher\"},\"ftp\":{\"dir\":\"/var/ftp\",\"gid\":50,\"uid\":14,\"shell\":\"/sbin/nologin\",\"gecos\":\"FTP User\"},\"nobody\":{\"dir\":\"/\",\"gid\":99,\"uid\":99,\"shell\":\"/sbin/nologin\",\"gecos\":\"Nobody\"},\"vcsa\":{\"dir\":\"/dev\",\"gid\":69,\"uid\":69,\"shell\":\"/sbin/nologin\",\"gecos\":\"virtual console memory owner\"},\"saslauth\":{\"dir\":\"/var/empty/saslauth\",\"gid\":76,\"uid\":499,\"shell\":\"/sbin/nologin\",\"gecos\":\"Saslauthd user\"},\"postfix\":{\"dir\":\"/var/spool/postfix\",\"gid\":89,\"uid\":89,\"shell\":\"/sbin/nologin\",\"gecos\":\"\"},\"sshd\":{\"dir\":\"/var/empty/sshd\",\"gid\":74,\"uid\":74,\"shell\":\"/sbin/nologin\",\"gecos\":\"Privilege-separated SSH\"},\"vagrant\":{\"dir\":\"/home/vagrant\",\"gid\":500,\"uid\":500,\"shell\":\"/bin/bash\",\"gecos\":\"vagrant\"},\"vboxadd\":{\"dir\":\"/var/run/vboxadd\",\"gid\":1,\"uid\":498,\"shell\":\"/bin/false\",\"gecos\":\"\"}},\"group\":{\"root\":{\"gid\":0,\"members\":[]},\"bin\":{\"gid\":1,\"members\":[\"bin\",\"daemon\"]},\"daemon\":{\"gid\":2,\"members\":[\"bin\",\"daemon\"]},\"sys\":{\"gid\":3,\"members\":[\"bin\",\"adm\"]},\"adm\":{\"gid\":4,\"members\":[\"adm\",\"daemon\"]},\"tty\":{\"gid\":5,\"members\":[]},\"disk\":{\"gid\":6,\"members\":[]},\"lp\":{\"gid\":7,\"members\":[\"daemon\"]},\"mem\":{\"gid\":8,\"members\":[]},\"kmem\":{\"gid\":9,\"members\":[]},\"wheel\":{\"gid\":10,\"members\":[]},\"mail\":{\"gid\":12,\"members\":[\"mail\",\"postfix\"]},\"uucp\":{\"gid\":14,\"members\":[]},\"man\":{\"gid\":15,\"members\":[]},\"games\":{\"gid\":20,\"members\":[]},\"gopher\":{\"gid\":30,\"members\":[]},\"video\":{\"gid\":39,\"members\":[]},\"dip\":{\"gid\":40,\"members\":[]},\"ftp\":{\"gid\":50,\"members\":[]},\"lock\":{\"gid\":54,\"members\":[]},\"audio\":{\"gid\":63,\"members\":[]},\"nobody\":{\"gid\":99,\"members\":[]},\"users\":{\"gid\":100,\"members\":[]},\"floppy\":{\"gid\":19,\"members\":[]},\"vcsa\":{\"gid\":69,\"members\":[]},\"utmp\":{\"gid\":22,\"members\":[]},\"utempter\":{\"gid\":35,\"members\":[]},\"cdrom\":{\"gid\":11,\"members\":[]},\"tape\":{\"gid\":33,\"members\":[]},\"dialout\":{\"gid\":18,\"members\":[]},\"saslauth\":{\"gid\":76,\"members\":[]},\"postdrop\":{\"gid\":90,\"members\":[]},\"postfix\":{\"gid\":89,\"members\":[]},\"fuse\":{\"gid\":499,\"members\":[]},\"sshd\":{\"gid\":74,\"members\":[]},\"vagrant\":{\"gid\":500,\"members\":[\"vagrant\"]},\"vboxsf\":{\"gid\":498,\"members\":[]}}},\"current_user\":\"root\",\"cloud_v2\":null,\"languages\":{\"python\":{\"version\":\"2.6.6\",\"builddate\":\"Jul 23 2015, 15:22:56\"},\"lua\":{\"version\":\"5.1.4\"},\"perl\":{\"version\":\"5.10.1\",\"archname\":\"x86_64-linux-thread-multi\"},\"ruby\":{\"platform\":\"x86_64-linux\",\"version\":\"2.1.9\",\"release_date\":\"2016-03-30\",\"target\":\"x86_64-pc-linux-gnu\",\"target_cpu\":\"x86_64\",\"target_vendor\":\"pc\",\"target_os\":\"linux\",\"host\":\"x86_64-pc-linux-gnu\",\"host_cpu\":\"x86_64\",\"host_os\":\"linux-gnu\",\"host_vendor\":\"pc\",\"bin_dir\":\"/opt/chef/embedded/bin\",\"ruby_bin\":\"/opt/chef/embedded/bin/ruby\",\"gems_dir\":\"/opt/chef/embedded/lib/ruby/gems/2.1.0\",\"gem_bin\":\"/opt/chef/embedded/bin/gem\"},\"c\":{\"gcc\":{\"version\":\"4.4.7\",\"description\":\"gcc version 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) \"},\"glibc\":{\"version\":\"2.12\",\"description\":\"GNU C Library stable release version 2.12, by Roland McGrath et al.\"}}},\"ohai_time\":1473767993.7327073,\"os\":\"linux\",\"os_version\":\"2.6.32-642.1.1.el6.x86_64\",\"lsb\":{},\"platform\":\"centos\",\"platform_version\":\"6.8\",\"platform_family\":\"rhel\",\"ip6address\":\"fe80::a00:27ff:fe47:bd00\",\"cpu\":{\"0\":{\"vendor_id\":\"GenuineIntel\",\"family\":\"6\",\"model\":\"37\",\"model_name\":\"Intel(R) Core(TM) i5 CPU         650  @ 3.20GHz\",\"stepping\":\"5\",\"mhz\":\"3192.376\",\"cache_size\":\"4096 KB\",\"physical_id\":\"0\",\"core_id\":\"0\",\"cores\":\"2\",\"flags\":[\"fpu\",\"vme\",\"de\",\"pse\",\"tsc\",\"msr\",\"pae\",\"mce\",\"cx8\",\"apic\",\"sep\",\"mtrr\",\"pge\",\"mca\",\"cmov\",\"pat\",\"pse36\",\"clflush\",\"mmx\",\"fxsr\",\"sse\",\"sse2\",\"ht\",\"syscall\",\"nx\",\"rdtscp\",\"lm\",\"constant_tsc\",\"rep_good\",\"xtopology\",\"nonstop_tsc\",\"unfair_spinlock\",\"pni\",\"pclmulqdq\",\"ssse3\",\"cx16\",\"sse4_1\",\"sse4_2\",\"popcnt\",\"aes\",\"hypervisor\",\"lahf_lm\"]},\"1\":{\"vendor_id\":\"GenuineIntel\",\"family\":\"6\",\"model\":\"37\",\"model_name\":\"Intel(R) Core(TM) i5 CPU         650  @ 3.20GHz\",\"stepping\":\"5\",\"mhz\":\"3192.376\",\"cache_size\":\"4096 KB\",\"physical_id\":\"0\",\"core_id\":\"1\",\"cores\":\"2\",\"flags\":[\"fpu\",\"vme\",\"de\",\"pse\",\"tsc\",\"msr\",\"pae\",\"mce\",\"cx8\",\"apic\",\"sep\",\"mtrr\",\"pge\",\"mca\",\"cmov\",\"pat\",\"pse36\",\"clflush\",\"mmx\",\"fxsr\",\"sse\",\"sse2\",\"ht\",\"syscall\",\"nx\",\"rdtscp\",\"lm\",\"constant_tsc\",\"rep_good\",\"xtopology\",\"nonstop_tsc\",\"unfair_spinlock\",\"pni\",\"pclmulqdq\",\"ssse3\",\"cx16\",\"sse4_1\",\"sse4_2\",\"popcnt\",\"aes\",\"hypervisor\",\"lahf_lm\"]},\"total\":2,\"real\":1,\"cores\":2},\"memory\":{\"swap\":{\"cached\":\"0kB\",\"total\":\"1277948kB\",\"free\":\"1277948kB\"},\"hugepages\":{\"total\":\"0\",\"free\":\"0\",\"reserved\":\"0\",\"surplus\":\"0\"},\"total\":\"1922052kB\",\"free\":\"258572kB\",\"buffers\":\"90648kB\",\"cached\":\"1221184kB\",\"active\":\"540736kB\",\"inactive\":\"916024kB\",\"dirty\":\"7204kB\",\"writeback\":\"0kB\",\"anon_pages\":\"144972kB\",\"mapped\":\"10960kB\",\"slab\":\"180644kB\",\"slab_reclaimable\":\"158540kB\",\"slab_unreclaim\":\"22104kB\",\"page_tables\":\"2332kB\",\"nfs_unstable\":\"0kB\",\"bounce\":\"0kB\",\"commit_limit\":\"2238972kB\",\"committed_as\":\"248588kB\",\"vmalloc_total\":\"34359738367kB\",\"vmalloc_used\":\"32064kB\",\"vmalloc_chunk\":\"34359695352kB\",\"hugepage_size\":\"2048kB\"},\"virtualization\":{\"systems\":{\"vbox\":\"guest\"},\"system\":\"vbox\",\"role\":\"guest\"},\"command\":{\"ps\":\"ps -ef\"},\"filesystem\":{\"/dev/mapper/VolGroup-lv_root\":{\"kb_size\":\"18261312\",\"kb_used\":\"1953196\",\"kb_available\":\"15373820\",\"percent_used\":\"12%\",\"mount\":\"/\",\"total_inodes\":\"1169168\",\"inodes_used\":\"101552\",\"inodes_available\":\"1067616\",\"inodes_percent_used\":\"9%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e\"},\"tmpfs\":{\"kb_size\":\"961024\",\"kb_used\":\"0\",\"kb_available\":\"961024\",\"percent_used\":\"0%\",\"mount\":\"/dev/shm\",\"total_inodes\":\"240256\",\"inodes_used\":\"1\",\"inodes_available\":\"240255\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"tmpfs\",\"mount_options\":[\"rw\"]},\"/dev/sda1\":{\"kb_size\":\"487652\",\"kb_used\":\"55187\",\"kb_available\":\"406865\",\"percent_used\":\"12%\",\"mount\":\"/boot\",\"total_inodes\":\"128016\",\"inodes_used\":\"44\",\"inodes_available\":\"127972\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2\"},\"vagrant\":{\"kb_size\":\"126343160\",\"kb_used\":\"72260704\",\"kb_available\":\"54082456\",\"percent_used\":\"58%\",\"mount\":\"/vagrant\",\"total_inodes\":\"1000\",\"inodes_used\":\"0\",\"inodes_available\":\"1000\",\"inodes_percent_used\":\"0%\",\"fs_type\":\"vboxsf\",\"mount_options\":[\"uid=500\",\"gid=500\",\"rw\"]},\"proc\":{\"mount\":\"/proc\",\"fs_type\":\"proc\",\"mount_options\":[\"rw\"]},\"sysfs\":{\"mount\":\"/sys\",\"fs_type\":\"sysfs\",\"mount_options\":[\"rw\"]},\"devpts\":{\"mount\":\"/dev/pts\",\"fs_type\":\"devpts\",\"mount_options\":[\"rw\",\"gid=5\",\"mode=620\"]},\"none\":{\"mount\":\"/proc/sys/fs/binfmt_misc\",\"fs_type\":\"binfmt_misc\",\"mount_options\":[\"rw\"]},\"/dev/sda2\":{\"fs_type\":\"LVM2_member\",\"uuid\":\"1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22\"},\"/dev/mapper/VolGroup-lv_swap\":{\"fs_type\":\"swap\",\"uuid\":\"376d9de0-a04a-4c8e-90fd-7721b522b166\"},\"rootfs\":{\"mount\":\"/\",\"fs_type\":\"rootfs\",\"mount_options\":[\"rw\"]},\"devtmpfs\":{\"mount\":\"/dev\",\"fs_type\":\"devtmpfs\",\"mount_options\":[\"rw\",\"relatime\",\"size=950288k\",\"nr_inodes=237572\",\"mode=755\"]},\"/proc/bus/usb\":{\"mount\":\"/proc/bus/usb\",\"fs_type\":\"usbfs\",\"mount_options\":[\"rw\",\"relatime\"]}},\"init_package\":\"init\",\"filesystem2\":{\"by_device\":{\"/dev/mapper/VolGroup-lv_root\":{\"kb_size\":\"18261312\",\"kb_used\":\"1953196\",\"kb_available\":\"15373820\",\"percent_used\":\"12%\",\"total_inodes\":\"1169168\",\"inodes_used\":\"101552\",\"inodes_available\":\"1067616\",\"inodes_percent_used\":\"9%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e\",\"mounts\":[\"/\"]},\"tmpfs\":{\"kb_size\":\"961024\",\"kb_used\":\"0\",\"kb_available\":\"961024\",\"percent_used\":\"0%\",\"total_inodes\":\"240256\",\"inodes_used\":\"1\",\"inodes_available\":\"240255\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"tmpfs\",\"mount_options\":[\"rw\"],\"mounts\":[\"/dev/shm\"]},\"/dev/sda1\":{\"kb_size\":\"487652\",\"kb_used\":\"55187\",\"kb_available\":\"406865\",\"percent_used\":\"12%\",\"total_inodes\":\"128016\",\"inodes_used\":\"44\",\"inodes_available\":\"127972\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2\",\"mounts\":[\"/boot\"]},\"vagrant\":{\"kb_size\":\"126343160\",\"kb_used\":\"72260704\",\"kb_available\":\"54082456\",\"percent_used\":\"58%\",\"total_inodes\":\"1000\",\"inodes_used\":\"0\",\"inodes_available\":\"1000\",\"inodes_percent_used\":\"0%\",\"fs_type\":\"vboxsf\",\"mount_options\":[\"uid=500\",\"gid=500\",\"rw\"],\"mounts\":[\"/vagrant\"]},\"proc\":{\"fs_type\":\"proc\",\"mount_options\":[\"rw\"],\"mounts\":[\"/proc\"]},\"sysfs\":{\"fs_type\":\"sysfs\",\"mount_options\":[\"rw\"],\"mounts\":[\"/sys\"]},\"devpts\":{\"fs_type\":\"devpts\",\"mount_options\":[\"rw\",\"gid=5\",\"mode=620\"],\"mounts\":[\"/dev/pts\"]},\"none\":{\"fs_type\":\"binfmt_misc\",\"mount_options\":[\"rw\"],\"mounts\":[\"/proc/sys/fs/binfmt_misc\"]},\"/dev/sda\":{\"mounts\":[]},\"/dev/sda2\":{\"fs_type\":\"LVM2_member\",\"uuid\":\"1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22\",\"mounts\":[]},\"/dev/mapper/VolGroup-lv_swap\":{\"fs_type\":\"swap\",\"uuid\":\"376d9de0-a04a-4c8e-90fd-7721b522b166\",\"mounts\":[]},\"rootfs\":{\"fs_type\":\"rootfs\",\"mount_options\":[\"rw\"],\"mounts\":[\"/\"]},\"devtmpfs\":{\"fs_type\":\"devtmpfs\",\"mount_options\":[\"rw\",\"relatime\",\"size=950288k\",\"nr_inodes=237572\",\"mode=755\"],\"mounts\":[\"/dev\"]},\"/proc/bus/usb\":{\"fs_type\":\"usbfs\",\"mount_options\":[\"rw\",\"relatime\"],\"mounts\":[\"/proc/bus/usb\"]}},\"by_mountpoint\":{\"/\":{\"kb_size\":\"18261312\",\"kb_used\":\"1953196\",\"kb_available\":\"15373820\",\"percent_used\":\"12%\",\"total_inodes\":\"1169168\",\"inodes_used\":\"101552\",\"inodes_available\":\"1067616\",\"inodes_percent_used\":\"9%\",\"fs_type\":\"rootfs\",\"mount_options\":[\"rw\"],\"uuid\":\"9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e\",\"devices\":[\"/dev/mapper/VolGroup-lv_root\",\"rootfs\"]},\"/dev/shm\":{\"kb_size\":\"961024\",\"kb_used\":\"0\",\"kb_available\":\"961024\",\"percent_used\":\"0%\",\"total_inodes\":\"240256\",\"inodes_used\":\"1\",\"inodes_available\":\"240255\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"tmpfs\",\"mount_options\":[\"rw\"],\"devices\":[\"tmpfs\"]},\"/boot\":{\"kb_size\":\"487652\",\"kb_used\":\"55187\",\"kb_available\":\"406865\",\"percent_used\":\"12%\",\"total_inodes\":\"128016\",\"inodes_used\":\"44\",\"inodes_available\":\"127972\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2\",\"devices\":[\"/dev/sda1\"]},\"/vagrant\":{\"kb_size\":\"126343160\",\"kb_used\":\"72260704\",\"kb_available\":\"54082456\",\"percent_used\":\"58%\",\"total_inodes\":\"1000\",\"inodes_used\":\"0\",\"inodes_available\":\"1000\",\"inodes_percent_used\":\"0%\",\"fs_type\":\"vboxsf\",\"mount_options\":[\"uid=500\",\"gid=500\",\"rw\"],\"devices\":[\"vagrant\"]},\"/proc\":{\"fs_type\":\"proc\",\"mount_options\":[\"rw\"],\"devices\":[\"proc\"]},\"/sys\":{\"fs_type\":\"sysfs\",\"mount_options\":[\"rw\"],\"devices\":[\"sysfs\"]},\"/dev/pts\":{\"fs_type\":\"devpts\",\"mount_options\":[\"rw\",\"gid=5\",\"mode=620\"],\"devices\":[\"devpts\"]},\"/proc/sys/fs/binfmt_misc\":{\"fs_type\":\"binfmt_misc\",\"mount_options\":[\"rw\"],\"devices\":[\"none\"]},\"/dev\":{\"fs_type\":\"devtmpfs\",\"mount_options\":[\"rw\",\"relatime\",\"size=950288k\",\"nr_inodes=237572\",\"mode=755\"],\"devices\":[\"devtmpfs\"]},\"/proc/bus/usb\":{\"fs_type\":\"usbfs\",\"mount_options\":[\"rw\",\"relatime\"],\"devices\":[\"/proc/bus/usb\"]}},\"by_pair\":{\"/dev/mapper/VolGroup-lv_root,/\":{\"device\":\"/dev/mapper/VolGroup-lv_root\",\"kb_size\":\"18261312\",\"kb_used\":\"1953196\",\"kb_available\":\"15373820\",\"percent_used\":\"12%\",\"mount\":\"/\",\"total_inodes\":\"1169168\",\"inodes_used\":\"101552\",\"inodes_available\":\"1067616\",\"inodes_percent_used\":\"9%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e\"},\"tmpfs,/dev/shm\":{\"device\":\"tmpfs\",\"kb_size\":\"961024\",\"kb_used\":\"0\",\"kb_available\":\"961024\",\"percent_used\":\"0%\",\"mount\":\"/dev/shm\",\"total_inodes\":\"240256\",\"inodes_used\":\"1\",\"inodes_available\":\"240255\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"tmpfs\",\"mount_options\":[\"rw\"]},\"/dev/sda1,/boot\":{\"device\":\"/dev/sda1\",\"kb_size\":\"487652\",\"kb_used\":\"55187\",\"kb_available\":\"406865\",\"percent_used\":\"12%\",\"mount\":\"/boot\",\"total_inodes\":\"128016\",\"inodes_used\":\"44\",\"inodes_available\":\"127972\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2\"},\"vagrant,/vagrant\":{\"device\":\"vagrant\",\"kb_size\":\"126343160\",\"kb_used\":\"72260704\",\"kb_available\":\"54082456\",\"percent_used\":\"58%\",\"mount\":\"/vagrant\",\"total_inodes\":\"1000\",\"inodes_used\":\"0\",\"inodes_available\":\"1000\",\"inodes_percent_used\":\"0%\",\"fs_type\":\"vboxsf\",\"mount_options\":[\"uid=500\",\"gid=500\",\"rw\"]},\"proc,/proc\":{\"device\":\"proc\",\"mount\":\"/proc\",\"fs_type\":\"proc\",\"mount_options\":[\"rw\"]},\"sysfs,/sys\":{\"device\":\"sysfs\",\"mount\":\"/sys\",\"fs_type\":\"sysfs\",\"mount_options\":[\"rw\"]},\"devpts,/dev/pts\":{\"device\":\"devpts\",\"mount\":\"/dev/pts\",\"fs_type\":\"devpts\",\"mount_options\":[\"rw\",\"gid=5\",\"mode=620\"]},\"none,/proc/sys/fs/binfmt_misc\":{\"device\":\"none\",\"mount\":\"/proc/sys/fs/binfmt_misc\",\"fs_type\":\"binfmt_misc\",\"mount_options\":[\"rw\"]},\"/dev/sda,\":{\"device\":\"/dev/sda\"},\"/dev/sda2,\":{\"device\":\"/dev/sda2\",\"fs_type\":\"LVM2_member\",\"uuid\":\"1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22\"},\"/dev/mapper/VolGroup-lv_swap,\":{\"device\":\"/dev/mapper/VolGroup-lv_swap\",\"fs_type\":\"swap\",\"uuid\":\"376d9de0-a04a-4c8e-90fd-7721b522b166\"},\"rootfs,/\":{\"device\":\"rootfs\",\"mount\":\"/\",\"fs_type\":\"rootfs\",\"mount_options\":[\"rw\"]},\"devtmpfs,/dev\":{\"device\":\"devtmpfs\",\"mount\":\"/dev\",\"fs_type\":\"devtmpfs\",\"mount_options\":[\"rw\",\"relatime\",\"size=950288k\",\"nr_inodes=237572\",\"mode=755\"]},\"/proc/bus/usb,/proc/bus/usb\":{\"device\":\"/proc/bus/usb\",\"mount\":\"/proc/bus/usb\",\"fs_type\":\"usbfs\",\"mount_options\":[\"rw\",\"relatime\"]}}},\"root_group\":\"root\",\"shells\":[\"/bin/sh\",\"/bin/bash\",\"/sbin/nologin\",\"/bin/dash\"],\"fips\":{\"kernel\":{\"enabled\":false}},\"block_device\":{\"ram0\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram1\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram2\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram3\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram4\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram5\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram6\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram7\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram8\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram9\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram10\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram11\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram12\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram13\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram14\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram15\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop0\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop1\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop2\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop3\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop4\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop5\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop6\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop7\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"sda\":{\"size\":\"40960000\",\"removable\":\"0\",\"model\":\"VBOX HARDDISK\",\"rev\":\"1.0\",\"state\":\"running\",\"timeout\":\"30\",\"vendor\":\"ATA\",\"queue_depth\":\"31\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"dm-0\":{\"size\":\"37371904\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"dm-1\":{\"size\":\"2555904\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"}},\"keys\":{\"ssh\":{\"host_dsa_public\":\"AAAAB3NzaC1kc3MAAACBAKzeNZCMEUlmzh1wSJ1LcwQeL/WPRkWkOJwbKUFCcXOFosotvF7c7G7qUMFd24dtmExmocUeIycLSKLNPTBwNjYacqJKhWfXPaAjKCKEa7V1WJQbjPipbuCNuryi+E9jKODG18+F4qcTjml4fARJe7vpEyOlG4n25gcdaUH8ebJ/AAAAFQCmDtC1oX0AOIvoWZLVY5jTfNpCYwAAAIBI5qVfKbJUN1CxOZ86KP8d+aougFct2hp8nl19T24lyrGxNeoQhP19pwr+MxwRGrxzHbV9rFVDTSDOnpkrdSCJYGMIM1ASmgCllI4Avr275Fzjr5NDFTku9m0I2n4zfEynmZ07Lpsmho8UECyZ0bOCayCjgm2EkWdtxoKGv9LW3QAAAIEAjzWy3LCo61SnIOALKd+xo0GCCsKnvPaofw3sX6PAMMlS1NMEd7jqdHv4/KsWWUmOPL1dpw+cuFTdHph3TpJRrR3u3gWBt8fXWO8QyNsNisD9OZHz39DLSqz8UKmwry8gC1zFZ6MuBC8LBWiDABOXEMXpFR5l0drNJE24tAzNAq4=\",\"host_rsa_public\":\"AAAAB3NzaC1yc2EAAAABIwAAAQEAoKGBorpanawyuJ4UK34f0WhnAZ7gBBKS4OHAsFA58ATUPQVpQNdkFSmHdGd+XZhN9cy9ERzEvyG/2Znt0749/v237I3ewkP6Dayvkp/okW6pWRdWrwcfiN2cSkpjE4qcsVa5w8ZH4gZt5HfLY97Qgfrib7npSKaxel768vP0MmLLCCN3xkEZt2uuONmvwzHfHUbkrIWVm+O6ZKmW8P7VZaioSIj6579I6vbkJdy3cpMUrGwNJd8uFH/LXIbb2qBuTgQjJL/rBBGtAM052txV37EiJy5/FdT/eanud+zvW2iIjRjQwFl8Ot+gVPLpCE/H5MLnNZrLw4Yfwlipte4TZQ==\"}},\"hostname\":\"chef-master\",\"machinename\":\"chef-master\",\"fqdn\":\"chef-master\",\"domain\":null,\"chef_packages\":{\"ohai\":{\"version\":\"8.19.1\",\"ohai_root\":\"/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai\"},\"chef\":{\"version\":\"12.13.37\",\"chef_root\":\"/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib\"}},\"uptime_seconds\":1291,\"uptime\":\"21 minutes 31 seconds\",\"idletime_seconds\":2226,\"idletime\":\"37 minutes 06 seconds\",\"packages\":{\"tar\":{\"epoch\":\"2\",\"version\":\"1.23\",\"release\":\"14.el6\",\"installdate\":\"1468189149\",\"arch\":\"x86_64\"},\"setup\":{\"epoch\":\"0\",\"version\":\"2.8.14\",\"release\":\"20.el6_4.1\",\"installdate\":\"1468188629\",\"arch\":\"noarch\"},\"libselinux-utils\":{\"epoch\":\"0\",\"version\":\"2.0.94\",\"release\":\"7.el6\",\"installdate\":\"1468189149\",\"arch\":\"x86_64\"},\"basesystem\":{\"epoch\":\"0\",\"version\":\"10.0\",\"release\":\"4.el6\",\"installdate\":\"1468188630\",\"arch\":\"noarch\"},\"gmp\":{\"epoch\":\"0\",\"version\":\"4.3.1\",\"release\":\"10.el6\",\"installdate\":\"1468189149\",\"arch\":\"x86_64\"},\"coreutils\":{\"epoch\":\"0\",\"version\":\"8.4\",\"release\":\"43.el6\",\"installdate\":\"1468189150\",\"arch\":\"x86_64\"},\"shadow-utils\":{\"epoch\":\"2\",\"version\":\"4.1.5.1\",\"release\":\"5.el6\",\"installdate\":\"1468189151\",\"arch\":\"x86_64\"},\"openssl\":{\"epoch\":\"0\",\"version\":\"1.0.1e\",\"release\":\"48.el6_8.1\",\"installdate\":\"1468189152\",\"arch\":\"x86_64\"},\"mysql-libs\":{\"epoch\":\"0\",\"version\":\"5.1.73\",\"release\":\"7.el6\",\"installdate\":\"1468189152\",\"arch\":\"x86_64\"},\"libcap\":{\"epoch\":\"0\",\"version\":\"2.16\",\"release\":\"5.5.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"iputils\":{\"epoch\":\"0\",\"version\":\"20071127\",\"release\":\"21.el6\",\"installdate\":\"1468189153\",\"arch\":\"x86_64\"},\"info\":{\"epoch\":\"0\",\"version\":\"4.13a\",\"release\":\"8.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"initscripts\":{\"epoch\":\"0\",\"version\":\"9.03.53\",\"release\":\"1.el6.centos\",\"installdate\":\"1468189153\",\"arch\":\"x86_64\"},\"device-mapper-libs\":{\"epoch\":\"0\",\"version\":\"1.02.117\",\"release\":\"7.el6\",\"installdate\":\"1468189154\",\"arch\":\"x86_64\"},\"libacl\":{\"epoch\":\"0\",\"version\":\"2.2.49\",\"release\":\"6.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"device-mapper-event-libs\":{\"epoch\":\"0\",\"version\":\"1.02.117\",\"release\":\"7.el6\",\"installdate\":\"1468189154\",\"arch\":\"x86_64\"},\"lvm2-libs\":{\"epoch\":\"0\",\"version\":\"2.02.143\",\"release\":\"7.el6\",\"installdate\":\"1468189154\",\"arch\":\"x86_64\"},\"device-mapper-multipath-libs\":{\"epoch\":\"0\",\"version\":\"0.4.9\",\"release\":\"93.el6\",\"installdate\":\"1468189154\",\"arch\":\"x86_64\"},\"sed\":{\"epoch\":\"0\",\"version\":\"4.2.1\",\"release\":\"10.el6\",\"installdate\":\"1468188644\",\"arch\":\"x86_64\"},\"dracut-kernel\":{\"epoch\":\"0\",\"version\":\"004\",\"release\":\"409.el6_8.2\",\"installdate\":\"1468189155\",\"arch\":\"noarch\"},\"sqlite\":{\"epoch\":\"0\",\"version\":\"3.6.20\",\"release\":\"1.el6_7.2\",\"installdate\":\"1468189155\",\"arch\":\"x86_64\"},\"bzip2-libs\":{\"epoch\":\"0\",\"version\":\"1.0.5\",\"release\":\"7.el6_0\",\"installdate\":\"1468188644\",\"arch\":\"x86_64\"},\"nss\":{\"epoch\":\"0\",\"version\":\"3.21.0\",\"release\":\"8.el6\",\"installdate\":\"1468189155\",\"arch\":\"x86_64\"},\"openssh\":{\"epoch\":\"0\",\"version\":\"5.3p1\",\"release\":\"118.1.el6_8\",\"installdate\":\"1468189156\",\"arch\":\"x86_64\"},\"libcurl\":{\"epoch\":\"0\",\"version\":\"7.19.7\",\"release\":\"52.el6\",\"installdate\":\"1468189156\",\"arch\":\"x86_64\"},\"libgpg-error\":{\"epoch\":\"0\",\"version\":\"1.7\",\"release\":\"4.el6\",\"installdate\":\"1468188645\",\"arch\":\"x86_64\"},\"curl\":{\"epoch\":\"0\",\"version\":\"7.19.7\",\"release\":\"52.el6\",\"installdate\":\"1468189156\",\"arch\":\"x86_64\"},\"openldap\":{\"epoch\":\"0\",\"version\":\"2.4.40\",\"release\":\"12.el6\",\"installdate\":\"1468189156\",\"arch\":\"x86_64\"},\"selinux-policy\":{\"epoch\":\"0\",\"version\":\"3.7.19\",\"release\":\"292.el6\",\"installdate\":\"1468189157\",\"arch\":\"noarch\"},\"cronie-anacron\":{\"epoch\":\"0\",\"version\":\"1.4.4\",\"release\":\"15.el6_7.1\",\"installdate\":\"1468189159\",\"arch\":\"x86_64\"},\"libidn\":{\"epoch\":\"0\",\"version\":\"1.18\",\"release\":\"2.el6\",\"installdate\":\"1468188645\",\"arch\":\"x86_64\"},\"libuser\":{\"epoch\":\"0\",\"version\":\"0.56.13\",\"release\":\"8.el6_7\",\"installdate\":\"1468189160\",\"arch\":\"x86_64\"},\"xz-libs\":{\"epoch\":\"0\",\"version\":\"4.999.9\",\"release\":\"0.5.beta.20091007git.el6\",\"installdate\":\"1468188645\",\"arch\":\"x86_64\"},\"python-pycurl\":{\"epoch\":\"0\",\"version\":\"7.19.0\",\"release\":\"9.el6\",\"installdate\":\"1468189160\",\"arch\":\"x86_64\"},\"yum-plugin-fastestmirror\":{\"epoch\":\"0\",\"version\":\"1.1.30\",\"release\":\"37.el6\",\"installdate\":\"1468189160\",\"arch\":\"noarch\"},\"bzip2\":{\"epoch\":\"0\",\"version\":\"1.0.5\",\"release\":\"7.el6_0\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"kernel-firmware\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"642.1.1.el6\",\"installdate\":\"1468189163\",\"arch\":\"noarch\"},\"fuse\":{\"epoch\":\"0\",\"version\":\"2.8.3\",\"release\":\"5.el6\",\"installdate\":\"1468189169\",\"arch\":\"x86_64\"},\"cpio\":{\"epoch\":\"0\",\"version\":\"2.10\",\"release\":\"12.el6_5\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"selinux-policy-targeted\":{\"epoch\":\"0\",\"version\":\"3.7.19\",\"release\":\"292.el6\",\"installdate\":\"1468189169\",\"arch\":\"noarch\"},\"openssh-server\":{\"epoch\":\"0\",\"version\":\"5.3p1\",\"release\":\"118.1.el6_8\",\"installdate\":\"1468189194\",\"arch\":\"x86_64\"},\"dhclient\":{\"epoch\":\"12\",\"version\":\"4.1.1\",\"release\":\"51.P1.el6.centos\",\"installdate\":\"1468189194\",\"arch\":\"x86_64\"},\"libtasn1\":{\"epoch\":\"0\",\"version\":\"2.3\",\"release\":\"6.el6_5\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"lvm2\":{\"epoch\":\"0\",\"version\":\"2.02.143\",\"release\":\"7.el6\",\"installdate\":\"1468189195\",\"arch\":\"x86_64\"},\"p11-kit-trust\":{\"epoch\":\"0\",\"version\":\"0.18.5\",\"release\":\"2.el6_5.2\",\"installdate\":\"1468188647\",\"arch\":\"x86_64\"},\"libdrm\":{\"epoch\":\"0\",\"version\":\"2.4.65\",\"release\":\"2.el6\",\"installdate\":\"1468189195\",\"arch\":\"x86_64\"},\"libnih\":{\"epoch\":\"0\",\"version\":\"1.0.1\",\"release\":\"7.el6\",\"installdate\":\"1468188647\",\"arch\":\"x86_64\"},\"grub\":{\"epoch\":\"1\",\"version\":\"0.97\",\"release\":\"94.el6_7.1\",\"installdate\":\"1468189196\",\"arch\":\"x86_64\"},\"logrotate\":{\"epoch\":\"0\",\"version\":\"3.7.8\",\"release\":\"26.el6_7\",\"installdate\":\"1468189196\",\"arch\":\"x86_64\"},\"libusb\":{\"epoch\":\"0\",\"version\":\"0.1.12\",\"release\":\"23.el6\",\"installdate\":\"1468188647\",\"arch\":\"x86_64\"},\"binutils\":{\"epoch\":\"0\",\"version\":\"2.20.51.0.2\",\"release\":\"5.44.el6\",\"installdate\":\"1468189197\",\"arch\":\"x86_64\"},\"libutempter\":{\"epoch\":\"0\",\"version\":\"1.1.5\",\"release\":\"4.1.el6\",\"installdate\":\"1468188648\",\"arch\":\"x86_64\"},\"libxml2\":{\"epoch\":\"0\",\"version\":\"2.7.6\",\"release\":\"21.el6_8.1\",\"installdate\":\"1468189197\",\"arch\":\"x86_64\"},\"psmisc\":{\"epoch\":\"0\",\"version\":\"22.6\",\"release\":\"19.el6_5\",\"installdate\":\"1468188648\",\"arch\":\"x86_64\"},\"perl-Error\":{\"epoch\":\"1\",\"version\":\"0.17015\",\"release\":\"4.el6\",\"installdate\":\"1473767001\",\"arch\":\"noarch\"},\"vim-minimal\":{\"epoch\":\"2\",\"version\":\"7.4.629\",\"release\":\"5.el6\",\"installdate\":\"1468188648\",\"arch\":\"x86_64\"},\"vim-filesystem\":{\"epoch\":\"2\",\"version\":\"7.4.629\",\"release\":\"5.el6\",\"installdate\":\"1473767001\",\"arch\":\"x86_64\"},\"rsync\":{\"epoch\":\"0\",\"version\":\"3.0.6\",\"release\":\"12.el6\",\"installdate\":\"1473767004\",\"arch\":\"x86_64\"},\"e2fsprogs-libs\":{\"epoch\":\"0\",\"version\":\"1.41.12\",\"release\":\"22.el6\",\"installdate\":\"1468188648\",\"arch\":\"x86_64\"},\"perl-Git\":{\"epoch\":\"0\",\"version\":\"1.7.1\",\"release\":\"4.el6_7.1\",\"installdate\":\"1473767005\",\"arch\":\"noarch\"},\"unzip\":{\"epoch\":\"0\",\"version\":\"6.0\",\"release\":\"4.el6\",\"installdate\":\"1473767006\",\"arch\":\"x86_64\"},\"diffutils\":{\"epoch\":\"0\",\"version\":\"2.8.1\",\"release\":\"28.el6\",\"installdate\":\"1468188649\",\"arch\":\"x86_64\"},\"chef\":{\"epoch\":\"0\",\"version\":\"12.13.37\",\"release\":\"1.el6\",\"installdate\":\"1473767055\",\"arch\":\"x86_64\"},\"dash\":{\"epoch\":\"0\",\"version\":\"0.5.5.1\",\"release\":\"4.el6\",\"installdate\":\"1468188649\",\"arch\":\"x86_64\"},\"groff\":{\"epoch\":\"0\",\"version\":\"1.18.1.4\",\"release\":\"21.el6\",\"installdate\":\"1468188650\",\"arch\":\"x86_64\"},\"cracklib\":{\"epoch\":\"0\",\"version\":\"2.8.16\",\"release\":\"4.el6\",\"installdate\":\"1468188650\",\"arch\":\"x86_64\"},\"module-init-tools\":{\"epoch\":\"0\",\"version\":\"3.9\",\"release\":\"25.el6\",\"installdate\":\"1468188653\",\"arch\":\"x86_64\"},\"redhat-logos\":{\"epoch\":\"0\",\"version\":\"60.0.14\",\"release\":\"12.el6.centos\",\"installdate\":\"1468188654\",\"arch\":\"noarch\"},\"libedit\":{\"epoch\":\"0\",\"version\":\"2.11\",\"release\":\"4.20080712cvs.1.el6\",\"installdate\":\"1468188656\",\"arch\":\"x86_64\"},\"mingetty\":{\"epoch\":\"0\",\"version\":\"1.08\",\"release\":\"5.el6\",\"installdate\":\"1468188656\",\"arch\":\"x86_64\"},\"gnupg2\":{\"epoch\":\"0\",\"version\":\"2.0.14\",\"release\":\"8.el6\",\"installdate\":\"1468188657\",\"arch\":\"x86_64\"},\"fipscheck-lib\":{\"epoch\":\"0\",\"version\":\"1.2.0\",\"release\":\"7.el6\",\"installdate\":\"1468188658\",\"arch\":\"x86_64\"},\"pciutils-libs\":{\"epoch\":\"0\",\"version\":\"3.1.10\",\"release\":\"4.el6\",\"installdate\":\"1468188658\",\"arch\":\"x86_64\"},\"libcap-ng\":{\"epoch\":\"0\",\"version\":\"0.6.4\",\"release\":\"3.el6_0.1\",\"installdate\":\"1468188658\",\"arch\":\"x86_64\"},\"python\":{\"epoch\":\"0\",\"version\":\"2.6.6\",\"release\":\"64.el6\",\"installdate\":\"1468188658\",\"arch\":\"x86_64\"},\"pygpgme\":{\"epoch\":\"0\",\"version\":\"0.1\",\"release\":\"18.20090824bzr68.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"python-iniparse\":{\"epoch\":\"0\",\"version\":\"0.3.1\",\"release\":\"2.1.el6\",\"installdate\":\"1468188667\",\"arch\":\"noarch\"},\"newt\":{\"epoch\":\"0\",\"version\":\"0.52.11\",\"release\":\"3.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"ustr\":{\"epoch\":\"0\",\"version\":\"1.0.4\",\"release\":\"9.1.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"libaio\":{\"epoch\":\"0\",\"version\":\"0.3.107\",\"release\":\"10.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"gamin\":{\"epoch\":\"0\",\"version\":\"0.1.10\",\"release\":\"9.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"shared-mime-info\":{\"epoch\":\"0\",\"version\":\"0.70\",\"release\":\"6.el6\",\"installdate\":\"1468188668\",\"arch\":\"x86_64\"},\"grubby\":{\"epoch\":\"0\",\"version\":\"7.0.15\",\"release\":\"7.el6\",\"installdate\":\"1468188669\",\"arch\":\"x86_64\"},\"dbus-glib\":{\"epoch\":\"0\",\"version\":\"0.86\",\"release\":\"6.el6\",\"installdate\":\"1468188670\",\"arch\":\"x86_64\"},\"iptables\":{\"epoch\":\"0\",\"version\":\"1.4.7\",\"release\":\"16.el6\",\"installdate\":\"1468188670\",\"arch\":\"x86_64\"},\"cryptsetup-luks-libs\":{\"epoch\":\"0\",\"version\":\"1.2.0\",\"release\":\"11.el6\",\"installdate\":\"1468188673\",\"arch\":\"x86_64\"},\"plymouth\":{\"epoch\":\"0\",\"version\":\"0.8.3\",\"release\":\"27.el6.centos.1\",\"installdate\":\"1468188673\",\"arch\":\"x86_64\"},\"cyrus-sasl\":{\"epoch\":\"0\",\"version\":\"2.1.23\",\"release\":\"15.el6_6.2\",\"installdate\":\"1468188674\",\"arch\":\"x86_64\"},\"crontabs\":{\"epoch\":\"0\",\"version\":\"1.10\",\"release\":\"33.el6\",\"installdate\":\"1468188677\",\"arch\":\"noarch\"},\"kbd\":{\"epoch\":\"0\",\"version\":\"1.15\",\"release\":\"11.el6\",\"installdate\":\"1468188679\",\"arch\":\"x86_64\"},\"system-config-firewall-base\":{\"epoch\":\"0\",\"version\":\"1.2.27\",\"release\":\"7.2.el6_6\",\"installdate\":\"1468188721\",\"arch\":\"noarch\"},\"cryptsetup-luks\":{\"epoch\":\"0\",\"version\":\"1.2.0\",\"release\":\"11.el6\",\"installdate\":\"1468188722\",\"arch\":\"x86_64\"},\"e2fsprogs\":{\"epoch\":\"0\",\"version\":\"1.41.12\",\"release\":\"22.el6\",\"installdate\":\"1468188726\",\"arch\":\"x86_64\"},\"acl\":{\"epoch\":\"0\",\"version\":\"2.2.49\",\"release\":\"6.el6\",\"installdate\":\"1468188726\",\"arch\":\"x86_64\"},\"bridge-utils\":{\"epoch\":\"0\",\"version\":\"1.2\",\"release\":\"10.el6\",\"installdate\":\"1468188726\",\"arch\":\"x86_64\"},\"epel-release\":{\"epoch\":\"0\",\"version\":\"6\",\"release\":\"8\",\"installdate\":\"1468188848\",\"arch\":\"noarch\"},\"libgcc\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"17.el6\",\"installdate\":\"1468188934\",\"arch\":\"x86_64\"},\"tzdata\":{\"epoch\":\"0\",\"version\":\"2016f\",\"release\":\"1.el6\",\"installdate\":\"1468188935\",\"arch\":\"noarch\"},\"glibc-common\":{\"epoch\":\"0\",\"version\":\"2.12\",\"release\":\"1.192.el6\",\"installdate\":\"1468188944\",\"arch\":\"x86_64\"},\"perl-libs\":{\"epoch\":\"4\",\"version\":\"5.10.1\",\"release\":\"141.el6_7.1\",\"installdate\":\"1468188948\",\"arch\":\"x86_64\"},\"perl-version\":{\"epoch\":\"3\",\"version\":\"0.77\",\"release\":\"141.el6_7.1\",\"installdate\":\"1468188949\",\"arch\":\"x86_64\"},\"perl\":{\"epoch\":\"4\",\"version\":\"5.10.1\",\"release\":\"141.el6_7.1\",\"installdate\":\"1468188951\",\"arch\":\"x86_64\"},\"mpfr\":{\"epoch\":\"0\",\"version\":\"2.4.1\",\"release\":\"6.el6\",\"installdate\":\"1468188952\",\"arch\":\"x86_64\"},\"libstdc++-devel\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"17.el6\",\"installdate\":\"1468188953\",\"arch\":\"x86_64\"},\"cloog-ppl\":{\"epoch\":\"0\",\"version\":\"0.15.7\",\"release\":\"1.2.el6\",\"installdate\":\"1468188954\",\"arch\":\"x86_64\"},\"glibc-devel\":{\"epoch\":\"0\",\"version\":\"2.12\",\"release\":\"1.192.el6\",\"installdate\":\"1468188954\",\"arch\":\"x86_64\"},\"gcc\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"17.el6\",\"installdate\":\"1468188955\",\"arch\":\"x86_64\"},\"wget\":{\"epoch\":\"0\",\"version\":\"1.12\",\"release\":\"8.el6\",\"installdate\":\"1468188956\",\"arch\":\"x86_64\"},\"bash\":{\"epoch\":\"0\",\"version\":\"4.1.2\",\"release\":\"40.el6\",\"installdate\":\"1468189144\",\"arch\":\"x86_64\"},\"chkconfig\":{\"epoch\":\"0\",\"version\":\"1.3.49.5\",\"release\":\"1.el6\",\"installdate\":\"1468189144\",\"arch\":\"x86_64\"},\"nspr\":{\"epoch\":\"0\",\"version\":\"4.11.0\",\"release\":\"1.el6\",\"installdate\":\"1468189144\",\"arch\":\"x86_64\"},\"db4\":{\"epoch\":\"0\",\"version\":\"4.7.25\",\"release\":\"20.el6_7\",\"installdate\":\"1468189144\",\"arch\":\"x86_64\"},\"glib2\":{\"epoch\":\"0\",\"version\":\"2.28.8\",\"release\":\"5.el6\",\"installdate\":\"1468189145\",\"arch\":\"x86_64\"},\"gawk\":{\"epoch\":\"0\",\"version\":\"3.1.7\",\"release\":\"10.el6_7.3\",\"installdate\":\"1468189146\",\"arch\":\"x86_64\"},\"file-libs\":{\"epoch\":\"0\",\"version\":\"5.04\",\"release\":\"30.el6\",\"installdate\":\"1468189146\",\"arch\":\"x86_64\"},\"libuuid\":{\"epoch\":\"0\",\"version\":\"2.17.2\",\"release\":\"12.24.el6\",\"installdate\":\"1468189146\",\"arch\":\"x86_64\"},\"findutils\":{\"epoch\":\"1\",\"version\":\"4.4.2\",\"release\":\"9.el6\",\"installdate\":\"1468189147\",\"arch\":\"x86_64\"},\"hwdata\":{\"epoch\":\"0\",\"version\":\"0.233\",\"release\":\"16.1.el6\",\"installdate\":\"1468189147\",\"arch\":\"noarch\"},\"libpciaccess\":{\"epoch\":\"0\",\"version\":\"0.13.4\",\"release\":\"1.el6\",\"installdate\":\"1468189148\",\"arch\":\"x86_64\"},\"db4-utils\":{\"epoch\":\"0\",\"version\":\"4.7.25\",\"release\":\"20.el6_7\",\"installdate\":\"1468189148\",\"arch\":\"x86_64\"},\"upstart\":{\"epoch\":\"0\",\"version\":\"0.6.5\",\"release\":\"16.el6\",\"installdate\":\"1468189148\",\"arch\":\"x86_64\"},\"procps\":{\"epoch\":\"0\",\"version\":\"3.2.8\",\"release\":\"36.el6\",\"installdate\":\"1468189149\",\"arch\":\"x86_64\"},\"filesystem\":{\"epoch\":\"0\",\"version\":\"2.4.30\",\"release\":\"3.el6\",\"installdate\":\"1468188630\",\"arch\":\"x86_64\"},\"device-mapper-persistent-data\":{\"epoch\":\"0\",\"version\":\"0.6.2\",\"release\":\"0.1.rc7.el6\",\"installdate\":\"1468189149\",\"arch\":\"x86_64\"},\"ncurses-base\":{\"epoch\":\"0\",\"version\":\"5.7\",\"release\":\"4.20090207.el6\",\"installdate\":\"1468188630\",\"arch\":\"x86_64\"},\"coreutils-libs\":{\"epoch\":\"0\",\"version\":\"8.4\",\"release\":\"43.el6\",\"installdate\":\"1468189149\",\"arch\":\"x86_64\"},\"pam\":{\"epoch\":\"0\",\"version\":\"1.1.1\",\"release\":\"22.el6\",\"installdate\":\"1468189150\",\"arch\":\"x86_64\"},\"ca-certificates\":{\"epoch\":\"0\",\"version\":\"2015.2.6\",\"release\":\"65.0.1.el6_7\",\"installdate\":\"1468189151\",\"arch\":\"noarch\"},\"ncurses-libs\":{\"epoch\":\"0\",\"version\":\"5.7\",\"release\":\"4.20090207.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"libssh2\":{\"epoch\":\"0\",\"version\":\"1.4.2\",\"release\":\"2.el6_7.1\",\"installdate\":\"1468189152\",\"arch\":\"x86_64\"},\"libattr\":{\"epoch\":\"0\",\"version\":\"2.4.44\",\"release\":\"7.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"centos-release\":{\"epoch\":\"0\",\"version\":\"6\",\"release\":\"8.el6.centos.12.3\",\"installdate\":\"1468189152\",\"arch\":\"x86_64\"},\"zlib\":{\"epoch\":\"0\",\"version\":\"1.2.3\",\"release\":\"29.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"util-linux-ng\":{\"epoch\":\"0\",\"version\":\"2.17.2\",\"release\":\"12.24.el6\",\"installdate\":\"1468189153\",\"arch\":\"x86_64\"},\"popt\":{\"epoch\":\"0\",\"version\":\"1.13\",\"release\":\"7.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"udev\":{\"epoch\":\"0\",\"version\":\"147\",\"release\":\"2.73.el6\",\"installdate\":\"1468189154\",\"arch\":\"x86_64\"},\"libcom_err\":{\"epoch\":\"0\",\"version\":\"1.41.12\",\"release\":\"22.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"device-mapper\":{\"epoch\":\"0\",\"version\":\"1.02.117\",\"release\":\"7.el6\",\"installdate\":\"1468189154\",\"arch\":\"x86_64\"},\"device-mapper-event\":{\"epoch\":\"0\",\"version\":\"1.02.117\",\"release\":\"7.el6\",\"installdate\":\"1468189154\",\"arch\":\"x86_64\"},\"libsepol\":{\"epoch\":\"0\",\"version\":\"2.0.41\",\"release\":\"4.el6\",\"installdate\":\"1468188643\",\"arch\":\"x86_64\"},\"kpartx\":{\"epoch\":\"0\",\"version\":\"0.4.9\",\"release\":\"93.el6\",\"installdate\":\"1468189154\",\"arch\":\"x86_64\"},\"dracut\":{\"epoch\":\"0\",\"version\":\"004\",\"release\":\"409.el6_8.2\",\"installdate\":\"1468189154\",\"arch\":\"noarch\"},\"dhcp-common\":{\"epoch\":\"12\",\"version\":\"4.1.1\",\"release\":\"51.P1.el6.centos\",\"installdate\":\"1468189155\",\"arch\":\"x86_64\"},\"readline\":{\"epoch\":\"0\",\"version\":\"6.0\",\"release\":\"4.el6\",\"installdate\":\"1468188644\",\"arch\":\"x86_64\"},\"nss-softokn\":{\"epoch\":\"0\",\"version\":\"3.14.3\",\"release\":\"23.el6_7\",\"installdate\":\"1468189155\",\"arch\":\"x86_64\"},\"nss-sysinit\":{\"epoch\":\"0\",\"version\":\"3.21.0\",\"release\":\"8.el6\",\"installdate\":\"1468189156\",\"arch\":\"x86_64\"},\"nss-tools\":{\"epoch\":\"0\",\"version\":\"3.21.0\",\"release\":\"8.el6\",\"installdate\":\"1468189156\",\"arch\":\"x86_64\"},\"rpm-libs\":{\"epoch\":\"0\",\"version\":\"4.8.0\",\"release\":\"55.el6\",\"installdate\":\"1468189156\",\"arch\":\"x86_64\"},\"dbus-libs\":{\"epoch\":\"1\",\"version\":\"1.2.24\",\"release\":\"8.el6_6\",\"installdate\":\"1468188645\",\"arch\":\"x86_64\"},\"rpm\":{\"epoch\":\"0\",\"version\":\"4.8.0\",\"release\":\"55.el6\",\"installdate\":\"1468189156\",\"arch\":\"x86_64\"},\"pcre\":{\"epoch\":\"0\",\"version\":\"7.8\",\"release\":\"7.el6\",\"installdate\":\"1468188645\",\"arch\":\"x86_64\"},\"policycoreutils\":{\"epoch\":\"0\",\"version\":\"2.0.83\",\"release\":\"29.el6\",\"installdate\":\"1468189157\",\"arch\":\"x86_64\"},\"lua\":{\"epoch\":\"0\",\"version\":\"5.1.4\",\"release\":\"4.1.el6\",\"installdate\":\"1468188645\",\"arch\":\"x86_64\"},\"postfix\":{\"epoch\":\"2\",\"version\":\"2.6.6\",\"release\":\"6.el6_7.1\",\"installdate\":\"1468189158\",\"arch\":\"x86_64\"},\"cyrus-sasl-lib\":{\"epoch\":\"0\",\"version\":\"2.1.23\",\"release\":\"15.el6_6.2\",\"installdate\":\"1468188645\",\"arch\":\"x86_64\"},\"cronie\":{\"epoch\":\"0\",\"version\":\"1.4.4\",\"release\":\"15.el6_7.1\",\"installdate\":\"1468189159\",\"arch\":\"x86_64\"},\"expat\":{\"epoch\":\"0\",\"version\":\"2.0.1\",\"release\":\"11.el6_2\",\"installdate\":\"1468188645\",\"arch\":\"x86_64\"},\"rpm-python\":{\"epoch\":\"0\",\"version\":\"4.8.0\",\"release\":\"55.el6\",\"installdate\":\"1468189160\",\"arch\":\"x86_64\"},\"python-urlgrabber\":{\"epoch\":\"0\",\"version\":\"3.9.1\",\"release\":\"11.el6\",\"installdate\":\"1468189160\",\"arch\":\"noarch\"},\"libgcrypt\":{\"epoch\":\"0\",\"version\":\"1.4.5\",\"release\":\"11.el6_4\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"yum\":{\"epoch\":\"0\",\"version\":\"3.2.29\",\"release\":\"73.el6.centos\",\"installdate\":\"1468189160\",\"arch\":\"noarch\"},\"kernel\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"573.el6\",\"installdate\":\"1468188685\",\"arch\":\"x86_64\"},\"checkpolicy\":{\"epoch\":\"0\",\"version\":\"2.0.22\",\"release\":\"1.el6\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"passwd\":{\"epoch\":\"0\",\"version\":\"0.77\",\"release\":\"7.el6\",\"installdate\":\"1468189169\",\"arch\":\"x86_64\"},\"which\":{\"epoch\":\"0\",\"version\":\"2.19\",\"release\":\"6.el6\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"sudo\":{\"epoch\":\"0\",\"version\":\"1.8.6p3\",\"release\":\"24.el6\",\"installdate\":\"1468189193\",\"arch\":\"x86_64\"},\"pth\":{\"epoch\":\"0\",\"version\":\"2.0.7\",\"release\":\"9.3.el6\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"openssh-clients\":{\"epoch\":\"0\",\"version\":\"5.3p1\",\"release\":\"118.1.el6_8\",\"installdate\":\"1468189194\",\"arch\":\"x86_64\"},\"sysvinit-tools\":{\"epoch\":\"0\",\"version\":\"2.87\",\"release\":\"6.dsf.el6\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"device-mapper-multipath\":{\"epoch\":\"0\",\"version\":\"0.4.9\",\"release\":\"93.el6\",\"installdate\":\"1468189194\",\"arch\":\"x86_64\"},\"p11-kit\":{\"epoch\":\"0\",\"version\":\"0.18.5\",\"release\":\"2.el6_5.2\",\"installdate\":\"1468188646\",\"arch\":\"x86_64\"},\"mdadm\":{\"epoch\":\"0\",\"version\":\"3.3.4\",\"release\":\"1.el6\",\"installdate\":\"1468189195\",\"arch\":\"x86_64\"},\"iscsi-initiator-utils\":{\"epoch\":\"0\",\"version\":\"6.2.0.873\",\"release\":\"21.el6\",\"installdate\":\"1468189195\",\"arch\":\"x86_64\"},\"audit\":{\"epoch\":\"0\",\"version\":\"2.4.5\",\"release\":\"3.el6\",\"installdate\":\"1468189196\",\"arch\":\"x86_64\"},\"xfsprogs\":{\"epoch\":\"0\",\"version\":\"3.1.1\",\"release\":\"19.el6\",\"installdate\":\"1468189196\",\"arch\":\"x86_64\"},\"MAKEDEV\":{\"epoch\":\"0\",\"version\":\"3.24\",\"release\":\"6.el6\",\"installdate\":\"1468188648\",\"arch\":\"x86_64\"},\"gdbm\":{\"epoch\":\"0\",\"version\":\"1.8.0\",\"release\":\"39.el6\",\"installdate\":\"1468189197\",\"arch\":\"x86_64\"},\"pinentry\":{\"epoch\":\"0\",\"version\":\"0.7.6\",\"release\":\"8.el6\",\"installdate\":\"1468188648\",\"arch\":\"x86_64\"},\"kernel-devel\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"642.1.1.el6\",\"installdate\":\"1473766767\",\"arch\":\"x86_64\"},\"net-tools\":{\"epoch\":\"0\",\"version\":\"1.60\",\"release\":\"110.el6_2\",\"installdate\":\"1468188648\",\"arch\":\"x86_64\"},\"gpm-libs\":{\"epoch\":\"0\",\"version\":\"1.20.6\",\"release\":\"12.el6\",\"installdate\":\"1473767001\",\"arch\":\"x86_64\"},\"vim-common\":{\"epoch\":\"2\",\"version\":\"7.4.629\",\"release\":\"5.el6\",\"installdate\":\"1473767003\",\"arch\":\"x86_64\"},\"git\":{\"epoch\":\"0\",\"version\":\"1.7.1\",\"release\":\"4.el6_7.1\",\"installdate\":\"1473767005\",\"arch\":\"x86_64\"},\"libss\":{\"epoch\":\"0\",\"version\":\"1.41.12\",\"release\":\"22.el6\",\"installdate\":\"1468188648\",\"arch\":\"x86_64\"},\"vim-enhanced\":{\"epoch\":\"2\",\"version\":\"7.4.629\",\"release\":\"5.el6\",\"installdate\":\"1473767006\",\"arch\":\"x86_64\"},\"m4\":{\"epoch\":\"0\",\"version\":\"1.4.13\",\"release\":\"5.el6\",\"installdate\":\"1468188649\",\"arch\":\"x86_64\"},\"chefdk\":{\"epoch\":\"0\",\"version\":\"0.17.17\",\"release\":\"1.el6\",\"installdate\":\"1473767038\",\"arch\":\"x86_64\"},\"ncurses\":{\"epoch\":\"0\",\"version\":\"5.7\",\"release\":\"4.20090207.el6\",\"installdate\":\"1468188649\",\"arch\":\"x86_64\"},\"less\":{\"epoch\":\"0\",\"version\":\"436\",\"release\":\"13.el6\",\"installdate\":\"1468188650\",\"arch\":\"x86_64\"},\"gzip\":{\"epoch\":\"0\",\"version\":\"1.3.12\",\"release\":\"22.el6\",\"installdate\":\"1468188650\",\"arch\":\"x86_64\"},\"cracklib-dicts\":{\"epoch\":\"0\",\"version\":\"2.8.16\",\"release\":\"4.el6\",\"installdate\":\"1468188651\",\"arch\":\"x86_64\"},\"plymouth-scripts\":{\"epoch\":\"0\",\"version\":\"0.8.3\",\"release\":\"27.el6.centos.1\",\"installdate\":\"1468188654\",\"arch\":\"x86_64\"},\"keyutils-libs\":{\"epoch\":\"0\",\"version\":\"1.4\",\"release\":\"5.el6\",\"installdate\":\"1468188656\",\"arch\":\"x86_64\"},\"gpgme\":{\"epoch\":\"0\",\"version\":\"1.1.8\",\"release\":\"3.el6\",\"installdate\":\"1468188657\",\"arch\":\"x86_64\"},\"fipscheck\":{\"epoch\":\"0\",\"version\":\"1.2.0\",\"release\":\"7.el6\",\"installdate\":\"1468188658\",\"arch\":\"x86_64\"},\"ethtool\":{\"epoch\":\"2\",\"version\":\"3.5\",\"release\":\"6.el6\",\"installdate\":\"1468188658\",\"arch\":\"x86_64\"},\"plymouth-core-libs\":{\"epoch\":\"0\",\"version\":\"0.8.3\",\"release\":\"27.el6.centos.1\",\"installdate\":\"1468188658\",\"arch\":\"x86_64\"},\"libffi\":{\"epoch\":\"0\",\"version\":\"3.0.5\",\"release\":\"3.2.el6\",\"installdate\":\"1468188658\",\"arch\":\"x86_64\"},\"python-libs\":{\"epoch\":\"0\",\"version\":\"2.6.6\",\"release\":\"64.el6\",\"installdate\":\"1468188666\",\"arch\":\"x86_64\"},\"slang\":{\"epoch\":\"0\",\"version\":\"2.2.1\",\"release\":\"1.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"newt-python\":{\"epoch\":\"0\",\"version\":\"0.52.11\",\"release\":\"3.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"libsemanage\":{\"epoch\":\"0\",\"version\":\"2.0.43\",\"release\":\"5.1.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"pkgconfig\":{\"epoch\":\"1\",\"version\":\"0.23\",\"release\":\"9.1.el6\",\"installdate\":\"1468188667\",\"arch\":\"x86_64\"},\"yum-metadata-parser\":{\"epoch\":\"0\",\"version\":\"1.1.2\",\"release\":\"16.el6\",\"installdate\":\"1468188669\",\"arch\":\"x86_64\"},\"rsyslog\":{\"epoch\":\"0\",\"version\":\"5.8.10\",\"release\":\"10.el6_6\",\"installdate\":\"1468188674\",\"arch\":\"x86_64\"},\"iptables-ipv6\":{\"epoch\":\"0\",\"version\":\"1.4.7\",\"release\":\"16.el6\",\"installdate\":\"1468188677\",\"arch\":\"x86_64\"},\"kbd-misc\":{\"epoch\":\"0\",\"version\":\"1.15\",\"release\":\"11.el6\",\"installdate\":\"1468188679\",\"arch\":\"noarch\"},\"b43-openfwwf\":{\"epoch\":\"0\",\"version\":\"5.2\",\"release\":\"10.el6\",\"installdate\":\"1468188724\",\"arch\":\"noarch\"},\"authconfig\":{\"epoch\":\"0\",\"version\":\"6.1.12\",\"release\":\"23.el6\",\"installdate\":\"1468188724\",\"arch\":\"x86_64\"},\"efibootmgr\":{\"epoch\":\"0\",\"version\":\"0.5.4\",\"release\":\"13.el6\",\"installdate\":\"1468188725\",\"arch\":\"x86_64\"},\"attr\":{\"epoch\":\"0\",\"version\":\"2.4.44\",\"release\":\"7.el6\",\"installdate\":\"1468188726\",\"arch\":\"x86_64\"},\"rootfiles\":{\"epoch\":\"0\",\"version\":\"8.1\",\"release\":\"6.1.el6\",\"installdate\":\"1468188726\",\"arch\":\"noarch\"},\"gpg-pubkey\":{\"epoch\":\"0\",\"version\":\"c105b9de\",\"release\":\"4e0fd3a3\",\"installdate\":\"1468188902\",\"arch\":\"(none)\"},\"kernel-headers\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"642.1.1.el6\",\"installdate\":\"1468188934\",\"arch\":\"x86_64\"},\"glibc\":{\"epoch\":\"0\",\"version\":\"2.12\",\"release\":\"1.192.el6\",\"installdate\":\"1468188936\",\"arch\":\"x86_64\"},\"perl-Pod-Escapes\":{\"epoch\":\"1\",\"version\":\"1.04\",\"release\":\"141.el6_7.1\",\"installdate\":\"1468188947\",\"arch\":\"x86_64\"},\"perl-Pod-Simple\":{\"epoch\":\"1\",\"version\":\"3.13\",\"release\":\"141.el6_7.1\",\"installdate\":\"1468188949\",\"arch\":\"x86_64\"},\"perl-Module-Pluggable\":{\"epoch\":\"1\",\"version\":\"3.90\",\"release\":\"141.el6_7.1\",\"installdate\":\"1468188949\",\"arch\":\"x86_64\"},\"libstdc++\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"17.el6\",\"installdate\":\"1468188952\",\"arch\":\"x86_64\"},\"cpp\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"17.el6\",\"installdate\":\"1468188953\",\"arch\":\"x86_64\"},\"ppl\":{\"epoch\":\"0\",\"version\":\"0.10.2\",\"release\":\"11.el6\",\"installdate\":\"1468188954\",\"arch\":\"x86_64\"},\"glibc-headers\":{\"epoch\":\"0\",\"version\":\"2.12\",\"release\":\"1.192.el6\",\"installdate\":\"1468188954\",\"arch\":\"x86_64\"},\"libgomp\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"17.el6\",\"installdate\":\"1468188954\",\"arch\":\"x86_64\"},\"gcc-c++\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"17.el6\",\"installdate\":\"1468188956\",\"arch\":\"x86_64\"},\"make\":{\"epoch\":\"1\",\"version\":\"3.81\",\"release\":\"23.el6\",\"installdate\":\"1468188956\",\"arch\":\"x86_64\"},\"libselinux\":{\"epoch\":\"0\",\"version\":\"2.0.94\",\"release\":\"7.el6\",\"installdate\":\"1468189144\",\"arch\":\"x86_64\"},\"audit-libs\":{\"epoch\":\"0\",\"version\":\"2.4.5\",\"release\":\"3.el6\",\"installdate\":\"1468189144\",\"arch\":\"x86_64\"},\"nss-util\":{\"epoch\":\"0\",\"version\":\"3.21.0\",\"release\":\"2.el6\",\"installdate\":\"1468189144\",\"arch\":\"x86_64\"},\"krb5-libs\":{\"epoch\":\"0\",\"version\":\"1.10.3\",\"release\":\"57.el6\",\"installdate\":\"1468189145\",\"arch\":\"x86_64\"},\"grep\":{\"epoch\":\"0\",\"version\":\"2.20\",\"release\":\"3.el6_7.1\",\"installdate\":\"1468189146\",\"arch\":\"x86_64\"},\"libudev\":{\"epoch\":\"0\",\"version\":\"147\",\"release\":\"2.73.el6\",\"installdate\":\"1468189146\",\"arch\":\"x86_64\"},\"elfutils-libelf\":{\"epoch\":\"0\",\"version\":\"0.164\",\"release\":\"2.el6\",\"installdate\":\"1468189146\",\"arch\":\"x86_64\"},\"libblkid\":{\"epoch\":\"0\",\"version\":\"2.17.2\",\"release\":\"12.24.el6\",\"installdate\":\"1468189146\",\"arch\":\"x86_64\"},\"nss-softokn-freebl\":{\"epoch\":\"0\",\"version\":\"3.14.3\",\"release\":\"23.el6_7\",\"installdate\":\"1468189147\",\"arch\":\"x86_64\"},\"tcp_wrappers-libs\":{\"epoch\":\"0\",\"version\":\"7.6\",\"release\":\"58.el6\",\"installdate\":\"1468189147\",\"arch\":\"x86_64\"},\"file\":{\"epoch\":\"0\",\"version\":\"5.04\",\"release\":\"30.el6\",\"installdate\":\"1468189148\",\"arch\":\"x86_64\"},\"iproute\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"54.el6\",\"installdate\":\"1468189148\",\"arch\":\"x86_64\"}},\"virtualbox\":{\"host\":{\"language\":\"en_US\",\"revision\":\"108956\",\"version\":\"5.1.2\"},\"guest\":{}},\"time\":{\"timezone\":\"BST\"},\"recipes\":[\"nginx::default\",\"iptables::default\",\"nginx::package\",\"nginx::ohai_plugin\",\"ohai::default\",\"yum-epel::default\",\"nginx::commons\",\"nginx::commons_dir\",\"nginx::commons_script\",\"nginx::commons_conf\",\"iptables::_package\"],\"expanded_run_list\":[\"nginx::default\",\"iptables::default\"],\"roles\":[],\"cookbooks\":{\"nginx\":{\"version\":\"2.7.6\"},\"iptables\":{\"version\":\"2.2.0\"},\"apt\":{\"version\":\"2.9.2\"},\"bluepill\":{\"version\":\"2.4.3\"},\"build-essential\":{\"version\":\"2.4.0\"},\"ohai\":{\"version\":\"2.1.0\"},\"runit\":{\"version\":\"1.8.0\"},\"yum-epel\":{\"version\":\"0.7.1\"},\"rsyslog\":{\"version\":\"4.0.1\"},\"7-zip\":{\"version\":\"1.0.2\"},\"packagecloud\":{\"version\":\"0.2.5\"},\"yum\":{\"version\":\"4.0.0\"},\"compat_resource\":{\"version\":\"12.14.3\"},\"windows\":{\"version\":\"2.0.2\"}},\"nginx\":{\"version\":\"1.10.1\",\"configure_arguments\":[\"--prefix=/usr/share/nginx\",\"--sbin-path=/usr/sbin/nginx\",\"--modules-path=/usr/lib64/nginx/modules\",\"--conf-path=/etc/nginx/nginx.conf\",\"--error-log-path=/var/log/nginx/error.log\",\"--http-log-path=/var/log/nginx/access.log\",\"--http-client-body-temp-path=/var/lib/nginx/tmp/client_body\",\"--http-proxy-temp-path=/var/lib/nginx/tmp/proxy\",\"--http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi\",\"--http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi\",\"--http-scgi-temp-path=/var/lib/nginx/tmp/scgi\",\"--pid-path=/var/run/nginx.pid\",\"--lock-path=/var/lock/subsys/nginx\",\"--user=nginx\",\"--group=nginx\",\"--with-file-aio\",\"--with-ipv6\",\"--with-http_ssl_module\",\"--with-http_v2_module\",\"--with-http_realip_module\",\"--with-http_addition_module\",\"--with-http_xslt_module=dynamic\",\"--with-http_image_filter_module=dynamic\",\"--with-http_geoip_module=dynamic\",\"--with-http_sub_module\",\"--with-http_dav_module\",\"--with-http_flv_module\",\"--with-http_mp4_module\",\"--with-http_gunzip_module\",\"--with-http_gzip_static_module\",\"--with-http_random_index_module\",\"--with-http_secure_link_module\",\"--with-http_degradation_module\",\"--with-http_slice_module\",\"--with-http_stub_status_module\",\"--with-http_perl_module=dynamic\",\"--with-mail=dynamic\",\"--with-mail_ssl_module\",\"--with-pcre\",\"--with-pcre-jit\",\"--with-stream=dynamic\",\"--with-stream_ssl_module\",\"--with-debug\",\"--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector\",\"--param=ssp-buffer-size=4 -m64 -mtune=generic'\",\"--with-ld-opt=' -Wl,-E'\"],\"prefix\":\"/usr/share/nginx\",\"conf_path\":\"/etc/nginx/nginx.conf\"}},\"normal\":{\"nginx\":{\"default_root\":\"/usr/share/nginx/html\"},\"tags\":[]},\"chef_type\":\"node\",\"default\":{\"apt\":{\"cacher-client\":{\"restrict_environment\":false},\"cacher_dir\":\"/var/cache/apt-cacher-ng\",\"cacher_interface\":null,\"cacher_port\":3142,\"cacher_ssl_support\":false,\"caching_server\":false,\"compiletime\":false,\"compile_time_update\":false,\"key_proxy\":\"\",\"cache_bypass\":{},\"periodic_update_min_delay\":86400,\"launchpad_api_version\":\"1.0\",\"unattended_upgrades\":{\"enable\":false,\"update_package_lists\":true,\"allowed_origins\":[\"Centos \"],\"package_blacklist\":[],\"auto_fix_interrupted_dpkg\":false,\"minimal_steps\":false,\"install_on_shutdown\":false,\"mail\":null,\"mail_only_on_error\":true,\"remove_unused_dependencies\":false,\"automatic_reboot\":false,\"automatic_reboot_time\":\"now\",\"dl_limit\":null},\"confd\":{\"install_recommends\":true,\"install_suggests\":false}},\"rsyslog\":{\"local_host_name\":null,\"default_log_dir\":\"/var/log\",\"log_dir\":\"/srv/rsyslog\",\"working_dir\":\"/var/lib/rsyslog\",\"server\":false,\"use_relp\":false,\"relp_port\":20514,\"protocol\":\"tcp\",\"bind\":\"*\",\"port\":514,\"server_ip\":null,\"server_search\":\"role:loghost\",\"remote_logs\":true,\"per_host_dir\":\"%$YEAR%/%$MONTH%/%$DAY%/%HOSTNAME%\",\"max_message_size\":\"2k\",\"preserve_fqdn\":\"off\",\"high_precision_timestamps\":false,\"repeated_msg_reduction\":\"on\",\"logs_to_forward\":\"*.*\",\"enable_imklog\":true,\"config_prefix\":\"/etc\",\"default_file_template\":null,\"default_remote_template\":null,\"rate_limit_interval\":null,\"rate_limit_burst\":null,\"enable_tls\":false,\"action_queue_max_disk_space\":\"1G\",\"tls_ca_file\":null,\"tls_certificate_file\":null,\"tls_key_file\":null,\"tls_auth_mode\":\"anon\",\"tls_permitted_peer\":null,\"use_local_ipv4\":false,\"allow_non_local\":false,\"custom_remote\":[{}],\"additional_directives\":{},\"service_name\":\"rsyslog\",\"user\":\"root\",\"group\":\"adm\",\"priv_seperation\":false,\"priv_user\":null,\"priv_group\":null,\"modules\":[\"imuxsock\",\"imklog\"],\"default_facility_logs\":{\"*.info;mail.none;authpriv.none;cron.none\":\"/var/log/messages\",\"authpriv.*\":\"/var/log/secure\",\"mail.*\":\"-/var/log/maillog\",\"cron.*\":\"/var/log/cron\",\"*.emerg\":\":omusrmsg:*\",\"uucp,news.crit\":\"/var/log/spooler\",\"local7.*\":\"/var/log/boot.log\"}},\"bluepill\":{\"bin\":\"/opt/chef/embedded/bin/bluepill\",\"logfile\":\"/var/log/bluepill.log\",\"pid_dir\":\"/var/run/bluepill\",\"state_dir\":\"/var/lib/bluepill\",\"group\":0,\"use_rsyslog\":false,\"init_dir\":\"/etc/init.d\",\"conf_dir\":\"/etc/bluepill\",\"defaults_dir\":\"/etc/sysconfig\"},\"windows\":{\"rubyzipversion\":null},\"7-zip\":{\"url\":\"http://downloads.sourceforge.net/sevenzip/7z922-x64.msi\",\"checksum\":\"f09bf515289eea45185a4cc673e3bbc18ce608c55b4cf96e77833435c9cdf3dc\",\"package_name\":\"7-Zip 9.22 (x64 edition)\",\"home\":\"\\\\7-zip\"},\"build-essential\":{\"compile_time\":false,\"msys\":{\"path\":\"\\\\msys\"}},\"ohai\":{\"plugin_path\":\"/etc/chef/ohai_plugins\",\"hints_path\":\"/etc/chef/ohai/hints\",\"plugins\":{\"ohai\":\"plugins\"}},\"packagecloud\":{\"base_repo_path\":\"/install/repositories/\",\"gpg_key_path\":\"/gpgkey\",\"hostname_override\":null,\"proxy_host\":null,\"proxy_port\":null,\"default_type\":\"rpm\"},\"yum\":{\"main\":{\"cachedir\":\"/var/cache/yum/$basearch/$releasever\",\"distroverpkg\":\"centos-release\",\"releasever\":null,\"alwaysprompt\":null,\"assumeyes\":null,\"bandwidth\":null,\"bugtracker_url\":null,\"clean_requirements_on_remove\":null,\"color\":null,\"color_list_available_downgrade\":null,\"color_list_available_install\":null,\"color_list_available_reinstall\":null,\"color_list_available_upgrade\":null,\"color_list_installed_extra\":null,\"color_list_installed_newer\":null,\"color_list_installed_older\":null,\"color_list_installed_reinstall\":null,\"color_search_match\":null,\"color_update_installed\":null,\"color_update_local\":null,\"color_update_remote\":null,\"commands\":null,\"deltarpm\":null,\"debuglevel\":null,\"diskspacecheck\":null,\"enable_group_conditionals\":null,\"errorlevel\":null,\"exactarch\":null,\"exclude\":null,\"gpgcheck\":true,\"group_package_types\":null,\"groupremove_leaf_only\":null,\"history_list_view\":null,\"history_record\":null,\"history_record_packages\":null,\"http_caching\":null,\"installonly_limit\":null,\"installonlypkgs\":null,\"installroot\":null,\"keepalive\":null,\"keepcache\":false,\"kernelpkgnames\":null,\"localpkg_gpgcheck\":false,\"logfile\":\"/var/log/yum.log\",\"max_retries\":null,\"mdpolicy\":null,\"metadata_expire\":null,\"mirrorlist_expire\":null,\"multilib_policy\":null,\"obsoletes\":null,\"overwrite_groups\":null,\"password\":null,\"path\":\"/etc/yum.conf\",\"persistdir\":null,\"pluginconfpath\":null,\"pluginpath\":null,\"plugins\":null,\"protected_multilib\":null,\"protected_packages\":null,\"proxy\":null,\"proxy_password\":null,\"proxy_username\":null,\"recent\":null,\"repo_gpgcheck\":null,\"reposdir\":null,\"reset_nice\":null,\"rpmverbosity\":null,\"showdupesfromrepos\":null,\"skip_broken\":null,\"ssl_check_cert_permissions\":null,\"sslcacert\":null,\"sslclientcert\":null,\"sslclientkey\":null,\"sslverify\":null,\"syslog_device\":null,\"syslog_facility\":null,\"syslog_ident\":null,\"throttle\":null,\"timeout\":null,\"tolerant\":false,\"tsflags\":null,\"username\":null},\"epel-debuginfo\":{\"repositoryid\":\"epel-debuginfo\",\"description\":\"Extra Packages for $releasever - $basearch - Debug\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel-source\":{\"repositoryid\":\"epel-source\",\"description\":\"Extra Packages for $releasever - $basearch - Source\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel-testing-debuginfo\":{\"repositoryid\":\"epel-testing-debuginfo\",\"description\":\"Extra Packages for $releasever - $basearch - Testing Debug\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel-testing-source\":{\"repositoryid\":\"epel-testing-source\",\"description\":\"Extra Packages for $releasever - $basearch - Testing Source\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel-testing\":{\"repositoryid\":\"epel-testing\",\"description\":\"Extra Packages for $releasever - $basearch - Testing \",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel\":{\"repositoryid\":\"epel\",\"description\":\"Extra Packages for $releasever - $basearch\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":true,\"managed\":true,\"make_cache\":true}},\"yum-epel\":{\"repositories\":[\"epel\",\"epel-debuginfo\",\"epel-source\",\"epel-testing\",\"epel-testing-debuginfo\",\"epel-testing-source\"]},\"runit\":{\"sv_bin\":\"/sbin/sv\",\"chpst_bin\":\"/sbin/chpst\",\"service_dir\":\"/etc/service\",\"sv_dir\":\"/etc/sv\",\"lsb_init_dir\":\"/etc/init.d\",\"executable\":\"/sbin/runit\",\"prefer_local_yum\":false,\"start\":\"/etc/init.d/runit-start start\",\"stop\":\"/etc/init.d/runit-start stop\",\"reload\":\"/etc/init.d/runit-start reload\"},\"nginx\":{\"version\":\"1.6.2\",\"package_name\":\"nginx\",\"port\":\"80\",\"dir\":\"/etc/nginx\",\"script_dir\":\"/usr/sbin\",\"log_dir\":\"/var/log/nginx\",\"log_dir_perm\":\"0750\",\"binary\":\"/usr/sbin/nginx\",\"default_root\":\"/var/www/nginx-default\",\"ulimit\":\"1024\",\"pid\":\"/var/run/nginx.pid\",\"user\":\"nginx\",\"init_style\":\"init\",\"repo_source\":\"epel\",\"upstart\":{\"runlevels\":\"2345\",\"respawn_limit\":null,\"foreground\":true},\"group\":\"nginx\",\"gzip\":\"on\",\"gzip_static\":\"off\",\"gzip_http_version\":\"1.0\",\"gzip_comp_level\":\"2\",\"gzip_proxied\":\"any\",\"gzip_vary\":\"off\",\"gzip_buffers\":null,\"gzip_types\":[\"text/plain\",\"text/css\",\"application/x-javascript\",\"text/xml\",\"application/xml\",\"application/rss+xml\",\"application/atom+xml\",\"text/javascript\",\"application/javascript\",\"application/json\",\"text/mathml\"],\"gzip_min_length\":1000,\"gzip_disable\":\"MSIE [1-6]\\\\.\",\"keepalive\":\"on\",\"keepalive_requests\":100,\"keepalive_timeout\":65,\"worker_processes\":2,\"worker_connections\":1024,\"worker_rlimit_nofile\":null,\"multi_accept\":false,\"event\":null,\"accept_mutex_delay\":null,\"server_tokens\":null,\"server_names_hash_bucket_size\":64,\"variables_hash_max_size\":1024,\"variables_hash_bucket_size\":64,\"sendfile\":\"on\",\"underscores_in_headers\":null,\"tcp_nodelay\":\"on\",\"tcp_nopush\":\"on\",\"access_log_options\":null,\"error_log_options\":null,\"disable_access_log\":false,\"log_formats\":{},\"install_method\":\"package\",\"default_site_enabled\":true,\"types_hash_max_size\":2048,\"types_hash_bucket_size\":64,\"proxy_read_timeout\":null,\"client_body_buffer_size\":null,\"client_max_body_size\":null,\"large_client_header_buffers\":null,\"default\":{\"modules\":[]},\"extra_configs\":{},\"auth_request\":{\"url\":\"http://mdounin.ru/hg/ngx_http_auth_request_module/archive/ee8ff54f9b66.tar.gz\",\"checksum\":\"7ab85e1c350c5a9c60ed1319c45fed144cc3c3e1\"},\"devel\":{\"version\":\"0.2.18\",\"url\":\"https://github.com/simpl/ngx_devel_kit/archive/v0.2.18.tar.gz\",\"checksum\":\"c9c9f0a1b068d38c6c45b15d9605f1b2344dbcd45abf0764cd8e2ba92d6a3d2c\"},\"echo\":{\"version\":\"0.57\",\"url\":\"https://github.com/openresty/echo-nginx-module/archive/v0.57.tar.gz\",\"checksum\":\"8467237ca0fae74ca7a32fbd34fc6044df307098415d48068214c9c235695a07\"},\"geoip\":{\"path\":\"/srv/geoip\",\"enable_city\":true,\"country_dat_url\":\"http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz\",\"country_dat_checksum\":\"79ff1099e96c2dc1c2539c9a18aaa13a9afd085cae477df60d95f1644d42bc07\",\"city_dat_url\":\"http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\",\"city_dat_checksum\":\"8a6467033a528f68b1a97de24d9d0ce86c8e8e83683820e16e433ddbd3f712f7\",\"lib_version\":\"1.6.3\",\"lib_url\":\"https://github.com/maxmind/geoip-api-c/releases/download/v1.6.3/GeoIP-1.6.3.tar.gz\",\"lib_checksum\":\"e483839a81a91c3c85df89ef409fc7b526c489e0355d537861cfd1ea9534a8f2\"},\"headers_more\":{\"version\":\"0.25\",\"source_url\":\"https://github.com/openresty/headers-more-nginx-module/archive/v0.25.tar.gz\",\"source_checksum\":\"1473f96f59dcec9d83ce65d691559993c1f80da8c0a4c0c0a30dae9f969eeabf\"},\"lua\":{\"version\":\"0.8.7\",\"url\":\"https://github.com/chaoslawful/lua-nginx-module/archive/v0.8.7.tar.gz\",\"checksum\":\"4b9be3c159b9c884a38e044e07aaf4d06bd2893977d0b0dae02c124d8e907f93\"},\"luajit\":{\"version\":\"2.0.2\",\"url\":\"http://luajit.org/download/LuaJIT-2.0.2.tar.gz\",\"checksum\":\"c05202974a5890e777b181908ac237625b499aece026654d7cc33607e3f46c38\"},\"naxsi\":{\"version\":\"0.53-2\",\"url\":\"https://github.com/nbs-system/naxsi/archive/0.53-2.tar.gz\",\"checksum\":\"3eadff1d91995beae41b92733ade28091c2075a24ae37058f4d6aa90b0f4b660\"},\"openssl_source\":{\"version\":\"1.0.1h\",\"url\":\"http://www.openssl.org/source/openssl-1.0.1h.tar.gz\"},\"pagespeed\":{\"version\":\"1.8.31.4\",\"url\":\"https://github.com/pagespeed/ngx_pagespeed/archive/release-1.8.31.4-beta.tar.gz\",\"packages\":{\"rhel\":[\"gcc-c++\",\"pcre-dev\",\"pcre-devel\",\"zlib-devel\",\"make\"],\"debian\":[\"build-essential\",\"zlib1g-dev\",\"libpcre3\",\"libpcre3-dev\"]}},\"psol\":{\"url\":\"https://dl.google.com/dl/page-speed/psol/1.8.31.4.tar.gz\"},\"passenger\":{\"version\":\"4.0.57\",\"root\":\"/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/passenger-4.0.57\",\"ruby\":\"/opt/chef/embedded/bin/ruby\",\"packages\":{\"rhel\":[\"ruby-devel\",\"libcurl-devel\"],\"fedora\":[\"ruby-devel\",\"libcurl-devel\"],\"debian\":[\"ruby-dev\",\"libcurl4-gnutls-dev\"]},\"install_rake\":true,\"spawn_method\":\"smart-lv2\",\"buffer_response\":\"on\",\"max_pool_size\":6,\"min_instances\":1,\"max_instances_per_app\":0,\"pool_idle_time\":300,\"max_requests\":0,\"gem_binary\":null,\"nodejs\":null},\"enable_rate_limiting\":false,\"rate_limiting_zone_name\":\"default\",\"rate_limiting_backoff\":\"10m\",\"rate_limit\":\"1r/s\",\"upstream_repository\":\"http://nginx.org/packages/centos/6/$basearch/\",\"set_misc\":{\"version\":\"0.24\",\"url\":\"https://github.com/agentzh/set-misc-nginx-module/archive/v0.24.tar.gz\",\"checksum\":\"da404a7dac5fa4a0a86f42b4ec7648b607f4cd66\"},\"socketproxy\":{\"root\":\"/usr/share/nginx/apps\",\"app_owner\":\"root\",\"logname\":\"socketproxy\",\"log_level\":\"error\"},\"source\":{\"version\":\"1.6.2\",\"prefix\":\"/opt/nginx-1.6.2\",\"conf_path\":\"/etc/nginx/nginx.conf\",\"sbin_path\":\"/opt/nginx-1.6.2/sbin/nginx\",\"default_configure_flags\":[\"--prefix=/opt/nginx-1.6.2\",\"--conf-path=/etc/nginx/nginx.conf\",\"--sbin-path=/opt/nginx-1.6.2/sbin/nginx\"],\"url\":\"http://nginx.org/download/nginx-1.6.2.tar.gz\",\"checksum\":\"b5608c2959d3e7ad09b20fc8f9e5bd4bc87b3bc8ba5936a513c04ed8f1391a18\",\"modules\":[\"nginx::http_ssl_module\",\"nginx::http_gzip_static_module\"],\"use_existing_user\":false},\"configure_flags\":[],\"status\":{\"port\":\"8090\"},\"syslog\":{\"git_repo\":\"https://github.com/yaoweibin/nginx_syslog_patch.git\",\"git_revision\":\"master\"},\"upload_progress\":{\"url\":\"https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0\",\"checksum\":\"3fb903dab595cf6656fa0fc5743a48daffbba2f6b5c554836be630800eaad4e2\",\"javascript_output\":true,\"zone_name\":\"proxied\",\"zone_size\":\"1m\"}},\"iptables\":{\"iptables_sysconfig\":{\"IPTABLES_MODULES\":\"\",\"IPTABLES_MODULES_UNLOAD\":\"yes\",\"IPTABLES_SAVE_ON_STOP\":\"no\",\"IPTABLES_SAVE_ON_RESTART\":\"no\",\"IPTABLES_SAVE_COUNTER\":\"no\",\"IPTABLES_STATUS_NUMERIC\":\"yes\",\"IPTABLES_STATUS_VERBOSE\":\"no\",\"IPTABLES_STATUS_LINENUMBERS\":\"yes\"},\"ip6tables_sysconfig\":{\"IP6TABLES_MODULES\":\"\",\"IP6TABLES_MODULES_UNLOAD\":\"yes\",\"IP6TABLES_SAVE_ON_STOP\":\"no\",\"IP6TABLES_SAVE_ON_RESTART\":\"no\",\"IP6TABLES_SAVE_COUNTER\":\"no\",\"IP6TABLES_STATUS_NUMERIC\":\"yes\",\"IP6TABLES_STATUS_VERBOSE\":\"no\",\"IP6TABLES_STATUS_LINENUMBERS\":\"yes\"}}},\"override\":{},\"run_list\":[\"recipe[nginx::default]\",\"recipe[iptables::default]\"]}",
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"PUT",
   "PATH_INFO"=>"/nodes/chef-master",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000089b71b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=["organizations", "chef", "nodes", "chef-master"]>

[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: Detecting file extension for chef-master
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: got a file path of /root/nodes/chef-master.json for chef-master.json
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: Detecting file extension for chef-master
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: got a file path of /root/nodes/chef-master.json for chef-master.json
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: Detecting file extension for chef-master
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: got a file path of /root/nodes/chef-master.json for chef-master.json
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: Detecting file extension for chef-master
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: got a file path of /root/nodes/chef-master.json for chef-master.json
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: Detecting file extension for chef-master
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: got a file path of /root/nodes/chef-master.json for chef-master.json
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: Detecting file extension for chef-master
[2016-09-13T13:00:50+01:00] DEBUG: BaseFile: got a file path of /root/nodes/chef-master.json for chef-master.json
[2016-09-13T13:00:50+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "chef-master",
  "chef_environment": "_default",
  "json_class": "Chef::Node",
  "automatic": {
    "dmi": {

    },
    "kernel": {
      "name": "Linux",
      "release": "2.6.32-642.1.1.el6.x86_64",
      "version": "#1 SMP Tue May 31 21:57:07 UTC 2016",
      "machine": "x86_64",
      "processor": "x86_64",
      "os": "GNU/Linux",
      "modules": {
        "vboxsf": {
          "size": "37731",
          "refcount": "2",
          "version": "5.1.2 r108956"
        },
        "vboxguest": {
          "size": "285383",
          "refcount": "1",
          "version": "5.1.2 r108956"
        },
        "nls_utf8": {
          "size": "1455",
          "refcount": "0"
        },
        "ipv6": {
          "size": "336282",
          "refcount": "16"
        },
        "sg": {
          "size": "29318",
          "refcount": "0",
          "version": "3.5.34"
        },
        "i2c_piix4": {
          "size": "11232",
          "refcount": "0"
        },
        "i2c_core": {
          "size": "29132",
          "refcount": "1"
        },
        "e1000": {
          "size": "134895",
          "refcount": "0",
          "version": "7.3.21-k8-NAPI"
        },
        "ext4": {
          "size": "379655",
          "refcount": "2"
        },
        "jbd2": {
          "size": "93252",
          "refcount": "1"
        },
        "mbcache": {
          "size": "8193",
          "refcount": "1"
        },
        "sd_mod": {
          "size": "37158",
          "refcount": "3"
        },
        "crc_t10dif": {
          "size": "1209",
          "refcount": "1"
        },
        "ahci": {
          "size": "43154",
          "refcount": "2",
          "version": "3.0"
        },
        "pata_acpi": {
          "size": "3701",
          "refcount": "0",
          "version": "0.2.3"
        },
        "ata_generic": {
          "size": "3837",
          "refcount": "0",
          "version": "0.2.15"
        },
        "ata_piix": {
          "size": "24409",
          "refcount": "0",
          "version": "2.13"
        },
        "video": {
          "size": "21654",
          "refcount": "0"
        },
        "output": {
          "size": "2409",
          "refcount": "1"
        },
        "dm_mirror": {
          "size": "14864",
          "refcount": "0"
        },
        "dm_region_hash": {
          "size": "12085",
          "refcount": "1"
        },
        "dm_log": {
          "size": "9930",
          "refcount": "2"
        },
        "dm_mod": {
          "size": "102467",
          "refcount": "8"
        }
      }
    },
    "network": {
      "interfaces": {
        "lo": {
          "mtu": "65536",
          "flags": [
            "LOOPBACK",
            "UP",
            "LOWER_UP"
          ],
          "encapsulation": "Loopback",
          "addresses": {
            "127.0.0.1": {
              "family": "inet",
              "prefixlen": "8",
              "netmask": "255.0.0.0",
              "scope": "Node"
            },
            "::1": {
              "family": "inet6",
              "prefixlen": "128",
              "scope": "Node",
              "tags": [

              ]
            }
          },
          "state": "unknown",
          "routes": [
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            }
          ]
        },
        "eth0": {
          "type": "eth",
          "number": "0",
          "mtu": "1500",
          "flags": [
            "BROADCAST",
            "MULTICAST",
            "UP",
            "LOWER_UP"
          ],
          "encapsulation": "Ethernet",
          "addresses": {
            "08:00:27:EC:55:DD": {
              "family": "lladdr"
            },
            "10.0.2.15": {
              "family": "inet",
              "prefixlen": "24",
              "netmask": "255.255.255.0",
              "broadcast": "10.0.2.255",
              "scope": "Global"
            },
            "fe80::a00:27ff:feec:55dd": {
              "family": "inet6",
              "prefixlen": "64",
              "scope": "Link",
              "tags": [

              ]
            }
          },
          "state": "up",
          "arp": {
            "10.0.2.3": "52:54:00:12:35:03",
            "10.0.2.2": "52:54:00:12:35:02"
          },
          "routes": [
            {
              "destination": "10.0.2.0/24",
              "family": "inet",
              "scope": "link",
              "proto": "kernel",
              "src": "10.0.2.15"
            },
            {
              "destination": "169.254.0.0/16",
              "family": "inet",
              "scope": "link",
              "metric": "1002"
            },
            {
              "destination": "default",
              "family": "inet",
              "via": "10.0.2.2"
            },
            {
              "destination": "fe80::/64",
              "family": "inet6",
              "metric": "256",
              "proto": "kernel"
            }
          ],
          "link_speed": 1000,
          "duplex": "Full",
          "port": "Twisted Pair",
          "transceiver": "internal",
          "auto_negotiation": "on",
          "mdi_x": "off (auto)",
          "ring_params": {
            "max_rx": 4096,
            "max_rx_mini": 0,
            "max_rx_jumbo": 0,
            "max_tx": 4096,
            "current_rx": 256,
            "current_rx_mini": 0,
            "current_rx_jumbo": 0,
            "current_tx": 256
          }
        },
        "eth1": {
          "type": "eth",
          "number": "1",
          "mtu": "1500",
          "flags": [
            "BROADCAST",
            "MULTICAST",
            "UP",
            "LOWER_UP"
          ],
          "encapsulation": "Ethernet",
          "addresses": {
            "08:00:27:47:BD:00": {
              "family": "lladdr"
            },
            "192.168.33.10": {
              "family": "inet",
              "prefixlen": "24",
              "netmask": "255.255.255.0",
              "broadcast": "192.168.33.255",
              "scope": "Global"
            },
            "fe80::a00:27ff:fe47:bd00": {
              "family": "inet6",
              "prefixlen": "64",
              "scope": "Link",
              "tags": [

              ]
            }
          },
          "state": "up",
          "arp": {
            "192.168.33.1": "0a:00:27:00:00:0d"
          },
          "routes": [
            {
              "destination": "192.168.33.0/24",
              "family": "inet",
              "scope": "link",
              "proto": "kernel",
              "src": "192.168.33.10"
            },
            {
              "destination": "169.254.0.0/16",
              "family": "inet",
              "scope": "link",
              "metric": "1003"
            },
            {
              "destination": "fe80::/64",
              "family": "inet6",
              "metric": "256",
              "proto": "kernel"
            }
          ],
          "link_speed": 1000,
          "duplex": "Full",
          "port": "Twisted Pair",
          "transceiver": "internal",
          "auto_negotiation": "on",
          "mdi_x": "off (auto)",
          "ring_params": {
            "max_rx": 4096,
            "max_rx_mini": 0,
            "max_rx_jumbo": 0,
            "max_tx": 4096,
            "current_rx": 256,
            "current_rx_mini": 0,
            "current_rx_jumbo": 0,
            "current_tx": 256
          }
        }
      },
      "default_interface": "eth0",
      "default_gateway": "10.0.2.2"
    },
    "counters": {
      "network": {
        "interfaces": {
          "lo": {
            "rx": {
              "bytes": "0",
              "packets": "0",
              "errors": "0",
              "drop": "0",
              "overrun": "0"
            },
            "tx": {
              "bytes": "0",
              "packets": "0",
              "errors": "0",
              "drop": "0",
              "carrier": "0",
              "collisions": "0"
            }
          },
          "eth0": {
            "tx": {
              "queuelen": "1000",
              "bytes": "1404524",
              "packets": "21145",
              "errors": "0",
              "drop": "0",
              "carrier": "0",
              "collisions": "0"
            },
            "rx": {
              "bytes": "102627518",
              "packets": "74257",
              "errors": "0",
              "drop": "0",
              "overrun": "0"
            }
          },
          "eth1": {
            "tx": {
              "queuelen": "1000",
              "bytes": "664981",
              "packets": "2885",
              "errors": "0",
              "drop": "0",
              "carrier": "0",
              "collisions": "0"
            },
            "rx": {
              "bytes": "338800",
              "packets": "3283",
              "errors": "0",
              "drop": "0",
              "overrun": "0"
            }
          }
        }
      }
    },
    "ipaddress": "10.0.2.15",
    "macaddress": "08:00:27:EC:55:DD",
    "etc": {
      "passwd": {
        "root": {
          "dir": "/root",
          "gid": 0,
          "uid": 0,
          "shell": "/bin/bash",
          "gecos": "root"
        },
        "bin": {
          "dir": "/bin",
          "gid": 1,
          "uid": 1,
          "shell": "/sbin/nologin",
          "gecos": "bin"
        },
        "daemon": {
          "dir": "/sbin",
          "gid": 2,
          "uid": 2,
          "shell": "/sbin/nologin",
          "gecos": "daemon"
        },
        "adm": {
          "dir": "/var/adm",
          "gid": 4,
          "uid": 3,
          "shell": "/sbin/nologin",
          "gecos": "adm"
        },
        "lp": {
          "dir": "/var/spool/lpd",
          "gid": 7,
          "uid": 4,
          "shell": "/sbin/nologin",
          "gecos": "lp"
        },
        "sync": {
          "dir": "/sbin",
          "gid": 0,
          "uid": 5,
          "shell": "/bin/sync",
          "gecos": "sync"
        },
        "shutdown": {
          "dir": "/sbin",
          "gid": 0,
          "uid": 6,
          "shell": "/sbin/shutdown",
          "gecos": "shutdown"
        },
        "halt": {
          "dir": "/sbin",
          "gid": 0,
          "uid": 7,
          "shell": "/sbin/halt",
          "gecos": "halt"
        },
        "mail": {
          "dir": "/var/spool/mail",
          "gid": 12,
          "uid": 8,
          "shell": "/sbin/nologin",
          "gecos": "mail"
        },
        "uucp": {
          "dir": "/var/spool/uucp",
          "gid": 14,
          "uid": 10,
          "shell": "/sbin/nologin",
          "gecos": "uucp"
        },
        "operator": {
          "dir": "/root",
          "gid": 0,
          "uid": 11,
          "shell": "/sbin/nologin",
          "gecos": "operator"
        },
        "games": {
          "dir": "/usr/games",
          "gid": 100,
          "uid": 12,
          "shell": "/sbin/nologin",
          "gecos": "games"
        },
        "gopher": {
          "dir": "/var/gopher",
          "gid": 30,
          "uid": 13,
          "shell": "/sbin/nologin",
          "gecos": "gopher"
        },
        "ftp": {
          "dir": "/var/ftp",
          "gid": 50,
          "uid": 14,
          "shell": "/sbin/nologin",
          "gecos": "FTP User"
        },
        "nobody": {
          "dir": "/",
          "gid": 99,
          "uid": 99,
          "shell": "/sbin/nologin",
          "gecos": "Nobody"
        },
        "vcsa": {
          "dir": "/dev",
          "gid": 69,
          "uid": 69,
          "shell": "/sbin/nologin",
          "gecos": "virtual console memory owner"
        },
        "saslauth": {
          "dir": "/var/empty/saslauth",
          "gid": 76,
          "uid": 499,
          "shell": "/sbin/nologin",
          "gecos": "Saslauthd user"
        },
        "postfix": {
          "dir": "/var/spool/postfix",
          "gid": 89,
          "uid": 89,
          "shell": "/sbin/nologin",
          "gecos": ""
        },
        "sshd": {
          "dir": "/var/empty/sshd",
          "gid": 74,
          "uid": 74,
          "shell": "/sbin/nologin",
          "gecos": "Privilege-separated SSH"
        },
        "vagrant": {
          "dir": "/home/vagrant",
          "gid": 500,
          "uid": 500,
          "shell": "/bin/bash",
          "gecos": "vagrant"
        },
        "vboxadd": {
          "dir": "/var/run/vboxadd",
          "gid": 1,
          "uid": 498,
          "shell": "/bin/false",
          "gecos": ""
        }
      },
      "group": {
        "root": {
          "gid": 0,
          "members": [

          ]
        },
        "bin": {
          "gid": 1,
          "members": [
            "bin",
            "daemon"
          ]
        },
        "daemon": {
          "gid": 2,
          "members": [
            "bin",
            "daemon"
          ]
        },
        "sys": {
          "gid": 3,
          "members": [
            "bin",
            "adm"
          ]
        },
        "adm": {
          "gid": 4,
          "members": [
            "adm",
            "daemon"
          ]
        },
        "tty": {
          "gid": 5,
          "members": [

          ]
        },
        "disk": {
          "gid": 6,
          "members": [

          ]
        },
        "lp": {
          "gid": 7,
          "members": [
            "daemon"
          ]
        },
        "mem": {
          "gid": 8,
          "members": [

          ]
        },
        "kmem": {
          "gid": 9,
          "members": [

          ]
        },
        "wheel": {
          "gid": 10,
          "members": [

          ]
        },
        "mail": {
          "gid": 12,
          "members": [
            "mail",
            "postfix"
          ]
        },
        "uucp": {
          "gid": 14,
          "members": [

          ]
        },
        "man": {
          "gid": 15,
          "members": [

          ]
        },
        "games": {
          "gid": 20,
          "members": [

          ]
        },
        "gopher": {
          "gid": 30,
          "members": [

          ]
        },
        "video": {
          "gid": 39,
          "members": [

          ]
        },
        "dip": {
          "gid": 40,
          "members": [

          ]
        },
        "ftp": {
          "gid": 50,
          "members": [

          ]
        },
        "lock": {
          "gid": 54,
          "members": [

          ]
        },
        "audio": {
          "gid": 63,
          "members": [

          ]
        },
        "nobody": {
          "gid": 99,
          "members": [

          ]
        },
        "users": {
          "gid": 100,
          "members": [

          ]
        },
        "floppy": {
          "gid": 19,
          "members": [

          ]
        },
        "vcsa": {
          "gid": 69,
          "members": [

          ]
        },
        "utmp": {
          "gid": 22,
          "members": [

          ]
        },
        "utempter": {
          "gid": 35,
          "members": [

          ]
        },
        "cdrom": {
          "gid": 11,
          "members": [

          ]
        },
        "tape": {
          "gid": 33,
          "members": [

          ]
        },
        "dialout": {
          "gid": 18,
          "members": [

          ]
        },
        "saslauth": {
          "gid": 76,
          "members": [

          ]
        },
        "postdrop": {
          "gid": 90,
          "members": [

          ]
        },
        "postfix": {
          "gid": 89,
          "members": [

          ]
        },
        "fuse": {
          "gid": 499,
          "members": [

          ]
        },
        "sshd": {
          "gid": 74,
          "members": [

          ]
        },
        "vagrant": {
          "gid": 500,
          "members": [
            "vagrant"
          ]
        },
        "vboxsf": {
          "gid": 498,
          "members": [

          ]
        }
      }
    },
    "current_user": "root",
    "cloud_v2": null,
    "languages": {
      "python": {
        "version": "2.6.6",
        "builddate": "Jul 23 2015, 15:22:56"
      },
      "lua": {
        "version": "5.1.4"
      },
      "perl": {
        "version": "5.10.1",
        "archname": "x86_64-linux-thread-multi"
      },
      "ruby": {
        "platform": "x86_64-linux",
        "version": "2.1.9",
        "release_date": "2016-03-30",
        "target": "x86_64-pc-linux-gnu",
        "target_cpu": "x86_64",
        "target_vendor": "pc",
        "target_os": "linux",
        "host": "x86_64-pc-linux-gnu",
        "host_cpu": "x86_64",
        "host_os": "linux-gnu",
        "host_vendor": "pc",
        "bin_dir": "/opt/chef/embedded/bin",
        "ruby_bin": "/opt/chef/embedded/bin/ruby",
        "gems_dir": "/opt/chef/embedded/lib/ruby/gems/2.1.0",
        "gem_bin": "/opt/chef/embedded/bin/gem"
      },
      "c": {
        "gcc": {
          "version": "4.4.7",
          "description": "gcc version 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) "
        },
        "glibc": {
          "version": "2.12",
          "description": "GNU C Library stable release version 2.12, by Roland McGrath et al."
        }
      }
    },
    "ohai_time": 1473767993.7327073,
    "os": "linux",
    "os_version": "2.6.32-642.1.1.el6.x86_64",
    "lsb": {

    },
    "platform": "centos",
    "platform_version": "6.8",
    "platform_family": "rhel",
    "ip6address": "fe80::a00:27ff:fe47:bd00",
    "cpu": {
      "0": {
        "vendor_id": "GenuineIntel",
        "family": "6",
        "model": "37",
        "model_name": "Intel(R) Core(TM) i5 CPU         650  @ 3.20GHz",
        "stepping": "5",
        "mhz": "3192.376",
        "cache_size": "4096 KB",
        "physical_id": "0",
        "core_id": "0",
        "cores": "2",
        "flags": [
          "fpu",
          "vme",
          "de",
          "pse",
          "tsc",
          "msr",
          "pae",
          "mce",
          "cx8",
          "apic",
          "sep",
          "mtrr",
          "pge",
          "mca",
          "cmov",
          "pat",
          "pse36",
          "clflush",
          "mmx",
          "fxsr",
          "sse",
          "sse2",
          "ht",
          "syscall",
          "nx",
          "rdtscp",
          "lm",
          "constant_tsc",
          "rep_good",
          "xtopology",
          "nonstop_tsc",
          "unfair_spinlock",
          "pni",
          "pclmulqdq",
          "ssse3",
          "cx16",
          "sse4_1",
          "sse4_2",
          "popcnt",
          "aes",
          "hypervisor",
          "lahf_lm"
        ]
      },
      "1": {
        "vendor_id": "GenuineIntel",
        "family": "6",
        "model": "37",
        "model_name": "Intel(R) Core(TM) i5 CPU         650  @ 3.20GHz",
        "stepping": "5",
        "mhz": "3192.376",
        "cache_size": "4096 KB",
        "physical_id": "0",
        "core_id": "1",
        "cores": "2",
        "flags": [
          "fpu",
          "vme",
          "de",
          "pse",
          "tsc",
          "msr",
          "pae",
          "mce",
          "cx8",
          "apic",
          "sep",
          "mtrr",
          "pge",
          "mca",
          "cmov",
          "pat",
          "pse36",
          "clflush",
          "mmx",
          "fxsr",
          "sse",
          "sse2",
          "ht",
          "syscall",
          "nx",
          "rdtscp",
          "lm",
          "constant_tsc",
          "rep_good",
          "xtopology",
          "nonstop_tsc",
          "unfair_spinlock",
          "pni",
          "pclmulqdq",
          "ssse3",
          "cx16",
          "sse4_1",
          "sse4_2",
          "popcnt",
          "aes",
          "hypervisor",
          "lahf_lm"
        ]
      },
      "total": 2,
      "real": 1,
      "cores": 2
    },
    "memory": {
      "swap": {
        "cached": "0kB",
        "total": "1277948kB",
        "free": "1277948kB"
      },
      "hugepages": {
        "total": "0",
        "free": "0",
        "reserved": "0",
        "surplus": "0"
      },
      "total": "1922052kB",
      "free": "258572kB",
      "buffers": "90648kB",
      "cached": "1221184kB",
      "active": "540736kB",
      "inactive": "916024kB",
      "dirty": "7204kB",
      "writeback": "0kB",
      "anon_pages": "144972kB",
      "mapped": "10960kB",
      "slab": "180644kB",
      "slab_reclaimable": "158540kB",
      "slab_unreclaim": "22104kB",
      "page_tables": "2332kB",
      "nfs_unstable": "0kB",
      "bounce": "0kB",
      "commit_limit": "2238972kB",
      "committed_as": "248588kB",
      "vmalloc_total": "34359738367kB",
      "vmalloc_used": "32064kB",
      "vmalloc_chunk": "34359695352kB",
      "hugepage_size": "2048kB"
    },
    "virtualization": {
      "systems": {
        "vbox": "guest"
      },
      "system": "vbox",
      "role": "guest"
    },
    "command": {
      "ps": "ps -ef"
    },
    "filesystem": {
      "/dev/mapper/VolGroup-lv_root": {
        "kb_size": "18261312",
        "kb_used": "1953196",
        "kb_available": "15373820",
        "percent_used": "12%",
        "mount": "/",
        "total_inodes": "1169168",
        "inodes_used": "101552",
        "inodes_available": "1067616",
        "inodes_percent_used": "9%",
        "fs_type": "ext4",
        "mount_options": [
          "rw"
        ],
        "uuid": "9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e"
      },
      "tmpfs": {
        "kb_size": "961024",
        "kb_used": "0",
        "kb_available": "961024",
        "percent_used": "0%",
        "mount": "/dev/shm",
        "total_inodes": "240256",
        "inodes_used": "1",
        "inodes_available": "240255",
        "inodes_percent_used": "1%",
        "fs_type": "tmpfs",
        "mount_options": [
          "rw"
        ]
      },
      "/dev/sda1": {
        "kb_size": "487652",
        "kb_used": "55187",
        "kb_available": "406865",
        "percent_used": "12%",
        "mount": "/boot",
        "total_inodes": "128016",
        "inodes_used": "44",
        "inodes_available": "127972",
        "inodes_percent_used": "1%",
        "fs_type": "ext4",
        "mount_options": [
          "rw"
        ],
        "uuid": "cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2"
      },
      "vagrant": {
        "kb_size": "126343160",
        "kb_used": "72260704",
        "kb_available": "54082456",
        "percent_used": "58%",
        "mount": "/vagrant",
        "total_inodes": "1000",
        "inodes_used": "0",
        "inodes_available": "1000",
        "inodes_percent_used": "0%",
        "fs_type": "vboxsf",
        "mount_options": [
          "uid=500",
          "gid=500",
          "rw"
        ]
      },
      "proc": {
        "mount": "/proc",
        "fs_type": "proc",
        "mount_options": [
          "rw"
        ]
      },
      "sysfs": {
        "mount": "/sys",
        "fs_type": "sysfs",
        "mount_options": [
          "rw"
        ]
      },
      "devpts": {
        "mount": "/dev/pts",
        "fs_type": "devpts",
        "mount_options": [
          "rw",
          "gid=5",
          "mode=620"
        ]
      },
      "none": {
        "mount": "/proc/sys/fs/binfmt_misc",
        "fs_type": "binfmt_misc",
        "mount_options": [
          "rw"
        ]
      },
      "/dev/sda2": {
        "fs_type": "LVM2_member",
        "uuid": "1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22"
      },
      "/dev/mapper/VolGroup-lv_swap": {
        "fs_type": "swap",
        "uuid": "376d9de0-a04a-4c8e-90fd-7721b522b166"
      },
      "rootfs": {
        "mount": "/",
        "fs_type": "rootfs",
        "mount_options": [
          "rw"
        ]
      },
      "devtmpfs": {
        "mount": "/dev",
        "fs_type": "devtmpfs",
        "mount_options": [
          "rw",
          "relatime",
          "size=950288k",
          "nr_inodes=237572",
          "mode=755"
        ]
      },
      "/proc/bus/usb": {
        "mount": "/proc/bus/usb",
        "fs_type": "usbfs",
        "mount_options": [
          "rw",
          "relatime"
        ]
      }
    },
    "init_package": "init",
    "filesystem2": {
      "by_device": {
        "/dev/mapper/VolGroup-lv_root": {
          "kb_size": "18261312",
          "kb_used": "1953196",
          "kb_available": "15373820",
          "percent_used": "12%",
          "total_inodes": "1169168",
          "inodes_used": "101552",
          "inodes_available": "1067616",
          "inodes_percent_used": "9%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e",
          "mounts": [
            "/"
          ]
        },
        "tmpfs": {
          "kb_size": "961024",
          "kb_used": "0",
          "kb_available": "961024",
          "percent_used": "0%",
          "total_inodes": "240256",
          "inodes_used": "1",
          "inodes_available": "240255",
          "inodes_percent_used": "1%",
          "fs_type": "tmpfs",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/dev/shm"
          ]
        },
        "/dev/sda1": {
          "kb_size": "487652",
          "kb_used": "55187",
          "kb_available": "406865",
          "percent_used": "12%",
          "total_inodes": "128016",
          "inodes_used": "44",
          "inodes_available": "127972",
          "inodes_percent_used": "1%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2",
          "mounts": [
            "/boot"
          ]
        },
        "vagrant": {
          "kb_size": "126343160",
          "kb_used": "72260704",
          "kb_available": "54082456",
          "percent_used": "58%",
          "total_inodes": "1000",
          "inodes_used": "0",
          "inodes_available": "1000",
          "inodes_percent_used": "0%",
          "fs_type": "vboxsf",
          "mount_options": [
            "uid=500",
            "gid=500",
            "rw"
          ],
          "mounts": [
            "/vagrant"
          ]
        },
        "proc": {
          "fs_type": "proc",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/proc"
          ]
        },
        "sysfs": {
          "fs_type": "sysfs",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/sys"
          ]
        },
        "devpts": {
          "fs_type": "devpts",
          "mount_options": [
            "rw",
            "gid=5",
            "mode=620"
          ],
          "mounts": [
            "/dev/pts"
          ]
        },
        "none": {
          "fs_type": "binfmt_misc",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/proc/sys/fs/binfmt_misc"
          ]
        },
        "/dev/sda": {
          "mounts": [

          ]
        },
        "/dev/sda2": {
          "fs_type": "LVM2_member",
          "uuid": "1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22",
          "mounts": [

          ]
        },
        "/dev/mapper/VolGroup-lv_swap": {
          "fs_type": "swap",
          "uuid": "376d9de0-a04a-4c8e-90fd-7721b522b166",
          "mounts": [

          ]
        },
        "rootfs": {
          "fs_type": "rootfs",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/"
          ]
        },
        "devtmpfs": {
          "fs_type": "devtmpfs",
          "mount_options": [
            "rw",
            "relatime",
            "size=950288k",
            "nr_inodes=237572",
            "mode=755"
          ],
          "mounts": [
            "/dev"
          ]
        },
        "/proc/bus/usb": {
          "fs_type": "usbfs",
          "mount_options": [
            "rw",
            "relatime"
          ],
          "mounts": [
            "/proc/bus/usb"
          ]
        }
      },
      "by_mountpoint": {
        "/": {
          "kb_size": "18261312",
          "kb_used": "1953196",
          "kb_available": "15373820",
          "percent_used": "12%",
          "total_inodes": "1169168",
          "inodes_used": "101552",
          "inodes_available": "1067616",
          "inodes_percent_used": "9%",
          "fs_type": "rootfs",
          "mount_options": [
            "rw"
          ],
          "uuid": "9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e",
          "devices": [
            "/dev/mapper/VolGroup-lv_root",
            "rootfs"
          ]
        },
        "/dev/shm": {
          "kb_size": "961024",
          "kb_used": "0",
          "kb_available": "961024",
          "percent_used": "0%",
          "total_inodes": "240256",
          "inodes_used": "1",
          "inodes_available": "240255",
          "inodes_percent_used": "1%",
          "fs_type": "tmpfs",
          "mount_options": [
            "rw"
          ],
          "devices": [
            "tmpfs"
          ]
        },
        "/boot": {
          "kb_size": "487652",
          "kb_used": "55187",
          "kb_available": "406865",
          "percent_used": "12%",
          "total_inodes": "128016",
          "inodes_used": "44",
          "inodes_available": "127972",
          "inodes_percent_used": "1%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2",
          "devices": [
            "/dev/sda1"
          ]
        },
        "/vagrant": {
          "kb_size": "126343160",
          "kb_used": "72260704",
          "kb_available": "54082456",
          "percent_used": "58%",
          "total_inodes": "1000",
          "inodes_used": "0",
          "inodes_available": "1000",
          "inodes_percent_used": "0%",
          "fs_type": "vboxsf",
          "mount_options": [
            "uid=500",
            "gid=500",
            "rw"
          ],
          "devices": [
            "vagrant"
          ]
        },
        "/proc": {
          "fs_type": "proc",
          "mount_options": [
            "rw"
          ],
          "devices": [
            "proc"
          ]
        },
        "/sys": {
          "fs_type": "sysfs",
          "mount_options": [
            "rw"
          ],
          "devices": [
            "sysfs"
          ]
        },
        "/dev/pts": {
          "fs_type": "devpts",
          "mount_options": [
            "rw",
            "gid=5",
            "mode=620"
          ],
          "devices": [
            "devpts"
          ]
        },
        "/proc/sys/fs/binfmt_misc": {
          "fs_type": "binfmt_misc",
          "mount_options": [
            "rw"
          ],
          "devices": [
            "none"
          ]
        },
        "/dev": {
          "fs_type": "devtmpfs",
          "mount_options": [
            "rw",
            "relatime",
            "size=950288k",
            "nr_inodes=237572",
            "mode=755"
          ],
          "devices": [
            "devtmpfs"
          ]
        },
        "/proc/bus/usb": {
          "fs_type": "usbfs",
          "mount_options": [
            "rw",
            "relatime"
          ],
          "devices": [
            "/proc/bus/usb"
          ]
        }
      },
      "by_pair": {
        "/dev/mapper/VolGroup-lv_root,/": {
          "device": "/dev/mapper/VolGroup-lv_root",
          "kb_size": "18261312",
          "kb_used": "1953196",
          "kb_available": "15373820",
          "percent_used": "12%",
          "mount": "/",
          "total_inodes": "1169168",
          "inodes_used": "101552",
          "inodes_available": "1067616",
          "inodes_percent_used": "9%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "9f7fd9e1-f3fc-4ab0-8cf8-4bae13d3d55e"
        },
        "tmpfs,/dev/shm": {
          "device": "tmpfs",
          "kb_size": "961024",
          "kb_used": "0",
          "kb_available": "961024",
          "percent_used": "0%",
          "mount": "/dev/shm",
          "total_inodes": "240256",
          "inodes_used": "1",
          "inodes_available": "240255",
          "inodes_percent_used": "1%",
          "fs_type": "tmpfs",
          "mount_options": [
            "rw"
          ]
        },
        "/dev/sda1,/boot": {
          "device": "/dev/sda1",
          "kb_size": "487652",
          "kb_used": "55187",
          "kb_available": "406865",
          "percent_used": "12%",
          "mount": "/boot",
          "total_inodes": "128016",
          "inodes_used": "44",
          "inodes_available": "127972",
          "inodes_percent_used": "1%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "cb6ebd16-b6a9-4285-bf1d-31ea43a2d4e2"
        },
        "vagrant,/vagrant": {
          "device": "vagrant",
          "kb_size": "126343160",
          "kb_used": "72260704",
          "kb_available": "54082456",
          "percent_used": "58%",
          "mount": "/vagrant",
          "total_inodes": "1000",
          "inodes_used": "0",
          "inodes_available": "1000",
          "inodes_percent_used": "0%",
          "fs_type": "vboxsf",
          "mount_options": [
            "uid=500",
            "gid=500",
            "rw"
          ]
        },
        "proc,/proc": {
          "device": "proc",
          "mount": "/proc",
          "fs_type": "proc",
          "mount_options": [
            "rw"
          ]
        },
        "sysfs,/sys": {
          "device": "sysfs",
          "mount": "/sys",
          "fs_type": "sysfs",
          "mount_options": [
            "rw"
          ]
        },
        "devpts,/dev/pts": {
          "device": "devpts",
          "mount": "/dev/pts",
          "fs_type": "devpts",
          "mount_options": [
            "rw",
            "gid=5",
            "mode=620"
          ]
        },
        "none,/proc/sys/fs/binfmt_misc": {
          "device": "none",
          "mount": "/proc/sys/fs/binfmt_misc",
          "fs_type": "binfmt_misc",
          "mount_options": [
            "rw"
          ]
        },
        "/dev/sda,": {
          "device": "/dev/sda"
        },
        "/dev/sda2,": {
          "device": "/dev/sda2",
          "fs_type": "LVM2_member",
          "uuid": "1TXefP-l3nw-KNyi-QuJ6-eHfj-qXzf-5gii22"
        },
        "/dev/mapper/VolGroup-lv_swap,": {
          "device": "/dev/mapper/VolGroup-lv_swap",
          "fs_type": "swap",
          "uuid": "376d9de0-a04a-4c8e-90fd-7721b522b166"
        },
        "rootfs,/": {
          "device": "rootfs",
          "mount": "/",
          "fs_type": "rootfs",
          "mount_options": [
            "rw"
          ]
        },
        "devtmpfs,/dev": {
          "device": "devtmpfs",
          "mount": "/dev",
          "fs_type": "devtmpfs",
          "mount_options": [
            "rw",
            "relatime",
            "size=950288k",
            "nr_inodes=237572",
            "mode=755"
          ]
        },
        "/proc/bus/usb,/proc/bus/usb": {
          "device": "/proc/bus/usb",
          "mount": "/proc/bus/usb",
          "fs_type": "usbfs",
          "mount_options": [
            "rw",
            "relatime"
          ]
        }
      }
    },
    "root_group": "root",
    "shells": [
      "/bin/sh",
      "/bin/bash",
      "/sbin/nologin",
      "/bin/dash"
    ],
    "fips": {
      "kernel": {
        "enabled": false
      }
    },
    "block_device": {
      "ram0": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram1": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram2": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram3": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram4": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram5": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram6": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram7": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram8": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram9": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram10": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram11": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram12": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram13": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram14": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram15": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop0": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop1": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop2": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop3": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop4": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop5": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop6": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop7": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "sda": {
        "size": "40960000",
        "removable": "0",
        "model": "VBOX HARDDISK",
        "rev": "1.0",
        "state": "running",
        "timeout": "30",
        "vendor": "ATA",
        "queue_depth": "31",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "dm-0": {
        "size": "37371904",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "dm-1": {
        "size": "2555904",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      }
    },
    "keys": {
      "ssh": {
        "host_dsa_public": "AAAAB3NzaC1kc3MAAACBAKzeNZCMEUlmzh1wSJ1LcwQeL/WPRkWkOJwbKUFCcXOFosotvF7c7G7qUMFd24dtmExmocUeIycLSKLNPTBwNjYacqJKhWfXPaAjKCKEa7V1WJQbjPipbuCNuryi+E9jKODG18+F4qcTjml4fARJe7vpEyOlG4n25gcdaUH8ebJ/AAAAFQCmDtC1oX0AOIvoWZLVY5jTfNpCYwAAAIBI5qVfKbJUN1CxOZ86KP8d+aougFct2hp8nl19T24lyrGxNeoQhP19pwr+MxwRGrxzHbV9rFVDTSDOnpkrdSCJYGMIM1ASmgCllI4Avr275Fzjr5NDFTku9m0I2n4zfEynmZ07Lpsmho8UECyZ0bOCayCjgm2EkWdtxoKGv9LW3QAAAIEAjzWy3LCo61SnIOALKd+xo0GCCsKnvPaofw3sX6PAMMlS1NMEd7jqdHv4/KsWWUmOPL1dpw+cuFTdHph3TpJRrR3u3gWBt8fXWO8QyNsNisD9OZHz39DLSqz8UKmwry8gC1zFZ6MuBC8LBWiDABOXEMXpFR5l0drNJE24tAzNAq4=",
        "host_rsa_public": "AAAAB3NzaC1yc2EAAAABIwAAAQEAoKGBorpanawyuJ4UK34f0WhnAZ7gBBKS4OHAsFA58ATUPQVpQNdkFSmHdGd+XZhN9cy9ERzEvyG/2Znt0749/v237I3ewkP6Dayvkp/okW6pWRdWrwcfiN2cSkpjE4qcsVa5w8ZH4gZt5HfLY97Qgfrib7npSKaxel768vP0MmLLCCN3xkEZt2uuONmvwzHfHUbkrIWVm+O6ZKmW8P7VZaioSIj6579I6vbkJdy3cpMUrGwNJd8uFH/LXIbb2qBuTgQjJL/rBBGtAM052txV37EiJy5/FdT/eanud+zvW2iIjRjQwFl8Ot+gVPLpCE/H5MLnNZrLw4Yfwlipte4TZQ=="
      }
    },
    "hostname": "chef-master",
    "machinename": "chef-master",
    "fqdn": "chef-master",
    "domain": null,
    "chef_packages": {
      "ohai": {
        "version": "8.19.1",
        "ohai_root": "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/ohai-8.19.1/lib/ohai"
      },
      "chef": {
        "version": "12.13.37",
        "chef_root": "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.13.37/lib"
      }
    },
    "uptime_seconds": 1291,
    "uptime": "21 minutes 31 seconds",
    "idletime_seconds": 2226,
    "idletime": "37 minutes 06 seconds",
    "packages": {
      "tar": {
        "epoch": "2",
        "version": "1.23",
        "release": "14.el6",
        "installdate": "1468189149",
        "arch": "x86_64"
      },
      "setup": {
        "epoch": "0",
        "version": "2.8.14",
        "release": "20.el6_4.1",
        "installdate": "1468188629",
        "arch": "noarch"
      },
      "libselinux-utils": {
        "epoch": "0",
        "version": "2.0.94",
        "release": "7.el6",
        "installdate": "1468189149",
        "arch": "x86_64"
      },
      "basesystem": {
        "epoch": "0",
        "version": "10.0",
        "release": "4.el6",
        "installdate": "1468188630",
        "arch": "noarch"
      },
      "gmp": {
        "epoch": "0",
        "version": "4.3.1",
        "release": "10.el6",
        "installdate": "1468189149",
        "arch": "x86_64"
      },
      "coreutils": {
        "epoch": "0",
        "version": "8.4",
        "release": "43.el6",
        "installdate": "1468189150",
        "arch": "x86_64"
      },
      "shadow-utils": {
        "epoch": "2",
        "version": "4.1.5.1",
        "release": "5.el6",
        "installdate": "1468189151",
        "arch": "x86_64"
      },
      "openssl": {
        "epoch": "0",
        "version": "1.0.1e",
        "release": "48.el6_8.1",
        "installdate": "1468189152",
        "arch": "x86_64"
      },
      "mysql-libs": {
        "epoch": "0",
        "version": "5.1.73",
        "release": "7.el6",
        "installdate": "1468189152",
        "arch": "x86_64"
      },
      "libcap": {
        "epoch": "0",
        "version": "2.16",
        "release": "5.5.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "iputils": {
        "epoch": "0",
        "version": "20071127",
        "release": "21.el6",
        "installdate": "1468189153",
        "arch": "x86_64"
      },
      "info": {
        "epoch": "0",
        "version": "4.13a",
        "release": "8.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "initscripts": {
        "epoch": "0",
        "version": "9.03.53",
        "release": "1.el6.centos",
        "installdate": "1468189153",
        "arch": "x86_64"
      },
      "device-mapper-libs": {
        "epoch": "0",
        "version": "1.02.117",
        "release": "7.el6",
        "installdate": "1468189154",
        "arch": "x86_64"
      },
      "libacl": {
        "epoch": "0",
        "version": "2.2.49",
        "release": "6.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "device-mapper-event-libs": {
        "epoch": "0",
        "version": "1.02.117",
        "release": "7.el6",
        "installdate": "1468189154",
        "arch": "x86_64"
      },
      "lvm2-libs": {
        "epoch": "0",
        "version": "2.02.143",
        "release": "7.el6",
        "installdate": "1468189154",
        "arch": "x86_64"
      },
      "device-mapper-multipath-libs": {
        "epoch": "0",
        "version": "0.4.9",
        "release": "93.el6",
        "installdate": "1468189154",
        "arch": "x86_64"
      },
      "sed": {
        "epoch": "0",
        "version": "4.2.1",
        "release": "10.el6",
        "installdate": "1468188644",
        "arch": "x86_64"
      },
      "dracut-kernel": {
        "epoch": "0",
        "version": "004",
        "release": "409.el6_8.2",
        "installdate": "1468189155",
        "arch": "noarch"
      },
      "sqlite": {
        "epoch": "0",
        "version": "3.6.20",
        "release": "1.el6_7.2",
        "installdate": "1468189155",
        "arch": "x86_64"
      },
      "bzip2-libs": {
        "epoch": "0",
        "version": "1.0.5",
        "release": "7.el6_0",
        "installdate": "1468188644",
        "arch": "x86_64"
      },
      "nss": {
        "epoch": "0",
        "version": "3.21.0",
        "release": "8.el6",
        "installdate": "1468189155",
        "arch": "x86_64"
      },
      "openssh": {
        "epoch": "0",
        "version": "5.3p1",
        "release": "118.1.el6_8",
        "installdate": "1468189156",
        "arch": "x86_64"
      },
      "libcurl": {
        "epoch": "0",
        "version": "7.19.7",
        "release": "52.el6",
        "installdate": "1468189156",
        "arch": "x86_64"
      },
      "libgpg-error": {
        "epoch": "0",
        "version": "1.7",
        "release": "4.el6",
        "installdate": "1468188645",
        "arch": "x86_64"
      },
      "curl": {
        "epoch": "0",
        "version": "7.19.7",
        "release": "52.el6",
        "installdate": "1468189156",
        "arch": "x86_64"
      },
      "openldap": {
        "epoch": "0",
        "version": "2.4.40",
        "release": "12.el6",
        "installdate": "1468189156",
        "arch": "x86_64"
      },
      "selinux-policy": {
        "epoch": "0",
        "version": "3.7.19",
        "release": "292.el6",
        "installdate": "1468189157",
        "arch": "noarch"
      },
      "cronie-anacron": {
        "epoch": "0",
        "version": "1.4.4",
        "release": "15.el6_7.1",
        "installdate": "1468189159",
        "arch": "x86_64"
      },
      "libidn": {
        "epoch": "0",
        "version": "1.18",
        "release": "2.el6",
        "installdate": "1468188645",
        "arch": "x86_64"
      },
      "libuser": {
        "epoch": "0",
        "version": "0.56.13",
        "release": "8.el6_7",
        "installdate": "1468189160",
        "arch": "x86_64"
      },
      "xz-libs": {
        "epoch": "0",
        "version": "4.999.9",
        "release": "0.5.beta.20091007git.el6",
        "installdate": "1468188645",
        "arch": "x86_64"
      },
      "python-pycurl": {
        "epoch": "0",
        "version": "7.19.0",
        "release": "9.el6",
        "installdate": "1468189160",
        "arch": "x86_64"
      },
      "yum-plugin-fastestmirror": {
        "epoch": "0",
        "version": "1.1.30",
        "release": "37.el6",
        "installdate": "1468189160",
        "arch": "noarch"
      },
      "bzip2": {
        "epoch": "0",
        "version": "1.0.5",
        "release": "7.el6_0",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "kernel-firmware": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "642.1.1.el6",
        "installdate": "1468189163",
        "arch": "noarch"
      },
      "fuse": {
        "epoch": "0",
        "version": "2.8.3",
        "release": "5.el6",
        "installdate": "1468189169",
        "arch": "x86_64"
      },
      "cpio": {
        "epoch": "0",
        "version": "2.10",
        "release": "12.el6_5",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "selinux-policy-targeted": {
        "epoch": "0",
        "version": "3.7.19",
        "release": "292.el6",
        "installdate": "1468189169",
        "arch": "noarch"
      },
      "openssh-server": {
        "epoch": "0",
        "version": "5.3p1",
        "release": "118.1.el6_8",
        "installdate": "1468189194",
        "arch": "x86_64"
      },
      "dhclient": {
        "epoch": "12",
        "version": "4.1.1",
        "release": "51.P1.el6.centos",
        "installdate": "1468189194",
        "arch": "x86_64"
      },
      "libtasn1": {
        "epoch": "0",
        "version": "2.3",
        "release": "6.el6_5",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "lvm2": {
        "epoch": "0",
        "version": "2.02.143",
        "release": "7.el6",
        "installdate": "1468189195",
        "arch": "x86_64"
      },
      "p11-kit-trust": {
        "epoch": "0",
        "version": "0.18.5",
        "release": "2.el6_5.2",
        "installdate": "1468188647",
        "arch": "x86_64"
      },
      "libdrm": {
        "epoch": "0",
        "version": "2.4.65",
        "release": "2.el6",
        "installdate": "1468189195",
        "arch": "x86_64"
      },
      "libnih": {
        "epoch": "0",
        "version": "1.0.1",
        "release": "7.el6",
        "installdate": "1468188647",
        "arch": "x86_64"
      },
      "grub": {
        "epoch": "1",
        "version": "0.97",
        "release": "94.el6_7.1",
        "installdate": "1468189196",
        "arch": "x86_64"
      },
      "logrotate": {
        "epoch": "0",
        "version": "3.7.8",
        "release": "26.el6_7",
        "installdate": "1468189196",
        "arch": "x86_64"
      },
      "libusb": {
        "epoch": "0",
        "version": "0.1.12",
        "release": "23.el6",
        "installdate": "1468188647",
        "arch": "x86_64"
      },
      "binutils": {
        "epoch": "0",
        "version": "2.20.51.0.2",
        "release": "5.44.el6",
        "installdate": "1468189197",
        "arch": "x86_64"
      },
      "libutempter": {
        "epoch": "0",
        "version": "1.1.5",
        "release": "4.1.el6",
        "installdate": "1468188648",
        "arch": "x86_64"
      },
      "libxml2": {
        "epoch": "0",
        "version": "2.7.6",
        "release": "21.el6_8.1",
        "installdate": "1468189197",
        "arch": "x86_64"
      },
      "psmisc": {
        "epoch": "0",
        "version": "22.6",
        "release": "19.el6_5",
        "installdate": "1468188648",
        "arch": "x86_64"
      },
      "perl-Error": {
        "epoch": "1",
        "version": "0.17015",
        "release": "4.el6",
        "installdate": "1473767001",
        "arch": "noarch"
      },
      "vim-minimal": {
        "epoch": "2",
        "version": "7.4.629",
        "release": "5.el6",
        "installdate": "1468188648",
        "arch": "x86_64"
      },
      "vim-filesystem": {
        "epoch": "2",
        "version": "7.4.629",
        "release": "5.el6",
        "installdate": "1473767001",
        "arch": "x86_64"
      },
      "rsync": {
        "epoch": "0",
        "version": "3.0.6",
        "release": "12.el6",
        "installdate": "1473767004",
        "arch": "x86_64"
      },
      "e2fsprogs-libs": {
        "epoch": "0",
        "version": "1.41.12",
        "release": "22.el6",
        "installdate": "1468188648",
        "arch": "x86_64"
      },
      "perl-Git": {
        "epoch": "0",
        "version": "1.7.1",
        "release": "4.el6_7.1",
        "installdate": "1473767005",
        "arch": "noarch"
      },
      "unzip": {
        "epoch": "0",
        "version": "6.0",
        "release": "4.el6",
        "installdate": "1473767006",
        "arch": "x86_64"
      },
      "diffutils": {
        "epoch": "0",
        "version": "2.8.1",
        "release": "28.el6",
        "installdate": "1468188649",
        "arch": "x86_64"
      },
      "chef": {
        "epoch": "0",
        "version": "12.13.37",
        "release": "1.el6",
        "installdate": "1473767055",
        "arch": "x86_64"
      },
      "dash": {
        "epoch": "0",
        "version": "0.5.5.1",
        "release": "4.el6",
        "installdate": "1468188649",
        "arch": "x86_64"
      },
      "groff": {
        "epoch": "0",
        "version": "1.18.1.4",
        "release": "21.el6",
        "installdate": "1468188650",
        "arch": "x86_64"
      },
      "cracklib": {
        "epoch": "0",
        "version": "2.8.16",
        "release": "4.el6",
        "installdate": "1468188650",
        "arch": "x86_64"
      },
      "module-init-tools": {
        "epoch": "0",
        "version": "3.9",
        "release": "25.el6",
        "installdate": "1468188653",
        "arch": "x86_64"
      },
      "redhat-logos": {
        "epoch": "0",
        "version": "60.0.14",
        "release": "12.el6.centos",
        "installdate": "1468188654",
        "arch": "noarch"
      },
      "libedit": {
        "epoch": "0",
        "version": "2.11",
        "release": "4.20080712cvs.1.el6",
        "installdate": "1468188656",
        "arch": "x86_64"
      },
      "mingetty": {
        "epoch": "0",
        "version": "1.08",
        "release": "5.el6",
        "installdate": "1468188656",
        "arch": "x86_64"
      },
      "gnupg2": {
        "epoch": "0",
        "version": "2.0.14",
        "release": "8.el6",
        "installdate": "1468188657",
        "arch": "x86_64"
      },
      "fipscheck-lib": {
        "epoch": "0",
        "version": "1.2.0",
        "release": "7.el6",
        "installdate": "1468188658",
        "arch": "x86_64"
      },
      "pciutils-libs": {
        "epoch": "0",
        "version": "3.1.10",
        "release": "4.el6",
        "installdate": "1468188658",
        "arch": "x86_64"
      },
      "libcap-ng": {
        "epoch": "0",
        "version": "0.6.4",
        "release": "3.el6_0.1",
        "installdate": "1468188658",
        "arch": "x86_64"
      },
      "python": {
        "epoch": "0",
        "version": "2.6.6",
        "release": "64.el6",
        "installdate": "1468188658",
        "arch": "x86_64"
      },
      "pygpgme": {
        "epoch": "0",
        "version": "0.1",
        "release": "18.20090824bzr68.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "python-iniparse": {
        "epoch": "0",
        "version": "0.3.1",
        "release": "2.1.el6",
        "installdate": "1468188667",
        "arch": "noarch"
      },
      "newt": {
        "epoch": "0",
        "version": "0.52.11",
        "release": "3.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "ustr": {
        "epoch": "0",
        "version": "1.0.4",
        "release": "9.1.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "libaio": {
        "epoch": "0",
        "version": "0.3.107",
        "release": "10.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "gamin": {
        "epoch": "0",
        "version": "0.1.10",
        "release": "9.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "shared-mime-info": {
        "epoch": "0",
        "version": "0.70",
        "release": "6.el6",
        "installdate": "1468188668",
        "arch": "x86_64"
      },
      "grubby": {
        "epoch": "0",
        "version": "7.0.15",
        "release": "7.el6",
        "installdate": "1468188669",
        "arch": "x86_64"
      },
      "dbus-glib": {
        "epoch": "0",
        "version": "0.86",
        "release": "6.el6",
        "installdate": "1468188670",
        "arch": "x86_64"
      },
      "iptables": {
        "epoch": "0",
        "version": "1.4.7",
        "release": "16.el6",
        "installdate": "1468188670",
        "arch": "x86_64"
      },
      "cryptsetup-luks-libs": {
        "epoch": "0",
        "version": "1.2.0",
        "release": "11.el6",
        "installdate": "1468188673",
        "arch": "x86_64"
      },
      "plymouth": {
        "epoch": "0",
        "version": "0.8.3",
        "release": "27.el6.centos.1",
        "installdate": "1468188673",
        "arch": "x86_64"
      },
      "cyrus-sasl": {
        "epoch": "0",
        "version": "2.1.23",
        "release": "15.el6_6.2",
        "installdate": "1468188674",
        "arch": "x86_64"
      },
      "crontabs": {
        "epoch": "0",
        "version": "1.10",
        "release": "33.el6",
        "installdate": "1468188677",
        "arch": "noarch"
      },
      "kbd": {
        "epoch": "0",
        "version": "1.15",
        "release": "11.el6",
        "installdate": "1468188679",
        "arch": "x86_64"
      },
      "system-config-firewall-base": {
        "epoch": "0",
        "version": "1.2.27",
        "release": "7.2.el6_6",
        "installdate": "1468188721",
        "arch": "noarch"
      },
      "cryptsetup-luks": {
        "epoch": "0",
        "version": "1.2.0",
        "release": "11.el6",
        "installdate": "1468188722",
        "arch": "x86_64"
      },
      "e2fsprogs": {
        "epoch": "0",
        "version": "1.41.12",
        "release": "22.el6",
        "installdate": "1468188726",
        "arch": "x86_64"
      },
      "acl": {
        "epoch": "0",
        "version": "2.2.49",
        "release": "6.el6",
        "installdate": "1468188726",
        "arch": "x86_64"
      },
      "bridge-utils": {
        "epoch": "0",
        "version": "1.2",
        "release": "10.el6",
        "installdate": "1468188726",
        "arch": "x86_64"
      },
      "epel-release": {
        "epoch": "0",
        "version": "6",
        "release": "8",
        "installdate": "1468188848",
        "arch": "noarch"
      },
      "libgcc": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "17.el6",
        "installdate": "1468188934",
        "arch": "x86_64"
      },
      "tzdata": {
        "epoch": "0",
        "version": "2016f",
        "release": "1.el6",
        "installdate": "1468188935",
        "arch": "noarch"
      },
      "glibc-common": {
        "epoch": "0",
        "version": "2.12",
        "release": "1.192.el6",
        "installdate": "1468188944",
        "arch": "x86_64"
      },
      "perl-libs": {
        "epoch": "4",
        "version": "5.10.1",
        "release": "141.el6_7.1",
        "installdate": "1468188948",
        "arch": "x86_64"
      },
      "perl-version": {
        "epoch": "3",
        "version": "0.77",
        "release": "141.el6_7.1",
        "installdate": "1468188949",
        "arch": "x86_64"
      },
      "perl": {
        "epoch": "4",
        "version": "5.10.1",
        "release": "141.el6_7.1",
        "installdate": "1468188951",
        "arch": "x86_64"
      },
      "mpfr": {
        "epoch": "0",
        "version": "2.4.1",
        "release": "6.el6",
        "installdate": "1468188952",
        "arch": "x86_64"
      },
      "libstdc++-devel": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "17.el6",
        "installdate": "1468188953",
        "arch": "x86_64"
      },
      "cloog-ppl": {
        "epoch": "0",
        "version": "0.15.7",
        "release": "1.2.el6",
        "installdate": "1468188954",
        "arch": "x86_64"
      },
      "glibc-devel": {
        "epoch": "0",
        "version": "2.12",
        "release": "1.192.el6",
        "installdate": "1468188954",
        "arch": "x86_64"
      },
      "gcc": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "17.el6",
        "installdate": "1468188955",
        "arch": "x86_64"
      },
      "wget": {
        "epoch": "0",
        "version": "1.12",
        "release": "8.el6",
        "installdate": "1468188956",
        "arch": "x86_64"
      },
      "bash": {
        "epoch": "0",
        "version": "4.1.2",
        "release": "40.el6",
        "installdate": "1468189144",
        "arch": "x86_64"
      },
      "chkconfig": {
        "epoch": "0",
        "version": "1.3.49.5",
        "release": "1.el6",
        "installdate": "1468189144",
        "arch": "x86_64"
      },
      "nspr": {
        "epoch": "0",
        "version": "4.11.0",
        "release": "1.el6",
        "installdate": "1468189144",
        "arch": "x86_64"
      },
      "db4": {
        "epoch": "0",
        "version": "4.7.25",
        "release": "20.el6_7",
        "installdate": "1468189144",
        "arch": "x86_64"
      },
      "glib2": {
        "epoch": "0",
        "version": "2.28.8",
        "release": "5.el6",
        "installdate": "1468189145",
        "arch": "x86_64"
      },
      "gawk": {
        "epoch": "0",
        "version": "3.1.7",
        "release": "10.el6_7.3",
        "installdate": "1468189146",
        "arch": "x86_64"
      },
      "file-libs": {
        "epoch": "0",
        "version": "5.04",
        "release": "30.el6",
        "installdate": "1468189146",
        "arch": "x86_64"
      },
      "libuuid": {
        "epoch": "0",
        "version": "2.17.2",
        "release": "12.24.el6",
        "installdate": "1468189146",
        "arch": "x86_64"
      },
      "findutils": {
        "epoch": "1",
        "version": "4.4.2",
        "release": "9.el6",
        "installdate": "1468189147",
        "arch": "x86_64"
      },
      "hwdata": {
        "epoch": "0",
        "version": "0.233",
        "release": "16.1.el6",
        "installdate": "1468189147",
        "arch": "noarch"
      },
      "libpciaccess": {
        "epoch": "0",
        "version": "0.13.4",
        "release": "1.el6",
        "installdate": "1468189148",
        "arch": "x86_64"
      },
      "db4-utils": {
        "epoch": "0",
        "version": "4.7.25",
        "release": "20.el6_7",
        "installdate": "1468189148",
        "arch": "x86_64"
      },
      "upstart": {
        "epoch": "0",
        "version": "0.6.5",
        "release": "16.el6",
        "installdate": "1468189148",
        "arch": "x86_64"
      },
      "procps": {
        "epoch": "0",
        "version": "3.2.8",
        "release": "36.el6",
        "installdate": "1468189149",
        "arch": "x86_64"
      },
      "filesystem": {
        "epoch": "0",
        "version": "2.4.30",
        "release": "3.el6",
        "installdate": "1468188630",
        "arch": "x86_64"
      },
      "device-mapper-persistent-data": {
        "epoch": "0",
        "version": "0.6.2",
        "release": "0.1.rc7.el6",
        "installdate": "1468189149",
        "arch": "x86_64"
      },
      "ncurses-base": {
        "epoch": "0",
        "version": "5.7",
        "release": "4.20090207.el6",
        "installdate": "1468188630",
        "arch": "x86_64"
      },
      "coreutils-libs": {
        "epoch": "0",
        "version": "8.4",
        "release": "43.el6",
        "installdate": "1468189149",
        "arch": "x86_64"
      },
      "pam": {
        "epoch": "0",
        "version": "1.1.1",
        "release": "22.el6",
        "installdate": "1468189150",
        "arch": "x86_64"
      },
      "ca-certificates": {
        "epoch": "0",
        "version": "2015.2.6",
        "release": "65.0.1.el6_7",
        "installdate": "1468189151",
        "arch": "noarch"
      },
      "ncurses-libs": {
        "epoch": "0",
        "version": "5.7",
        "release": "4.20090207.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "libssh2": {
        "epoch": "0",
        "version": "1.4.2",
        "release": "2.el6_7.1",
        "installdate": "1468189152",
        "arch": "x86_64"
      },
      "libattr": {
        "epoch": "0",
        "version": "2.4.44",
        "release": "7.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "centos-release": {
        "epoch": "0",
        "version": "6",
        "release": "8.el6.centos.12.3",
        "installdate": "1468189152",
        "arch": "x86_64"
      },
      "zlib": {
        "epoch": "0",
        "version": "1.2.3",
        "release": "29.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "util-linux-ng": {
        "epoch": "0",
        "version": "2.17.2",
        "release": "12.24.el6",
        "installdate": "1468189153",
        "arch": "x86_64"
      },
      "popt": {
        "epoch": "0",
        "version": "1.13",
        "release": "7.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "udev": {
        "epoch": "0",
        "version": "147",
        "release": "2.73.el6",
        "installdate": "1468189154",
        "arch": "x86_64"
      },
      "libcom_err": {
        "epoch": "0",
        "version": "1.41.12",
        "release": "22.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "device-mapper": {
        "epoch": "0",
        "version": "1.02.117",
        "release": "7.el6",
        "installdate": "1468189154",
        "arch": "x86_64"
      },
      "device-mapper-event": {
        "epoch": "0",
        "version": "1.02.117",
        "release": "7.el6",
        "installdate": "1468189154",
        "arch": "x86_64"
      },
      "libsepol": {
        "epoch": "0",
        "version": "2.0.41",
        "release": "4.el6",
        "installdate": "1468188643",
        "arch": "x86_64"
      },
      "kpartx": {
        "epoch": "0",
        "version": "0.4.9",
        "release": "93.el6",
        "installdate": "1468189154",
        "arch": "x86_64"
      },
      "dracut": {
        "epoch": "0",
        "version": "004",
        "release": "409.el6_8.2",
        "installdate": "1468189154",
        "arch": "noarch"
      },
      "dhcp-common": {
        "epoch": "12",
        "version": "4.1.1",
        "release": "51.P1.el6.centos",
        "installdate": "1468189155",
        "arch": "x86_64"
      },
      "readline": {
        "epoch": "0",
        "version": "6.0",
        "release": "4.el6",
        "installdate": "1468188644",
        "arch": "x86_64"
      },
      "nss-softokn": {
        "epoch": "0",
        "version": "3.14.3",
        "release": "23.el6_7",
        "installdate": "1468189155",
        "arch": "x86_64"
      },
      "nss-sysinit": {
        "epoch": "0",
        "version": "3.21.0",
        "release": "8.el6",
        "installdate": "1468189156",
        "arch": "x86_64"
      },
      "nss-tools": {
        "epoch": "0",
        "version": "3.21.0",
        "release": "8.el6",
        "installdate": "1468189156",
        "arch": "x86_64"
      },
      "rpm-libs": {
        "epoch": "0",
        "version": "4.8.0",
        "release": "55.el6",
        "installdate": "1468189156",
        "arch": "x86_64"
      },
      "dbus-libs": {
        "epoch": "1",
        "version": "1.2.24",
        "release": "8.el6_6",
        "installdate": "1468188645",
        "arch": "x86_64"
      },
      "rpm": {
        "epoch": "0",
        "version": "4.8.0",
        "release": "55.el6",
        "installdate": "1468189156",
        "arch": "x86_64"
      },
      "pcre": {
        "epoch": "0",
        "version": "7.8",
        "release": "7.el6",
        "installdate": "1468188645",
        "arch": "x86_64"
      },
      "policycoreutils": {
        "epoch": "0",
        "version": "2.0.83",
        "release": "29.el6",
        "installdate": "1468189157",
        "arch": "x86_64"
      },
      "lua": {
        "epoch": "0",
        "version": "5.1.4",
        "release": "4.1.el6",
        "installdate": "1468188645",
        "arch": "x86_64"
      },
      "postfix": {
        "epoch": "2",
        "version": "2.6.6",
        "release": "6.el6_7.1",
        "installdate": "1468189158",
        "arch": "x86_64"
      },
      "cyrus-sasl-lib": {
        "epoch": "0",
        "version": "2.1.23",
        "release": "15.el6_6.2",
        "installdate": "1468188645",
        "arch": "x86_64"
      },
      "cronie": {
        "epoch": "0",
        "version": "1.4.4",
        "release": "15.el6_7.1",
        "installdate": "1468189159",
        "arch": "x86_64"
      },
      "expat": {
        "epoch": "0",
        "version": "2.0.1",
        "release": "11.el6_2",
        "installdate": "1468188645",
        "arch": "x86_64"
      },
      "rpm-python": {
        "epoch": "0",
        "version": "4.8.0",
        "release": "55.el6",
        "installdate": "1468189160",
        "arch": "x86_64"
      },
      "python-urlgrabber": {
        "epoch": "0",
        "version": "3.9.1",
        "release": "11.el6",
        "installdate": "1468189160",
        "arch": "noarch"
      },
      "libgcrypt": {
        "epoch": "0",
        "version": "1.4.5",
        "release": "11.el6_4",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "yum": {
        "epoch": "0",
        "version": "3.2.29",
        "release": "73.el6.centos",
        "installdate": "1468189160",
        "arch": "noarch"
      },
      "kernel": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "573.el6",
        "installdate": "1468188685",
        "arch": "x86_64"
      },
      "checkpolicy": {
        "epoch": "0",
        "version": "2.0.22",
        "release": "1.el6",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "passwd": {
        "epoch": "0",
        "version": "0.77",
        "release": "7.el6",
        "installdate": "1468189169",
        "arch": "x86_64"
      },
      "which": {
        "epoch": "0",
        "version": "2.19",
        "release": "6.el6",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "sudo": {
        "epoch": "0",
        "version": "1.8.6p3",
        "release": "24.el6",
        "installdate": "1468189193",
        "arch": "x86_64"
      },
      "pth": {
        "epoch": "0",
        "version": "2.0.7",
        "release": "9.3.el6",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "openssh-clients": {
        "epoch": "0",
        "version": "5.3p1",
        "release": "118.1.el6_8",
        "installdate": "1468189194",
        "arch": "x86_64"
      },
      "sysvinit-tools": {
        "epoch": "0",
        "version": "2.87",
        "release": "6.dsf.el6",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "device-mapper-multipath": {
        "epoch": "0",
        "version": "0.4.9",
        "release": "93.el6",
        "installdate": "1468189194",
        "arch": "x86_64"
      },
      "p11-kit": {
        "epoch": "0",
        "version": "0.18.5",
        "release": "2.el6_5.2",
        "installdate": "1468188646",
        "arch": "x86_64"
      },
      "mdadm": {
        "epoch": "0",
        "version": "3.3.4",
        "release": "1.el6",
        "installdate": "1468189195",
        "arch": "x86_64"
      },
      "iscsi-initiator-utils": {
        "epoch": "0",
        "version": "6.2.0.873",
        "release": "21.el6",
        "installdate": "1468189195",
        "arch": "x86_64"
      },
      "audit": {
        "epoch": "0",
        "version": "2.4.5",
        "release": "3.el6",
        "installdate": "1468189196",
        "arch": "x86_64"
      },
      "xfsprogs": {
        "epoch": "0",
        "version": "3.1.1",
        "release": "19.el6",
        "installdate": "1468189196",
        "arch": "x86_64"
      },
      "MAKEDEV": {
        "epoch": "0",
        "version": "3.24",
        "release": "6.el6",
        "installdate": "1468188648",
        "arch": "x86_64"
      },
      "gdbm": {
        "epoch": "0",
        "version": "1.8.0",
        "release": "39.el6",
        "installdate": "1468189197",
        "arch": "x86_64"
      },
      "pinentry": {
        "epoch": "0",
        "version": "0.7.6",
        "release": "8.el6",
        "installdate": "1468188648",
        "arch": "x86_64"
      },
      "kernel-devel": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "642.1.1.el6",
        "installdate": "1473766767",
        "arch": "x86_64"
      },
      "net-tools": {
        "epoch": "0",
        "version": "1.60",
        "release": "110.el6_2",
        "installdate": "1468188648",
        "arch": "x86_64"
      },
      "gpm-libs": {
        "epoch": "0",
        "version": "1.20.6",
        "release": "12.el6",
        "installdate": "1473767001",
        "arch": "x86_64"
      },
      "vim-common": {
        "epoch": "2",
        "version": "7.4.629",
        "release": "5.el6",
        "installdate": "1473767003",
        "arch": "x86_64"
      },
      "git": {
        "epoch": "0",
        "version": "1.7.1",
        "release": "4.el6_7.1",
        "installdate": "1473767005",
        "arch": "x86_64"
      },
      "libss": {
        "epoch": "0",
        "version": "1.41.12",
        "release": "22.el6",
        "installdate": "1468188648",
        "arch": "x86_64"
      },
      "vim-enhanced": {
        "epoch": "2",
        "version": "7.4.629",
        "release": "5.el6",
        "installdate": "1473767006",
        "arch": "x86_64"
      },
      "m4": {
        "epoch": "0",
        "version": "1.4.13",
        "release": "5.el6",
        "installdate": "1468188649",
        "arch": "x86_64"
      },
      "chefdk": {
        "epoch": "0",
        "version": "0.17.17",
        "release": "1.el6",
        "installdate": "1473767038",
        "arch": "x86_64"
      },
      "ncurses": {
        "epoch": "0",
        "version": "5.7",
        "release": "4.20090207.el6",
        "installdate": "1468188649",
        "arch": "x86_64"
      },
      "less": {
        "epoch": "0",
        "version": "436",
        "release": "13.el6",
        "installdate": "1468188650",
        "arch": "x86_64"
      },
      "gzip": {
        "epoch": "0",
        "version": "1.3.12",
        "release": "22.el6",
        "installdate": "1468188650",
        "arch": "x86_64"
      },
      "cracklib-dicts": {
        "epoch": "0",
        "version": "2.8.16",
        "release": "4.el6",
        "installdate": "1468188651",
        "arch": "x86_64"
      },
      "plymouth-scripts": {
        "epoch": "0",
        "version": "0.8.3",
        "release": "27.el6.centos.1",
        "installdate": "1468188654",
        "arch": "x86_64"
      },
      "keyutils-libs": {
        "epoch": "0",
        "version": "1.4",
        "release": "5.el6",
        "installdate": "1468188656",
        "arch": "x86_64"
      },
      "gpgme": {
        "epoch": "0",
        "version": "1.1.8",
        "release": "3.el6",
        "installdate": "1468188657",
        "arch": "x86_64"
      },
      "fipscheck": {
        "epoch": "0",
        "version": "1.2.0",
        "release": "7.el6",
        "installdate": "1468188658",
        "arch": "x86_64"
      },
      "ethtool": {
        "epoch": "2",
        "version": "3.5",
        "release": "6.el6",
        "installdate": "1468188658",
        "arch": "x86_64"
      },
      "plymouth-core-libs": {
        "epoch": "0",
        "version": "0.8.3",
        "release": "27.el6.centos.1",
        "installdate": "1468188658",
        "arch": "x86_64"
      },
      "libffi": {
        "epoch": "0",
        "version": "3.0.5",
        "release": "3.2.el6",
        "installdate": "1468188658",
        "arch": "x86_64"
      },
      "python-libs": {
        "epoch": "0",
        "version": "2.6.6",
        "release": "64.el6",
        "installdate": "1468188666",
        "arch": "x86_64"
      },
      "slang": {
        "epoch": "0",
        "version": "2.2.1",
        "release": "1.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "newt-python": {
        "epoch": "0",
        "version": "0.52.11",
        "release": "3.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "libsemanage": {
        "epoch": "0",
        "version": "2.0.43",
        "release": "5.1.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "pkgconfig": {
        "epoch": "1",
        "version": "0.23",
        "release": "9.1.el6",
        "installdate": "1468188667",
        "arch": "x86_64"
      },
      "yum-metadata-parser": {
        "epoch": "0",
        "version": "1.1.2",
        "release": "16.el6",
        "installdate": "1468188669",
        "arch": "x86_64"
      },
      "rsyslog": {
        "epoch": "0",
        "version": "5.8.10",
        "release": "10.el6_6",
        "installdate": "1468188674",
        "arch": "x86_64"
      },
      "iptables-ipv6": {
        "epoch": "0",
        "version": "1.4.7",
        "release": "16.el6",
        "installdate": "1468188677",
        "arch": "x86_64"
      },
      "kbd-misc": {
        "epoch": "0",
        "version": "1.15",
        "release": "11.el6",
        "installdate": "1468188679",
        "arch": "noarch"
      },
      "b43-openfwwf": {
        "epoch": "0",
        "version": "5.2",
        "release": "10.el6",
        "installdate": "1468188724",
        "arch": "noarch"
      },
      "authconfig": {
        "epoch": "0",
        "version": "6.1.12",
        "release": "23.el6",
        "installdate": "1468188724",
        "arch": "x86_64"
      },
      "efibootmgr": {
        "epoch": "0",
        "version": "0.5.4",
        "release": "13.el6",
        "installdate": "1468188725",
        "arch": "x86_64"
      },
      "attr": {
        "epoch": "0",
        "version": "2.4.44",
        "release": "7.el6",
        "installdate": "1468188726",
        "arch": "x86_64"
      },
      "rootfiles": {
        "epoch": "0",
        "version": "8.1",
        "release": "6.1.el6",
        "installdate": "1468188726",
        "arch": "noarch"
      },
      "gpg-pubkey": {
        "epoch": "0",
        "version": "c105b9de",
        "release": "4e0fd3a3",
        "installdate": "1468188902",
        "arch": "(none)"
      },
      "kernel-headers": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "642.1.1.el6",
        "installdate": "1468188934",
        "arch": "x86_64"
      },
      "glibc": {
        "epoch": "0",
        "version": "2.12",
        "release": "1.192.el6",
        "installdate": "1468188936",
        "arch": "x86_64"
      },
      "perl-Pod-Escapes": {
        "epoch": "1",
        "version": "1.04",
        "release": "141.el6_7.1",
        "installdate": "1468188947",
        "arch": "x86_64"
      },
      "perl-Pod-Simple": {
        "epoch": "1",
        "version": "3.13",
        "release": "141.el6_7.1",
        "installdate": "1468188949",
        "arch": "x86_64"
      },
      "perl-Module-Pluggable": {
        "epoch": "1",
        "version": "3.90",
        "release": "141.el6_7.1",
        "installdate": "1468188949",
        "arch": "x86_64"
      },
      "libstdc++": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "17.el6",
        "installdate": "1468188952",
        "arch": "x86_64"
      },
      "cpp": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "17.el6",
        "installdate": "1468188953",
        "arch": "x86_64"
      },
      "ppl": {
        "epoch": "0",
        "version": "0.10.2",
        "release": "11.el6",
        "installdate": "1468188954",
        "arch": "x86_64"
      },
      "glibc-headers": {
        "epoch": "0",
        "version": "2.12",
        "release": "1.192.el6",
        "installdate": "1468188954",
        "arch": "x86_64"
      },
      "libgomp": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "17.el6",
        "installdate": "1468188954",
        "arch": "x86_64"
      },
      "gcc-c++": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "17.el6",
        "installdate": "1468188956",
        "arch": "x86_64"
      },
      "make": {
        "epoch": "1",
        "version": "3.81",
        "release": "23.el6",
        "installdate": "1468188956",
        "arch": "x86_64"
      },
      "libselinux": {
        "epoch": "0",
        "version": "2.0.94",
        "release": "7.el6",
        "installdate": "1468189144",
        "arch": "x86_64"
      },
      "audit-libs": {
        "epoch": "0",
        "version": "2.4.5",
        "release": "3.el6",
        "installdate": "1468189144",
        "arch": "x86_64"
      },
      "nss-util": {
        "epoch": "0",
        "version": "3.21.0",
        "release": "2.el6",
        "installdate": "1468189144",
        "arch": "x86_64"
      },
      "krb5-libs": {
        "epoch": "0",
        "version": "1.10.3",
        "release": "57.el6",
        "installdate": "1468189145",
        "arch": "x86_64"
      },
      "grep": {
        "epoch": "0",
        "version": "2.20",
        "release": "3.el6_7.1",
        "installdate": "1468189146",
        "arch": "x86_64"
      },
      "libudev": {
        "epoch": "0",
        "version": "147",
        "release": "2.73.el6",
        "installdate": "1468189146",
        "arch": "x86_64"
      },
      "elfutils-libelf": {
        "epoch": "0",
        "version": "0.164",
        "release": "2.el6",
        "installdate": "1468189146",
        "arch": "x86_64"
      },
      "libblkid": {
        "epoch": "0",
        "version": "2.17.2",
        "release": "12.24.el6",
        "installdate": "1468189146",
        "arch": "x86_64"
      },
      "nss-softokn-freebl": {
        "epoch": "0",
        "version": "3.14.3",
        "release": "23.el6_7",
        "installdate": "1468189147",
        "arch": "x86_64"
      },
      "tcp_wrappers-libs": {
        "epoch": "0",
        "version": "7.6",
        "release": "58.el6",
        "installdate": "1468189147",
        "arch": "x86_64"
      },
      "file": {
        "epoch": "0",
        "version": "5.04",
        "release": "30.el6",
        "installdate": "1468189148",
        "arch": "x86_64"
      },
      "iproute": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "54.el6",
        "installdate": "1468189148",
        "arch": "x86_64"
      }
    },
    "virtualbox": {
      "host": {
        "language": "en_US",
        "revision": "108956",
        "version": "5.1.2"
      },
      "guest": {

      }
    },
    "time": {
      "timezone": "BST"
    },
    "recipes": [
      "nginx::default",
      "iptables::default",
      "nginx::package",
      "nginx::ohai_plugin",
      "ohai::default",
      "yum-epel::default",
      "nginx::commons",
      "nginx::commons_dir",
      "nginx::commons_script",
      "nginx::commons_conf",
      "iptables::_package"
    ],
    "expanded_run_list": [
      "nginx::default",
      "iptables::default"
    ],
    "roles": [

    ],
    "cookbooks": {
      "nginx": {
        "version": "2.7.6"
      },
      "iptables": {
        "version": "2.2.0"
      },
      "apt": {
        "version": "2.9.2"
      },
      "bluepill": {
        "version": "2.4.3"
      },
      "build-essential": {
        "version": "2.4.0"
      },
      "ohai": {
        "version": "2.1.0"
      },
      "runit": {
        "version": "1.8.0"
      },
      "yum-epel": {
        "version": "0.7.1"
      },
      "rsyslog": {
        "version": "4.0.1"
      },
      "7-zip": {
        "version": "1.0.2"
      },
      "packagecloud": {
        "version": "0.2.5"
      },
      "yum": {
        "version": "4.0.0"
      },
      "compat_resource": {
        "version": "12.14.3"
      },
      "windows": {
        "version": "2.0.2"
      }
    },
    "nginx": {
      "version": "1.10.1",
      "configure_arguments": [
        "--prefix=/usr/share/nginx",
        "--sbin-path=/usr/sbin/nginx",
        "--modules-path=/usr/lib64/nginx/modules",
        "--conf-path=/etc/nginx/nginx.conf",
        "--error-log-path=/var/log/nginx/error.log",
        "--http-log-path=/var/log/nginx/access.log",
        "--http-client-body-temp-path=/var/lib/nginx/tmp/client_body",
        "--http-proxy-temp-path=/var/lib/nginx/tmp/proxy",
        "--http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi",
        "--http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi",
        "--http-scgi-temp-path=/var/lib/nginx/tmp/scgi",
        "--pid-path=/var/run/nginx.pid",
        "--lock-path=/var/lock/subsys/nginx",
        "--user=nginx",
        "--group=nginx",
        "--with-file-aio",
        "--with-ipv6",
        "--with-http_ssl_module",
        "--with-http_v2_module",
        "--with-http_realip_module",
        "--with-http_addition_module",
        "--with-http_xslt_module=dynamic",
        "--with-http_image_filter_module=dynamic",
        "--with-http_geoip_module=dynamic",
        "--with-http_sub_module",
        "--with-http_dav_module",
        "--with-http_flv_module",
        "--with-http_mp4_module",
        "--with-http_gunzip_module",
        "--with-http_gzip_static_module",
        "--with-http_random_index_module",
        "--with-http_secure_link_module",
        "--with-http_degradation_module",
        "--with-http_slice_module",
        "--with-http_stub_status_module",
        "--with-http_perl_module=dynamic",
        "--with-mail=dynamic",
        "--with-mail_ssl_module",
        "--with-pcre",
        "--with-pcre-jit",
        "--with-stream=dynamic",
        "--with-stream_ssl_module",
        "--with-debug",
        "--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector",
        "--param=ssp-buffer-size=4 -m64 -mtune=generic'",
        "--with-ld-opt=' -Wl,-E'"
      ],
      "prefix": "/usr/share/nginx",
      "conf_path": "/etc/nginx/nginx.conf"
    }
  },
  "normal": {
    "nginx": {
      "default_root": "/usr/share/nginx/html"
    },
    "tags": [

    ]
  },
  "chef_type": "node",
  "default": {
    "apt": {
      "cacher-client": {
        "restrict_environment": false
      },
      "cacher_dir": "/var/cache/apt-cacher-ng",
      "cacher_interface": null,
      "cacher_port": 3142,
      "cacher_ssl_support": false,
      "caching_server": false,
      "compiletime": false,
      "compile_time_update": false,
      "key_proxy": "",
      "cache_bypass": {

      },
      "periodic_update_min_delay": 86400,
      "launchpad_api_version": "1.0",
      "unattended_upgrades": {
        "enable": false,
        "update_package_lists": true,
        "allowed_origins": [
          "Centos "
        ],
        "package_blacklist": [

        ],
        "auto_fix_interrupted_dpkg": false,
        "minimal_steps": false,
        "install_on_shutdown": false,
        "mail": null,
        "mail_only_on_error": true,
        "remove_unused_dependencies": false,
        "automatic_reboot": false,
        "automatic_reboot_time": "now",
        "dl_limit": null
      },
      "confd": {
        "install_recommends": true,
        "install_suggests": false
      }
    },
    "rsyslog": {
      "local_host_name": null,
      "default_log_dir": "/var/log",
      "log_dir": "/srv/rsyslog",
      "working_dir": "/var/lib/rsyslog",
      "server": false,
      "use_relp": false,
      "relp_port": 20514,
      "protocol": "tcp",
      "bind": "*",
      "port": 514,
      "server_ip": null,
      "server_search": "role:loghost",
      "remote_logs": true,
      "per_host_dir": "%$YEAR%/%$MONTH%/%$DAY%/%HOSTNAME%",
      "max_message_size": "2k",
      "preserve_fqdn": "off",
      "high_precision_timestamps": false,
      "repeated_msg_reduction": "on",
      "logs_to_forward": "*.*",
      "enable_imklog": true,
      "config_prefix": "/etc",
      "default_file_template": null,
      "default_remote_template": null,
      "rate_limit_interval": null,
      "rate_limit_burst": null,
      "enable_tls": false,
      "action_queue_max_disk_space": "1G",
      "tls_ca_file": null,
      "tls_certificate_file": null,
      "tls_key_file": null,
      "tls_auth_mode": "anon",
      "tls_permitted_peer": null,
      "use_local_ipv4": false,
      "allow_non_local": false,
      "custom_remote": [
        {

        }
      ],
      "additional_directives": {

      },
      "service_name": "rsyslog",
      "user": "root",
      "group": "adm",
      "priv_seperation": false,
      "priv_user": null,
      "priv_group": null,
      "modules": [
        "imuxsock",
        "imklog"
      ],
      "default_facility_logs": {
        "*.info;mail.none;authpriv.none;cron.none": "/var/log/messages",
        "authpriv.*": "/var/log/secure",
        "mail.*": "-/var/log/maillog",
        "cron.*": "/var/log/cron",
        "*.emerg": ":omusrmsg:*",
        "uucp,news.crit": "/var/log/spooler",
        "local7.*": "/var/log/boot.log"
      }
    },
    "bluepill": {
      "bin": "/opt/chef/embedded/bin/bluepill",
      "logfile": "/var/log/bluepill.log",
      "pid_dir": "/var/run/bluepill",
      "state_dir": "/var/lib/bluepill",
      "group": 0,
      "use_rsyslog": false,
      "init_dir": "/etc/init.d",
      "conf_dir": "/etc/bluepill",
      "defaults_dir": "/etc/sysconfig"
    },
    "windows": {
      "rubyzipversion": null
    },
    "7-zip": {
      "url": "http://downloads.sourceforge.net/sevenzip/7z922-x64.msi",
      "checksum": "f09bf515289eea45185a4cc673e3bbc18ce608c55b4cf96e77833435c9cdf3dc",
      "package_name": "7-Zip 9.22 (x64 edition)",
      "home": "\\7-zip"
    },
    "build-essential": {
      "compile_time": false,
      "msys": {
        "path": "\\msys"
      }
    },
    "ohai": {
      "plugin_path": "/etc/chef/ohai_plugins",
      "hints_path": "/etc/chef/ohai/hints",
      "plugins": {
        "ohai": "plugins"
      }
    },
    "packagecloud": {
      "base_repo_path": "/install/repositories/",
      "gpg_key_path": "/gpgkey",
      "hostname_override": null,
      "proxy_host": null,
      "proxy_port": null,
      "default_type": "rpm"
    },
    "yum": {
      "main": {
        "cachedir": "/var/cache/yum/$basearch/$releasever",
        "distroverpkg": "centos-release",
        "releasever": null,
        "alwaysprompt": null,
        "assumeyes": null,
        "bandwidth": null,
        "bugtracker_url": null,
        "clean_requirements_on_remove": null,
        "color": null,
        "color_list_available_downgrade": null,
        "color_list_available_install": null,
        "color_list_available_reinstall": null,
        "color_list_available_upgrade": null,
        "color_list_installed_extra": null,
        "color_list_installed_newer": null,
        "color_list_installed_older": null,
        "color_list_installed_reinstall": null,
        "color_search_match": null,
        "color_update_installed": null,
        "color_update_local": null,
        "color_update_remote": null,
        "commands": null,
        "deltarpm": null,
        "debuglevel": null,
        "diskspacecheck": null,
        "enable_group_conditionals": null,
        "errorlevel": null,
        "exactarch": null,
        "exclude": null,
        "gpgcheck": true,
        "group_package_types": null,
        "groupremove_leaf_only": null,
        "history_list_view": null,
        "history_record": null,
        "history_record_packages": null,
        "http_caching": null,
        "installonly_limit": null,
        "installonlypkgs": null,
        "installroot": null,
        "keepalive": null,
        "keepcache": false,
        "kernelpkgnames": null,
        "localpkg_gpgcheck": false,
        "logfile": "/var/log/yum.log",
        "max_retries": null,
        "mdpolicy": null,
        "metadata_expire": null,
        "mirrorlist_expire": null,
        "multilib_policy": null,
        "obsoletes": null,
        "overwrite_groups": null,
        "password": null,
        "path": "/etc/yum.conf",
        "persistdir": null,
        "pluginconfpath": null,
        "pluginpath": null,
        "plugins": null,
        "protected_multilib": null,
        "protected_packages": null,
        "proxy": null,
        "proxy_password": null,
        "proxy_username": null,
        "recent": null,
        "repo_gpgcheck": null,
        "reposdir": null,
        "reset_nice": null,
        "rpmverbosity": null,
        "showdupesfromrepos": null,
        "skip_broken": null,
        "ssl_check_cert_permissions": null,
        "sslcacert": null,
        "sslclientcert": null,
        "sslclientkey": null,
        "sslverify": null,
        "syslog_device": null,
        "syslog_facility": null,
        "syslog_ident": null,
        "throttle": null,
        "timeout": null,
        "tolerant": false,
        "tsflags": null,
        "username": null
      },
      "epel-debuginfo": {
        "repositoryid": "epel-debuginfo",
        "description": "Extra Packages for $releasever - $basearch - Debug",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel-source": {
        "repositoryid": "epel-source",
        "description": "Extra Packages for $releasever - $basearch - Source",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel-testing-debuginfo": {
        "repositoryid": "epel-testing-debuginfo",
        "description": "Extra Packages for $releasever - $basearch - Testing Debug",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel-testing-source": {
        "repositoryid": "epel-testing-source",
        "description": "Extra Packages for $releasever - $basearch - Testing Source",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel-testing": {
        "repositoryid": "epel-testing",
        "description": "Extra Packages for $releasever - $basearch - Testing ",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel": {
        "repositoryid": "epel",
        "description": "Extra Packages for $releasever - $basearch",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": true,
        "managed": true,
        "make_cache": true
      }
    },
    "yum-epel": {
      "repositories": [
        "epel",
        "epel-debuginfo",
        "epel-source",
        "epel-testing",
        "epel-testing-debuginfo",
        "epel-testing-source"
      ]
    },
    "runit": {
      "sv_bin": "/sbin/sv",
      "chpst_bin": "/sbin/chpst",
      "service_dir": "/etc/service",
      "sv_dir": "/etc/sv",
      "lsb_init_dir": "/etc/init.d",
      "executable": "/sbin/runit",
      "prefer_local_yum": false,
      "start": "/etc/init.d/runit-start start",
      "stop": "/etc/init.d/runit-start stop",
      "reload": "/etc/init.d/runit-start reload"
    },
    "nginx": {
      "version": "1.6.2",
      "package_name": "nginx",
      "port": "80",
      "dir": "/etc/nginx",
      "script_dir": "/usr/sbin",
      "log_dir": "/var/log/nginx",
      "log_dir_perm": "0750",
      "binary": "/usr/sbin/nginx",
      "default_root": "/var/www/nginx-default",
      "ulimit": "1024",
      "pid": "/var/run/nginx.pid",
      "user": "nginx",
      "init_style": "init",
      "repo_source": "epel",
      "upstart": {
        "runlevels": "2345",
        "respawn_limit": null,
        "foreground": true
      },
      "group": "nginx",
      "gzip": "on",
      "gzip_static": "off",
      "gzip_http_version": "1.0",
      "gzip_comp_level": "2",
      "gzip_proxied": "any",
      "gzip_vary": "off",
      "gzip_buffers": null,
      "gzip_types": [
        "text/plain",
        "text/css",
        "application/x-javascript",
        "text/xml",
        "application/xml",
        "application/rss+xml",
        "application/atom+xml",
        "text/javascript",
        "application/javascript",
        "application/json",
        "text/mathml"
      ],
      "gzip_min_length": 1000,
      "gzip_disable": "MSIE [1-6]\\.",
      "keepalive": "on",
      "keepalive_requests": 100,
      "keepalive_timeout": 65,
      "worker_processes": 2,
      "worker_connections": 1024,
      "worker_rlimit_nofile": null,
      "multi_accept": false,
      "event": null,
      "accept_mutex_delay": null,
      "server_tokens": null,
      "server_names_hash_bucket_size": 64,
      "variables_hash_max_size": 1024,
      "variables_hash_bucket_size": 64,
      "sendfile": "on",
      "underscores_in_headers": null,
      "tcp_nodelay": "on",
      "tcp_nopush": "on",
      "access_log_options": null,
      "error_log_options": null,
      "disable_access_log": false,
      "log_formats": {

      },
      "install_method": "package",
      "default_site_enabled": true,
      "types_hash_max_size": 2048,
      "types_hash_bucket_size": 64,
      "proxy_read_timeout": null,
      "client_body_buffer_size": null,
      "client_max_body_size": null,
      "large_client_header_buffers": null,
      "default": {
        "modules": [

        ]
      },
      "extra_configs": {

      },
      "auth_request": {
        "url": "http://mdounin.ru/hg/ngx_http_auth_request_module/archive/ee8ff54f9b66.tar.gz",
        "checksum": "7ab85e1c350c5a9c60ed1319c45fed144cc3c3e1"
      },
      "devel": {
        "version": "0.2.18",
        "url": "https://github.com/simpl/ngx_devel_kit/archive/v0.2.18.tar.gz",
        "checksum": "c9c9f0a1b068d38c6c45b15d9605f1b2344dbcd45abf0764cd8e2ba92d6a3d2c"
      },
      "echo": {
        "version": "0.57",
        "url": "https://github.com/openresty/echo-nginx-module/archive/v0.57.tar.gz",
        "checksum": "8467237ca0fae74ca7a32fbd34fc6044df307098415d48068214c9c235695a07"
      },
      "geoip": {
        "path": "/srv/geoip",
        "enable_city": true,
        "country_dat_url": "http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz",
        "country_dat_checksum": "79ff1099e96c2dc1c2539c9a18aaa13a9afd085cae477df60d95f1644d42bc07",
        "city_dat_url": "http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz",
        "city_dat_checksum": "8a6467033a528f68b1a97de24d9d0ce86c8e8e83683820e16e433ddbd3f712f7",
        "lib_version": "1.6.3",
        "lib_url": "https://github.com/maxmind/geoip-api-c/releases/download/v1.6.3/GeoIP-1.6.3.tar.gz",
        "lib_checksum": "e483839a81a91c3c85df89ef409fc7b526c489e0355d537861cfd1ea9534a8f2"
      },
      "headers_more": {
        "version": "0.25",
        "source_url": "https://github.com/openresty/headers-more-nginx-module/archive/v0.25.tar.gz",
        "source_checksum": "1473f96f59dcec9d83ce65d691559993c1f80da8c0a4c0c0a30dae9f969eeabf"
      },
      "lua": {
        "version": "0.8.7",
        "url": "https://github.com/chaoslawful/lua-nginx-module/archive/v0.8.7.tar.gz",
        "checksum": "4b9be3c159b9c884a38e044e07aaf4d06bd2893977d0b0dae02c124d8e907f93"
      },
      "luajit": {
        "version": "2.0.2",
        "url": "http://luajit.org/download/LuaJIT-2.0.2.tar.gz",
        "checksum": "c05202974a5890e777b181908ac237625b499aece026654d7cc33607e3f46c38"
      },
      "naxsi": {
        "version": "0.53-2",
        "url": "https://github.com/nbs-system/naxsi/archive/0.53-2.tar.gz",
        "checksum": "3eadff1d91995beae41b92733ade28091c2075a24ae37058f4d6aa90b0f4b660"
      },
      "openssl_source": {
        "version": "1.0.1h",
        "url": "http://www.openssl.org/source/openssl-1.0.1h.tar.gz"
      },
      "pagespeed": {
        "version": "1.8.31.4",
        "url": "https://github.com/pagespeed/ngx_pagespeed/archive/release-1.8.31.4-beta.tar.gz",
        "packages": {
          "rhel": [
            "gcc-c++",
            "pcre-dev",
            "pcre-devel",
            "zlib-devel",
            "make"
          ],
          "debian": [
            "build-essential",
            "zlib1g-dev",
            "libpcre3",
            "libpcre3-dev"
          ]
        }
      },
      "psol": {
        "url": "https://dl.google.com/dl/page-speed/psol/1.8.31.4.tar.gz"
      },
      "passenger": {
        "version": "4.0.57",
        "root": "/opt/chef/embedded/lib/ruby/gems/2.1.0/gems/passenger-4.0.57",
        "ruby": "/opt/chef/embedded/bin/ruby",
        "packages": {
          "rhel": [
            "ruby-devel",
            "libcurl-devel"
          ],
          "fedora": [
            "ruby-devel",
            "libcurl-devel"
          ],
          "debian": [
            "ruby-dev",
            "libcurl4-gnutls-dev"
          ]
        },
        "install_rake": true,
        "spawn_method": "smart-lv2",
        "buffer_response": "on",
        "max_pool_size": 6,
        "min_instances": 1,
        "max_instances_per_app": 0,
        "pool_idle_time": 300,
        "max_requests": 0,
        "gem_binary": null,
        "nodejs": null
      },
      "enable_rate_limiting": false,
      "rate_limiting_zone_name": "default",
      "rate_limiting_backoff": "10m",
      "rate_limit": "1r/s",
      "upstream_repository": "http://nginx.org/packages/centos/6/$basearch/",
      "set_misc": {
        "version": "0.24",
        "url": "https://github.com/agentzh/set-misc-nginx-module/archive/v0.24.tar.gz",
        "checksum": "da404a7dac5fa4a0a86f42b4ec7648b607f4cd66"
      },
      "socketproxy": {
        "root": "/usr/share/nginx/apps",
        "app_owner": "root",
        "logname": "socketproxy",
        "log_level": "error"
      },
      "source": {
        "version": "1.6.2",
        "prefix": "/opt/nginx-1.6.2",
        "conf_path": "/etc/nginx/nginx.conf",
        "sbin_path": "/opt/nginx-1.6.2/sbin/nginx",
        "default_configure_flags": [
          "--prefix=/opt/nginx-1.6.2",
          "--conf-path=/etc/nginx/nginx.conf",
          "--sbin-path=/opt/nginx-1.6.2/sbin/nginx"
        ],
        "url": "http://nginx.org/download/nginx-1.6.2.tar.gz",
        "checksum": "b5608c2959d3e7ad09b20fc8f9e5bd4bc87b3bc8ba5936a513c04ed8f1391a18",
        "modules": [
          "nginx::http_ssl_module",
          "nginx::http_gzip_static_module"
        ],
        "use_existing_user": false
      },
      "configure_flags": [

      ],
      "status": {
        "port": "8090"
      },
      "syslog": {
        "git_repo": "https://github.com/yaoweibin/nginx_syslog_patch.git",
        "git_revision": "master"
      },
      "upload_progress": {
        "url": "https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0",
        "checksum": "3fb903dab595cf6656fa0fc5743a48daffbba2f6b5c554836be630800eaad4e2",
        "javascript_output": true,
        "zone_name": "proxied",
        "zone_size": "1m"
      }
    },
    "iptables": {
      "iptables_sysconfig": {
        "IPTABLES_MODULES": "",
        "IPTABLES_MODULES_UNLOAD": "yes",
        "IPTABLES_SAVE_ON_STOP": "no",
        "IPTABLES_SAVE_ON_RESTART": "no",
        "IPTABLES_SAVE_COUNTER": "no",
        "IPTABLES_STATUS_NUMERIC": "yes",
        "IPTABLES_STATUS_VERBOSE": "no",
        "IPTABLES_STATUS_LINENUMBERS": "yes"
      },
      "ip6tables_sysconfig": {
        "IP6TABLES_MODULES": "",
        "IP6TABLES_MODULES_UNLOAD": "yes",
        "IP6TABLES_SAVE_ON_STOP": "no",
        "IP6TABLES_SAVE_ON_RESTART": "no",
        "IP6TABLES_SAVE_COUNTER": "no",
        "IP6TABLES_STATUS_NUMERIC": "yes",
        "IP6TABLES_STATUS_VERBOSE": "no",
        "IP6TABLES_STATUS_LINENUMBERS": "yes"
      }
    }
  },
  "override": {

  },
  "run_list": [
    "recipe[nginx::default]",
    "recipe[iptables::default]"
  ]
}
--- END RESPONSE ---
[2016-09-13T13:00:50+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2016-09-13T13:00:50+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2016-09-13T13:00:50+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2016-09-13T13:00:50+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2016-09-13T13:00:50+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2016-09-13T13:00:50+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2016-09-13T13:00:50+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2016-09-13T13:00:50+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2016-09-13T13:00:50+01:00] INFO: Chef Run complete in 67.789876715 seconds
[2016-09-13T13:00:50+01:00] INFO: Running report handlers
[2016-09-13T13:00:50+01:00] INFO: Report handlers complete
[2016-09-13T13:00:50+01:00] DEBUG: Server doesn't support resource history, skipping resource report.
[2016-09-13T13:00:50+01:00] DEBUG: Audit Reports are disabled. Skipping sending reports.
[2016-09-13T13:00:50+01:00] DEBUG: Forked instance successfully reaped (pid: 19215)
[2016-09-13T13:00:51+01:00] DEBUG: Exiting
